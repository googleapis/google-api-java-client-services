/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v2beta1;

/**
 * Service definition for Dialogflow (v2beta1).
 *
 * <p>
 * Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dialogflow/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DialogflowRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Dialogflow extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Dialogflow API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://dialogflow.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://dialogflow.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Dialogflow(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Dialogflow(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Dialogflow dialogflow = new Dialogflow(...);}
   *   {@code Dialogflow.Projects.List request = dialogflow.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Deletes the specified agent.
     *
     * Create a request for the method "projects.deleteAgent".
     *
     * This request holds the parameters needed by the dialogflow server.  After setting any optional
     * parameters, call the {@link DeleteAgent#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The project that the agent to delete is associated with. Format: `projects/` or
     *        `projects//locations/`.
     * @return the request
     */
    public DeleteAgent deleteAgent(java.lang.String parent) throws java.io.IOException {
      DeleteAgent result = new DeleteAgent(parent);
      initialize(result);
      return result;
    }

    public class DeleteAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

      private static final String REST_PATH = "v2beta1/{+parent}/agent";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+$");

      /**
       * Deletes the specified agent.
       *
       * Create a request for the method "projects.deleteAgent".
       *
       * This request holds the parameters needed by the the dialogflow server.  After setting any
       * optional parameters, call the {@link DeleteAgent#execute()} method to invoke the remote
       * operation. <p> {@link
       * DeleteAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The project that the agent to delete is associated with. Format: `projects/` or
     *        `projects//locations/`.
       * @since 1.13
       */
      protected DeleteAgent(java.lang.String parent) {
        super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
      }

      @Override
      public DeleteAgent set$Xgafv(java.lang.String $Xgafv) {
        return (DeleteAgent) super.set$Xgafv($Xgafv);
      }

      @Override
      public DeleteAgent setAccessToken(java.lang.String accessToken) {
        return (DeleteAgent) super.setAccessToken(accessToken);
      }

      @Override
      public DeleteAgent setAlt(java.lang.String alt) {
        return (DeleteAgent) super.setAlt(alt);
      }

      @Override
      public DeleteAgent setCallback(java.lang.String callback) {
        return (DeleteAgent) super.setCallback(callback);
      }

      @Override
      public DeleteAgent setFields(java.lang.String fields) {
        return (DeleteAgent) super.setFields(fields);
      }

      @Override
      public DeleteAgent setKey(java.lang.String key) {
        return (DeleteAgent) super.setKey(key);
      }

      @Override
      public DeleteAgent setOauthToken(java.lang.String oauthToken) {
        return (DeleteAgent) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteAgent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteAgent setQuotaUser(java.lang.String quotaUser) {
        return (DeleteAgent) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteAgent setUploadType(java.lang.String uploadType) {
        return (DeleteAgent) super.setUploadType(uploadType);
      }

      @Override
      public DeleteAgent setUploadProtocol(java.lang.String uploadProtocol) {
        return (DeleteAgent) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The project that the agent to delete is associated with. Format: `projects/` or
       * `projects//locations/`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The project that the agent to delete is associated with. Format: `projects/` or
     `projects//locations/`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The project that the agent to delete is associated with. Format: `projects/` or
       * `projects//locations/`.
       */
      public DeleteAgent setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public DeleteAgent set(String parameterName, Object value) {
        return (DeleteAgent) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the specified agent.
     *
     * Create a request for the method "projects.getAgent".
     *
     * This request holds the parameters needed by the dialogflow server.  After setting any optional
     * parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The project that the agent to fetch is associated with. Format: `projects/` or
     *        `projects//locations/`.
     * @return the request
     */
    public GetAgent getAgent(java.lang.String parent) throws java.io.IOException {
      GetAgent result = new GetAgent(parent);
      initialize(result);
      return result;
    }

    public class GetAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent> {

      private static final String REST_PATH = "v2beta1/{+parent}/agent";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+$");

      /**
       * Retrieves the specified agent.
       *
       * Create a request for the method "projects.getAgent".
       *
       * This request holds the parameters needed by the the dialogflow server.  After setting any
       * optional parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The project that the agent to fetch is associated with. Format: `projects/` or
     *        `projects//locations/`.
       * @since 1.13
       */
      protected GetAgent(java.lang.String parent) {
        super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetAgent set$Xgafv(java.lang.String $Xgafv) {
        return (GetAgent) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetAgent setAccessToken(java.lang.String accessToken) {
        return (GetAgent) super.setAccessToken(accessToken);
      }

      @Override
      public GetAgent setAlt(java.lang.String alt) {
        return (GetAgent) super.setAlt(alt);
      }

      @Override
      public GetAgent setCallback(java.lang.String callback) {
        return (GetAgent) super.setCallback(callback);
      }

      @Override
      public GetAgent setFields(java.lang.String fields) {
        return (GetAgent) super.setFields(fields);
      }

      @Override
      public GetAgent setKey(java.lang.String key) {
        return (GetAgent) super.setKey(key);
      }

      @Override
      public GetAgent setOauthToken(java.lang.String oauthToken) {
        return (GetAgent) super.setOauthToken(oauthToken);
      }

      @Override
      public GetAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetAgent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetAgent setQuotaUser(java.lang.String quotaUser) {
        return (GetAgent) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetAgent setUploadType(java.lang.String uploadType) {
        return (GetAgent) super.setUploadType(uploadType);
      }

      @Override
      public GetAgent setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetAgent) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The project that the agent to fetch is associated with. Format: `projects/` or
       * `projects//locations/`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The project that the agent to fetch is associated with. Format: `projects/` or
     `projects//locations/`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The project that the agent to fetch is associated with. Format: `projects/` or
       * `projects//locations/`.
       */
      public GetAgent setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public GetAgent set(String parameterName, Object value) {
        return (GetAgent) super.set(parameterName, value);
      }
    }
    /**
     * Creates/updates the specified agent. Note: You should always train an agent prior to sending it
     * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
     *
     * Create a request for the method "projects.setAgent".
     *
     * This request holds the parameters needed by the dialogflow server.  After setting any optional
     * parameters, call the {@link SetAgent#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The project of this agent. Format: `projects/` or `projects//locations/`
     * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent}
     * @return the request
     */
    public SetAgent setAgent(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent content) throws java.io.IOException {
      SetAgent result = new SetAgent(parent, content);
      initialize(result);
      return result;
    }

    public class SetAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent> {

      private static final String REST_PATH = "v2beta1/{+parent}/agent";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+$");

      /**
       * Creates/updates the specified agent. Note: You should always train an agent prior to sending it
       * queries. See the [training
       * documentation](https://cloud.google.com/dialogflow/es/docs/training).
       *
       * Create a request for the method "projects.setAgent".
       *
       * This request holds the parameters needed by the the dialogflow server.  After setting any
       * optional parameters, call the {@link SetAgent#execute()} method to invoke the remote operation.
       * <p> {@link
       * SetAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The project of this agent. Format: `projects/` or `projects//locations/`
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent}
       * @since 1.13
       */
      protected SetAgent(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent content) {
        super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
      }

      @Override
      public SetAgent set$Xgafv(java.lang.String $Xgafv) {
        return (SetAgent) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetAgent setAccessToken(java.lang.String accessToken) {
        return (SetAgent) super.setAccessToken(accessToken);
      }

      @Override
      public SetAgent setAlt(java.lang.String alt) {
        return (SetAgent) super.setAlt(alt);
      }

      @Override
      public SetAgent setCallback(java.lang.String callback) {
        return (SetAgent) super.setCallback(callback);
      }

      @Override
      public SetAgent setFields(java.lang.String fields) {
        return (SetAgent) super.setFields(fields);
      }

      @Override
      public SetAgent setKey(java.lang.String key) {
        return (SetAgent) super.setKey(key);
      }

      @Override
      public SetAgent setOauthToken(java.lang.String oauthToken) {
        return (SetAgent) super.setOauthToken(oauthToken);
      }

      @Override
      public SetAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetAgent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetAgent setQuotaUser(java.lang.String quotaUser) {
        return (SetAgent) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetAgent setUploadType(java.lang.String uploadType) {
        return (SetAgent) super.setUploadType(uploadType);
      }

      @Override
      public SetAgent setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetAgent) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The project of this agent. Format: `projects/` or `projects//locations/`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
      public SetAgent setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^projects/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /** Optional. The mask to control which fields get updated. */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. The mask to control which fields get updated.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /** Optional. The mask to control which fields get updated. */
      public SetAgent setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public SetAgent set(String parameterName, Object value) {
        return (SetAgent) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Agent collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Agent.List request = dialogflow.agent().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Agent agent() {
      return new Agent();
    }

    /**
     * The "agent" collection of methods.
     */
    public class Agent {

      /**
       * Exports the specified agent to a ZIP file. This method is a [long-running
       * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
       * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
       * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
       * `response`: ExportAgentResponse
       *
       * Create a request for the method "agent.export".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Export#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to export is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
       * @return the request
       */
      public Export export(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) throws java.io.IOException {
        Export result = new Export(parent, content);
        initialize(result);
        return result;
      }

      public class Export extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:export";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Exports the specified agent to a ZIP file. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
         * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
         * [Struct message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse
         *
         * Create a request for the method "agent.export".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
         * <p> {@link
         * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to export is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
         * @since 1.13
         */
        protected Export(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Export set$Xgafv(java.lang.String $Xgafv) {
          return (Export) super.set$Xgafv($Xgafv);
        }

        @Override
        public Export setAccessToken(java.lang.String accessToken) {
          return (Export) super.setAccessToken(accessToken);
        }

        @Override
        public Export setAlt(java.lang.String alt) {
          return (Export) super.setAlt(alt);
        }

        @Override
        public Export setCallback(java.lang.String callback) {
          return (Export) super.setCallback(callback);
        }

        @Override
        public Export setFields(java.lang.String fields) {
          return (Export) super.setFields(fields);
        }

        @Override
        public Export setKey(java.lang.String key) {
          return (Export) super.setKey(key);
        }

        @Override
        public Export setOauthToken(java.lang.String oauthToken) {
          return (Export) super.setOauthToken(oauthToken);
        }

        @Override
        public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Export) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Export setQuotaUser(java.lang.String quotaUser) {
          return (Export) super.setQuotaUser(quotaUser);
        }

        @Override
        public Export setUploadType(java.lang.String uploadType) {
          return (Export) super.setUploadType(uploadType);
        }

        @Override
        public Export setUploadProtocol(java.lang.String uploadProtocol) {
          return (Export) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to export is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to export is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to export is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public Export setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Export set(String parameterName, Object value) {
          return (Export) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the fulfillment.
       *
       * Create a request for the method "agent.getFulfillment".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link GetFulfillment#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
       *        `projects//locations//agent/fulfillment`
       * @return the request
       */
      public GetFulfillment getFulfillment(java.lang.String name) throws java.io.IOException {
        GetFulfillment result = new GetFulfillment(name);
        initialize(result);
        return result;
      }

      public class GetFulfillment extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/agent/fulfillment$");

        /**
         * Retrieves the fulfillment.
         *
         * Create a request for the method "agent.getFulfillment".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link GetFulfillment#execute()} method to invoke the remote
         * operation. <p> {@link GetFulfillment#initialize(com.google.api.client.googleapis.services.Abstr
         * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
       *        `projects//locations//agent/fulfillment`
         * @since 1.13
         */
        protected GetFulfillment(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/agent/fulfillment$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetFulfillment set$Xgafv(java.lang.String $Xgafv) {
          return (GetFulfillment) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetFulfillment setAccessToken(java.lang.String accessToken) {
          return (GetFulfillment) super.setAccessToken(accessToken);
        }

        @Override
        public GetFulfillment setAlt(java.lang.String alt) {
          return (GetFulfillment) super.setAlt(alt);
        }

        @Override
        public GetFulfillment setCallback(java.lang.String callback) {
          return (GetFulfillment) super.setCallback(callback);
        }

        @Override
        public GetFulfillment setFields(java.lang.String fields) {
          return (GetFulfillment) super.setFields(fields);
        }

        @Override
        public GetFulfillment setKey(java.lang.String key) {
          return (GetFulfillment) super.setKey(key);
        }

        @Override
        public GetFulfillment setOauthToken(java.lang.String oauthToken) {
          return (GetFulfillment) super.setOauthToken(oauthToken);
        }

        @Override
        public GetFulfillment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetFulfillment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetFulfillment setQuotaUser(java.lang.String quotaUser) {
          return (GetFulfillment) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetFulfillment setUploadType(java.lang.String uploadType) {
          return (GetFulfillment) super.setUploadType(uploadType);
        }

        @Override
        public GetFulfillment setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetFulfillment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment`
         * - `projects//locations//agent/fulfillment`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
       `projects//locations//agent/fulfillment`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment`
         * - `projects//locations//agent/fulfillment`
         */
        public GetFulfillment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/agent/fulfillment$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetFulfillment set(String parameterName, Object value) {
          return (GetFulfillment) super.set(parameterName, value);
        }
      }
      /**
       * Gets agent validation result. Agent validation is performed during training time and is updated
       * automatically when training is completed.
       *
       * Create a request for the method "agent.getValidationResult".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link GetValidationResult#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @return the request
       */
      public GetValidationResult getValidationResult(java.lang.String parent) throws java.io.IOException {
        GetValidationResult result = new GetValidationResult(parent);
        initialize(result);
        return result;
      }

      public class GetValidationResult extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ValidationResult> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent/validationResult";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Gets agent validation result. Agent validation is performed during training time and is updated
         * automatically when training is completed.
         *
         * Create a request for the method "agent.getValidationResult".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link GetValidationResult#execute()} method to invoke the remote
         * operation. <p> {@link GetValidationResult#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @since 1.13
         */
        protected GetValidationResult(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ValidationResult.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetValidationResult set$Xgafv(java.lang.String $Xgafv) {
          return (GetValidationResult) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetValidationResult setAccessToken(java.lang.String accessToken) {
          return (GetValidationResult) super.setAccessToken(accessToken);
        }

        @Override
        public GetValidationResult setAlt(java.lang.String alt) {
          return (GetValidationResult) super.setAlt(alt);
        }

        @Override
        public GetValidationResult setCallback(java.lang.String callback) {
          return (GetValidationResult) super.setCallback(callback);
        }

        @Override
        public GetValidationResult setFields(java.lang.String fields) {
          return (GetValidationResult) super.setFields(fields);
        }

        @Override
        public GetValidationResult setKey(java.lang.String key) {
          return (GetValidationResult) super.setKey(key);
        }

        @Override
        public GetValidationResult setOauthToken(java.lang.String oauthToken) {
          return (GetValidationResult) super.setOauthToken(oauthToken);
        }

        @Override
        public GetValidationResult setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetValidationResult) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetValidationResult setQuotaUser(java.lang.String quotaUser) {
          return (GetValidationResult) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetValidationResult setUploadType(java.lang.String uploadType) {
          return (GetValidationResult) super.setUploadType(uploadType);
        }

        @Override
        public GetValidationResult setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetValidationResult) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public GetValidationResult setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The language for which you want a validation result. If not specified, the
         * agent's default language is used. [Many
         * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported.
         * Note: languages must be enabled in the agent before they can be used.
         */
        @com.google.api.client.util.Key
        private java.lang.String languageCode;

        /** Optional. The language for which you want a validation result. If not specified, the agent's
       default language is used. [Many
       languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note:
       languages must be enabled in the agent before they can be used.
         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        /**
         * Optional. The language for which you want a validation result. If not specified, the
         * agent's default language is used. [Many
         * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported.
         * Note: languages must be enabled in the agent before they can be used.
         */
        public GetValidationResult setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public GetValidationResult set(String parameterName, Object value) {
          return (GetValidationResult) super.set(parameterName, value);
        }
      }
      /**
       * Imports the specified agent from a ZIP file. Uploads new intents and entity types without
       * deleting the existing ones. Intents and entity types with the same name are replaced with the new
       * versions from ImportAgentRequest. After the import, the imported draft agent will be trained
       * automatically (unless disabled in agent settings). However, once the import is done, training may
       * not be completed yet. Please call TrainAgent and wait for the operation it returns in order to
       * train explicitly. This method is a [long-running
       * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
       * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
       * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
       * `response`: An [Empty message](https://developers.google.com/protocol-
       * buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is
       * complete, not when it is done training. Note: You should always train an agent prior to sending
       * it queries. See the [training
       * documentation](https://cloud.google.com/dialogflow/es/docs/training).
       *
       * Create a request for the method "agent.import".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link DialogflowImport#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to import is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
       * @return the request
       */
      public DialogflowImport dialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) throws java.io.IOException {
        DialogflowImport result = new DialogflowImport(parent, content);
        initialize(result);
        return result;
      }

      public class DialogflowImport extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:import";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Imports the specified agent from a ZIP file. Uploads new intents and entity types without
         * deleting the existing ones. Intents and entity types with the same name are replaced with the
         * new versions from ImportAgentRequest. After the import, the imported draft agent will be
         * trained automatically (unless disabled in agent settings). However, once the import is done,
         * training may not be completed yet. Please call TrainAgent and wait for the operation it returns
         * in order to train explicitly. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
         * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
         * [Struct message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
         * The operation only tracks when importing is complete, not when it is done training. Note: You
         * should always train an agent prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.import".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link DialogflowImport#execute()} method to invoke the remote
         * operation. <p> {@link DialogflowImport#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to import is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
         * @since 1.13
         */
        protected DialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public DialogflowImport set$Xgafv(java.lang.String $Xgafv) {
          return (DialogflowImport) super.set$Xgafv($Xgafv);
        }

        @Override
        public DialogflowImport setAccessToken(java.lang.String accessToken) {
          return (DialogflowImport) super.setAccessToken(accessToken);
        }

        @Override
        public DialogflowImport setAlt(java.lang.String alt) {
          return (DialogflowImport) super.setAlt(alt);
        }

        @Override
        public DialogflowImport setCallback(java.lang.String callback) {
          return (DialogflowImport) super.setCallback(callback);
        }

        @Override
        public DialogflowImport setFields(java.lang.String fields) {
          return (DialogflowImport) super.setFields(fields);
        }

        @Override
        public DialogflowImport setKey(java.lang.String key) {
          return (DialogflowImport) super.setKey(key);
        }

        @Override
        public DialogflowImport setOauthToken(java.lang.String oauthToken) {
          return (DialogflowImport) super.setOauthToken(oauthToken);
        }

        @Override
        public DialogflowImport setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (DialogflowImport) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public DialogflowImport setQuotaUser(java.lang.String quotaUser) {
          return (DialogflowImport) super.setQuotaUser(quotaUser);
        }

        @Override
        public DialogflowImport setUploadType(java.lang.String uploadType) {
          return (DialogflowImport) super.setUploadType(uploadType);
        }

        @Override
        public DialogflowImport setUploadProtocol(java.lang.String uploadProtocol) {
          return (DialogflowImport) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to import is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to import is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to import is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public DialogflowImport setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public DialogflowImport set(String parameterName, Object value) {
          return (DialogflowImport) super.set(parameterName, value);
        }
      }
      /**
       * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one.
       * All the intents and entity types in the older version are deleted. After the restore, the
       * restored draft agent will be trained automatically (unless disabled in agent settings). However,
       * once the restore is done, training may not be completed yet. Please call TrainAgent and wait for
       * the operation it returns in order to train explicitly. This method is a [long-running
       * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
       * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
       * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
       * `response`: An [Empty message](https://developers.google.com/protocol-
       * buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is
       * complete, not when it is done training. Note: You should always train an agent prior to sending
       * it queries. See the [training
       * documentation](https://cloud.google.com/dialogflow/es/docs/training).
       *
       * Create a request for the method "agent.restore".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to restore is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
       * @return the request
       */
      public Restore restore(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) throws java.io.IOException {
        Restore result = new Restore(parent, content);
        initialize(result);
        return result;
      }

      public class Restore extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:restore";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Restores the specified agent from a ZIP file. Replaces the current agent version with a new
         * one. All the intents and entity types in the older version are deleted. After the restore, the
         * restored draft agent will be trained automatically (unless disabled in agent settings).
         * However, once the restore is done, training may not be completed yet. Please call TrainAgent
         * and wait for the operation it returns in order to train explicitly. This method is a [long-
         * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
         * The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
         * [Struct message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
         * The operation only tracks when restoring is complete, not when it is done training. Note: You
         * should always train an agent prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.restore".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         * <p> {@link
         * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to restore is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
         * @since 1.13
         */
        protected Restore(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Restore set$Xgafv(java.lang.String $Xgafv) {
          return (Restore) super.set$Xgafv($Xgafv);
        }

        @Override
        public Restore setAccessToken(java.lang.String accessToken) {
          return (Restore) super.setAccessToken(accessToken);
        }

        @Override
        public Restore setAlt(java.lang.String alt) {
          return (Restore) super.setAlt(alt);
        }

        @Override
        public Restore setCallback(java.lang.String callback) {
          return (Restore) super.setCallback(callback);
        }

        @Override
        public Restore setFields(java.lang.String fields) {
          return (Restore) super.setFields(fields);
        }

        @Override
        public Restore setKey(java.lang.String key) {
          return (Restore) super.setKey(key);
        }

        @Override
        public Restore setOauthToken(java.lang.String oauthToken) {
          return (Restore) super.setOauthToken(oauthToken);
        }

        @Override
        public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Restore) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Restore setQuotaUser(java.lang.String quotaUser) {
          return (Restore) super.setQuotaUser(quotaUser);
        }

        @Override
        public Restore setUploadType(java.lang.String uploadType) {
          return (Restore) super.setUploadType(uploadType);
        }

        @Override
        public Restore setUploadProtocol(java.lang.String uploadProtocol) {
          return (Restore) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to restore is associated with. Format: `projects/`
         * or `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to restore is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to restore is associated with. Format: `projects/`
         * or `projects//locations/`.
         */
        public Restore setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Restore set(String parameterName, Object value) {
          return (Restore) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of agents. Since there is at most one conversational agent per project, this
       * method is useful primarily for listing all agents across projects the caller has access to. One
       * can achieve that with a wildcard project collection id "-". Refer to [List Sub-
       * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
       *
       * Create a request for the method "agent.search".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
       * @return the request
       */
      public Search search(java.lang.String parent) throws java.io.IOException {
        Search result = new Search(parent);
        initialize(result);
        return result;
      }

      public class Search extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:search";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of agents. Since there is at most one conversational agent per project, this
         * method is useful primarily for listing all agents across projects the caller has access to. One
         * can achieve that with a wildcard project collection id "-". Refer to [List Sub-
         * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
         *
         * Create a request for the method "agent.search".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
         * <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
         * @since 1.13
         */
        protected Search(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
         */
        public Search setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }
      /**
       * Trains the specified agent. This method is a [long-running
       * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
       * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
       * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
       * `response`: An [Empty message](https://developers.google.com/protocol-
       * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
       * sending it queries. See the [training
       * documentation](https://cloud.google.com/dialogflow/es/docs/training).
       *
       * Create a request for the method "agent.train".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Train#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to train is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
       * @return the request
       */
      public Train train(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) throws java.io.IOException {
        Train result = new Train(parent, content);
        initialize(result);
        return result;
      }

      public class Train extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent:train";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Trains the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
         * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
         * [Struct message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
         * Note: You should always train an agent prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.train".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Train#execute()} method to invoke the remote operation.
         * <p> {@link
         * Train#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to train is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
         * @since 1.13
         */
        protected Train(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Train set$Xgafv(java.lang.String $Xgafv) {
          return (Train) super.set$Xgafv($Xgafv);
        }

        @Override
        public Train setAccessToken(java.lang.String accessToken) {
          return (Train) super.setAccessToken(accessToken);
        }

        @Override
        public Train setAlt(java.lang.String alt) {
          return (Train) super.setAlt(alt);
        }

        @Override
        public Train setCallback(java.lang.String callback) {
          return (Train) super.setCallback(callback);
        }

        @Override
        public Train setFields(java.lang.String fields) {
          return (Train) super.setFields(fields);
        }

        @Override
        public Train setKey(java.lang.String key) {
          return (Train) super.setKey(key);
        }

        @Override
        public Train setOauthToken(java.lang.String oauthToken) {
          return (Train) super.setOauthToken(oauthToken);
        }

        @Override
        public Train setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Train) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Train setQuotaUser(java.lang.String quotaUser) {
          return (Train) super.setQuotaUser(quotaUser);
        }

        @Override
        public Train setUploadType(java.lang.String uploadType) {
          return (Train) super.setUploadType(uploadType);
        }

        @Override
        public Train setUploadProtocol(java.lang.String uploadProtocol) {
          return (Train) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to train is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to train is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to train is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public Train setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Train set(String parameterName, Object value) {
          return (Train) super.set(parameterName, value);
        }
      }
      /**
       * Updates the fulfillment.
       *
       * Create a request for the method "agent.updateFulfillment".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link UpdateFulfillment#execute()} method to invoke the remote operation.
       *
       * @param name Required. The unique identifier of the fulfillment. Supported formats: -
       *        `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not
       *        used for Fulfillment in an Environment.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment}
       * @return the request
       */
      public UpdateFulfillment updateFulfillment(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment content) throws java.io.IOException {
        UpdateFulfillment result = new UpdateFulfillment(name, content);
        initialize(result);
        return result;
      }

      public class UpdateFulfillment extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/agent/fulfillment$");

        /**
         * Updates the fulfillment.
         *
         * Create a request for the method "agent.updateFulfillment".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link UpdateFulfillment#execute()} method to invoke the remote
         * operation. <p> {@link UpdateFulfillment#initialize(com.google.api.client.googleapis.services.Ab
         * stractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The unique identifier of the fulfillment. Supported formats: -
       *        `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not
       *        used for Fulfillment in an Environment.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment}
         * @since 1.13
         */
        protected UpdateFulfillment(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/agent/fulfillment$");
          }
        }

        @Override
        public UpdateFulfillment set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateFulfillment) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateFulfillment setAccessToken(java.lang.String accessToken) {
          return (UpdateFulfillment) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateFulfillment setAlt(java.lang.String alt) {
          return (UpdateFulfillment) super.setAlt(alt);
        }

        @Override
        public UpdateFulfillment setCallback(java.lang.String callback) {
          return (UpdateFulfillment) super.setCallback(callback);
        }

        @Override
        public UpdateFulfillment setFields(java.lang.String fields) {
          return (UpdateFulfillment) super.setFields(fields);
        }

        @Override
        public UpdateFulfillment setKey(java.lang.String key) {
          return (UpdateFulfillment) super.setKey(key);
        }

        @Override
        public UpdateFulfillment setOauthToken(java.lang.String oauthToken) {
          return (UpdateFulfillment) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateFulfillment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateFulfillment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateFulfillment setQuotaUser(java.lang.String quotaUser) {
          return (UpdateFulfillment) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateFulfillment setUploadType(java.lang.String uploadType) {
          return (UpdateFulfillment) super.setUploadType(uploadType);
        }

        @Override
        public UpdateFulfillment setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateFulfillment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The unique identifier of the fulfillment. Supported formats: -
         * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is
         * not used for Fulfillment in an Environment.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The unique identifier of the fulfillment. Supported formats: -
       `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
       Fulfillment in an Environment.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The unique identifier of the fulfillment. Supported formats: -
         * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is
         * not used for Fulfillment in an Environment.
         */
        public UpdateFulfillment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/agent/fulfillment$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The mask to control which fields get updated. If the mask is not present, all
         * fields will be updated.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The mask to control which fields get updated. If the mask is not present, all fields will
       be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The mask to control which fields get updated. If the mask is not present, all
         * fields will be updated.
         */
        public UpdateFulfillment setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateFulfillment set(String parameterName, Object value) {
          return (UpdateFulfillment) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the EntityTypes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EntityTypes entityTypes() {
        return new EntityTypes();
      }

      /**
       * The "entityTypes" collection of methods.
       */
      public class EntityTypes {

        /**
         * Deletes entity types in the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: An [Empty message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
         * sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "entityTypes.batchDelete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
         *        `projects//agent`, - `projects//locations//agent`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(parent, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchDelete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Deletes entity types in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           * Note: You should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.batchDelete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
         *        `projects//agent`, - `projects//locations//agent`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to delete all entities types for. Supported formats: -
           * `projects//agent`, - `projects//locations//agent`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to delete all entities types for. Supported formats: -
         `projects//agent`, - `projects//locations//agent`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to delete all entities types for. Supported formats: -
           * `projects//agent`, - `projects//locations//agent`.
           */
          public BatchDelete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates/Creates multiple entity types in the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to
         * sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "entityTypes.batchUpdate".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to update or create entity types in. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Updates/Creates multiple entity types in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse
           * Note: You should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.batchUpdate".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to update or create entity types in. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to update or create entity types in. Supported formats:
           * - `projects//agent` - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to update or create entity types in. Supported formats: -
         `projects//agent` - `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to update or create entity types in. Supported formats:
           * - `projects//agent` - `projects//locations//agent`
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Creates an entity type in the specified agent. Note: You should always train an agent prior to
         * sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "entityTypes.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an entity type in the specified agent. Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create a entity type for. Supported formats: - `projects//agent`
           * - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create a entity type for. Supported formats: - `projects//agent`
           * - `projects//locations//agent`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Create setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified entity type. Note: You should always train an agent prior to sending it
         * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "entityTypes.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/`
         *        - `projects//locations//agent/entityTypes/`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Deletes the specified entity type. Note: You should always train an agent prior to sending it
           * queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/`
         *        - `projects//locations//agent/entityTypes/`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entity type to delete. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entity type to delete. Supported formats: -
         `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entity type to delete. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified entity type.
         *
         * Create a request for the method "entityTypes.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
         *        `projects//locations//agent/entityTypes/`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Retrieves the specified entity type.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
         *        `projects//locations//agent/entityTypes/`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entity type. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
         `projects//locations//agent/entityTypes/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entity type. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Get setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all entity types in the specified agent.
         *
         * Create a request for the method "entityTypes.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all entity types in the specified agent.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all entity types from. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all entity types from. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public List setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified entity type. Note: You should always train an agent prior to sending it
         * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "entityTypes.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
         *        EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
         *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

          /**
           * Updates the specified entity type. Note: You should always train an agent prior to sending it
           * queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
         *        EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
         *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
           * EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
         EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` -
         `projects//locations//agent/entityTypes/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
           * EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
           * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/entityTypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Patch setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /** Optional. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Optional. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entities collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Entities.List request = dialogflow.entities().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entities entities() {
          return new Entities();
        }

        /**
         * The "entities" collection of methods.
         */
        public class Entities {

          /**
           * Creates multiple new entities in the specified entity type. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: An [Empty message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entities.batchCreate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to create entities in. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
           * @return the request
           */
          public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) throws java.io.IOException {
            BatchCreate result = new BatchCreate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchCreate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchCreate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Creates multiple new entities in the specified entity type. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             * Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entities.batchCreate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to create entities in. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
             * @since 1.13
             */
            protected BatchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchCreate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchCreate setAccessToken(java.lang.String accessToken) {
              return (BatchCreate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchCreate setAlt(java.lang.String alt) {
              return (BatchCreate) super.setAlt(alt);
            }

            @Override
            public BatchCreate setCallback(java.lang.String callback) {
              return (BatchCreate) super.setCallback(callback);
            }

            @Override
            public BatchCreate setFields(java.lang.String fields) {
              return (BatchCreate) super.setFields(fields);
            }

            @Override
            public BatchCreate setKey(java.lang.String key) {
              return (BatchCreate) super.setKey(key);
            }

            @Override
            public BatchCreate setOauthToken(java.lang.String oauthToken) {
              return (BatchCreate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchCreate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchCreate setQuotaUser(java.lang.String quotaUser) {
              return (BatchCreate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchCreate setUploadType(java.lang.String uploadType) {
              return (BatchCreate) super.setUploadType(uploadType);
            }

            @Override
            public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchCreate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to create entities in. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to create entities in. Supported formats: -
           `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to create entities in. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public BatchCreate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchCreate set(String parameterName, Object value) {
              return (BatchCreate) super.set(parameterName, value);
            }
          }
          /**
           * Deletes entities in the specified entity type. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: An [Empty message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entities.batchDelete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to delete entries for. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
           * @return the request
           */
          public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) throws java.io.IOException {
            BatchDelete result = new BatchDelete(parent, content);
            initialize(result);
            return result;
          }

          public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchDelete";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Deletes entities in the specified entity type. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             * Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entities.batchDelete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to delete entries for. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
             * @since 1.13
             */
            protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
              return (BatchDelete) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchDelete setAccessToken(java.lang.String accessToken) {
              return (BatchDelete) super.setAccessToken(accessToken);
            }

            @Override
            public BatchDelete setAlt(java.lang.String alt) {
              return (BatchDelete) super.setAlt(alt);
            }

            @Override
            public BatchDelete setCallback(java.lang.String callback) {
              return (BatchDelete) super.setCallback(callback);
            }

            @Override
            public BatchDelete setFields(java.lang.String fields) {
              return (BatchDelete) super.setFields(fields);
            }

            @Override
            public BatchDelete setKey(java.lang.String key) {
              return (BatchDelete) super.setKey(key);
            }

            @Override
            public BatchDelete setOauthToken(java.lang.String oauthToken) {
              return (BatchDelete) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchDelete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchDelete setQuotaUser(java.lang.String quotaUser) {
              return (BatchDelete) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchDelete setUploadType(java.lang.String uploadType) {
              return (BatchDelete) super.setUploadType(uploadType);
            }

            @Override
            public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchDelete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to delete entries for. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to delete entries for. Supported formats: -
           `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to delete entries for. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public BatchDelete setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchDelete set(String parameterName, Object value) {
              return (BatchDelete) super.set(parameterName, value);
            }
          }
          /**
           * Updates or creates multiple entities in the specified entity type. This method does not affect
           * entities in the entity type that aren't explicitly specified in the request. Note: You should
           * always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-
           * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           *
           * Create a request for the method "entities.batchUpdate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entity type to update or create entities in. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
           * @return the request
           */
          public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) throws java.io.IOException {
            BatchUpdate result = new BatchUpdate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entities:batchUpdate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Updates or creates multiple entities in the specified entity type. This method does not affect
             * entities in the entity type that aren't explicitly specified in the request. Note: You should
             * always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-
             * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
             * The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             *
             * Create a request for the method "entities.batchUpdate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entity type to update or create entities in. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
             * @since 1.13
             */
            protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchUpdate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchUpdate setAccessToken(java.lang.String accessToken) {
              return (BatchUpdate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchUpdate setAlt(java.lang.String alt) {
              return (BatchUpdate) super.setAlt(alt);
            }

            @Override
            public BatchUpdate setCallback(java.lang.String callback) {
              return (BatchUpdate) super.setCallback(callback);
            }

            @Override
            public BatchUpdate setFields(java.lang.String fields) {
              return (BatchUpdate) super.setFields(fields);
            }

            @Override
            public BatchUpdate setKey(java.lang.String key) {
              return (BatchUpdate) super.setKey(key);
            }

            @Override
            public BatchUpdate setOauthToken(java.lang.String oauthToken) {
              return (BatchUpdate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchUpdate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
              return (BatchUpdate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchUpdate setUploadType(java.lang.String uploadType) {
              return (BatchUpdate) super.setUploadType(uploadType);
            }

            @Override
            public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to update or create entities in. Supported
             * formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entity type to update or create entities in. Supported formats: -
           `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entity type to update or create entities in. Supported
             * formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public BatchUpdate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchUpdate set(String parameterName, Object value) {
              return (BatchUpdate) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Environments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Environments.List request = dialogflow.environments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Environments environments() {
        return new Environments();
      }

      /**
       * The "environments" collection of methods.
       */
      public class Environments {

        /**
         * Creates an agent environment.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create an environment for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

          private static final String REST_PATH = "v2beta1/{+parent}/environments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an agent environment.
           *
           * Create a request for the method "environments.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create an environment for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create an environment for. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create an environment for. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create an environment for. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The unique id of the new environment. */
          @com.google.api.client.util.Key
          private java.lang.String environmentId;

          /** Required. The unique id of the new environment.
           */
          public java.lang.String getEnvironmentId() {
            return environmentId;
          }

          /** Required. The unique id of the new environment. */
          public Create setEnvironmentId(java.lang.String environmentId) {
            this.environmentId = environmentId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified agent environment.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
         *        `projects//locations//agent/environments/`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+$");

          /**
           * Deletes the specified agent environment.
           *
           * Create a request for the method "environments.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
         *        `projects//locations//agent/environments/`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment to delete. / Format: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
         `projects//locations//agent/environments/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the environment to delete. / Format: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified agent environment.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
         *        `projects//locations//agent/environments/`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+$");

          /**
           * Retrieves the specified agent environment.
           *
           * Create a request for the method "environments.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
         *        `projects//locations//agent/environments/`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
         `projects//locations//agent/environments/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the environment. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the history of the specified environment.
         *
         * Create a request for the method "environments.getHistory".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link GetHistory#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment to retrieve history for. Supported formats: -
         *        `projects//agent/environments/` - `projects//locations//agent/environments/`
         * @return the request
         */
        public GetHistory getHistory(java.lang.String parent) throws java.io.IOException {
          GetHistory result = new GetHistory(parent);
          initialize(result);
          return result;
        }

        public class GetHistory extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EnvironmentHistory> {

          private static final String REST_PATH = "v2beta1/{+parent}/history";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+$");

          /**
           * Gets the history of the specified environment.
           *
           * Create a request for the method "environments.getHistory".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link GetHistory#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetHistory#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment to retrieve history for. Supported formats: -
         *        `projects//agent/environments/` - `projects//locations//agent/environments/`
           * @since 1.13
           */
          protected GetHistory(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EnvironmentHistory.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetHistory set$Xgafv(java.lang.String $Xgafv) {
            return (GetHistory) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetHistory setAccessToken(java.lang.String accessToken) {
            return (GetHistory) super.setAccessToken(accessToken);
          }

          @Override
          public GetHistory setAlt(java.lang.String alt) {
            return (GetHistory) super.setAlt(alt);
          }

          @Override
          public GetHistory setCallback(java.lang.String callback) {
            return (GetHistory) super.setCallback(callback);
          }

          @Override
          public GetHistory setFields(java.lang.String fields) {
            return (GetHistory) super.setFields(fields);
          }

          @Override
          public GetHistory setKey(java.lang.String key) {
            return (GetHistory) super.setKey(key);
          }

          @Override
          public GetHistory setOauthToken(java.lang.String oauthToken) {
            return (GetHistory) super.setOauthToken(oauthToken);
          }

          @Override
          public GetHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetHistory) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetHistory setQuotaUser(java.lang.String quotaUser) {
            return (GetHistory) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetHistory setUploadType(java.lang.String uploadType) {
            return (GetHistory) super.setUploadType(uploadType);
          }

          @Override
          public GetHistory setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetHistory) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment to retrieve history for. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment to retrieve history for. Supported formats: -
         `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment to retrieve history for. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public GetHistory setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public GetHistory setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public GetHistory setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public GetHistory set(String parameterName, Object value) {
            return (GetHistory) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all non-draft environments of the specified agent.
         *
         * Create a request for the method "environments.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all environments from. Format: - `projects//agent` -
         *        `projects//locations//agent`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEnvironmentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/environments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all non-draft environments of the specified agent.
           *
           * Create a request for the method "environments.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all environments from. Format: - `projects//agent` -
         *        `projects//locations//agent`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEnvironmentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all environments from. Format: - `projects//agent` -
           * `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all environments from. Format: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all environments from. Format: - `projects//agent` -
           * `projects//locations//agent`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified agent environment. This method allows you to deploy new agent versions into
         * the environment. When an environment is pointed to a new agent version by setting
         * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
         * that time, the environment keeps on serving the previous version of the agent. After the new
         * agent version is done loading, the environment is set back to the `RUNNING` state. You can use
         * "-" as Environment ID in environment name to update version in "draft" environment. WARNING: this
         * will negate all recent changes to draft and can't be undone. You may want to save the draft to a
         * version before calling this function.
         *
         * Create a request for the method "environments.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The unique identifier of this agent environment. Supported formats: -
         *        `projects//agent/environments/` - `projects//locations//agent/environments/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+$");

          /**
           * Updates the specified agent environment. This method allows you to deploy new agent versions
           * into the environment. When an environment is pointed to a new agent version by setting
           * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
           * that time, the environment keeps on serving the previous version of the agent. After the new
           * agent version is done loading, the environment is set back to the `RUNNING` state. You can use
           * "-" as Environment ID in environment name to update version in "draft" environment. WARNING:
           * this will negate all recent changes to draft and can't be undone. You may want to save the
           * draft to a version before calling this function.
           *
           * Create a request for the method "environments.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The unique identifier of this agent environment. Supported formats: -
         *        `projects//agent/environments/` - `projects//locations//agent/environments/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The unique identifier of this agent environment. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The unique identifier of this agent environment. Supported formats: -
         `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The unique identifier of this agent environment. Supported formats: -
           * `projects//agent/environments/` - `projects//locations//agent/environments/`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/environments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. This field is used to prevent accidental overwrite of the draft environment,
           * which is an operation that cannot be undone. To confirm that the caller desires this
           * overwrite, this field must be explicitly set to true when updating the draft
           * environment (environment ID = `-`).
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean allowLoadToDraftAndDiscardChanges;

          /** Optional. This field is used to prevent accidental overwrite of the draft environment, which is an
         operation that cannot be undone. To confirm that the caller desires this overwrite, this field must
         be explicitly set to true when updating the draft environment (environment ID = `-`).
           */
          public java.lang.Boolean getAllowLoadToDraftAndDiscardChanges() {
            return allowLoadToDraftAndDiscardChanges;
          }

          /**
           * Optional. This field is used to prevent accidental overwrite of the draft environment,
           * which is an operation that cannot be undone. To confirm that the caller desires this
           * overwrite, this field must be explicitly set to true when updating the draft
           * environment (environment ID = `-`).
           */
          public Patch setAllowLoadToDraftAndDiscardChanges(java.lang.Boolean allowLoadToDraftAndDiscardChanges) {
            this.allowLoadToDraftAndDiscardChanges = allowLoadToDraftAndDiscardChanges;
            return this;
          }

          /** Required. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Intents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Intents.List request = dialogflow.intents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Intents intents() {
          return new Intents();
        }

        /**
         * The "intents" collection of methods.
         */
        public class Intents {

          /**
           * Returns the list of all intents in the specified agent.
           *
           * Create a request for the method "intents.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
           *        `projects//locations//agent`. Alternatively, you can specify the environment to list
           *        intents for. Format: `projects//agent/environments/` or
           *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
           *        be returned for non-draft environment.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/intents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+$");

            /**
             * Returns the list of all intents in the specified agent.
             *
             * Create a request for the method "intents.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
           *        `projects//locations//agent`. Alternatively, you can specify the environment to list
           *        intents for. Format: `projects//agent/environments/` or
           *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
           *        be returned for non-draft environment.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/environments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to list all intents from. Format: `projects//agent` or
             * `projects//locations//agent`. Alternatively, you can specify the environment to list
             * intents for. Format: `projects//agent/environments/` or
             * `projects//locations//agent/environments/`. Note: training phrases of the intents
             * will not be returned for non-draft environment.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to list all intents from. Format: `projects//agent` or
           `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
           Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note:
           training phrases of the intents will not be returned for non-draft environment.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to list all intents from. Format: `projects//agent` or
             * `projects//locations//agent`. Alternatively, you can specify the environment to list
             * intents for. Format: `projects//agent/environments/` or
             * `projects//locations//agent/environments/`. Note: training phrases of the intents
             * will not be returned for non-draft environment.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/environments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The resource view to apply to the returned intent. */
            @com.google.api.client.util.Key
            private java.lang.String intentView;

            /** Optional. The resource view to apply to the returned intent.
             */
            public java.lang.String getIntentView() {
              return intentView;
            }

            /** Optional. The resource view to apply to the returned intent. */
            public List setIntentView(java.lang.String intentView) {
              this.intentView = intentView;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public List setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Users collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Users.List request = dialogflow.users().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Users users() {
          return new Users();
        }

        /**
         * The "users" collection of methods.
         */
        public class Users {

          /**
           * An accessor for creating requests from the Sessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Sessions sessions() {
            return new Sessions();
          }

          /**
           * The "sessions" collection of methods.
           */
          public class Sessions {

            /**
             * Deletes all active contexts in the specified session.
             *
             * Create a request for the method "sessions.deleteContexts".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @return the request
             */
            public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
              DeleteContexts result = new DeleteContexts(parent);
              initialize(result);
              return result;
            }

            public class DeleteContexts extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

              /**
               * Deletes all active contexts in the specified session.
               *
               * Create a request for the method "sessions.deleteContexts".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
               * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @since 1.13
               */
              protected DeleteContexts(java.lang.String parent) {
                super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteContexts) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteContexts setAccessToken(java.lang.String accessToken) {
                return (DeleteContexts) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteContexts setAlt(java.lang.String alt) {
                return (DeleteContexts) super.setAlt(alt);
              }

              @Override
              public DeleteContexts setCallback(java.lang.String callback) {
                return (DeleteContexts) super.setCallback(callback);
              }

              @Override
              public DeleteContexts setFields(java.lang.String fields) {
                return (DeleteContexts) super.setFields(fields);
              }

              @Override
              public DeleteContexts setKey(java.lang.String key) {
                return (DeleteContexts) super.setKey(key);
              }

              @Override
              public DeleteContexts setOauthToken(java.lang.String oauthToken) {
                return (DeleteContexts) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteContexts) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
                return (DeleteContexts) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteContexts setUploadType(java.lang.String uploadType) {
                return (DeleteContexts) super.setUploadType(uploadType);
              }

              @Override
              public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the session to delete all contexts from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not specified
               * we assume default 'draft' environment. If `User ID` is not specified, we assume
               * default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the session to delete all contexts from. Supported formats: -
             `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified we assume default 'draft'
             environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the session to delete all contexts from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not specified
               * we assume default 'draft' environment. If `User ID` is not specified, we assume
               * default '-' user.
               */
              public DeleteContexts setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public DeleteContexts set(String parameterName, Object value) {
                return (DeleteContexts) super.set(parameterName, value);
              }
            }
            /**
             * Processes a natural language query and returns structured, actionable data as a result. This
             * method is not idempotent, because it may cause contexts and session entity types to be updated,
             * which in turn might affect results of future queries. If you might use [Agent
             * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
             * functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
             * production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
             * /agents-versions).
             *
             * Create a request for the method "sessions.detectIntent".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
             *
             * @param session Required. The name of the session this query is sent to. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment (`Environment ID` might be referred to as environment name at
             *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
             *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
             *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
             *        and `User ID` must not exceed 36 characters. For more information, see the [API
             *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
             *        use agent versions for production traffic. See [Versions and
             *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
             * @return the request
             */
            public DetectIntent detectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
              DetectIntent result = new DetectIntent(session, content);
              initialize(result);
              return result;
            }

            public class DetectIntent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

              private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

              private final java.util.regex.Pattern SESSION_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

              /**
               * Processes a natural language query and returns structured, actionable data as a result. This
               * method is not idempotent, because it may cause contexts and session entity types to be updated,
               * which in turn might affect results of future queries. If you might use [Agent
               * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
               * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
               * additional functionality for Agent Assist and other CCAI products. Note: Always use agent
               * versions for production traffic. See [Versions and
               * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               *
               * Create a request for the method "sessions.detectIntent".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
               * operation. <p> {@link
               * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param session Required. The name of the session this query is sent to. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment (`Environment ID` might be referred to as environment name at
             *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
             *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
             *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
             *        and `User ID` must not exceed 36 characters. For more information, see the [API
             *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
             *        use agent versions for production traffic. See [Versions and
             *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
               * @since 1.13
               */
              protected DetectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
                this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                      "Parameter session must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
              }

              @Override
              public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
                return (DetectIntent) super.set$Xgafv($Xgafv);
              }

              @Override
              public DetectIntent setAccessToken(java.lang.String accessToken) {
                return (DetectIntent) super.setAccessToken(accessToken);
              }

              @Override
              public DetectIntent setAlt(java.lang.String alt) {
                return (DetectIntent) super.setAlt(alt);
              }

              @Override
              public DetectIntent setCallback(java.lang.String callback) {
                return (DetectIntent) super.setCallback(callback);
              }

              @Override
              public DetectIntent setFields(java.lang.String fields) {
                return (DetectIntent) super.setFields(fields);
              }

              @Override
              public DetectIntent setKey(java.lang.String key) {
                return (DetectIntent) super.setKey(key);
              }

              @Override
              public DetectIntent setOauthToken(java.lang.String oauthToken) {
                return (DetectIntent) super.setOauthToken(oauthToken);
              }

              @Override
              public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DetectIntent) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DetectIntent setQuotaUser(java.lang.String quotaUser) {
                return (DetectIntent) super.setQuotaUser(quotaUser);
              }

              @Override
              public DetectIntent setUploadType(java.lang.String uploadType) {
                return (DetectIntent) super.setUploadType(uploadType);
              }

              @Override
              public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
                return (DetectIntent) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the session this query is sent to. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment (`Environment ID` might be
               * referred to as environment name at some places). If `User ID` is not specified, we
               * are using "-". It's up to the API caller to choose an appropriate `Session ID` and
               * `User Id`. They can be a random number or some type of user and session identifiers
               * (preferably hashed). The length of the `Session ID` and `User ID` must not exceed
               * 36 characters. For more information, see the [API interactions
               * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use
               * agent versions for production traffic. See [Versions and
               * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               */
              @com.google.api.client.util.Key
              private java.lang.String session;

              /** Required. The name of the session this query is sent to. Supported formats: -
             `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
             environment (`Environment ID` might be referred to as environment name at some places). If `User
             ID` is not specified, we are using "-". It's up to the API caller to choose an appropriate `Session
             ID` and `User Id`. They can be a random number or some type of user and session identifiers
             (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
             For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
             /api-overview). Note: Always use agent versions for production traffic. See [Versions and
             environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               */
              public java.lang.String getSession() {
                return session;
              }

              /**
               * Required. The name of the session this query is sent to. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment (`Environment ID` might be
               * referred to as environment name at some places). If `User ID` is not specified, we
               * are using "-". It's up to the API caller to choose an appropriate `Session ID` and
               * `User Id`. They can be a random number or some type of user and session identifiers
               * (preferably hashed). The length of the `Session ID` and `User ID` must not exceed
               * 36 characters. For more information, see the [API interactions
               * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use
               * agent versions for production traffic. See [Versions and
               * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               */
              public DetectIntent setSession(java.lang.String session) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                      "Parameter session must conform to the pattern " +
                      "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                }
                this.session = session;
                return this;
              }

              @Override
              public DetectIntent set(String parameterName, Object value) {
                return (DetectIntent) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Contexts collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Dialogflow dialogflow = new Dialogflow(...);}
             *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Contexts contexts() {
              return new Contexts();
            }

            /**
             * The "contexts" collection of methods.
             */
            public class Contexts {

              /**
               * Creates a context. If the specified context already exists, overrides the context.
               *
               * Create a request for the method "contexts.create".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
               *        `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Creates a context. If the specified context already exists, overrides the context.
                 *
                 * Create a request for the method "contexts.create".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
               *        `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                  super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to create a context for. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
               `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
               environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to create a context for. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes the specified context.
               *
               * Create a request for the method "contexts.delete".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the context to delete. Supported formats: -
               *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
               *        - `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
               *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Deletes the specified context.
                 *
                 * Create a request for the method "contexts.delete".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the context to delete. Supported formats: -
               *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
               *        - `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
               *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the context to delete. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the context to delete. Supported formats: -
               `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
               `projects//agent/environments//users//sessions//contexts/`, -
               `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
               specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
               'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the context to delete. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Retrieves the specified context.
               *
               * Create a request for the method "contexts.get".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
               *        `projects//locations//agent/sessions//contexts/`, -
               *        `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
               *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Retrieves the specified context.
                 *
                 * Create a request for the method "contexts.get".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
               *        `projects//locations//agent/sessions//contexts/`, -
               *        `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
               *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the context. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
               `projects//locations//agent/sessions//contexts/`, -
               `projects//agent/environments//users//sessions//contexts/`, -
               `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
               specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
               'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the context. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Returns the list of all contexts in the specified session.
               *
               * Create a request for the method "contexts.list".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
               *        `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

                private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Returns the list of all contexts in the specified session.
                 *
                 * Create a request for the method "contexts.list".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
               *        `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to list all contexts from. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
               `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
               environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to list all contexts from. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Optional. The next_page_token value returned from a previous list request.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates the specified context.
               *
               * Create a request for the method "contexts.patch".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Required. The unique identifier of the context. Supported formats: -
               *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
               *        - `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
               *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
               *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
               *        environment. If `User ID` is not specified, we assume default '-' user. The following
               *        context names are reserved for internal use by Dialogflow. You should not use these
               *        contexts or create contexts with these names: * `__system_counters__` *
               *        `*_id_dialog_context` * `*_dialog_params_size`
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                /**
                 * Updates the specified context.
                 *
                 * Create a request for the method "contexts.patch".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The unique identifier of the context. Supported formats: -
               *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
               *        - `projects//agent/environments//users//sessions//contexts/`, -
               *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
               *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
               *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
               *        environment. If `User ID` is not specified, we assume default '-' user. The following
               *        context names are reserved for internal use by Dialogflow. You should not use these
               *        contexts or create contexts with these names: * `__system_counters__` *
               *        `*_id_dialog_context` * `*_dialog_params_size`
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                  super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The unique identifier of the context. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, The
                 * `Context ID` is always converted to lowercase, may only contain characters in
                 * a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user. The following context names are reserved for internal
                 * use by Dialogflow. You should not use these contexts or create contexts with
                 * these names: * `__system_counters__` * `*_id_dialog_context` *
                 * `*_dialog_params_size`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The unique identifier of the context. Supported formats: -
               `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
               `projects//agent/environments//users//sessions//contexts/`, -
               `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always
               converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes
               long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
               not specified, we assume default '-' user. The following context names are reserved for internal
               use by Dialogflow. You should not use these contexts or create contexts with these names: *
               `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The unique identifier of the context. Supported formats: -
                 * `projects//agent/sessions//contexts/`, -
                 * `projects//locations//agent/sessions//contexts/`, -
                 * `projects//agent/environments//users//sessions//contexts/`, -
                 * `projects//locations//agent/environments//users//sessions//contexts/`, The
                 * `Context ID` is always converted to lowercase, may only contain characters in
                 * a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user. The following context names are reserved for internal
                 * use by Dialogflow. You should not use these contexts or create contexts with
                 * these names: * `__system_counters__` * `*_id_dialog_context` *
                 * `*_dialog_params_size`
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** Optional. The mask to control which fields get updated. */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Optional. The mask to control which fields get updated.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /** Optional. The mask to control which fields get updated. */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }

            }
            /**
             * An accessor for creating requests from the EntityTypes collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Dialogflow dialogflow = new Dialogflow(...);}
             *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public EntityTypes entityTypes() {
              return new EntityTypes();
            }

            /**
             * The "entityTypes" collection of methods.
             */
            public class EntityTypes {

              /**
               * Creates a session entity type. If the specified session entity type already exists, overrides the
               * session entity type. This method doesn't work with Google Assistant integration. Contact
               * Dialogflow support if you need to use session entities with Google Assistant integration.
               *
               * Create a request for the method "entityTypes.create".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to create a session entity type for. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Creates a session entity type. If the specified session entity type already exists, overrides
                 * the session entity type. This method doesn't work with Google Assistant integration. Contact
                 * Dialogflow support if you need to use session entities with Google Assistant integration.
                 *
                 * Create a request for the method "entityTypes.create".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to create a session entity type for. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                  super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to create a session entity type for. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to create a session entity type for. Supported formats: -
               `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
               environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to create a session entity type for. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Deletes the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
               * integration.
               *
               * Create a request for the method "entityTypes.delete".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the entity type to delete. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Deletes the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google
                 * Assistant integration.
                 *
                 * Create a request for the method "entityTypes.delete".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the entity type to delete. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the entity type to delete. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the entity type to delete. Supported formats: -
               `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
               `projects//agent/environments//users//sessions//entityTypes/` -
               `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
               specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
               'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the entity type to delete. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Retrieves the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
               * integration.
               *
               * Create a request for the method "entityTypes.get".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the session entity type. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Retrieves the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google
                 * Assistant integration.
                 *
                 * Create a request for the method "entityTypes.get".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the session entity type. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the session entity type. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the session entity type. Supported formats: -
               `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
               `projects//agent/environments//users//sessions//entityTypes/` -
               `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
               specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
               'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the session entity type. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Returns the list of all session entity types in the specified session. This method doesn't work
               * with Google Assistant integration. Contact Dialogflow support if you need to use session entities
               * with Google Assistant integration.
               *
               * Create a request for the method "entityTypes.list".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The session to list all session entity types from. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

                private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Returns the list of all session entity types in the specified session. This method doesn't work
                 * with Google Assistant integration. Contact Dialogflow support if you need to use session
                 * entities with Google Assistant integration.
                 *
                 * Create a request for the method "entityTypes.list".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The session to list all session entity types from. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The session to list all session entity types from. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The session to list all session entity types from. Supported formats: -
               `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
               environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The session to list all session entity types from. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * Optional. The maximum number of items to return in a single page. By default 100
                 * and at most 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** Optional. The next_page_token value returned from a previous list request.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** Optional. The next_page_token value returned from a previous list request. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Updates the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
               * integration.
               *
               * Create a request for the method "entityTypes.patch".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               *
               * @param name Required. The unique identifier of this session entity type. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user. `` must be the display name of an existing entity type in the same agent that will
               *        be overridden or supplemented.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @return the request
               */
              public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                Patch result = new Patch(name, content);
                initialize(result);
                return result;
              }

              public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                private static final String REST_PATH = "v2beta1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                /**
                 * Updates the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google
                 * Assistant integration.
                 *
                 * Create a request for the method "entityTypes.patch".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The unique identifier of this session entity type. Supported formats: -
               *        `projects//agent/sessions//entityTypes/` -
               *        `projects//locations//agent/sessions//entityTypes/` -
               *        `projects//agent/environments//users//sessions//entityTypes/` -
               *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
               *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
               *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
               *        user. `` must be the display name of an existing entity type in the same agent that will
               *        be overridden or supplemented.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @since 1.13
                 */
                protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                  super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                }

                @Override
                public Patch set$Xgafv(java.lang.String $Xgafv) {
                  return (Patch) super.set$Xgafv($Xgafv);
                }

                @Override
                public Patch setAccessToken(java.lang.String accessToken) {
                  return (Patch) super.setAccessToken(accessToken);
                }

                @Override
                public Patch setAlt(java.lang.String alt) {
                  return (Patch) super.setAlt(alt);
                }

                @Override
                public Patch setCallback(java.lang.String callback) {
                  return (Patch) super.setCallback(callback);
                }

                @Override
                public Patch setFields(java.lang.String fields) {
                  return (Patch) super.setFields(fields);
                }

                @Override
                public Patch setKey(java.lang.String key) {
                  return (Patch) super.setKey(key);
                }

                @Override
                public Patch setOauthToken(java.lang.String oauthToken) {
                  return (Patch) super.setOauthToken(oauthToken);
                }

                @Override
                public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Patch) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Patch setQuotaUser(java.lang.String quotaUser) {
                  return (Patch) super.setQuotaUser(quotaUser);
                }

                @Override
                public Patch setUploadType(java.lang.String uploadType) {
                  return (Patch) super.setUploadType(uploadType);
                }

                @Override
                public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Patch) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The unique identifier of this session entity type. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user. `` must be the display name of an existing
                 * entity type in the same agent that will be overridden or supplemented.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The unique identifier of this session entity type. Supported formats: -
               `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
               `projects//agent/environments//users//sessions//entityTypes/` -
               `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
               specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
               'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the
               display name of an existing entity type in the same agent that will be overridden or supplemented.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The unique identifier of this session entity type. Supported formats: -
                 * `projects//agent/sessions//entityTypes/` -
                 * `projects//locations//agent/sessions//entityTypes/` -
                 * `projects//agent/environments//users//sessions//entityTypes/` -
                 * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                 * `Location ID` is not specified we assume default 'us' location. If `Environment
                 * ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                 * specified, we assume default '-' user. `` must be the display name of an existing
                 * entity type in the same agent that will be overridden or supplemented.
                 */
                public Patch setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                /** Optional. The mask to control which fields get updated. */
                @com.google.api.client.util.Key
                private String updateMask;

                /** Optional. The mask to control which fields get updated.
                 */
                public String getUpdateMask() {
                  return updateMask;
                }

                /** Optional. The mask to control which fields get updated. */
                public Patch setUpdateMask(String updateMask) {
                  this.updateMask = updateMask;
                  return this;
                }

                @Override
                public Patch set(String parameterName, Object value) {
                  return (Patch) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
      /**
       * An accessor for creating requests from the Intents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Intents.List request = dialogflow.intents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Intents intents() {
        return new Intents();
      }

      /**
       * The "intents" collection of methods.
       */
      public class Intents {

        /**
         * Deletes intents in the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: An [Empty message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
         * sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "intents.batchDelete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(parent, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents:batchDelete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Deletes intents in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           * Note: You should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.batchDelete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to delete all entities types for. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to delete all entities types for. Supported formats: -
         `projects//agent` - `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to delete all entities types for. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          public BatchDelete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Updates/Creates multiple intents in the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it
         * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "intents.batchUpdate".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the agent to update or create intents in. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Updates/Creates multiple intents in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note:
           * You should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.batchUpdate".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the agent to update or create intents in. Supported formats: -
         *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the agent to update or create intents in. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the agent to update or create intents in. Supported formats: -
         `projects//agent` - `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the agent to update or create intents in. Supported formats: -
           * `projects//agent` - `projects//locations//agent`
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Creates an intent in the specified agent. Note: You should always train an agent prior to sending
         * it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "intents.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create a intent for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an intent in the specified agent. Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create a intent for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create a intent for. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create a intent for. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create a intent for. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Create setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Create setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified intent and its direct or indirect followup intents. Note: You should always
         * train an agent prior to sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "intents.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
         *        we also delete them. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Deletes the specified intent and its direct or indirect followup intents. Note: You should
           * always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
         *        we also delete them. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the intent to delete. If this intent has direct or indirect
           * followup intents, we also delete them. Supported formats: - `projects//agent/intents/`
           * - `projects//locations//agent/intents/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
         we also delete them. Supported formats: - `projects//agent/intents/` -
         `projects//locations//agent/intents/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the intent to delete. If this intent has direct or indirect
           * followup intents, we also delete them. Supported formats: - `projects//agent/intents/`
           * - `projects//locations//agent/intents/`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified intent.
         *
         * Create a request for the method "intents.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Retrieves the specified intent.
           *
           * Create a request for the method "intents.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
           * `projects//locations//agent/intents/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
         `projects//locations//agent/intents/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
           * `projects//locations//agent/intents/`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Get setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Get setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all intents in the specified agent.
         *
         * Create a request for the method "intents.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
         *        `projects//locations//agent`. Alternatively, you can specify the environment to list
         *        intents for. Format: `projects//agent/environments/` or
         *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
         *        be returned for non-draft environment.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/intents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all intents in the specified agent.
           *
           * Create a request for the method "intents.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
         *        `projects//locations//agent`. Alternatively, you can specify the environment to list
         *        intents for. Format: `projects//agent/environments/` or
         *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
         *        be returned for non-draft environment.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all intents from. Format: `projects//agent` or
           * `projects//locations//agent`. Alternatively, you can specify the environment to list
           * intents for. Format: `projects//agent/environments/` or
           * `projects//locations//agent/environments/`. Note: training phrases of the intents will
           * not be returned for non-draft environment.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all intents from. Format: `projects//agent` or
         `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
         Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note:
         training phrases of the intents will not be returned for non-draft environment.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all intents from. Format: `projects//agent` or
           * `projects//locations//agent`. Alternatively, you can specify the environment to list
           * intents for. Format: `projects//agent/environments/` or
           * `projects//locations//agent/environments/`. Note: training phrases of the intents will
           * not be returned for non-draft environment.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public List setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public List setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified intent. Note: You should always train an agent prior to sending it queries.
         * See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "intents.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
         *        Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/intents/[^/]+$");

          /**
           * Updates the specified intent. Note: You should always train an agent prior to sending it
           * queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
         *        Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
         *        `projects//locations//agent/intents/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
           * Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
           * `projects//locations//agent/intents/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
         Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
         `projects//locations//agent/intents/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
           * Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
           * `projects//locations//agent/intents/`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/intents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The resource view to apply to the returned intent. */
          @com.google.api.client.util.Key
          private java.lang.String intentView;

          /** Optional. The resource view to apply to the returned intent.
           */
          public java.lang.String getIntentView() {
            return intentView;
          }

          /** Optional. The resource view to apply to the returned intent. */
          public Patch setIntentView(java.lang.String intentView) {
            this.intentView = intentView;
            return this;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language used to access language-specific data. If not specified, the agent's default
         language is used. For more information, see [Multilingual intent and entity
         data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language used to access language-specific data. If not specified, the
           * agent's default language is used. For more information, see [Multilingual intent and
           * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
           * entity).
           */
          public Patch setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          /** Optional. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Optional. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the KnowledgeBases collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.KnowledgeBases.List request = dialogflow.knowledgeBases().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public KnowledgeBases knowledgeBases() {
        return new KnowledgeBases();
      }

      /**
       * The "knowledgeBases" collection of methods.
       */
      public class KnowledgeBases {

        /**
         * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only
         * use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated;
           * only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

          /**
           * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//locations//knowledgeBases/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
         are also deleted.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

          /**
           * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to retrieve. Format
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//locations//knowledgeBases/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all knowledge bases of the specified agent. Note: The
         * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all knowledge bases of the specified agent. Note: The
           * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The filter expression used to filter knowledge bases returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * display_name with has(:) operator * language_code with equals(=) operator
           * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
           * 'display_name:articles' matches knowledge bases whose display name contains "articles".
           * * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
           * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all
           * knowledge bases whose display name contains "articles" and whose language code is "en-
           * gb". Note: An empty filter string (i.e. "") is a no-op and will result in no filtering.
           * For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The filter expression used to filter knowledge bases returned by the list method. The expression
         has the following syntax: [AND ] ... The following fields and operators are supported: *
         display_name with has(:) operator * language_code with equals(=) operator Examples: *
         'language_code=en-us' matches knowledge bases with en-us language code. * 'display_name:articles'
         matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"'
         matches knowledge bases whose display name contains "Best Articles". * 'language_code=en-gb AND
         display_name=articles' matches all knowledge bases whose display name contains "articles" and whose
         language code is "en-gb". Note: An empty filter string (i.e. "") is a no-op and will result in no
         filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The filter expression used to filter knowledge bases returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * display_name with has(:) operator * language_code with equals(=) operator
           * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
           * 'display_name:articles' matches knowledge bases whose display name contains "articles".
           * * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
           * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all
           * knowledge bases whose display name contains "articles" and whose language code is "en-
           * gb". Note: An empty filter string (i.e. "") is a no-op and will result in no filtering.
           * For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         *        `projects//locations//knowledgeBases/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

          /**
           * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The knowledge base resource name. The name must be empty when creating a knowledge
           * base. Format: `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The knowledge base resource name. The name must be empty when creating a knowledge
           * base. Format: `projects//locations//knowledgeBases/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
         InvalidArgument will be returned for attempting to update other fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Documents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Documents.List request = dialogflow.documents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Documents documents() {
          return new Documents();
        }

        /**
         * The "documents" collection of methods.
         */
        public class Documents {

          /**
           * Creates a new document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to create a document for. Format:
           *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

            /**
             * Creates a new document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to create a document for. Format:
           *        `projects//locations//knowledgeBases/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to create a document for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to create a document for. Format:
           `projects//locations//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to create a document for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Whether to import custom metadata from Google Cloud Storage. Only valid when the
             * document source is Google Cloud Storage URI.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean importGcsCustomMetadata;

            /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is
           Google Cloud Storage URI.
             */
            public java.lang.Boolean getImportGcsCustomMetadata() {
              return importGcsCustomMetadata;
            }

            /**
             * Whether to import custom metadata from Google Cloud Storage. Only valid when the
             * document source is Google Cloud Storage URI.
             */
            public Create setImportGcsCustomMetadata(java.lang.Boolean importGcsCustomMetadata) {
              this.importGcsCustomMetadata = importGcsCustomMetadata;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
           * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to delete. Format:
           *        `projects//locations//knowledgeBases//documents/`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Deletes the specified document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
             * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to delete. Format:
           *        `projects//locations//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to delete. Format:
             * `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to delete. Format:
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to delete. Format:
             * `projects//locations//knowledgeBases//documents/`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is
           * deprecated; only use `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to retrieve. Format
           *        `projects//locations//knowledgeBases//documents/`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource
             * is deprecated; only use `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to retrieve. Format
           *        `projects//locations//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to retrieve. Format
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//locations//knowledgeBases//documents/`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all documents of the knowledge base. Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to list all documents for. Format:
           *        `projects//locations//knowledgeBases/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+$");

            /**
             * Returns the list of all documents of the knowledge base. Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to list all documents for. Format:
           *        `projects//locations//knowledgeBases/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to list all documents for. Format:
           `projects//locations//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The filter expression used to filter documents returned by the list method. The
             * expression has the following syntax: [AND ] ... The following fields and operators
             * are supported: * knowledge_types with has(:) operator * display_name with has(:)
             * operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches
             * documents with FAQ knowledge type. * "display_name:customer" matches documents whose
             * display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE
             * state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For
             * more information about filtering, see [API Filtering](https://aip.dev/160).
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The filter expression used to filter documents returned by the list method. The expression has the
           following syntax: [AND ] ... The following fields and operators are supported: * knowledge_types
           with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples:
           * "knowledge_types:FAQ" matches documents with FAQ knowledge type. * "display_name:customer"
           matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with
           ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more
           information about filtering, see [API Filtering](https://aip.dev/160).
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * The filter expression used to filter documents returned by the list method. The
             * expression has the following syntax: [AND ] ... The following fields and operators
             * are supported: * knowledge_types with has(:) operator * display_name with has(:)
             * operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches
             * documents with FAQ knowledge type. * "display_name:customer" matches documents whose
             * display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE
             * state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For
             * more information about filtering, see [API Filtering](https://aip.dev/160).
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The maximum number of items to return in a single page. By default 10 and at most
             * 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return in a single page. By default 10 and at most 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of items to return in a single page. By default 10 and at most
             * 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
           *        `projects//locations//knowledgeBases//documents/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Updates the specified document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
           *        `projects//locations//knowledgeBases//documents/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Optional. The document resource name. The name must be empty when creating a
             * document. Format: `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Optional. The document resource name. The name must be empty when creating a document. Format:
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Optional. The document resource name. The name must be empty when creating a
             * document. Format: `projects//locations//knowledgeBases//documents/`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Not specified means `update all`. Currently, only `display_name` can be
             * updated, an InvalidArgument will be returned for attempting to update other fields.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
           InvalidArgument will be returned for attempting to update other fields.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. Not specified means `update all`. Currently, only `display_name` can be
             * updated, an InvalidArgument will be returned for attempting to update other fields.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Reloads the specified document from its specified source, content_uri or content. The previously
           * loaded content of the document will be deleted. Note: Even when the content of the document has
           * not changed, there still may be side effects because of internal implementation changes. Note: If
           * the document source is Google Cloud Storage URI, its metadata will be replaced with the custom
           * metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in
           * the request. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.reload".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Reload#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to reload. Format:
           *        `projects//locations//knowledgeBases//documents/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
           * @return the request
           */
          public Reload reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) throws java.io.IOException {
            Reload result = new Reload(name, content);
            initialize(result);
            return result;
          }

          public class Reload extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}:reload";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Reloads the specified document from its specified source, content_uri or content. The
             * previously loaded content of the document will be deleted. Note: Even when the content of the
             * document has not changed, there still may be side effects because of internal implementation
             * changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
             * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata`
             * field is set to true in the request. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.reload".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Reload#execute()} method to invoke the remote operation.
             * <p> {@link
             * Reload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to reload. Format:
           *        `projects//locations//knowledgeBases//documents/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
             * @since 1.13
             */
            protected Reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Reload set$Xgafv(java.lang.String $Xgafv) {
              return (Reload) super.set$Xgafv($Xgafv);
            }

            @Override
            public Reload setAccessToken(java.lang.String accessToken) {
              return (Reload) super.setAccessToken(accessToken);
            }

            @Override
            public Reload setAlt(java.lang.String alt) {
              return (Reload) super.setAlt(alt);
            }

            @Override
            public Reload setCallback(java.lang.String callback) {
              return (Reload) super.setCallback(callback);
            }

            @Override
            public Reload setFields(java.lang.String fields) {
              return (Reload) super.setFields(fields);
            }

            @Override
            public Reload setKey(java.lang.String key) {
              return (Reload) super.setKey(key);
            }

            @Override
            public Reload setOauthToken(java.lang.String oauthToken) {
              return (Reload) super.setOauthToken(oauthToken);
            }

            @Override
            public Reload setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Reload) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Reload setQuotaUser(java.lang.String quotaUser) {
              return (Reload) super.setQuotaUser(quotaUser);
            }

            @Override
            public Reload setUploadType(java.lang.String uploadType) {
              return (Reload) super.setUploadType(uploadType);
            }

            @Override
            public Reload setUploadProtocol(java.lang.String uploadProtocol) {
              return (Reload) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to reload. Format:
             * `projects//locations//knowledgeBases//documents/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to reload. Format:
           `projects//locations//knowledgeBases//documents/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to reload. Format:
             * `projects//locations//knowledgeBases//documents/`
             */
            public Reload setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Reload set(String parameterName, Object value) {
              return (Reload) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Sessions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sessions sessions() {
        return new Sessions();
      }

      /**
       * The "sessions" collection of methods.
       */
      public class Sessions {

        /**
         * Deletes all active contexts in the specified session.
         *
         * Create a request for the method "sessions.deleteContexts".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
         *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         *        `projects//agent/environments//users//sessions/`, -
         *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
         *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
         *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
         * @return the request
         */
        public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
          DeleteContexts result = new DeleteContexts(parent);
          initialize(result);
          return result;
        }

        public class DeleteContexts extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+parent}/contexts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

          /**
           * Deletes all active contexts in the specified session.
           *
           * Create a request for the method "sessions.deleteContexts".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
           * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
         *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         *        `projects//agent/environments//users//sessions/`, -
         *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
         *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
         *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @since 1.13
           */
          protected DeleteContexts(java.lang.String parent) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
          }

          @Override
          public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteContexts) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteContexts setAccessToken(java.lang.String accessToken) {
            return (DeleteContexts) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteContexts setAlt(java.lang.String alt) {
            return (DeleteContexts) super.setAlt(alt);
          }

          @Override
          public DeleteContexts setCallback(java.lang.String callback) {
            return (DeleteContexts) super.setCallback(callback);
          }

          @Override
          public DeleteContexts setFields(java.lang.String fields) {
            return (DeleteContexts) super.setFields(fields);
          }

          @Override
          public DeleteContexts setKey(java.lang.String key) {
            return (DeleteContexts) super.setKey(key);
          }

          @Override
          public DeleteContexts setOauthToken(java.lang.String oauthToken) {
            return (DeleteContexts) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteContexts) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
            return (DeleteContexts) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteContexts setUploadType(java.lang.String uploadType) {
            return (DeleteContexts) super.setUploadType(uploadType);
          }

          @Override
          public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the session to delete all contexts from. Supported formats: -
           * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           * `projects//agent/environments//users//sessions/`, -
           * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           * specified we assume default 'us' location. If `Environment ID` is not specified we
           * assume default 'draft' environment. If `User ID` is not specified, we assume default
           * '-' user.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the session to delete all contexts from. Supported formats: -
         `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         `projects//agent/environments//users//sessions/`, -
         `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
         assume default 'us' location. If `Environment ID` is not specified we assume default 'draft'
         environment. If `User ID` is not specified, we assume default '-' user.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the session to delete all contexts from. Supported formats: -
           * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           * `projects//agent/environments//users//sessions/`, -
           * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           * specified we assume default 'us' location. If `Environment ID` is not specified we
           * assume default 'draft' environment. If `User ID` is not specified, we assume default
           * '-' user.
           */
          public DeleteContexts setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public DeleteContexts set(String parameterName, Object value) {
            return (DeleteContexts) super.set(parameterName, value);
          }
        }
        /**
         * Processes a natural language query and returns structured, actionable data as a result. This
         * method is not idempotent, because it may cause contexts and session entity types to be updated,
         * which in turn might affect results of future queries. If you might use [Agent
         * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
         * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
         * functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
         * production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
         * /agents-versions).
         *
         * Create a request for the method "sessions.detectIntent".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
         *
         * @param session Required. The name of the session this query is sent to. Supported formats: -
         *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         *        `projects//agent/environments//users//sessions/`, -
         *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
         *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
         *        default 'draft' environment (`Environment ID` might be referred to as environment name at
         *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
         *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
         *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
         *        and `User ID` must not exceed 36 characters. For more information, see the [API
         *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
         *        use agent versions for production traffic. See [Versions and
         *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
         * @return the request
         */
        public DetectIntent detectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
          DetectIntent result = new DetectIntent(session, content);
          initialize(result);
          return result;
        }

        public class DetectIntent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

          private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

          private final java.util.regex.Pattern SESSION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

          /**
           * Processes a natural language query and returns structured, actionable data as a result. This
           * method is not idempotent, because it may cause contexts and session entity types to be updated,
           * which in turn might affect results of future queries. If you might use [Agent
           * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
           * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
           * additional functionality for Agent Assist and other CCAI products. Note: Always use agent
           * versions for production traffic. See [Versions and
           * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           *
           * Create a request for the method "sessions.detectIntent".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
           * operation. <p> {@link
           * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param session Required. The name of the session this query is sent to. Supported formats: -
         *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         *        `projects//agent/environments//users//sessions/`, -
         *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
         *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
         *        default 'draft' environment (`Environment ID` might be referred to as environment name at
         *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
         *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
         *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
         *        and `User ID` must not exceed 36 characters. For more information, see the [API
         *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
         *        use agent versions for production traffic. See [Versions and
         *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
           * @since 1.13
           */
          protected DetectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
            this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                  "Parameter session must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
          }

          @Override
          public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
            return (DetectIntent) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetectIntent setAccessToken(java.lang.String accessToken) {
            return (DetectIntent) super.setAccessToken(accessToken);
          }

          @Override
          public DetectIntent setAlt(java.lang.String alt) {
            return (DetectIntent) super.setAlt(alt);
          }

          @Override
          public DetectIntent setCallback(java.lang.String callback) {
            return (DetectIntent) super.setCallback(callback);
          }

          @Override
          public DetectIntent setFields(java.lang.String fields) {
            return (DetectIntent) super.setFields(fields);
          }

          @Override
          public DetectIntent setKey(java.lang.String key) {
            return (DetectIntent) super.setKey(key);
          }

          @Override
          public DetectIntent setOauthToken(java.lang.String oauthToken) {
            return (DetectIntent) super.setOauthToken(oauthToken);
          }

          @Override
          public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetectIntent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetectIntent setQuotaUser(java.lang.String quotaUser) {
            return (DetectIntent) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetectIntent setUploadType(java.lang.String uploadType) {
            return (DetectIntent) super.setUploadType(uploadType);
          }

          @Override
          public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetectIntent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the session this query is sent to. Supported formats: -
           * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           * `projects//agent/environments//users//sessions/`, -
           * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           * specified we assume default 'us' location. If `Environment ID` is not specified, we
           * assume default 'draft' environment (`Environment ID` might be referred to as
           * environment name at some places). If `User ID` is not specified, we are using "-". It's
           * up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a
           * random number or some type of user and session identifiers (preferably hashed). The
           * length of the `Session ID` and `User ID` must not exceed 36 characters. For more
           * information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
           * /api-overview). Note: Always use agent versions for production traffic. See [Versions
           * and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           */
          @com.google.api.client.util.Key
          private java.lang.String session;

          /** Required. The name of the session this query is sent to. Supported formats: -
         `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
         `projects//agent/environments//users//sessions/`, -
         `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
         assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
         environment (`Environment ID` might be referred to as environment name at some places). If `User
         ID` is not specified, we are using "-". It's up to the API caller to choose an appropriate `Session
         ID` and `User Id`. They can be a random number or some type of user and session identifiers
         (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
         For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
         /api-overview). Note: Always use agent versions for production traffic. See [Versions and
         environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           */
          public java.lang.String getSession() {
            return session;
          }

          /**
           * Required. The name of the session this query is sent to. Supported formats: -
           * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           * `projects//agent/environments//users//sessions/`, -
           * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           * specified we assume default 'us' location. If `Environment ID` is not specified, we
           * assume default 'draft' environment (`Environment ID` might be referred to as
           * environment name at some places). If `User ID` is not specified, we are using "-". It's
           * up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a
           * random number or some type of user and session identifiers (preferably hashed). The
           * length of the `Session ID` and `User ID` must not exceed 36 characters. For more
           * information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
           * /api-overview). Note: Always use agent versions for production traffic. See [Versions
           * and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           */
          public DetectIntent setSession(java.lang.String session) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                  "Parameter session must conform to the pattern " +
                  "^projects/[^/]+/agent/sessions/[^/]+$");
            }
            this.session = session;
            return this;
          }

          @Override
          public DetectIntent set(String parameterName, Object value) {
            return (DetectIntent) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Contexts collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Contexts contexts() {
          return new Contexts();
        }

        /**
         * The "contexts" collection of methods.
         */
        public class Contexts {

          /**
           * Creates a context. If the specified context already exists, overrides the context.
           *
           * Create a request for the method "contexts.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
           *        `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Creates a context. If the specified context already exists, overrides the context.
             *
             * Create a request for the method "contexts.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
           *        `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to create a context for. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
           `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
           environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to create a context for. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified context.
           *
           * Create a request for the method "contexts.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the context to delete. Supported formats: -
           *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
           *        - `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
           *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Deletes the specified context.
             *
             * Create a request for the method "contexts.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the context to delete. Supported formats: -
           *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
           *        - `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
           *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the context to delete. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
             * ID` is not specified we assume default 'us' location. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the context to delete. Supported formats: -
           `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
           `projects//agent/environments//users//sessions//contexts/`, -
           `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
           specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
           'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the context to delete. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
             * ID` is not specified we assume default 'us' location. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified context.
           *
           * Create a request for the method "contexts.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
           *        `projects//locations//agent/sessions//contexts/`, -
           *        `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
           *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Retrieves the specified context.
             *
             * Create a request for the method "contexts.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
           *        `projects//locations//agent/sessions//contexts/`, -
           *        `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
           *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the context. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
             * ID` is not specified we assume default 'us' location. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
           `projects//locations//agent/sessions//contexts/`, -
           `projects//agent/environments//users//sessions//contexts/`, -
           `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
           specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
           'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the context. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
             * ID` is not specified we assume default 'us' location. If `Environment ID` is not
             * specified, we assume default 'draft' environment. If `User ID` is not specified, we
             * assume default '-' user.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all contexts in the specified session.
           *
           * Create a request for the method "contexts.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
           *        `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Returns the list of all contexts in the specified session.
             *
             * Create a request for the method "contexts.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
           *        `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to list all contexts from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
           `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
           environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to list all contexts from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified context.
           *
           * Create a request for the method "contexts.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. The unique identifier of the context. Supported formats: -
           *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
           *        - `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
           *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
           *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
           *        environment. If `User ID` is not specified, we assume default '-' user. The following
           *        context names are reserved for internal use by Dialogflow. You should not use these
           *        contexts or create contexts with these names: * `__system_counters__` *
           *        `*_id_dialog_context` * `*_dialog_params_size`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

            /**
             * Updates the specified context.
             *
             * Create a request for the method "contexts.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The unique identifier of the context. Supported formats: -
           *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
           *        - `projects//agent/environments//users//sessions//contexts/`, -
           *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
           *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
           *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
           *        environment. If `User ID` is not specified, we assume default '-' user. The following
           *        context names are reserved for internal use by Dialogflow. You should not use these
           *        contexts or create contexts with these names: * `__system_counters__` *
           *        `*_id_dialog_context` * `*_dialog_params_size`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The unique identifier of the context. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, The `Context
             * ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and
             * may be at most 250 bytes long. If `Environment ID` is not specified, we assume
             * default 'draft' environment. If `User ID` is not specified, we assume default '-'
             * user. The following context names are reserved for internal use by Dialogflow. You
             * should not use these contexts or create contexts with these names: *
             * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The unique identifier of the context. Supported formats: -
           `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
           `projects//agent/environments//users//sessions//contexts/`, -
           `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always
           converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes
           long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
           not specified, we assume default '-' user. The following context names are reserved for internal
           use by Dialogflow. You should not use these contexts or create contexts with these names: *
           `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The unique identifier of the context. Supported formats: -
             * `projects//agent/sessions//contexts/`, -
             * `projects//locations//agent/sessions//contexts/`, -
             * `projects//agent/environments//users//sessions//contexts/`, -
             * `projects//locations//agent/environments//users//sessions//contexts/`, The `Context
             * ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and
             * may be at most 250 bytes long. If `Environment ID` is not specified, we assume
             * default 'draft' environment. If `User ID` is not specified, we assume default '-'
             * user. The following context names are reserved for internal use by Dialogflow. You
             * should not use these contexts or create contexts with these names: *
             * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the EntityTypes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public EntityTypes entityTypes() {
          return new EntityTypes();
        }

        /**
         * The "entityTypes" collection of methods.
         */
        public class EntityTypes {

          /**
           * Creates a session entity type. If the specified session entity type already exists, overrides the
           * session entity type. This method doesn't work with Google Assistant integration. Contact
           * Dialogflow support if you need to use session entities with Google Assistant integration.
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to create a session entity type for. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides
             * the session entity type. This method doesn't work with Google Assistant integration. Contact
             * Dialogflow support if you need to use session entities with Google Assistant integration.
             *
             * Create a request for the method "entityTypes.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to create a session entity type for. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to create a session entity type for. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to create a session entity type for. Supported formats: -
           `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
           environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to create a session entity type for. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified session entity type. This method doesn't work with Google Assistant
           * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
           * integration.
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entity type to delete. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             *
             * Create a request for the method "entityTypes.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entity type to delete. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to delete. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entity type to delete. Supported formats: -
           `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
           `projects//agent/environments//users//sessions//entityTypes/` -
           `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
           specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
           'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entity type to delete. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified session entity type. This method doesn't work with Google Assistant
           * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
           * integration.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the session entity type. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             *
             * Create a request for the method "entityTypes.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the session entity type. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the session entity type. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the session entity type. Supported formats: -
           `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
           `projects//agent/environments//users//sessions//entityTypes/` -
           `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
           specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
           'draft' environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the session entity type. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all session entity types in the specified session. This method doesn't work
           * with Google Assistant integration. Contact Dialogflow support if you need to use session entities
           * with Google Assistant integration.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The session to list all session entity types from. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+$");

            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work
             * with Google Assistant integration. Contact Dialogflow support if you need to use session
             * entities with Google Assistant integration.
             *
             * Create a request for the method "entityTypes.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The session to list all session entity types from. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The session to list all session entity types from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The session to list all session entity types from. Supported formats: -
           `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
           environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The session to list all session entity types from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified session entity type. This method doesn't work with Google Assistant
           * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
           * integration.
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. The unique identifier of this session entity type. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user. `` must be the display name of an existing entity type in the same agent that will
           *        be overridden or supplemented.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google
             * Assistant integration.
             *
             * Create a request for the method "entityTypes.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The unique identifier of this session entity type. Supported formats: -
           *        `projects//agent/sessions//entityTypes/` -
           *        `projects//locations//agent/sessions//entityTypes/` -
           *        `projects//agent/environments//users//sessions//entityTypes/` -
           *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
           *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
           *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
           *        user. `` must be the display name of an existing entity type in the same agent that will
           *        be overridden or supplemented.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The unique identifier of this session entity type. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user. `` must be the display name of an existing
             * entity type in the same agent that will be overridden or supplemented.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The unique identifier of this session entity type. Supported formats: -
           `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
           `projects//agent/environments//users//sessions//entityTypes/` -
           `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
           specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
           'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the
           display name of an existing entity type in the same agent that will be overridden or supplemented.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The unique identifier of this session entity type. Supported formats: -
             * `projects//agent/sessions//entityTypes/` -
             * `projects//locations//agent/sessions//entityTypes/` -
             * `projects//agent/environments//users//sessions//entityTypes/` -
             * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
             * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
             * is not specified, we assume default 'draft' environment. If `User ID` is not
             * specified, we assume default '-' user. `` must be the display name of an existing
             * entity type in the same agent that will be overridden or supplemented.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Versions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Versions.List request = dialogflow.versions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Versions versions() {
        return new Versions();
      }

      /**
       * The "versions" collection of methods.
       */
      public class Versions {

        /**
         * Creates an agent version. The new version points to the agent instance in the "default"
         * environment.
         *
         * Create a request for the method "versions.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to create a version for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

          private static final String REST_PATH = "v2beta1/{+parent}/versions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Creates an agent version. The new version points to the agent instance in the "default"
           * environment.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to create a version for. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to create a version for. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to create a version for. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to create a version for. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete the specified agent version.
         *
         * Create a request for the method "versions.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
         *        `projects//locations//agent/versions/`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/versions/[^/]+$");

          /**
           * Delete the specified agent version.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
         *        `projects//locations//agent/versions/`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the version to delete. Supported formats: -
           * `projects//agent/versions/` - `projects//locations//agent/versions/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
         `projects//locations//agent/versions/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the version to delete. Supported formats: -
           * `projects//agent/versions/` - `projects//locations//agent/versions/`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified agent version.
         *
         * Create a request for the method "versions.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the version. Supported formats: - `projects//agent/versions/` -
         *        `projects//locations//agent/versions/`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/versions/[^/]+$");

          /**
           * Retrieves the specified agent version.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the version. Supported formats: - `projects//agent/versions/` -
         *        `projects//locations//agent/versions/`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the version. Supported formats: - `projects//agent/versions/` -
           * `projects//locations//agent/versions/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the version. Supported formats: - `projects//agent/versions/` -
         `projects//locations//agent/versions/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the version. Supported formats: - `projects//agent/versions/` -
           * `projects//locations//agent/versions/`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all versions of the specified agent.
         *
         * Create a request for the method "versions.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The agent to list all versions from. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListVersionsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/versions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent$");

          /**
           * Returns the list of all versions of the specified agent.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The agent to list all versions from. Supported formats: - `projects//agent` -
         *        `projects//locations//agent`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListVersionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The agent to list all versions from. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The agent to list all versions from. Supported formats: - `projects//agent` -
         `projects//locations//agent`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The agent to list all versions from. Supported formats: - `projects//agent` -
           * `projects//locations//agent`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/agent$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified agent version. Note that this method does not allow you to update the state
         * of the agent the given version points to. It allows you to update only mutable properties of the
         * version resource.
         *
         * Create a request for the method "versions.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The unique identifier of this agent version. Supported formats: -
         *        `projects//agent/versions/` - `projects//locations//agent/versions/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/agent/versions/[^/]+$");

          /**
           * Updates the specified agent version. Note that this method does not allow you to update the
           * state of the agent the given version points to. It allows you to update only mutable properties
           * of the version resource.
           *
           * Create a request for the method "versions.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The unique identifier of this agent version. Supported formats: -
         *        `projects//agent/versions/` - `projects//locations//agent/versions/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The unique identifier of this agent version. Supported formats: -
           * `projects//agent/versions/` - `projects//locations//agent/versions/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The unique identifier of this agent version. Supported formats: -
         `projects//agent/versions/` - `projects//locations//agent/versions/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The unique identifier of this agent version. Supported formats: -
           * `projects//agent/versions/` - `projects//locations//agent/versions/`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/agent/versions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the AnswerRecords collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.AnswerRecords.List request = dialogflow.answerRecords().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AnswerRecords answerRecords() {
      return new AnswerRecords();
    }

    /**
     * The "answerRecords" collection of methods.
     */
    public class AnswerRecords {

      /**
       * Deprecated. Retrieves a specific answer record.
       *
       * Create a request for the method "answerRecords.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/answerRecords/[^/]+$");

        /**
         * Deprecated. Retrieves a specific answer record.
         *
         * Create a request for the method "answerRecords.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/answerRecords/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the answer record to retrieve. Format:
         * `projects//locations//answerRecords/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the answer record to retrieve. Format:
         * `projects//locations//answerRecords/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/answerRecords/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all answer records in the specified project in reverse chronological order.
       *
       * Create a request for the method "answerRecords.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all answer records for in reverse chronological order. Format:
       *        `projects//locations/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/answerRecords";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all answer records in the specified project in reverse chronological order.
         *
         * Create a request for the method "answerRecords.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all answer records for in reverse chronological order. Format:
       *        `projects//locations/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all answer records for in reverse chronological order.
         * Format: `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all answer records for in reverse chronological order. Format:
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all answer records for in reverse chronological order.
         * Format: `projects//locations/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Filters to restrict results to specific answer records. For more information
         * about filtering, see [API Filtering](https://aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. Filters to restrict results to specific answer records. For more information about
       filtering, see [API Filtering](https://aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. Filters to restrict results to specific answer records. For more information
         * about filtering, see [API Filtering](https://aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. The maximum number of records to return in a single page. The server may return
         * fewer records than this. If unspecified, we use 10. The maximum is 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of records to return in a single page. The server may return fewer
       records than this. If unspecified, we use 10. The maximum is 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of records to return in a single page. The server may return
         * fewer records than this. If unspecified, we use 10. The maximum is 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous
         * list request used to continue listing on the next page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request
       used to continue listing on the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous
         * list request used to continue listing on the next page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified answer record.
       *
       * Create a request for the method "answerRecords.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
       *        Format: `projects//locations//answerRecords/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/answerRecords/[^/]+$");

        /**
         * Updates the specified answer record.
         *
         * Create a request for the method "answerRecords.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
       *        Format: `projects//locations//answerRecords/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/answerRecords/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique identifier of this answer record. Required for
         * AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
       Format: `projects//locations//answerRecords/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The unique identifier of this answer record. Required for
         * AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/answerRecords/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. The mask to control which fields get updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The mask to control which fields get updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The mask to control which fields get updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ConversationProfiles collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.ConversationProfiles.List request = dialogflow.conversationProfiles().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ConversationProfiles conversationProfiles() {
      return new ConversationProfiles();
    }

    /**
     * The "conversationProfiles" collection of methods.
     */
    public class ConversationProfiles {

      /**
       * Clears a suggestion feature from a conversation profile for the given participant role. This
       * method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-
       * running-operations). The returned `Operation` type has the following method-specific fields: -
       * `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
       *
       * Create a request for the method "conversationProfiles.clearSuggestionFeatureConfig".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link ClearSuggestionFeatureConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
       *        `projects//locations//conversationProfiles/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest}
       * @return the request
       */
      public ClearSuggestionFeatureConfig clearSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest content) throws java.io.IOException {
        ClearSuggestionFeatureConfig result = new ClearSuggestionFeatureConfig(conversationProfile, content);
        initialize(result);
        return result;
      }

      public class ClearSuggestionFeatureConfig extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+conversationProfile}:clearSuggestionFeatureConfig";

        private final java.util.regex.Pattern CONVERSATION_PROFILE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Clears a suggestion feature from a conversation profile for the given participant role. This
         * method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-
         * running-operations). The returned `Operation` type has the following method-specific fields: -
         * `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
         *
         * Create a request for the method "conversationProfiles.clearSuggestionFeatureConfig".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link ClearSuggestionFeatureConfig#execute()} method to invoke
         * the remote operation. <p> {@link ClearSuggestionFeatureConfig#initialize(com.google.api.client.
         * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
       *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest}
         * @since 1.13
         */
        protected ClearSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.conversationProfile = com.google.api.client.util.Preconditions.checkNotNull(conversationProfile, "Required parameter conversationProfile must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                "Parameter conversationProfile must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public ClearSuggestionFeatureConfig set$Xgafv(java.lang.String $Xgafv) {
          return (ClearSuggestionFeatureConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public ClearSuggestionFeatureConfig setAccessToken(java.lang.String accessToken) {
          return (ClearSuggestionFeatureConfig) super.setAccessToken(accessToken);
        }

        @Override
        public ClearSuggestionFeatureConfig setAlt(java.lang.String alt) {
          return (ClearSuggestionFeatureConfig) super.setAlt(alt);
        }

        @Override
        public ClearSuggestionFeatureConfig setCallback(java.lang.String callback) {
          return (ClearSuggestionFeatureConfig) super.setCallback(callback);
        }

        @Override
        public ClearSuggestionFeatureConfig setFields(java.lang.String fields) {
          return (ClearSuggestionFeatureConfig) super.setFields(fields);
        }

        @Override
        public ClearSuggestionFeatureConfig setKey(java.lang.String key) {
          return (ClearSuggestionFeatureConfig) super.setKey(key);
        }

        @Override
        public ClearSuggestionFeatureConfig setOauthToken(java.lang.String oauthToken) {
          return (ClearSuggestionFeatureConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public ClearSuggestionFeatureConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ClearSuggestionFeatureConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ClearSuggestionFeatureConfig setQuotaUser(java.lang.String quotaUser) {
          return (ClearSuggestionFeatureConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public ClearSuggestionFeatureConfig setUploadType(java.lang.String uploadType) {
          return (ClearSuggestionFeatureConfig) super.setUploadType(uploadType);
        }

        @Override
        public ClearSuggestionFeatureConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (ClearSuggestionFeatureConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Conversation Profile to add or update the suggestion feature config.
         * Format: `projects//locations//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String conversationProfile;

        /** Required. The Conversation Profile to add or update the suggestion feature config. Format:
       `projects//locations//conversationProfiles/`.
         */
        public java.lang.String getConversationProfile() {
          return conversationProfile;
        }

        /**
         * Required. The Conversation Profile to add or update the suggestion feature config.
         * Format: `projects//locations//conversationProfiles/`.
         */
        public ClearSuggestionFeatureConfig setConversationProfile(java.lang.String conversationProfile) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                "Parameter conversationProfile must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.conversationProfile = conversationProfile;
          return this;
        }

        @Override
        public ClearSuggestionFeatureConfig set(String parameterName, Object value) {
          return (ClearSuggestionFeatureConfig) super.set(parameterName, value);
        }
      }
      /**
       * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and
       * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
       * GetConversationProfile API.
       *
       * Create a request for the method "conversationProfiles.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to create a conversation profile for. Format: `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and
         * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
         * GetConversationProfile API.
         *
         * Create a request for the method "conversationProfiles.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to create a conversation profile for. Format: `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to create a conversation profile for. Format:
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to create a conversation profile for. Format: `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to create a conversation profile for. Format:
         * `projects//locations/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified conversation profile.
       *
       * Create a request for the method "conversationProfiles.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the conversation profile to delete. Format:
       *        `projects//locations//conversationProfiles/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Deletes the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the conversation profile to delete. Format:
       *        `projects//locations//conversationProfiles/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the conversation profile to delete. Format:
         * `projects//locations//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the conversation profile to delete. Format:
       `projects//locations//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the conversation profile to delete. Format:
         * `projects//locations//conversationProfiles/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified conversation profile.
       *
       * Create a request for the method "conversationProfiles.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the conversation profile. Format:
       *        `projects//locations//conversationProfiles/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Retrieves the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the conversation profile. Format:
       *        `projects//locations//conversationProfiles/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the conversation profile. Format:
         * `projects//locations//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the conversation profile. Format:
       `projects//locations//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the conversation profile. Format:
         * `projects//locations//conversationProfiles/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all conversation profiles in the specified project.
       *
       * Create a request for the method "conversationProfiles.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list all conversation profiles from. Format: `projects//locations/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all conversation profiles in the specified project.
         *
         * Create a request for the method "conversationProfiles.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list all conversation profiles from. Format: `projects//locations/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list all conversation profiles from. Format:
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list all conversation profiles from. Format: `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list all conversation profiles from. Format:
         * `projects//locations/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified conversation profile. ConversationProfile.CreateTime and
       * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
       * GetConversationProfile API.
       *
       * Create a request for the method "conversationProfiles.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The unique identifier of this conversation profile. Format:
       *        `projects//locations//conversationProfiles/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Updates the specified conversation profile. ConversationProfile.CreateTime and
         * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
         * GetConversationProfile API.
         *
         * Create a request for the method "conversationProfiles.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique identifier of this conversation profile. Format:
       *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique identifier of this conversation profile. Format:
         * `projects//locations//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique identifier of this conversation profile. Format:
       `projects//locations//conversationProfiles/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The unique identifier of this conversation profile. Format:
         * `projects//locations//conversationProfiles/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. The mask to control which fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The mask to control which fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The mask to control which fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Adds or updates a suggestion feature in a conversation profile. If the conversation profile
       * contains the type of suggestion feature for the participant role, it will update it. Otherwise it
       * will insert the suggestion feature. This method is a [long-running
       * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
       * `Operation` type has the following method-specific fields: - `metadata`:
       * SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
       * operation to add or update suggestion feature config for the same conversation profile,
       * participant role and suggestion feature type exists, please cancel the existing long running
       * operation before sending such request, otherwise the request will be rejected.
       *
       * Create a request for the method "conversationProfiles.setSuggestionFeatureConfig".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link SetSuggestionFeatureConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
       *        `projects//locations//conversationProfiles/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest}
       * @return the request
       */
      public SetSuggestionFeatureConfig setSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest content) throws java.io.IOException {
        SetSuggestionFeatureConfig result = new SetSuggestionFeatureConfig(conversationProfile, content);
        initialize(result);
        return result;
      }

      public class SetSuggestionFeatureConfig extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+conversationProfile}:setSuggestionFeatureConfig";

        private final java.util.regex.Pattern CONVERSATION_PROFILE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversationProfiles/[^/]+$");

        /**
         * Adds or updates a suggestion feature in a conversation profile. If the conversation profile
         * contains the type of suggestion feature for the participant role, it will update it. Otherwise
         * it will insert the suggestion feature. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
         * returned `Operation` type has the following method-specific fields: - `metadata`:
         * SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
         * operation to add or update suggestion feature config for the same conversation profile,
         * participant role and suggestion feature type exists, please cancel the existing long running
         * operation before sending such request, otherwise the request will be rejected.
         *
         * Create a request for the method "conversationProfiles.setSuggestionFeatureConfig".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link SetSuggestionFeatureConfig#execute()} method to invoke the
         * remote operation. <p> {@link SetSuggestionFeatureConfig#initialize(com.google.api.client.google
         * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
       *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest}
         * @since 1.13
         */
        protected SetSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.conversationProfile = com.google.api.client.util.Preconditions.checkNotNull(conversationProfile, "Required parameter conversationProfile must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                "Parameter conversationProfile must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
        }

        @Override
        public SetSuggestionFeatureConfig set$Xgafv(java.lang.String $Xgafv) {
          return (SetSuggestionFeatureConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetSuggestionFeatureConfig setAccessToken(java.lang.String accessToken) {
          return (SetSuggestionFeatureConfig) super.setAccessToken(accessToken);
        }

        @Override
        public SetSuggestionFeatureConfig setAlt(java.lang.String alt) {
          return (SetSuggestionFeatureConfig) super.setAlt(alt);
        }

        @Override
        public SetSuggestionFeatureConfig setCallback(java.lang.String callback) {
          return (SetSuggestionFeatureConfig) super.setCallback(callback);
        }

        @Override
        public SetSuggestionFeatureConfig setFields(java.lang.String fields) {
          return (SetSuggestionFeatureConfig) super.setFields(fields);
        }

        @Override
        public SetSuggestionFeatureConfig setKey(java.lang.String key) {
          return (SetSuggestionFeatureConfig) super.setKey(key);
        }

        @Override
        public SetSuggestionFeatureConfig setOauthToken(java.lang.String oauthToken) {
          return (SetSuggestionFeatureConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public SetSuggestionFeatureConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetSuggestionFeatureConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetSuggestionFeatureConfig setQuotaUser(java.lang.String quotaUser) {
          return (SetSuggestionFeatureConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetSuggestionFeatureConfig setUploadType(java.lang.String uploadType) {
          return (SetSuggestionFeatureConfig) super.setUploadType(uploadType);
        }

        @Override
        public SetSuggestionFeatureConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetSuggestionFeatureConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Conversation Profile to add or update the suggestion feature config.
         * Format: `projects//locations//conversationProfiles/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String conversationProfile;

        /** Required. The Conversation Profile to add or update the suggestion feature config. Format:
       `projects//locations//conversationProfiles/`.
         */
        public java.lang.String getConversationProfile() {
          return conversationProfile;
        }

        /**
         * Required. The Conversation Profile to add or update the suggestion feature config.
         * Format: `projects//locations//conversationProfiles/`.
         */
        public SetSuggestionFeatureConfig setConversationProfile(java.lang.String conversationProfile) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                "Parameter conversationProfile must conform to the pattern " +
                "^projects/[^/]+/conversationProfiles/[^/]+$");
          }
          this.conversationProfile = conversationProfile;
          return this;
        }

        @Override
        public SetSuggestionFeatureConfig set(String parameterName, Object value) {
          return (SetSuggestionFeatureConfig) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Conversations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Conversations.List request = dialogflow.conversations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Conversations conversations() {
      return new Conversations();
    }

    /**
     * The "conversations" collection of methods.
     */
    public class Conversations {

      /**
       * Completes the specified conversation. Finished conversations are purged from the database after
       * 30 days.
       *
       * Create a request for the method "conversations.complete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Complete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource identifier of the conversation to close. Format:
       *        `projects//locations//conversations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
       * @return the request
       */
      public Complete complete(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) throws java.io.IOException {
        Complete result = new Complete(name, content);
        initialize(result);
        return result;
      }

      public class Complete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+name}:complete";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

        /**
         * Completes the specified conversation. Finished conversations are purged from the database after
         * 30 days.
         *
         * Create a request for the method "conversations.complete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Complete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Complete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource identifier of the conversation to close. Format:
       *        `projects//locations//conversations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
         * @since 1.13
         */
        protected Complete(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
        }

        @Override
        public Complete set$Xgafv(java.lang.String $Xgafv) {
          return (Complete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Complete setAccessToken(java.lang.String accessToken) {
          return (Complete) super.setAccessToken(accessToken);
        }

        @Override
        public Complete setAlt(java.lang.String alt) {
          return (Complete) super.setAlt(alt);
        }

        @Override
        public Complete setCallback(java.lang.String callback) {
          return (Complete) super.setCallback(callback);
        }

        @Override
        public Complete setFields(java.lang.String fields) {
          return (Complete) super.setFields(fields);
        }

        @Override
        public Complete setKey(java.lang.String key) {
          return (Complete) super.setKey(key);
        }

        @Override
        public Complete setOauthToken(java.lang.String oauthToken) {
          return (Complete) super.setOauthToken(oauthToken);
        }

        @Override
        public Complete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Complete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Complete setQuotaUser(java.lang.String quotaUser) {
          return (Complete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Complete setUploadType(java.lang.String uploadType) {
          return (Complete) super.setUploadType(uploadType);
        }

        @Override
        public Complete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Complete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource identifier of the conversation to close. Format:
         * `projects//locations//conversations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource identifier of the conversation to close. Format:
       `projects//locations//conversations/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource identifier of the conversation to close. Format:
         * `projects//locations//conversations/`.
         */
        public Complete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Complete set(String parameterName, Object value) {
          return (Complete) super.set(parameterName, value);
        }
      }
      /**
       * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation
       * Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage.
       * For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For
       * Assist Stage, there's no dialogflow agent responding to user queries. But we will provide
       * suggestions which are generated from conversation. If Conversation.conversation_profile is
       * configured for a dialogflow agent, conversation will start from `Automated Agent Stage`,
       * otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent
       * with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
       *
       * Create a request for the method "conversations.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource identifier of the project creating the conversation. Format:
       *        `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation
         * Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage.
         * For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For
         * Assist Stage, there's no dialogflow agent responding to user queries. But we will provide
         * suggestions which are generated from conversation. If Conversation.conversation_profile is
         * configured for a dialogflow agent, conversation will start from `Automated Agent Stage`,
         * otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an
         * Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
         *
         * Create a request for the method "conversations.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource identifier of the project creating the conversation. Format:
       *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource identifier of the project creating the conversation. Format:
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource identifier of the project creating the conversation. Format:
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource identifier of the project creating the conversation. Format:
         * `projects//locations/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only
         * set it if you cannot wait for the response to return a auto-generated one to you. The
         * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the
         * characters length in range of [3,64]. If the field is provided, the caller is resposible
         * for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the
         * consistency for whether to use custom ID or not under a project to better ensure
         * uniqueness.
         */
        @com.google.api.client.util.Key
        private java.lang.String conversationId;

        /** Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if
       you cannot wait for the response to return a auto-generated one to you. The conversation ID must be
       compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If
       the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the
       request will be rejected. 2. the consistency for whether to use custom ID or not under a project to
       better ensure uniqueness.
         */
        public java.lang.String getConversationId() {
          return conversationId;
        }

        /**
         * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only
         * set it if you cannot wait for the response to return a auto-generated one to you. The
         * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the
         * characters length in range of [3,64]. If the field is provided, the caller is resposible
         * for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the
         * consistency for whether to use custom ID or not under a project to better ensure
         * uniqueness.
         */
        public Create setConversationId(java.lang.String conversationId) {
          this.conversationId = conversationId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specific conversation.
       *
       * Create a request for the method "conversations.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the conversation. Format: `projects//locations//conversations/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

        /**
         * Retrieves the specific conversation.
         *
         * Create a request for the method "conversations.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the conversation. Format: `projects//locations//conversations/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the conversation. Format: `projects//locations//conversations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the conversation. Format: `projects//locations//conversations/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the conversation. Format: `projects//locations//conversations/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/conversations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all conversations in the specified project.
       *
       * Create a request for the method "conversations.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project from which to list all conversation. Format: `projects//locations/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/conversations";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all conversations in the specified project.
         *
         * Create a request for the method "conversations.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project from which to list all conversation. Format: `projects//locations/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project from which to list all conversation. Format:
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project from which to list all conversation. Format: `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project from which to list all conversation. Format:
         * `projects//locations/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * A filter expression that filters conversations listed in the response. In general, the
         * expression must specify the field name, a comparison operator, and the value to use for
         * filtering: - The value must be a string, a number, or a boolean. - The comparison
         * operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions,
         * separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity,
         * expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in
         * this way. For example, the following expression only returns `COMPLETED` conversations:
         * `lifecycle_state = "COMPLETED"` For more information about filtering, see [API
         * Filtering](https://aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter expression that filters conversations listed in the response. In general, the expression
       must specify the field name, a comparison operator, and the value to use for filtering: - The value
       must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`,
       or `<`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting
       both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only
       `lifecycle_state` can be filtered on in this way. For example, the following expression only
       returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about
       filtering, see [API Filtering](https://aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter expression that filters conversations listed in the response. In general, the
         * expression must specify the field name, a comparison operator, and the value to use for
         * filtering: - The value must be a string, a number, or a boolean. - The comparison
         * operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions,
         * separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity,
         * expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in
         * this way. For example, the following expression only returns `COMPLETED` conversations:
         * `lifecycle_state = "COMPLETED"` For more information about filtering, see [API
         * Filtering](https://aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of items to return in a single page. By default 100 and at
         * most 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Messages collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Messages.List request = dialogflow.messages().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Messages messages() {
        return new Messages();
      }

      /**
       * The "messages" collection of methods.
       */
      public class Messages {

        /**
         * Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages
         * to conversation.
         *
         * Create a request for the method "messages.batchCreate".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource identifier of the conversation to create message. Format:
         *        `projects//locations//conversations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest}
         * @return the request
         */
        public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest content) throws java.io.IOException {
          BatchCreate result = new BatchCreate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchCreate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/messages:batchCreate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Batch ingests messages to conversation. Customers can use this RPC to ingest historical
           * messages to conversation.
           *
           * Create a request for the method "messages.batchCreate".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource identifier of the conversation to create message. Format:
         *        `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest}
           * @since 1.13
           */
          protected BatchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchCreate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchCreate setAccessToken(java.lang.String accessToken) {
            return (BatchCreate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchCreate setAlt(java.lang.String alt) {
            return (BatchCreate) super.setAlt(alt);
          }

          @Override
          public BatchCreate setCallback(java.lang.String callback) {
            return (BatchCreate) super.setCallback(callback);
          }

          @Override
          public BatchCreate setFields(java.lang.String fields) {
            return (BatchCreate) super.setFields(fields);
          }

          @Override
          public BatchCreate setKey(java.lang.String key) {
            return (BatchCreate) super.setKey(key);
          }

          @Override
          public BatchCreate setOauthToken(java.lang.String oauthToken) {
            return (BatchCreate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchCreate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchCreate setQuotaUser(java.lang.String quotaUser) {
            return (BatchCreate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchCreate setUploadType(java.lang.String uploadType) {
            return (BatchCreate) super.setUploadType(uploadType);
          }

          @Override
          public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchCreate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource identifier of the conversation to create message. Format:
           * `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource identifier of the conversation to create message. Format:
         `projects//locations//conversations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Resource identifier of the conversation to create message. Format:
           * `projects//locations//conversations/`.
           */
          public BatchCreate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchCreate set(String parameterName, Object value) {
            return (BatchCreate) super.set(parameterName, value);
          }
        }
        /**
         * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
         * descending order. To fetch updates without duplication, send request with filter
         * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
         * page_token.
         *
         * Create a request for the method "messages.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the conversation to list messages for. Format:
         *        `projects//locations//conversations/`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/messages";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
           * descending order. To fetch updates without duplication, send request with filter
           * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
           * page_token.
           *
           * Create a request for the method "messages.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the conversation to list messages for. Format:
         *        `projects//locations//conversations/`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the conversation to list messages for. Format:
           * `projects//locations//conversations/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the conversation to list messages for. Format:
         `projects//locations//conversations/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the conversation to list messages for. Format:
           * `projects//locations//conversations/`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Filter on message fields. Currently predicates on `create_time` and
           * `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds
           * accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time >
           * "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
           * Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Filter on message fields. Currently predicates on `create_time` and
         `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy.
         E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time >
         "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
         Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Filter on message fields. Currently predicates on `create_time` and
           * `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds
           * accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time >
           * "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
           * Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Participants collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Participants.List request = dialogflow.participants().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Participants participants() {
        return new Participants();
      }

      /**
       * The "participants" collection of methods.
       */
      public class Participants {

        /**
         * Adds a text (chat, for example), or audio (phone recording, for example) message from a
         * participant into the conversation. Note: Always use agent versions for production traffic sent to
         * virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
         * /agents-versions).
         *
         * Create a request for the method "participants.analyzeContent".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote operation.
         *
         * @param participant Required. The name of the participant this text comes from. Format:
         *        `projects//locations//conversations//participants/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
         * @return the request
         */
        public AnalyzeContent analyzeContent(java.lang.String participant, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) throws java.io.IOException {
          AnalyzeContent result = new AnalyzeContent(participant, content);
          initialize(result);
          return result;
        }

        public class AnalyzeContent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse> {

          private static final String REST_PATH = "v2beta1/{+participant}:analyzeContent";

          private final java.util.regex.Pattern PARTICIPANT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Adds a text (chat, for example), or audio (phone recording, for example) message from a
           * participant into the conversation. Note: Always use agent versions for production traffic sent
           * to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
           * /agents-versions).
           *
           * Create a request for the method "participants.analyzeContent".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote
           * operation. <p> {@link AnalyzeContent#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param participant Required. The name of the participant this text comes from. Format:
         *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
           * @since 1.13
           */
          protected AnalyzeContent(java.lang.String participant, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse.class);
            this.participant = com.google.api.client.util.Preconditions.checkNotNull(participant, "Required parameter participant must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public AnalyzeContent set$Xgafv(java.lang.String $Xgafv) {
            return (AnalyzeContent) super.set$Xgafv($Xgafv);
          }

          @Override
          public AnalyzeContent setAccessToken(java.lang.String accessToken) {
            return (AnalyzeContent) super.setAccessToken(accessToken);
          }

          @Override
          public AnalyzeContent setAlt(java.lang.String alt) {
            return (AnalyzeContent) super.setAlt(alt);
          }

          @Override
          public AnalyzeContent setCallback(java.lang.String callback) {
            return (AnalyzeContent) super.setCallback(callback);
          }

          @Override
          public AnalyzeContent setFields(java.lang.String fields) {
            return (AnalyzeContent) super.setFields(fields);
          }

          @Override
          public AnalyzeContent setKey(java.lang.String key) {
            return (AnalyzeContent) super.setKey(key);
          }

          @Override
          public AnalyzeContent setOauthToken(java.lang.String oauthToken) {
            return (AnalyzeContent) super.setOauthToken(oauthToken);
          }

          @Override
          public AnalyzeContent setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AnalyzeContent) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AnalyzeContent setQuotaUser(java.lang.String quotaUser) {
            return (AnalyzeContent) super.setQuotaUser(quotaUser);
          }

          @Override
          public AnalyzeContent setUploadType(java.lang.String uploadType) {
            return (AnalyzeContent) super.setUploadType(uploadType);
          }

          @Override
          public AnalyzeContent setUploadProtocol(java.lang.String uploadProtocol) {
            return (AnalyzeContent) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//locations//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String participant;

          /** Required. The name of the participant this text comes from. Format:
         `projects//locations//conversations//participants/`.
           */
          public java.lang.String getParticipant() {
            return participant;
          }

          /**
           * Required. The name of the participant this text comes from. Format:
           * `projects//locations//conversations//participants/`.
           */
          public AnalyzeContent setParticipant(java.lang.String participant) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                  "Parameter participant must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.participant = participant;
            return this;
          }

          @Override
          public AnalyzeContent set(String parameterName, Object value) {
            return (AnalyzeContent) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new participant in a conversation.
         *
         * Create a request for the method "participants.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource identifier of the conversation adding the participant. Format:
         *        `projects//locations//conversations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

          private static final String REST_PATH = "v2beta1/{+parent}/participants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Creates a new participant in a conversation.
           *
           * Create a request for the method "participants.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource identifier of the conversation adding the participant. Format:
         *        `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource identifier of the conversation adding the participant. Format:
           * `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource identifier of the conversation adding the participant. Format:
         `projects//locations//conversations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Resource identifier of the conversation adding the participant. Format:
           * `projects//locations//conversations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves a conversation participant.
         *
         * Create a request for the method "participants.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Retrieves a conversation participant.
           *
           * Create a request for the method "participants.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the participant. Format:
           * `projects//locations//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the participant. Format:
           * `projects//locations//conversations//participants/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all participants in the specified conversation.
         *
         * Create a request for the method "participants.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The conversation to list all participants from. Format:
         *        `projects//locations//conversations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/participants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Returns the list of all participants in the specified conversation.
           *
           * Create a request for the method "participants.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The conversation to list all participants from. Format:
         *        `projects//locations//conversations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The conversation to list all participants from. Format:
           * `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The conversation to list all participants from. Format:
         `projects//locations//conversations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The conversation to list all participants from. Format:
           * `projects//locations//conversations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified participant.
         *
         * Create a request for the method "participants.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Optional. The unique identifier of this participant. Format:
         *        `projects//locations//conversations//participants/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

          /**
           * Updates the specified participant.
           *
           * Create a request for the method "participants.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Optional. The unique identifier of this participant. Format:
         *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Optional. The unique identifier of this participant. Format:
           * `projects//locations//conversations//participants/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The unique identifier of this participant. Format:
         `projects//locations//conversations//participants/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The unique identifier of this participant. Format:
           * `projects//locations//conversations//participants/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The mask to specify which fields to update. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to specify which fields to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The mask to specify which fields to update. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Suggestions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Suggestions.List request = dialogflow.suggestions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Suggestions suggestions() {
          return new Suggestions();
        }

        /**
         * The "suggestions" collection of methods.
         */
        public class Suggestions {

          /**
           * Deprecated. use SuggestArticles and SuggestFaqAnswers instead. Gets suggestions for a participant
           * based on specific historical messages. Note that ListSuggestions will only list the auto-
           * generated suggestions, while CompileSuggestion will try to compile suggestion based on the
           * provided conversation context in the real time.
           *
           * Create a request for the method "suggestions.compile".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Compile#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionRequest}
           * @return the request
           */
          public Compile compile(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionRequest content) throws java.io.IOException {
            Compile result = new Compile(parent, content);
            initialize(result);
            return result;
          }

          public class Compile extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions:compile";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Deprecated. use SuggestArticles and SuggestFaqAnswers instead. Gets suggestions for a
             * participant based on specific historical messages. Note that ListSuggestions will only list the
             * auto-generated suggestions, while CompileSuggestion will try to compile suggestion based on the
             * provided conversation context in the real time.
             *
             * Create a request for the method "suggestions.compile".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Compile#execute()} method to invoke the remote operation.
             * <p> {@link
             * Compile#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionRequest}
             * @since 1.13
             */
            protected Compile(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompileSuggestionResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public Compile set$Xgafv(java.lang.String $Xgafv) {
              return (Compile) super.set$Xgafv($Xgafv);
            }

            @Override
            public Compile setAccessToken(java.lang.String accessToken) {
              return (Compile) super.setAccessToken(accessToken);
            }

            @Override
            public Compile setAlt(java.lang.String alt) {
              return (Compile) super.setAlt(alt);
            }

            @Override
            public Compile setCallback(java.lang.String callback) {
              return (Compile) super.setCallback(callback);
            }

            @Override
            public Compile setFields(java.lang.String fields) {
              return (Compile) super.setFields(fields);
            }

            @Override
            public Compile setKey(java.lang.String key) {
              return (Compile) super.setKey(key);
            }

            @Override
            public Compile setOauthToken(java.lang.String oauthToken) {
              return (Compile) super.setOauthToken(oauthToken);
            }

            @Override
            public Compile setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Compile) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Compile setQuotaUser(java.lang.String quotaUser) {
              return (Compile) super.setQuotaUser(quotaUser);
            }

            @Override
            public Compile setUploadType(java.lang.String uploadType) {
              return (Compile) super.setUploadType(uploadType);
            }

            @Override
            public Compile setUploadProtocol(java.lang.String uploadProtocol) {
              return (Compile) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the participant to fetch suggestion for. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            public Compile setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Compile set(String parameterName, Object value) {
              return (Compile) super.set(parameterName, value);
            }
          }
          /**
           * Deprecated: Use inline suggestion, event based suggestion or Suggestion* API instead. See
           * HumanAgentAssistantConfig.name for more details. Removal Date: 2020-09-01. Retrieves suggestions
           * for live agents. This method should be used by human agent client software to fetch auto
           * generated suggestions in real-time, while the conversation with an end user is in progress. The
           * functionality is implemented in terms of the [list
           * pagination](https://cloud.google.com/apis/design/design_patterns#list_pagination) design pattern.
           * The client app should use the `next_page_token` field to fetch the next batch of suggestions.
           * `suggestions` are sorted by `create_time` in descending order. To fetch latest suggestion, just
           * set `page_size` to 1. To fetch new suggestions without duplication, send request with filter
           * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
           * page_token.
           *
           * Create a request for the method "suggestions.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the participant to fetch suggestions for. Format:
           *        `projects//locations//conversations//participants/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSuggestionsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Deprecated: Use inline suggestion, event based suggestion or Suggestion* API instead. See
             * HumanAgentAssistantConfig.name for more details. Removal Date: 2020-09-01. Retrieves
             * suggestions for live agents. This method should be used by human agent client software to fetch
             * auto generated suggestions in real-time, while the conversation with an end user is in
             * progress. The functionality is implemented in terms of the [list
             * pagination](https://cloud.google.com/apis/design/design_patterns#list_pagination) design
             * pattern. The client app should use the `next_page_token` field to fetch the next batch of
             * suggestions. `suggestions` are sorted by `create_time` in descending order. To fetch latest
             * suggestion, just set `page_size` to 1. To fetch new suggestions without duplication, send
             * request with filter `create_time_epoch_microseconds > [first item's create_time of previous
             * request]` and empty page_token.
             *
             * Create a request for the method "suggestions.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the participant to fetch suggestions for. Format:
           *        `projects//locations//conversations//participants/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSuggestionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant to fetch suggestions for. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the participant to fetch suggestions for. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the participant to fetch suggestions for. Format:
             * `projects//locations//conversations//participants/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Filter on suggestions fields. Currently predicates on `create_time` and
             * `create_time_epoch_microseconds` are supported. `create_time` only support
             * milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or
             * `create_time > "2017-01-15T01:30:15.01Z"` For more information about filtering, see
             * [API Filtering](https://aip.dev/160).
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Filter on suggestions fields. Currently predicates on `create_time` and
           `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy.
           E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time >
           "2017-01-15T01:30:15.01Z"` For more information about filtering, see [API
           Filtering](https://aip.dev/160).
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. Filter on suggestions fields. Currently predicates on `create_time` and
             * `create_time_epoch_microseconds` are supported. `create_time` only support
             * milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or
             * `create_time > "2017-01-15T01:30:15.01Z"` For more information about filtering, see
             * [API Filtering](https://aip.dev/160).
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. The default value
             * is 100; the maximum value is 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. The default value is 100; the
           maximum value is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. The default value
             * is 100; the maximum value is 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Gets suggested articles for a participant based on specific historical messages. Note that
           * ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try
           * to compile suggestion based on the provided conversation context in the real time.
           *
           * Create a request for the method "suggestions.suggestArticles".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link SuggestArticles#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest}
           * @return the request
           */
          public SuggestArticles suggestArticles(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest content) throws java.io.IOException {
            SuggestArticles result = new SuggestArticles(parent, content);
            initialize(result);
            return result;
          }

          public class SuggestArticles extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestArticles";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Gets suggested articles for a participant based on specific historical messages. Note that
             * ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try
             * to compile suggestion based on the provided conversation context in the real time.
             *
             * Create a request for the method "suggestions.suggestArticles".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link SuggestArticles#execute()} method to invoke the remote
             * operation. <p> {@link SuggestArticles#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest}
             * @since 1.13
             */
            protected SuggestArticles(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public SuggestArticles set$Xgafv(java.lang.String $Xgafv) {
              return (SuggestArticles) super.set$Xgafv($Xgafv);
            }

            @Override
            public SuggestArticles setAccessToken(java.lang.String accessToken) {
              return (SuggestArticles) super.setAccessToken(accessToken);
            }

            @Override
            public SuggestArticles setAlt(java.lang.String alt) {
              return (SuggestArticles) super.setAlt(alt);
            }

            @Override
            public SuggestArticles setCallback(java.lang.String callback) {
              return (SuggestArticles) super.setCallback(callback);
            }

            @Override
            public SuggestArticles setFields(java.lang.String fields) {
              return (SuggestArticles) super.setFields(fields);
            }

            @Override
            public SuggestArticles setKey(java.lang.String key) {
              return (SuggestArticles) super.setKey(key);
            }

            @Override
            public SuggestArticles setOauthToken(java.lang.String oauthToken) {
              return (SuggestArticles) super.setOauthToken(oauthToken);
            }

            @Override
            public SuggestArticles setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SuggestArticles) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SuggestArticles setQuotaUser(java.lang.String quotaUser) {
              return (SuggestArticles) super.setQuotaUser(quotaUser);
            }

            @Override
            public SuggestArticles setUploadType(java.lang.String uploadType) {
              return (SuggestArticles) super.setUploadType(uploadType);
            }

            @Override
            public SuggestArticles setUploadProtocol(java.lang.String uploadProtocol) {
              return (SuggestArticles) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the participant to fetch suggestion for. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            public SuggestArticles setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public SuggestArticles set(String parameterName, Object value) {
              return (SuggestArticles) super.set(parameterName, value);
            }
          }
          /**
           * Gets suggested faq answers for a participant based on specific historical messages.
           *
           * Create a request for the method "suggestions.suggestFaqAnswers".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link SuggestFaqAnswers#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest}
           * @return the request
           */
          public SuggestFaqAnswers suggestFaqAnswers(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest content) throws java.io.IOException {
            SuggestFaqAnswers result = new SuggestFaqAnswers(parent, content);
            initialize(result);
            return result;
          }

          public class SuggestFaqAnswers extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestFaqAnswers";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Gets suggested faq answers for a participant based on specific historical messages.
             *
             * Create a request for the method "suggestions.suggestFaqAnswers".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link SuggestFaqAnswers#execute()} method to invoke the remote
             * operation. <p> {@link SuggestFaqAnswers#initialize(com.google.api.client.googleapis.services.Ab
             * stractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest}
             * @since 1.13
             */
            protected SuggestFaqAnswers(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public SuggestFaqAnswers set$Xgafv(java.lang.String $Xgafv) {
              return (SuggestFaqAnswers) super.set$Xgafv($Xgafv);
            }

            @Override
            public SuggestFaqAnswers setAccessToken(java.lang.String accessToken) {
              return (SuggestFaqAnswers) super.setAccessToken(accessToken);
            }

            @Override
            public SuggestFaqAnswers setAlt(java.lang.String alt) {
              return (SuggestFaqAnswers) super.setAlt(alt);
            }

            @Override
            public SuggestFaqAnswers setCallback(java.lang.String callback) {
              return (SuggestFaqAnswers) super.setCallback(callback);
            }

            @Override
            public SuggestFaqAnswers setFields(java.lang.String fields) {
              return (SuggestFaqAnswers) super.setFields(fields);
            }

            @Override
            public SuggestFaqAnswers setKey(java.lang.String key) {
              return (SuggestFaqAnswers) super.setKey(key);
            }

            @Override
            public SuggestFaqAnswers setOauthToken(java.lang.String oauthToken) {
              return (SuggestFaqAnswers) super.setOauthToken(oauthToken);
            }

            @Override
            public SuggestFaqAnswers setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SuggestFaqAnswers) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SuggestFaqAnswers setQuotaUser(java.lang.String quotaUser) {
              return (SuggestFaqAnswers) super.setQuotaUser(quotaUser);
            }

            @Override
            public SuggestFaqAnswers setUploadType(java.lang.String uploadType) {
              return (SuggestFaqAnswers) super.setUploadType(uploadType);
            }

            @Override
            public SuggestFaqAnswers setUploadProtocol(java.lang.String uploadProtocol) {
              return (SuggestFaqAnswers) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the participant to fetch suggestion for. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            public SuggestFaqAnswers setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public SuggestFaqAnswers set(String parameterName, Object value) {
              return (SuggestFaqAnswers) super.set(parameterName, value);
            }
          }
          /**
           * Gets smart replies for a participant based on specific historical messages.
           *
           * Create a request for the method "suggestions.suggestSmartReplies".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link SuggestSmartReplies#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest}
           * @return the request
           */
          public SuggestSmartReplies suggestSmartReplies(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest content) throws java.io.IOException {
            SuggestSmartReplies result = new SuggestSmartReplies(parent, content);
            initialize(result);
            return result;
          }

          public class SuggestSmartReplies extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestSmartReplies";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Gets smart replies for a participant based on specific historical messages.
             *
             * Create a request for the method "suggestions.suggestSmartReplies".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link SuggestSmartReplies#execute()} method to invoke the remote
             * operation. <p> {@link SuggestSmartReplies#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest}
             * @since 1.13
             */
            protected SuggestSmartReplies(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public SuggestSmartReplies set$Xgafv(java.lang.String $Xgafv) {
              return (SuggestSmartReplies) super.set$Xgafv($Xgafv);
            }

            @Override
            public SuggestSmartReplies setAccessToken(java.lang.String accessToken) {
              return (SuggestSmartReplies) super.setAccessToken(accessToken);
            }

            @Override
            public SuggestSmartReplies setAlt(java.lang.String alt) {
              return (SuggestSmartReplies) super.setAlt(alt);
            }

            @Override
            public SuggestSmartReplies setCallback(java.lang.String callback) {
              return (SuggestSmartReplies) super.setCallback(callback);
            }

            @Override
            public SuggestSmartReplies setFields(java.lang.String fields) {
              return (SuggestSmartReplies) super.setFields(fields);
            }

            @Override
            public SuggestSmartReplies setKey(java.lang.String key) {
              return (SuggestSmartReplies) super.setKey(key);
            }

            @Override
            public SuggestSmartReplies setOauthToken(java.lang.String oauthToken) {
              return (SuggestSmartReplies) super.setOauthToken(oauthToken);
            }

            @Override
            public SuggestSmartReplies setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SuggestSmartReplies) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SuggestSmartReplies setQuotaUser(java.lang.String quotaUser) {
              return (SuggestSmartReplies) super.setQuotaUser(quotaUser);
            }

            @Override
            public SuggestSmartReplies setUploadType(java.lang.String uploadType) {
              return (SuggestSmartReplies) super.setUploadType(uploadType);
            }

            @Override
            public SuggestSmartReplies setUploadProtocol(java.lang.String uploadProtocol) {
              return (SuggestSmartReplies) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the participant to fetch suggestion for. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the participant to fetch suggestion for. Format:
             * `projects//locations//conversations//participants/`.
             */
            public SuggestSmartReplies setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public SuggestSmartReplies set(String parameterName, Object value) {
              return (SuggestSmartReplies) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Suggestions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Suggestions.List request = dialogflow.suggestions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Suggestions suggestions() {
        return new Suggestions();
      }

      /**
       * The "suggestions" collection of methods.
       */
      public class Suggestions {

        /**
         * Suggest summary for a conversation based on specific historical messages. The range of the
         * messages to be used for summary can be specified in the request.
         *
         * Create a request for the method "suggestions.suggestConversationSummary".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link SuggestConversationSummary#execute()} method to invoke the remote
         * operation.
         *
         * @param conversation Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest}
         * @return the request
         */
        public SuggestConversationSummary suggestConversationSummary(java.lang.String conversation, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest content) throws java.io.IOException {
          SuggestConversationSummary result = new SuggestConversationSummary(conversation, content);
          initialize(result);
          return result;
        }

        public class SuggestConversationSummary extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse> {

          private static final String REST_PATH = "v2beta1/{+conversation}/suggestions:suggestConversationSummary";

          private final java.util.regex.Pattern CONVERSATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/conversations/[^/]+$");

          /**
           * Suggest summary for a conversation based on specific historical messages. The range of the
           * messages to be used for summary can be specified in the request.
           *
           * Create a request for the method "suggestions.suggestConversationSummary".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link SuggestConversationSummary#execute()} method to invoke the
           * remote operation. <p> {@link SuggestConversationSummary#initialize(com.google.api.client.google
           * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param conversation Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest}
           * @since 1.13
           */
          protected SuggestConversationSummary(java.lang.String conversation, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse.class);
            this.conversation = com.google.api.client.util.Preconditions.checkNotNull(conversation, "Required parameter conversation must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PATTERN.matcher(conversation).matches(),
                  "Parameter conversation must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public SuggestConversationSummary set$Xgafv(java.lang.String $Xgafv) {
            return (SuggestConversationSummary) super.set$Xgafv($Xgafv);
          }

          @Override
          public SuggestConversationSummary setAccessToken(java.lang.String accessToken) {
            return (SuggestConversationSummary) super.setAccessToken(accessToken);
          }

          @Override
          public SuggestConversationSummary setAlt(java.lang.String alt) {
            return (SuggestConversationSummary) super.setAlt(alt);
          }

          @Override
          public SuggestConversationSummary setCallback(java.lang.String callback) {
            return (SuggestConversationSummary) super.setCallback(callback);
          }

          @Override
          public SuggestConversationSummary setFields(java.lang.String fields) {
            return (SuggestConversationSummary) super.setFields(fields);
          }

          @Override
          public SuggestConversationSummary setKey(java.lang.String key) {
            return (SuggestConversationSummary) super.setKey(key);
          }

          @Override
          public SuggestConversationSummary setOauthToken(java.lang.String oauthToken) {
            return (SuggestConversationSummary) super.setOauthToken(oauthToken);
          }

          @Override
          public SuggestConversationSummary setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SuggestConversationSummary) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SuggestConversationSummary setQuotaUser(java.lang.String quotaUser) {
            return (SuggestConversationSummary) super.setQuotaUser(quotaUser);
          }

          @Override
          public SuggestConversationSummary setUploadType(java.lang.String uploadType) {
            return (SuggestConversationSummary) super.setUploadType(uploadType);
          }

          @Override
          public SuggestConversationSummary setUploadProtocol(java.lang.String uploadProtocol) {
            return (SuggestConversationSummary) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The conversation to fetch suggestion for. Format:
           * `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String conversation;

          /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
           */
          public java.lang.String getConversation() {
            return conversation;
          }

          /**
           * Required. The conversation to fetch suggestion for. Format:
           * `projects//locations//conversations/`.
           */
          public SuggestConversationSummary setConversation(java.lang.String conversation) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PATTERN.matcher(conversation).matches(),
                  "Parameter conversation must conform to the pattern " +
                  "^projects/[^/]+/conversations/[^/]+$");
            }
            this.conversation = conversation;
            return this;
          }

          @Override
          public SuggestConversationSummary set(String parameterName, Object value) {
            return (SuggestConversationSummary) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the KnowledgeBases collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.KnowledgeBases.List request = dialogflow.knowledgeBases().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public KnowledgeBases knowledgeBases() {
      return new KnowledgeBases();
    }

    /**
     * The "knowledgeBases" collection of methods.
     */
    public class KnowledgeBases {

      /**
       * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only
       * use `projects.knowledgeBases`.
       *
       * Create a request for the method "knowledgeBases.create".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

        private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated;
         * only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.create".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to create a knowledge base for. Format: `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to create a knowledge base for. Format: `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to create a knowledge base for. Format: `projects//locations/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
       * deprecated; only use `projects.knowledgeBases`.
       *
       * Create a request for the method "knowledgeBases.delete".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

        /**
         * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.delete".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the knowledge base to delete. Format:
         * `projects//locations//knowledgeBases/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the knowledge base to delete. Format:
         * `projects//locations//knowledgeBases/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. Force deletes the knowledge base. When set to true, any documents in the
         * knowledge base are also deleted.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean force;

        /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
       are also deleted.
         */
        public java.lang.Boolean getForce() {
          return force;
        }

        /**
         * Optional. Force deletes the knowledge base. When set to true, any documents in the
         * knowledge base are also deleted.
         */
        public Delete setForce(java.lang.Boolean force) {
          this.force = force;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
       * deprecated; only use `projects.knowledgeBases`.
       *
       * Create a request for the method "knowledgeBases.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

        /**
         * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the knowledge base to retrieve. Format
         * `projects//locations//knowledgeBases/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the knowledge base to retrieve. Format
       `projects//locations//knowledgeBases/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the knowledge base to retrieve. Format
         * `projects//locations//knowledgeBases/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the list of all knowledge bases of the specified agent. Note: The
       * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
       *
       * Create a request for the method "knowledgeBases.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse> {

        private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Returns the list of all knowledge bases of the specified agent. Note: The
         * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The filter expression used to filter knowledge bases returned by the list method. The
         * expression has the following syntax: [AND ] ... The following fields and operators are
         * supported: * display_name with has(:) operator * language_code with equals(=) operator
         * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
         * 'display_name:articles' matches knowledge bases whose display name contains "articles". *
         * 'display_name:"Best Articles"' matches knowledge bases whose display name contains "Best
         * Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases
         * whose display name contains "articles" and whose language code is "en-gb". Note: An empty
         * filter string (i.e. "") is a no-op and will result in no filtering. For more information
         * about filtering, see [API Filtering](https://aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The filter expression used to filter knowledge bases returned by the list method. The expression
       has the following syntax: [AND ] ... The following fields and operators are supported: *
       display_name with has(:) operator * language_code with equals(=) operator Examples: *
       'language_code=en-us' matches knowledge bases with en-us language code. * 'display_name:articles'
       matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"'
       matches knowledge bases whose display name contains "Best Articles". * 'language_code=en-gb AND
       display_name=articles' matches all knowledge bases whose display name contains "articles" and whose
       language code is "en-gb". Note: An empty filter string (i.e. "") is a no-op and will result in no
       filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * The filter expression used to filter knowledge bases returned by the list method. The
         * expression has the following syntax: [AND ] ... The following fields and operators are
         * supported: * display_name with has(:) operator * language_code with equals(=) operator
         * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
         * 'display_name:articles' matches knowledge bases whose display name contains "articles". *
         * 'display_name:"Best Articles"' matches knowledge bases whose display name contains "Best
         * Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases
         * whose display name contains "articles" and whose language code is "en-gb". Note: An empty
         * filter string (i.e. "") is a no-op and will result in no filtering. For more information
         * about filtering, see [API Filtering](https://aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * The maximum number of items to return in a single page. By default 10 and at most 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of items to return in a single page. By default 10 and at most 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of items to return in a single page. By default 10 and at most 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The next_page_token value returned from a previous list request. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The next_page_token value returned from a previous list request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The next_page_token value returned from a previous list request. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
       * deprecated; only use `projects.knowledgeBases`.
       *
       * Create a request for the method "knowledgeBases.patch".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
       *        `projects//locations//knowledgeBases/`.
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

        /**
         * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.patch".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
       *        `projects//locations//knowledgeBases/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
          super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The knowledge base resource name. The name must be empty when creating a knowledge base.
         * Format: `projects//locations//knowledgeBases/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
       `projects//locations//knowledgeBases/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The knowledge base resource name. The name must be empty when creating a knowledge base.
         * Format: `projects//locations//knowledgeBases/`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/knowledgeBases/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. Not specified means `update all`. Currently, only `display_name` can be
         * updated, an InvalidArgument will be returned for attempting to update other fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
       InvalidArgument will be returned for attempting to update other fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. Not specified means `update all`. Currently, only `display_name` can be
         * updated, an InvalidArgument will be returned for attempting to update other fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Documents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Documents.List request = dialogflow.documents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Documents documents() {
        return new Documents();
      }

      /**
       * The "documents" collection of methods.
       */
      public class Documents {

        /**
         * Creates a new document. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
         * `Operation` type has the following method-specific fields: - `metadata`:
         * KnowledgeOperationMetadata - `response`: Document Note: The
         * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
         * `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The knowledge base to create a document for. Format:
         *        `projects//locations//knowledgeBases/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/documents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Creates a new document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
           * returned `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The knowledge base to create a document for. Format:
         *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The knowledge base to create a document for. Format:
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The knowledge base to create a document for. Format:
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The knowledge base to create a document for. Format:
           * `projects//locations//knowledgeBases/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Whether to import custom metadata from Google Cloud Storage. Only valid when the
           * document source is Google Cloud Storage URI.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean importGcsCustomMetadata;

          /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is
         Google Cloud Storage URI.
           */
          public java.lang.Boolean getImportGcsCustomMetadata() {
            return importGcsCustomMetadata;
          }

          /**
           * Whether to import custom metadata from Google Cloud Storage. Only valid when the
           * document source is Google Cloud Storage URI.
           */
          public Create setImportGcsCustomMetadata(java.lang.Boolean importGcsCustomMetadata) {
            this.importGcsCustomMetadata = importGcsCustomMetadata;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified document. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
         * `Operation` type has the following method-specific fields: - `metadata`:
         * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
         * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
         * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
         * `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the document to delete. Format:
         *        `projects//locations//knowledgeBases//documents/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Deletes the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
           * returned `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
           * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the document to delete. Format:
         *        `projects//locations//knowledgeBases//documents/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the document to delete. Format:
           * `projects//locations//knowledgeBases//documents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the document to delete. Format:
         `projects//locations//knowledgeBases//documents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the document to delete. Format:
           * `projects//locations//knowledgeBases//documents/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is
         * deprecated; only use `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the document to retrieve. Format
         *        `projects//locations//knowledgeBases//documents/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource
           * is deprecated; only use `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the document to retrieve. Format
         *        `projects//locations//knowledgeBases//documents/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the document to retrieve. Format
           * `projects//locations//knowledgeBases//documents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the document to retrieve. Format
         `projects//locations//knowledgeBases//documents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the document to retrieve. Format
           * `projects//locations//knowledgeBases//documents/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Create documents by importing data from external sources. Dialogflow supports up to 350 documents
         * in each request. If you try to import more, Dialogflow will return an error. This method is a
         * [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
         * The returned `Operation` type has the following method-specific fields: - `metadata`:
         * KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
         *
         * Create a request for the method "documents.import".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DialogflowImport#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The knowledge base to import documents into. Format:
         *        `projects//locations//knowledgeBases/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest}
         * @return the request
         */
        public DialogflowImport dialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest content) throws java.io.IOException {
          DialogflowImport result = new DialogflowImport(parent, content);
          initialize(result);
          return result;
        }

        public class DialogflowImport extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/documents:import";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Create documents by importing data from external sources. Dialogflow supports up to 350
           * documents in each request. If you try to import more, Dialogflow will return an error. This
           * method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-
           * running-operation). The returned `Operation` type has the following method-specific fields: -
           * `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
           *
           * Create a request for the method "documents.import".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DialogflowImport#execute()} method to invoke the remote
           * operation. <p> {@link DialogflowImport#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The knowledge base to import documents into. Format:
         *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest}
           * @since 1.13
           */
          protected DialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public DialogflowImport set$Xgafv(java.lang.String $Xgafv) {
            return (DialogflowImport) super.set$Xgafv($Xgafv);
          }

          @Override
          public DialogflowImport setAccessToken(java.lang.String accessToken) {
            return (DialogflowImport) super.setAccessToken(accessToken);
          }

          @Override
          public DialogflowImport setAlt(java.lang.String alt) {
            return (DialogflowImport) super.setAlt(alt);
          }

          @Override
          public DialogflowImport setCallback(java.lang.String callback) {
            return (DialogflowImport) super.setCallback(callback);
          }

          @Override
          public DialogflowImport setFields(java.lang.String fields) {
            return (DialogflowImport) super.setFields(fields);
          }

          @Override
          public DialogflowImport setKey(java.lang.String key) {
            return (DialogflowImport) super.setKey(key);
          }

          @Override
          public DialogflowImport setOauthToken(java.lang.String oauthToken) {
            return (DialogflowImport) super.setOauthToken(oauthToken);
          }

          @Override
          public DialogflowImport setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DialogflowImport) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DialogflowImport setQuotaUser(java.lang.String quotaUser) {
            return (DialogflowImport) super.setQuotaUser(quotaUser);
          }

          @Override
          public DialogflowImport setUploadType(java.lang.String uploadType) {
            return (DialogflowImport) super.setUploadType(uploadType);
          }

          @Override
          public DialogflowImport setUploadProtocol(java.lang.String uploadProtocol) {
            return (DialogflowImport) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The knowledge base to import documents into. Format:
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The knowledge base to import documents into. Format:
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The knowledge base to import documents into. Format:
           * `projects//locations//knowledgeBases/`.
           */
          public DialogflowImport setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public DialogflowImport set(String parameterName, Object value) {
            return (DialogflowImport) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all documents of the knowledge base. Note: The
         * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
         * `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The knowledge base to list all documents for. Format:
         *        `projects//locations//knowledgeBases/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/documents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Returns the list of all documents of the knowledge base. Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The knowledge base to list all documents for. Format:
         *        `projects//locations//knowledgeBases/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The knowledge base to list all documents for. Format:
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The knowledge base to list all documents for. Format:
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The knowledge base to list all documents for. Format:
           * `projects//locations//knowledgeBases/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The filter expression used to filter documents returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * knowledge_types with has(:) operator * display_name with has(:) operator *
           * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with
           * FAQ knowledge type. * "display_name:customer" matches documents whose display name
           * contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. *
           * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more
           * information about filtering, see [API Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The filter expression used to filter documents returned by the list method. The expression has the
         following syntax: [AND ] ... The following fields and operators are supported: * knowledge_types
         with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples:
         * "knowledge_types:FAQ" matches documents with FAQ knowledge type. * "display_name:customer"
         matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with
         ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more
         information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The filter expression used to filter documents returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * knowledge_types with has(:) operator * display_name with has(:) operator *
           * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with
           * FAQ knowledge type. * "display_name:customer" matches documents whose display name
           * contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. *
           * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more
           * information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified document. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
         * `Operation` type has the following method-specific fields: - `metadata`:
         * KnowledgeOperationMetadata - `response`: Document Note: The
         * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
         * `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
         *        `projects//locations//knowledgeBases//documents/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Updates the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
           * returned `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
         *        `projects//locations//knowledgeBases//documents/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Optional. The document resource name. The name must be empty when creating a document.
           * Format: `projects//locations//knowledgeBases//documents/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The document resource name. The name must be empty when creating a document. Format:
         `projects//locations//knowledgeBases//documents/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The document resource name. The name must be empty when creating a document.
           * Format: `projects//locations//knowledgeBases//documents/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
         InvalidArgument will be returned for attempting to update other fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Reloads the specified document from its specified source, content_uri or content. The previously
         * loaded content of the document will be deleted. Note: Even when the content of the document has
         * not changed, there still may be side effects because of internal implementation changes. Note: If
         * the document source is Google Cloud Storage URI, its metadata will be replaced with the custom
         * metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in
         * the request. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
         * `Operation` type has the following method-specific fields: - `metadata`:
         * KnowledgeOperationMetadata - `response`: Document Note: The
         * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
         * `projects.knowledgeBases.documents`.
         *
         * Create a request for the method "documents.reload".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Reload#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the document to reload. Format:
         *        `projects//locations//knowledgeBases//documents/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
         * @return the request
         */
        public Reload reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) throws java.io.IOException {
          Reload result = new Reload(name, content);
          initialize(result);
          return result;
        }

        public class Reload extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+name}:reload";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

          /**
           * Reloads the specified document from its specified source, content_uri or content. The
           * previously loaded content of the document will be deleted. Note: Even when the content of the
           * document has not changed, there still may be side effects because of internal implementation
           * changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
           * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata`
           * field is set to true in the request. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
           * returned `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.reload".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Reload#execute()} method to invoke the remote operation.
           * <p> {@link
           * Reload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the document to reload. Format:
         *        `projects//locations//knowledgeBases//documents/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
           * @since 1.13
           */
          protected Reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
          }

          @Override
          public Reload set$Xgafv(java.lang.String $Xgafv) {
            return (Reload) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reload setAccessToken(java.lang.String accessToken) {
            return (Reload) super.setAccessToken(accessToken);
          }

          @Override
          public Reload setAlt(java.lang.String alt) {
            return (Reload) super.setAlt(alt);
          }

          @Override
          public Reload setCallback(java.lang.String callback) {
            return (Reload) super.setCallback(callback);
          }

          @Override
          public Reload setFields(java.lang.String fields) {
            return (Reload) super.setFields(fields);
          }

          @Override
          public Reload setKey(java.lang.String key) {
            return (Reload) super.setKey(key);
          }

          @Override
          public Reload setOauthToken(java.lang.String oauthToken) {
            return (Reload) super.setOauthToken(oauthToken);
          }

          @Override
          public Reload setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reload) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reload setQuotaUser(java.lang.String quotaUser) {
            return (Reload) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reload setUploadType(java.lang.String uploadType) {
            return (Reload) super.setUploadType(uploadType);
          }

          @Override
          public Reload setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reload) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the document to reload. Format:
           * `projects//locations//knowledgeBases//documents/`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the document to reload. Format:
         `projects//locations//knowledgeBases//documents/`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the document to reload. Format:
           * `projects//locations//knowledgeBases//documents/`
           */
          public Reload setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Reload set(String parameterName, Object value) {
            return (Reload) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Locations.List request = dialogflow.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Deletes the specified agent.
       *
       * Create a request for the method "locations.deleteAgent".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link DeleteAgent#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to delete is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @return the request
       */
      public DeleteAgent deleteAgent(java.lang.String parent) throws java.io.IOException {
        DeleteAgent result = new DeleteAgent(parent);
        initialize(result);
        return result;
      }

      public class DeleteAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Deletes the specified agent.
         *
         * Create a request for the method "locations.deleteAgent".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link DeleteAgent#execute()} method to invoke the remote
         * operation. <p> {@link
         * DeleteAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to delete is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @since 1.13
         */
        protected DeleteAgent(java.lang.String parent) {
          super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public DeleteAgent set$Xgafv(java.lang.String $Xgafv) {
          return (DeleteAgent) super.set$Xgafv($Xgafv);
        }

        @Override
        public DeleteAgent setAccessToken(java.lang.String accessToken) {
          return (DeleteAgent) super.setAccessToken(accessToken);
        }

        @Override
        public DeleteAgent setAlt(java.lang.String alt) {
          return (DeleteAgent) super.setAlt(alt);
        }

        @Override
        public DeleteAgent setCallback(java.lang.String callback) {
          return (DeleteAgent) super.setCallback(callback);
        }

        @Override
        public DeleteAgent setFields(java.lang.String fields) {
          return (DeleteAgent) super.setFields(fields);
        }

        @Override
        public DeleteAgent setKey(java.lang.String key) {
          return (DeleteAgent) super.setKey(key);
        }

        @Override
        public DeleteAgent setOauthToken(java.lang.String oauthToken) {
          return (DeleteAgent) super.setOauthToken(oauthToken);
        }

        @Override
        public DeleteAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (DeleteAgent) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public DeleteAgent setQuotaUser(java.lang.String quotaUser) {
          return (DeleteAgent) super.setQuotaUser(quotaUser);
        }

        @Override
        public DeleteAgent setUploadType(java.lang.String uploadType) {
          return (DeleteAgent) super.setUploadType(uploadType);
        }

        @Override
        public DeleteAgent setUploadProtocol(java.lang.String uploadProtocol) {
          return (DeleteAgent) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to delete is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to delete is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to delete is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public DeleteAgent setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public DeleteAgent set(String parameterName, Object value) {
          return (DeleteAgent) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudLocationLocation> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudLocationLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified agent.
       *
       * Create a request for the method "locations.getAgent".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project that the agent to fetch is associated with. Format: `projects/` or
       *        `projects//locations/`.
       * @return the request
       */
      public GetAgent getAgent(java.lang.String parent) throws java.io.IOException {
        GetAgent result = new GetAgent(parent);
        initialize(result);
        return result;
      }

      public class GetAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Retrieves the specified agent.
         *
         * Create a request for the method "locations.getAgent".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link GetAgent#execute()} method to invoke the remote operation.
         * <p> {@link
         * GetAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project that the agent to fetch is associated with. Format: `projects/` or
       *        `projects//locations/`.
         * @since 1.13
         */
        protected GetAgent(java.lang.String parent) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAgent set$Xgafv(java.lang.String $Xgafv) {
          return (GetAgent) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAgent setAccessToken(java.lang.String accessToken) {
          return (GetAgent) super.setAccessToken(accessToken);
        }

        @Override
        public GetAgent setAlt(java.lang.String alt) {
          return (GetAgent) super.setAlt(alt);
        }

        @Override
        public GetAgent setCallback(java.lang.String callback) {
          return (GetAgent) super.setCallback(callback);
        }

        @Override
        public GetAgent setFields(java.lang.String fields) {
          return (GetAgent) super.setFields(fields);
        }

        @Override
        public GetAgent setKey(java.lang.String key) {
          return (GetAgent) super.setKey(key);
        }

        @Override
        public GetAgent setOauthToken(java.lang.String oauthToken) {
          return (GetAgent) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAgent) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAgent setQuotaUser(java.lang.String quotaUser) {
          return (GetAgent) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAgent setUploadType(java.lang.String uploadType) {
          return (GetAgent) super.setUploadType(uploadType);
        }

        @Override
        public GetAgent setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAgent) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The project that the agent to fetch is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project that the agent to fetch is associated with. Format: `projects/` or
       `projects//locations/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The project that the agent to fetch is associated with. Format: `projects/` or
         * `projects//locations/`.
         */
        public GetAgent setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetAgent set(String parameterName, Object value) {
          return (GetAgent) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudLocationListLocationsResponse> {

        private static final String REST_PATH = "v2beta1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudLocationListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Creates/updates the specified agent. Note: You should always train an agent prior to sending it
       * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
       *
       * Create a request for the method "locations.setAgent".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link SetAgent#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The project of this agent. Format: `projects/` or `projects//locations/`
       * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent}
       * @return the request
       */
      public SetAgent setAgent(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent content) throws java.io.IOException {
        SetAgent result = new SetAgent(parent, content);
        initialize(result);
        return result;
      }

      public class SetAgent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent> {

        private static final String REST_PATH = "v2beta1/{+parent}/agent";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Creates/updates the specified agent. Note: You should always train an agent prior to sending it
         * queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "locations.setAgent".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link SetAgent#execute()} method to invoke the remote operation.
         * <p> {@link
         * SetAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The project of this agent. Format: `projects/` or `projects//locations/`
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent}
         * @since 1.13
         */
        protected SetAgent(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent content) {
          super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Agent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public SetAgent set$Xgafv(java.lang.String $Xgafv) {
          return (SetAgent) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetAgent setAccessToken(java.lang.String accessToken) {
          return (SetAgent) super.setAccessToken(accessToken);
        }

        @Override
        public SetAgent setAlt(java.lang.String alt) {
          return (SetAgent) super.setAlt(alt);
        }

        @Override
        public SetAgent setCallback(java.lang.String callback) {
          return (SetAgent) super.setCallback(callback);
        }

        @Override
        public SetAgent setFields(java.lang.String fields) {
          return (SetAgent) super.setFields(fields);
        }

        @Override
        public SetAgent setKey(java.lang.String key) {
          return (SetAgent) super.setKey(key);
        }

        @Override
        public SetAgent setOauthToken(java.lang.String oauthToken) {
          return (SetAgent) super.setOauthToken(oauthToken);
        }

        @Override
        public SetAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetAgent) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetAgent setQuotaUser(java.lang.String quotaUser) {
          return (SetAgent) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetAgent setUploadType(java.lang.String uploadType) {
          return (SetAgent) super.setUploadType(uploadType);
        }

        @Override
        public SetAgent setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetAgent) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The project of this agent. Format: `projects/` or `projects//locations/`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The project of this agent. Format: `projects/` or `projects//locations/` */
        public SetAgent setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. The mask to control which fields get updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The mask to control which fields get updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Optional. The mask to control which fields get updated. */
        public SetAgent setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public SetAgent set(String parameterName, Object value) {
          return (SetAgent) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Agent collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Agent.List request = dialogflow.agent().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Agent agent() {
        return new Agent();
      }

      /**
       * The "agent" collection of methods.
       */
      public class Agent {

        /**
         * Exports the specified agent to a ZIP file. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: ExportAgentResponse
         *
         * Create a request for the method "agent.export".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the agent to export is associated with. Format: `projects/` or
         *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
         * @return the request
         */
        public Export export(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) throws java.io.IOException {
          Export result = new Export(parent, content);
          initialize(result);
          return result;
        }

        public class Export extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent:export";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Exports the specified agent to a ZIP file. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse
           *
           * Create a request for the method "agent.export".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
           * <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project that the agent to export is associated with. Format: `projects/` or
         *        `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest}
           * @since 1.13
           */
          protected Export(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ExportAgentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project that the agent to export is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the agent to export is associated with. Format: `projects/` or
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project that the agent to export is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          public Export setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the fulfillment.
         *
         * Create a request for the method "agent.getFulfillment".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link GetFulfillment#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
         *        `projects//locations//agent/fulfillment`
         * @return the request
         */
        public GetFulfillment getFulfillment(java.lang.String name) throws java.io.IOException {
          GetFulfillment result = new GetFulfillment(name);
          initialize(result);
          return result;
        }

        public class GetFulfillment extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/fulfillment$");

          /**
           * Retrieves the fulfillment.
           *
           * Create a request for the method "agent.getFulfillment".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link GetFulfillment#execute()} method to invoke the remote
           * operation. <p> {@link GetFulfillment#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
         *        `projects//locations//agent/fulfillment`
           * @since 1.13
           */
          protected GetFulfillment(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/agent/fulfillment$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetFulfillment set$Xgafv(java.lang.String $Xgafv) {
            return (GetFulfillment) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetFulfillment setAccessToken(java.lang.String accessToken) {
            return (GetFulfillment) super.setAccessToken(accessToken);
          }

          @Override
          public GetFulfillment setAlt(java.lang.String alt) {
            return (GetFulfillment) super.setAlt(alt);
          }

          @Override
          public GetFulfillment setCallback(java.lang.String callback) {
            return (GetFulfillment) super.setCallback(callback);
          }

          @Override
          public GetFulfillment setFields(java.lang.String fields) {
            return (GetFulfillment) super.setFields(fields);
          }

          @Override
          public GetFulfillment setKey(java.lang.String key) {
            return (GetFulfillment) super.setKey(key);
          }

          @Override
          public GetFulfillment setOauthToken(java.lang.String oauthToken) {
            return (GetFulfillment) super.setOauthToken(oauthToken);
          }

          @Override
          public GetFulfillment setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetFulfillment) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetFulfillment setQuotaUser(java.lang.String quotaUser) {
            return (GetFulfillment) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetFulfillment setUploadType(java.lang.String uploadType) {
            return (GetFulfillment) super.setUploadType(uploadType);
          }

          @Override
          public GetFulfillment setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetFulfillment) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the fulfillment. Supported formats: -
           * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
         `projects//locations//agent/fulfillment`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the fulfillment. Supported formats: -
           * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment`
           */
          public GetFulfillment setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/agent/fulfillment$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetFulfillment set(String parameterName, Object value) {
            return (GetFulfillment) super.set(parameterName, value);
          }
        }
        /**
         * Gets agent validation result. Agent validation is performed during training time and is updated
         * automatically when training is completed.
         *
         * Create a request for the method "agent.getValidationResult".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link GetValidationResult#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the agent is associated with. Format: `projects/` or
         *        `projects//locations/`.
         * @return the request
         */
        public GetValidationResult getValidationResult(java.lang.String parent) throws java.io.IOException {
          GetValidationResult result = new GetValidationResult(parent);
          initialize(result);
          return result;
        }

        public class GetValidationResult extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ValidationResult> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent/validationResult";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Gets agent validation result. Agent validation is performed during training time and is updated
           * automatically when training is completed.
           *
           * Create a request for the method "agent.getValidationResult".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link GetValidationResult#execute()} method to invoke the remote
           * operation. <p> {@link GetValidationResult#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The project that the agent is associated with. Format: `projects/` or
         *        `projects//locations/`.
           * @since 1.13
           */
          protected GetValidationResult(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ValidationResult.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetValidationResult set$Xgafv(java.lang.String $Xgafv) {
            return (GetValidationResult) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetValidationResult setAccessToken(java.lang.String accessToken) {
            return (GetValidationResult) super.setAccessToken(accessToken);
          }

          @Override
          public GetValidationResult setAlt(java.lang.String alt) {
            return (GetValidationResult) super.setAlt(alt);
          }

          @Override
          public GetValidationResult setCallback(java.lang.String callback) {
            return (GetValidationResult) super.setCallback(callback);
          }

          @Override
          public GetValidationResult setFields(java.lang.String fields) {
            return (GetValidationResult) super.setFields(fields);
          }

          @Override
          public GetValidationResult setKey(java.lang.String key) {
            return (GetValidationResult) super.setKey(key);
          }

          @Override
          public GetValidationResult setOauthToken(java.lang.String oauthToken) {
            return (GetValidationResult) super.setOauthToken(oauthToken);
          }

          @Override
          public GetValidationResult setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetValidationResult) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetValidationResult setQuotaUser(java.lang.String quotaUser) {
            return (GetValidationResult) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetValidationResult setUploadType(java.lang.String uploadType) {
            return (GetValidationResult) super.setUploadType(uploadType);
          }

          @Override
          public GetValidationResult setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetValidationResult) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project that the agent is associated with. Format: `projects/` or
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the agent is associated with. Format: `projects/` or
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project that the agent is associated with. Format: `projects/` or
           * `projects//locations/`.
           */
          public GetValidationResult setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The language for which you want a validation result. If not specified, the
           * agent's default language is used. [Many
           * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported.
           * Note: languages must be enabled in the agent before they can be used.
           */
          @com.google.api.client.util.Key
          private java.lang.String languageCode;

          /** Optional. The language for which you want a validation result. If not specified, the agent's
         default language is used. [Many
         languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note:
         languages must be enabled in the agent before they can be used.
           */
          public java.lang.String getLanguageCode() {
            return languageCode;
          }

          /**
           * Optional. The language for which you want a validation result. If not specified, the
           * agent's default language is used. [Many
           * languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported.
           * Note: languages must be enabled in the agent before they can be used.
           */
          public GetValidationResult setLanguageCode(java.lang.String languageCode) {
            this.languageCode = languageCode;
            return this;
          }

          @Override
          public GetValidationResult set(String parameterName, Object value) {
            return (GetValidationResult) super.set(parameterName, value);
          }
        }
        /**
         * Imports the specified agent from a ZIP file. Uploads new intents and entity types without
         * deleting the existing ones. Intents and entity types with the same name are replaced with the new
         * versions from ImportAgentRequest. After the import, the imported draft agent will be trained
         * automatically (unless disabled in agent settings). However, once the import is done, training may
         * not be completed yet. Please call TrainAgent and wait for the operation it returns in order to
         * train explicitly. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: An [Empty message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is
         * complete, not when it is done training. Note: You should always train an agent prior to sending
         * it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.import".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link DialogflowImport#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the agent to import is associated with. Format: `projects/` or
         *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
         * @return the request
         */
        public DialogflowImport dialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) throws java.io.IOException {
          DialogflowImport result = new DialogflowImport(parent, content);
          initialize(result);
          return result;
        }

        public class DialogflowImport extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent:import";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Imports the specified agent from a ZIP file. Uploads new intents and entity types without
           * deleting the existing ones. Intents and entity types with the same name are replaced with the
           * new versions from ImportAgentRequest. After the import, the imported draft agent will be
           * trained automatically (unless disabled in agent settings). However, once the import is done,
           * training may not be completed yet. Please call TrainAgent and wait for the operation it returns
           * in order to train explicitly. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           * The operation only tracks when importing is complete, not when it is done training. Note: You
           * should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "agent.import".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link DialogflowImport#execute()} method to invoke the remote
           * operation. <p> {@link DialogflowImport#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The project that the agent to import is associated with. Format: `projects/` or
         *        `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest}
           * @since 1.13
           */
          protected DialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportAgentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public DialogflowImport set$Xgafv(java.lang.String $Xgafv) {
            return (DialogflowImport) super.set$Xgafv($Xgafv);
          }

          @Override
          public DialogflowImport setAccessToken(java.lang.String accessToken) {
            return (DialogflowImport) super.setAccessToken(accessToken);
          }

          @Override
          public DialogflowImport setAlt(java.lang.String alt) {
            return (DialogflowImport) super.setAlt(alt);
          }

          @Override
          public DialogflowImport setCallback(java.lang.String callback) {
            return (DialogflowImport) super.setCallback(callback);
          }

          @Override
          public DialogflowImport setFields(java.lang.String fields) {
            return (DialogflowImport) super.setFields(fields);
          }

          @Override
          public DialogflowImport setKey(java.lang.String key) {
            return (DialogflowImport) super.setKey(key);
          }

          @Override
          public DialogflowImport setOauthToken(java.lang.String oauthToken) {
            return (DialogflowImport) super.setOauthToken(oauthToken);
          }

          @Override
          public DialogflowImport setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DialogflowImport) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DialogflowImport setQuotaUser(java.lang.String quotaUser) {
            return (DialogflowImport) super.setQuotaUser(quotaUser);
          }

          @Override
          public DialogflowImport setUploadType(java.lang.String uploadType) {
            return (DialogflowImport) super.setUploadType(uploadType);
          }

          @Override
          public DialogflowImport setUploadProtocol(java.lang.String uploadProtocol) {
            return (DialogflowImport) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project that the agent to import is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the agent to import is associated with. Format: `projects/` or
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project that the agent to import is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          public DialogflowImport setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public DialogflowImport set(String parameterName, Object value) {
            return (DialogflowImport) super.set(parameterName, value);
          }
        }
        /**
         * Restores the specified agent from a ZIP file. Replaces the current agent version with a new one.
         * All the intents and entity types in the older version are deleted. After the restore, the
         * restored draft agent will be trained automatically (unless disabled in agent settings). However,
         * once the restore is done, training may not be completed yet. Please call TrainAgent and wait for
         * the operation it returns in order to train explicitly. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: An [Empty message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is
         * complete, not when it is done training. Note: You should always train an agent prior to sending
         * it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.restore".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the agent to restore is associated with. Format: `projects/` or
         *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
         * @return the request
         */
        public Restore restore(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) throws java.io.IOException {
          Restore result = new Restore(parent, content);
          initialize(result);
          return result;
        }

        public class Restore extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent:restore";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Restores the specified agent from a ZIP file. Replaces the current agent version with a new
           * one. All the intents and entity types in the older version are deleted. After the restore, the
           * restored draft agent will be trained automatically (unless disabled in agent settings).
           * However, once the restore is done, training may not be completed yet. Please call TrainAgent
           * and wait for the operation it returns in order to train explicitly. This method is a [long-
           * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
           * The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           * The operation only tracks when restoring is complete, not when it is done training. Note: You
           * should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "agent.restore".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           * <p> {@link
           * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project that the agent to restore is associated with. Format: `projects/` or
         *        `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest}
           * @since 1.13
           */
          protected Restore(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1RestoreAgentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Restore set$Xgafv(java.lang.String $Xgafv) {
            return (Restore) super.set$Xgafv($Xgafv);
          }

          @Override
          public Restore setAccessToken(java.lang.String accessToken) {
            return (Restore) super.setAccessToken(accessToken);
          }

          @Override
          public Restore setAlt(java.lang.String alt) {
            return (Restore) super.setAlt(alt);
          }

          @Override
          public Restore setCallback(java.lang.String callback) {
            return (Restore) super.setCallback(callback);
          }

          @Override
          public Restore setFields(java.lang.String fields) {
            return (Restore) super.setFields(fields);
          }

          @Override
          public Restore setKey(java.lang.String key) {
            return (Restore) super.setKey(key);
          }

          @Override
          public Restore setOauthToken(java.lang.String oauthToken) {
            return (Restore) super.setOauthToken(oauthToken);
          }

          @Override
          public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Restore) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Restore setQuotaUser(java.lang.String quotaUser) {
            return (Restore) super.setQuotaUser(quotaUser);
          }

          @Override
          public Restore setUploadType(java.lang.String uploadType) {
            return (Restore) super.setUploadType(uploadType);
          }

          @Override
          public Restore setUploadProtocol(java.lang.String uploadProtocol) {
            return (Restore) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project that the agent to restore is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the agent to restore is associated with. Format: `projects/` or
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project that the agent to restore is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          public Restore setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Restore set(String parameterName, Object value) {
            return (Restore) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of agents. Since there is at most one conversational agent per project, this
         * method is useful primarily for listing all agents across projects the caller has access to. One
         * can achieve that with a wildcard project collection id "-". Refer to [List Sub-
         * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
         *
         * Create a request for the method "agent.search".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Search#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
         * @return the request
         */
        public Search search(java.lang.String parent) throws java.io.IOException {
          Search result = new Search(parent);
          initialize(result);
          return result;
        }

        public class Search extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent:search";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of agents. Since there is at most one conversational agent per project, this
           * method is useful primarily for listing all agents across projects the caller has access to. One
           * can achieve that with a wildcard project collection id "-". Refer to [List Sub-
           * Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
           *
           * Create a request for the method "agent.search".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
           * <p> {@link
           * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
           * @since 1.13
           */
          protected Search(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SearchAgentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Search set$Xgafv(java.lang.String $Xgafv) {
            return (Search) super.set$Xgafv($Xgafv);
          }

          @Override
          public Search setAccessToken(java.lang.String accessToken) {
            return (Search) super.setAccessToken(accessToken);
          }

          @Override
          public Search setAlt(java.lang.String alt) {
            return (Search) super.setAlt(alt);
          }

          @Override
          public Search setCallback(java.lang.String callback) {
            return (Search) super.setCallback(callback);
          }

          @Override
          public Search setFields(java.lang.String fields) {
            return (Search) super.setFields(fields);
          }

          @Override
          public Search setKey(java.lang.String key) {
            return (Search) super.setKey(key);
          }

          @Override
          public Search setOauthToken(java.lang.String oauthToken) {
            return (Search) super.setOauthToken(oauthToken);
          }

          @Override
          public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Search) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Search setQuotaUser(java.lang.String quotaUser) {
            return (Search) super.setQuotaUser(quotaUser);
          }

          @Override
          public Search setUploadType(java.lang.String uploadType) {
            return (Search) super.setUploadType(uploadType);
          }

          @Override
          public Search setUploadProtocol(java.lang.String uploadProtocol) {
            return (Search) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list agents from. Format: `projects/` or
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list agents from. Format: `projects/` or `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list agents from. Format: `projects/` or
           * `projects//locations/`.
           */
          public Search setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public Search setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public Search setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public Search set(String parameterName, Object value) {
            return (Search) super.set(parameterName, value);
          }
        }
        /**
         * Trains the specified agent. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
         * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
         * `response`: An [Empty message](https://developers.google.com/protocol-
         * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
         * sending it queries. See the [training
         * documentation](https://cloud.google.com/dialogflow/es/docs/training).
         *
         * Create a request for the method "agent.train".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Train#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project that the agent to train is associated with. Format: `projects/` or
         *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
         * @return the request
         */
        public Train train(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) throws java.io.IOException {
          Train result = new Train(parent, content);
          initialize(result);
          return result;
        }

        public class Train extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+parent}/agent:train";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Trains the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
           * [Struct message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
           * Note: You should always train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "agent.train".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Train#execute()} method to invoke the remote operation.
           * <p> {@link
           * Train#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project that the agent to train is associated with. Format: `projects/` or
         *        `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest}
           * @since 1.13
           */
          protected Train(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1TrainAgentRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Train set$Xgafv(java.lang.String $Xgafv) {
            return (Train) super.set$Xgafv($Xgafv);
          }

          @Override
          public Train setAccessToken(java.lang.String accessToken) {
            return (Train) super.setAccessToken(accessToken);
          }

          @Override
          public Train setAlt(java.lang.String alt) {
            return (Train) super.setAlt(alt);
          }

          @Override
          public Train setCallback(java.lang.String callback) {
            return (Train) super.setCallback(callback);
          }

          @Override
          public Train setFields(java.lang.String fields) {
            return (Train) super.setFields(fields);
          }

          @Override
          public Train setKey(java.lang.String key) {
            return (Train) super.setKey(key);
          }

          @Override
          public Train setOauthToken(java.lang.String oauthToken) {
            return (Train) super.setOauthToken(oauthToken);
          }

          @Override
          public Train setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Train) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Train setQuotaUser(java.lang.String quotaUser) {
            return (Train) super.setQuotaUser(quotaUser);
          }

          @Override
          public Train setUploadType(java.lang.String uploadType) {
            return (Train) super.setUploadType(uploadType);
          }

          @Override
          public Train setUploadProtocol(java.lang.String uploadProtocol) {
            return (Train) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project that the agent to train is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project that the agent to train is associated with. Format: `projects/` or
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project that the agent to train is associated with. Format: `projects/`
           * or `projects//locations/`.
           */
          public Train setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Train set(String parameterName, Object value) {
            return (Train) super.set(parameterName, value);
          }
        }
        /**
         * Updates the fulfillment.
         *
         * Create a request for the method "agent.updateFulfillment".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link UpdateFulfillment#execute()} method to invoke the remote operation.
         *
         * @param name Required. The unique identifier of the fulfillment. Supported formats: -
         *        `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not
         *        used for Fulfillment in an Environment.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment}
         * @return the request
         */
        public UpdateFulfillment updateFulfillment(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment content) throws java.io.IOException {
          UpdateFulfillment result = new UpdateFulfillment(name, content);
          initialize(result);
          return result;
        }

        public class UpdateFulfillment extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/fulfillment$");

          /**
           * Updates the fulfillment.
           *
           * Create a request for the method "agent.updateFulfillment".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link UpdateFulfillment#execute()} method to invoke the remote
           * operation. <p> {@link UpdateFulfillment#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The unique identifier of the fulfillment. Supported formats: -
         *        `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not
         *        used for Fulfillment in an Environment.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment}
           * @since 1.13
           */
          protected UpdateFulfillment(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Fulfillment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/agent/fulfillment$");
            }
          }

          @Override
          public UpdateFulfillment set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateFulfillment) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateFulfillment setAccessToken(java.lang.String accessToken) {
            return (UpdateFulfillment) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateFulfillment setAlt(java.lang.String alt) {
            return (UpdateFulfillment) super.setAlt(alt);
          }

          @Override
          public UpdateFulfillment setCallback(java.lang.String callback) {
            return (UpdateFulfillment) super.setCallback(callback);
          }

          @Override
          public UpdateFulfillment setFields(java.lang.String fields) {
            return (UpdateFulfillment) super.setFields(fields);
          }

          @Override
          public UpdateFulfillment setKey(java.lang.String key) {
            return (UpdateFulfillment) super.setKey(key);
          }

          @Override
          public UpdateFulfillment setOauthToken(java.lang.String oauthToken) {
            return (UpdateFulfillment) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateFulfillment setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateFulfillment) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateFulfillment setQuotaUser(java.lang.String quotaUser) {
            return (UpdateFulfillment) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateFulfillment setUploadType(java.lang.String uploadType) {
            return (UpdateFulfillment) super.setUploadType(uploadType);
          }

          @Override
          public UpdateFulfillment setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateFulfillment) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The unique identifier of the fulfillment. Supported formats: -
           * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is
           * not used for Fulfillment in an Environment.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The unique identifier of the fulfillment. Supported formats: -
         `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
         Fulfillment in an Environment.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The unique identifier of the fulfillment. Supported formats: -
           * `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is
           * not used for Fulfillment in an Environment.
           */
          public UpdateFulfillment setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/agent/fulfillment$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The mask to control which fields get updated. If the mask is not present, all
           * fields will be updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to control which fields get updated. If the mask is not present, all fields will
         be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The mask to control which fields get updated. If the mask is not present, all
           * fields will be updated.
           */
          public UpdateFulfillment setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public UpdateFulfillment set(String parameterName, Object value) {
            return (UpdateFulfillment) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the EntityTypes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public EntityTypes entityTypes() {
          return new EntityTypes();
        }

        /**
         * The "entityTypes" collection of methods.
         */
        public class EntityTypes {

          /**
           * Deletes entity types in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: An [Empty message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.batchDelete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
           *        `projects//agent`, - `projects//locations//agent`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
           * @return the request
           */
          public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) throws java.io.IOException {
            BatchDelete result = new BatchDelete(parent, content);
            initialize(result);
            return result;
          }

          public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchDelete";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Deletes entity types in the specified agent. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             * Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entityTypes.batchDelete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
           *        `projects//agent`, - `projects//locations//agent`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest}
             * @since 1.13
             */
            protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntityTypesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
              return (BatchDelete) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchDelete setAccessToken(java.lang.String accessToken) {
              return (BatchDelete) super.setAccessToken(accessToken);
            }

            @Override
            public BatchDelete setAlt(java.lang.String alt) {
              return (BatchDelete) super.setAlt(alt);
            }

            @Override
            public BatchDelete setCallback(java.lang.String callback) {
              return (BatchDelete) super.setCallback(callback);
            }

            @Override
            public BatchDelete setFields(java.lang.String fields) {
              return (BatchDelete) super.setFields(fields);
            }

            @Override
            public BatchDelete setKey(java.lang.String key) {
              return (BatchDelete) super.setKey(key);
            }

            @Override
            public BatchDelete setOauthToken(java.lang.String oauthToken) {
              return (BatchDelete) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchDelete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchDelete setQuotaUser(java.lang.String quotaUser) {
              return (BatchDelete) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchDelete setUploadType(java.lang.String uploadType) {
              return (BatchDelete) super.setUploadType(uploadType);
            }

            @Override
            public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchDelete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the agent to delete all entities types for. Supported formats:
             * - `projects//agent`, - `projects//locations//agent`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the agent to delete all entities types for. Supported formats: -
           `projects//agent`, - `projects//locations//agent`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the agent to delete all entities types for. Supported formats:
             * - `projects//agent`, - `projects//locations//agent`.
             */
            public BatchDelete setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchDelete set(String parameterName, Object value) {
              return (BatchDelete) super.set(parameterName, value);
            }
          }
          /**
           * Updates/Creates multiple entity types in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.batchUpdate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the agent to update or create entity types in. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
           * @return the request
           */
          public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) throws java.io.IOException {
            BatchUpdate result = new BatchUpdate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes:batchUpdate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Updates/Creates multiple entity types in the specified agent. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse
             * Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entityTypes.batchUpdate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the agent to update or create entity types in. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest}
             * @since 1.13
             */
            protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchUpdate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchUpdate setAccessToken(java.lang.String accessToken) {
              return (BatchUpdate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchUpdate setAlt(java.lang.String alt) {
              return (BatchUpdate) super.setAlt(alt);
            }

            @Override
            public BatchUpdate setCallback(java.lang.String callback) {
              return (BatchUpdate) super.setCallback(callback);
            }

            @Override
            public BatchUpdate setFields(java.lang.String fields) {
              return (BatchUpdate) super.setFields(fields);
            }

            @Override
            public BatchUpdate setKey(java.lang.String key) {
              return (BatchUpdate) super.setKey(key);
            }

            @Override
            public BatchUpdate setOauthToken(java.lang.String oauthToken) {
              return (BatchUpdate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchUpdate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
              return (BatchUpdate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchUpdate setUploadType(java.lang.String uploadType) {
              return (BatchUpdate) super.setUploadType(uploadType);
            }

            @Override
            public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the agent to update or create entity types in. Supported
             * formats: - `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the agent to update or create entity types in. Supported formats: -
           `projects//agent` - `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the agent to update or create entity types in. Supported
             * formats: - `projects//agent` - `projects//locations//agent`
             */
            public BatchUpdate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchUpdate set(String parameterName, Object value) {
              return (BatchUpdate) super.set(parameterName, value);
            }
          }
          /**
           * Creates an entity type in the specified agent. Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Creates an entity type in the specified agent. Note: You should always train an agent prior to
             * sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entityTypes.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to create a entity type for. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to create a entity type for. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to create a entity type for. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Create setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified entity type. Note: You should always train an agent prior to sending it
           * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/`
           *        - `projects//locations//agent/entityTypes/`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Deletes the specified entity type. Note: You should always train an agent prior to sending it
             * queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entityTypes.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entity type to delete. Supported formats: - `projects//agent/entityTypes/`
           *        - `projects//locations//agent/entityTypes/`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type to delete. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entity type to delete. Supported formats: -
           `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entity type to delete. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified entity type.
           *
           * Create a request for the method "entityTypes.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
           *        `projects//locations//agent/entityTypes/`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Retrieves the specified entity type.
             *
             * Create a request for the method "entityTypes.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
           *        `projects//locations//agent/entityTypes/`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entity type. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entity type. Supported formats: - `projects//agent/entityTypes/` -
           `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entity type. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Get setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all entity types in the specified agent.
           *
           * Create a request for the method "entityTypes.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Returns the list of all entity types in the specified agent.
             *
             * Create a request for the method "entityTypes.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEntityTypesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to list all entity types from. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to list all entity types from. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to list all entity types from. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public List setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified entity type. Note: You should always train an agent prior to sending it
           * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "entityTypes.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
           *        EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

            /**
             * Updates the specified entity type. Note: You should always train an agent prior to sending it
             * queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entityTypes.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
           *        EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
           *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EntityType.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType
             * and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
           EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` -
           `projects//locations//agent/entityTypes/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType
             * and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: -
             * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Patch setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Entities collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Entities.List request = dialogflow.entities().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Entities entities() {
            return new Entities();
          }

          /**
           * The "entities" collection of methods.
           */
          public class Entities {

            /**
             * Creates multiple new entities in the specified entity type. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
             * `response`: An [Empty message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
             * sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entities.batchCreate".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the entity type to create entities in. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
             * @return the request
             */
            public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) throws java.io.IOException {
              BatchCreate result = new BatchCreate(parent, content);
              initialize(result);
              return result;
            }

            public class BatchCreate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v2beta1/{+parent}/entities:batchCreate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

              /**
               * Creates multiple new entities in the specified entity type. This method is a [long-running
               * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
               * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
               * [Struct message](https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
               * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
               * Note: You should always train an agent prior to sending it queries. See the [training
               * documentation](https://cloud.google.com/dialogflow/es/docs/training).
               *
               * Create a request for the method "entities.batchCreate".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the entity type to create entities in. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest}
               * @since 1.13
               */
              protected BatchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateEntitiesRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
              }

              @Override
              public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
                return (BatchCreate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchCreate setAccessToken(java.lang.String accessToken) {
                return (BatchCreate) super.setAccessToken(accessToken);
              }

              @Override
              public BatchCreate setAlt(java.lang.String alt) {
                return (BatchCreate) super.setAlt(alt);
              }

              @Override
              public BatchCreate setCallback(java.lang.String callback) {
                return (BatchCreate) super.setCallback(callback);
              }

              @Override
              public BatchCreate setFields(java.lang.String fields) {
                return (BatchCreate) super.setFields(fields);
              }

              @Override
              public BatchCreate setKey(java.lang.String key) {
                return (BatchCreate) super.setKey(key);
              }

              @Override
              public BatchCreate setOauthToken(java.lang.String oauthToken) {
                return (BatchCreate) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchCreate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchCreate setQuotaUser(java.lang.String quotaUser) {
                return (BatchCreate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchCreate setUploadType(java.lang.String uploadType) {
                return (BatchCreate) super.setUploadType(uploadType);
              }

              @Override
              public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchCreate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the entity type to create entities in. Supported formats: -
               * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the entity type to create entities in. Supported formats: -
             `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the entity type to create entities in. Supported formats: -
               * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              public BatchCreate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchCreate set(String parameterName, Object value) {
                return (BatchCreate) super.set(parameterName, value);
              }
            }
            /**
             * Deletes entities in the specified entity type. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
             * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
             * `response`: An [Empty message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
             * sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "entities.batchDelete".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the entity type to delete entries for. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
             * @return the request
             */
            public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) throws java.io.IOException {
              BatchDelete result = new BatchDelete(parent, content);
              initialize(result);
              return result;
            }

            public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v2beta1/{+parent}/entities:batchDelete";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

              /**
               * Deletes entities in the specified entity type. This method is a [long-running
               * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
               * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
               * [Struct message](https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
               * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
               * Note: You should always train an agent prior to sending it queries. See the [training
               * documentation](https://cloud.google.com/dialogflow/es/docs/training).
               *
               * Create a request for the method "entities.batchDelete".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the entity type to delete entries for. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest}
               * @since 1.13
               */
              protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteEntitiesRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
              }

              @Override
              public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
                return (BatchDelete) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchDelete setAccessToken(java.lang.String accessToken) {
                return (BatchDelete) super.setAccessToken(accessToken);
              }

              @Override
              public BatchDelete setAlt(java.lang.String alt) {
                return (BatchDelete) super.setAlt(alt);
              }

              @Override
              public BatchDelete setCallback(java.lang.String callback) {
                return (BatchDelete) super.setCallback(callback);
              }

              @Override
              public BatchDelete setFields(java.lang.String fields) {
                return (BatchDelete) super.setFields(fields);
              }

              @Override
              public BatchDelete setKey(java.lang.String key) {
                return (BatchDelete) super.setKey(key);
              }

              @Override
              public BatchDelete setOauthToken(java.lang.String oauthToken) {
                return (BatchDelete) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchDelete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchDelete setQuotaUser(java.lang.String quotaUser) {
                return (BatchDelete) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchDelete setUploadType(java.lang.String uploadType) {
                return (BatchDelete) super.setUploadType(uploadType);
              }

              @Override
              public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchDelete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the entity type to delete entries for. Supported formats: -
               * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the entity type to delete entries for. Supported formats: -
             `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the entity type to delete entries for. Supported formats: -
               * `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              public BatchDelete setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchDelete set(String parameterName, Object value) {
                return (BatchDelete) super.set(parameterName, value);
              }
            }
            /**
             * Updates or creates multiple entities in the specified entity type. This method does not affect
             * entities in the entity type that aren't explicitly specified in the request. Note: You should
             * always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-
             * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             *
             * Create a request for the method "entities.batchUpdate".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the entity type to update or create entities in. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
             * @return the request
             */
            public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) throws java.io.IOException {
              BatchUpdate result = new BatchUpdate(parent, content);
              initialize(result);
              return result;
            }

            public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v2beta1/{+parent}/entities:batchUpdate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");

              /**
               * Updates or creates multiple entities in the specified entity type. This method does not affect
               * entities in the entity type that aren't explicitly specified in the request. Note: You should
               * always train an agent prior to sending it queries. See the [training
               * documentation](https://cloud.google.com/dialogflow/es/docs/training). This method is a [long-
               * running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
               * The returned `Operation` type has the following method-specific fields: - `metadata`: An empty
               * [Struct message](https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
               * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
               *
               * Create a request for the method "entities.batchUpdate".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the entity type to update or create entities in. Supported formats: -
             *        `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest}
               * @since 1.13
               */
              protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateEntitiesRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
              }

              @Override
              public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
                return (BatchUpdate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BatchUpdate setAccessToken(java.lang.String accessToken) {
                return (BatchUpdate) super.setAccessToken(accessToken);
              }

              @Override
              public BatchUpdate setAlt(java.lang.String alt) {
                return (BatchUpdate) super.setAlt(alt);
              }

              @Override
              public BatchUpdate setCallback(java.lang.String callback) {
                return (BatchUpdate) super.setCallback(callback);
              }

              @Override
              public BatchUpdate setFields(java.lang.String fields) {
                return (BatchUpdate) super.setFields(fields);
              }

              @Override
              public BatchUpdate setKey(java.lang.String key) {
                return (BatchUpdate) super.setKey(key);
              }

              @Override
              public BatchUpdate setOauthToken(java.lang.String oauthToken) {
                return (BatchUpdate) super.setOauthToken(oauthToken);
              }

              @Override
              public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BatchUpdate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
                return (BatchUpdate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BatchUpdate setUploadType(java.lang.String uploadType) {
                return (BatchUpdate) super.setUploadType(uploadType);
              }

              @Override
              public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the entity type to update or create entities in. Supported
               * formats: - `projects//agent/entityTypes/` -
               * `projects//locations//agent/entityTypes/`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the entity type to update or create entities in. Supported formats: -
             `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the entity type to update or create entities in. Supported
               * formats: - `projects//agent/entityTypes/` -
               * `projects//locations//agent/entityTypes/`
               */
              public BatchUpdate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BatchUpdate set(String parameterName, Object value) {
                return (BatchUpdate) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Environments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Environments.List request = dialogflow.environments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Environments environments() {
          return new Environments();
        }

        /**
         * The "environments" collection of methods.
         */
        public class Environments {

          /**
           * Creates an agent environment.
           *
           * Create a request for the method "environments.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to create an environment for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

            private static final String REST_PATH = "v2beta1/{+parent}/environments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Creates an agent environment.
             *
             * Create a request for the method "environments.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to create an environment for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to create an environment for. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to create an environment for. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to create an environment for. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. The unique id of the new environment. */
            @com.google.api.client.util.Key
            private java.lang.String environmentId;

            /** Required. The unique id of the new environment.
             */
            public java.lang.String getEnvironmentId() {
              return environmentId;
            }

            /** Required. The unique id of the new environment. */
            public Create setEnvironmentId(java.lang.String environmentId) {
              this.environmentId = environmentId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified agent environment.
           *
           * Create a request for the method "environments.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
           *        `projects//locations//agent/environments/`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");

            /**
             * Deletes the specified agent environment.
             *
             * Create a request for the method "environments.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
           *        `projects//locations//agent/environments/`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the environment to delete. / Format: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
           `projects//locations//agent/environments/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the environment to delete. / Format: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified agent environment.
           *
           * Create a request for the method "environments.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
           *        `projects//locations//agent/environments/`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");

            /**
             * Retrieves the specified agent environment.
             *
             * Create a request for the method "environments.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
           *        `projects//locations//agent/environments/`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the environment. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
           `projects//locations//agent/environments/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the environment. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the history of the specified environment.
           *
           * Create a request for the method "environments.getHistory".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link GetHistory#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the environment to retrieve history for. Supported formats: -
           *        `projects//agent/environments/` - `projects//locations//agent/environments/`
           * @return the request
           */
          public GetHistory getHistory(java.lang.String parent) throws java.io.IOException {
            GetHistory result = new GetHistory(parent);
            initialize(result);
            return result;
          }

          public class GetHistory extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EnvironmentHistory> {

            private static final String REST_PATH = "v2beta1/{+parent}/history";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");

            /**
             * Gets the history of the specified environment.
             *
             * Create a request for the method "environments.getHistory".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link GetHistory#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetHistory#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the environment to retrieve history for. Supported formats: -
           *        `projects//agent/environments/` - `projects//locations//agent/environments/`
             * @since 1.13
             */
            protected GetHistory(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1EnvironmentHistory.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetHistory set$Xgafv(java.lang.String $Xgafv) {
              return (GetHistory) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetHistory setAccessToken(java.lang.String accessToken) {
              return (GetHistory) super.setAccessToken(accessToken);
            }

            @Override
            public GetHistory setAlt(java.lang.String alt) {
              return (GetHistory) super.setAlt(alt);
            }

            @Override
            public GetHistory setCallback(java.lang.String callback) {
              return (GetHistory) super.setCallback(callback);
            }

            @Override
            public GetHistory setFields(java.lang.String fields) {
              return (GetHistory) super.setFields(fields);
            }

            @Override
            public GetHistory setKey(java.lang.String key) {
              return (GetHistory) super.setKey(key);
            }

            @Override
            public GetHistory setOauthToken(java.lang.String oauthToken) {
              return (GetHistory) super.setOauthToken(oauthToken);
            }

            @Override
            public GetHistory setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetHistory) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetHistory setQuotaUser(java.lang.String quotaUser) {
              return (GetHistory) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetHistory setUploadType(java.lang.String uploadType) {
              return (GetHistory) super.setUploadType(uploadType);
            }

            @Override
            public GetHistory setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetHistory) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the environment to retrieve history for. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the environment to retrieve history for. Supported formats: -
           `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the environment to retrieve history for. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public GetHistory setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public GetHistory setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public GetHistory setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public GetHistory set(String parameterName, Object value) {
              return (GetHistory) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all non-draft environments of the specified agent.
           *
           * Create a request for the method "environments.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to list all environments from. Format: - `projects//agent` -
           *        `projects//locations//agent`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEnvironmentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/environments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Returns the list of all non-draft environments of the specified agent.
             *
             * Create a request for the method "environments.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to list all environments from. Format: - `projects//agent` -
           *        `projects//locations//agent`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListEnvironmentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to list all environments from. Format: - `projects//agent` -
             * `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to list all environments from. Format: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to list all environments from. Format: - `projects//agent` -
             * `projects//locations//agent`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified agent environment. This method allows you to deploy new agent versions into
           * the environment. When an environment is pointed to a new agent version by setting
           * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
           * that time, the environment keeps on serving the previous version of the agent. After the new
           * agent version is done loading, the environment is set back to the `RUNNING` state. You can use
           * "-" as Environment ID in environment name to update version in "draft" environment. WARNING: this
           * will negate all recent changes to draft and can't be undone. You may want to save the draft to a
           * version before calling this function.
           *
           * Create a request for the method "environments.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. The unique identifier of this agent environment. Supported formats: -
           *        `projects//agent/environments/` - `projects//locations//agent/environments/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");

            /**
             * Updates the specified agent environment. This method allows you to deploy new agent versions
             * into the environment. When an environment is pointed to a new agent version by setting
             * `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
             * that time, the environment keeps on serving the previous version of the agent. After the new
             * agent version is done loading, the environment is set back to the `RUNNING` state. You can use
             * "-" as Environment ID in environment name to update version in "draft" environment. WARNING:
             * this will negate all recent changes to draft and can't be undone. You may want to save the
             * draft to a version before calling this function.
             *
             * Create a request for the method "environments.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. The unique identifier of this agent environment. Supported formats: -
           *        `projects//agent/environments/` - `projects//locations//agent/environments/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Environment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. The unique identifier of this agent environment. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. The unique identifier of this agent environment. Supported formats: -
           `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. The unique identifier of this agent environment. Supported formats: -
             * `projects//agent/environments/` - `projects//locations//agent/environments/`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. This field is used to prevent accidental overwrite of the draft
             * environment, which is an operation that cannot be undone. To confirm that the caller
             * desires this overwrite, this field must be explicitly set to true when updating the
             * draft environment (environment ID = `-`).
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowLoadToDraftAndDiscardChanges;

            /** Optional. This field is used to prevent accidental overwrite of the draft environment, which is an
           operation that cannot be undone. To confirm that the caller desires this overwrite, this field must
           be explicitly set to true when updating the draft environment (environment ID = `-`).
             */
            public java.lang.Boolean getAllowLoadToDraftAndDiscardChanges() {
              return allowLoadToDraftAndDiscardChanges;
            }

            /**
             * Optional. This field is used to prevent accidental overwrite of the draft
             * environment, which is an operation that cannot be undone. To confirm that the caller
             * desires this overwrite, this field must be explicitly set to true when updating the
             * draft environment (environment ID = `-`).
             */
            public Patch setAllowLoadToDraftAndDiscardChanges(java.lang.Boolean allowLoadToDraftAndDiscardChanges) {
              this.allowLoadToDraftAndDiscardChanges = allowLoadToDraftAndDiscardChanges;
              return this;
            }

            /** Required. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Required. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Intents collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Intents.List request = dialogflow.intents().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Intents intents() {
            return new Intents();
          }

          /**
           * The "intents" collection of methods.
           */
          public class Intents {

            /**
             * Returns the list of all intents in the specified agent.
             *
             * Create a request for the method "intents.list".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
             *        `projects//locations//agent`. Alternatively, you can specify the environment to list
             *        intents for. Format: `projects//agent/environments/` or
             *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
             *        be returned for non-draft environment.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/intents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");

              /**
               * Returns the list of all intents in the specified agent.
               *
               * Create a request for the method "intents.list".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
             *        `projects//locations//agent`. Alternatively, you can specify the environment to list
             *        intents for. Format: `projects//agent/environments/` or
             *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
             *        be returned for non-draft environment.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The agent to list all intents from. Format: `projects//agent` or
               * `projects//locations//agent`. Alternatively, you can specify the environment to
               * list intents for. Format: `projects//agent/environments/` or
               * `projects//locations//agent/environments/`. Note: training phrases of the intents
               * will not be returned for non-draft environment.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The agent to list all intents from. Format: `projects//agent` or
             `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
             Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note:
             training phrases of the intents will not be returned for non-draft environment.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The agent to list all intents from. Format: `projects//agent` or
               * `projects//locations//agent`. Alternatively, you can specify the environment to
               * list intents for. Format: `projects//agent/environments/` or
               * `projects//locations//agent/environments/`. Note: training phrases of the intents
               * will not be returned for non-draft environment.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Optional. The resource view to apply to the returned intent. */
              @com.google.api.client.util.Key
              private java.lang.String intentView;

              /** Optional. The resource view to apply to the returned intent.
               */
              public java.lang.String getIntentView() {
                return intentView;
              }

              /** Optional. The resource view to apply to the returned intent. */
              public List setIntentView(java.lang.String intentView) {
                this.intentView = intentView;
                return this;
              }

              /**
               * Optional. The language used to access language-specific data. If not specified, the
               * agent's default language is used. For more information, see [Multilingual intent
               * and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual
               * #intent-entity).
               */
              @com.google.api.client.util.Key
              private java.lang.String languageCode;

              /** Optional. The language used to access language-specific data. If not specified, the agent's default
             language is used. For more information, see [Multilingual intent and entity
             data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
               */
              public java.lang.String getLanguageCode() {
                return languageCode;
              }

              /**
               * Optional. The language used to access language-specific data. If not specified, the
               * agent's default language is used. For more information, see [Multilingual intent
               * and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual
               * #intent-entity).
               */
              public List setLanguageCode(java.lang.String languageCode) {
                this.languageCode = languageCode;
                return this;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from a previous list request.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Users collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Users.List request = dialogflow.users().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Users users() {
            return new Users();
          }

          /**
           * The "users" collection of methods.
           */
          public class Users {

            /**
             * An accessor for creating requests from the Sessions collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Dialogflow dialogflow = new Dialogflow(...);}
             *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Sessions sessions() {
              return new Sessions();
            }

            /**
             * The "sessions" collection of methods.
             */
            public class Sessions {

              /**
               * Deletes all active contexts in the specified session.
               *
               * Create a request for the method "sessions.deleteContexts".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @return the request
               */
              public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
                DeleteContexts result = new DeleteContexts(parent);
                initialize(result);
                return result;
              }

              public class DeleteContexts extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Deletes all active contexts in the specified session.
                 *
                 * Create a request for the method "sessions.deleteContexts".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
                 * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
                 * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                 * the constructor. </p>
                 *
                 * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
               *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @since 1.13
                 */
                protected DeleteContexts(java.lang.String parent) {
                  super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
                  return (DeleteContexts) super.set$Xgafv($Xgafv);
                }

                @Override
                public DeleteContexts setAccessToken(java.lang.String accessToken) {
                  return (DeleteContexts) super.setAccessToken(accessToken);
                }

                @Override
                public DeleteContexts setAlt(java.lang.String alt) {
                  return (DeleteContexts) super.setAlt(alt);
                }

                @Override
                public DeleteContexts setCallback(java.lang.String callback) {
                  return (DeleteContexts) super.setCallback(callback);
                }

                @Override
                public DeleteContexts setFields(java.lang.String fields) {
                  return (DeleteContexts) super.setFields(fields);
                }

                @Override
                public DeleteContexts setKey(java.lang.String key) {
                  return (DeleteContexts) super.setKey(key);
                }

                @Override
                public DeleteContexts setOauthToken(java.lang.String oauthToken) {
                  return (DeleteContexts) super.setOauthToken(oauthToken);
                }

                @Override
                public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (DeleteContexts) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
                  return (DeleteContexts) super.setQuotaUser(quotaUser);
                }

                @Override
                public DeleteContexts setUploadType(java.lang.String uploadType) {
                  return (DeleteContexts) super.setUploadType(uploadType);
                }

                @Override
                public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
                  return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the session to delete all contexts from. Supported formats:
                 * - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the session to delete all contexts from. Supported formats: -
               `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified we assume default 'draft'
               environment. If `User ID` is not specified, we assume default '-' user.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the session to delete all contexts from. Supported formats:
                 * - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified we assume default 'draft' environment. If `User ID` is not specified,
                 * we assume default '-' user.
                 */
                public DeleteContexts setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                @Override
                public DeleteContexts set(String parameterName, Object value) {
                  return (DeleteContexts) super.set(parameterName, value);
                }
              }
              /**
               * Processes a natural language query and returns structured, actionable data as a result. This
               * method is not idempotent, because it may cause contexts and session entity types to be updated,
               * which in turn might affect results of future queries. If you might use [Agent
               * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
               * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
               * functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
               * production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
               * /agents-versions).
               *
               * Create a request for the method "sessions.detectIntent".
               *
               * This request holds the parameters needed by the dialogflow server.  After setting any optional
               * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
               *
               * @param session Required. The name of the session this query is sent to. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment (`Environment ID` might be referred to as environment name at
               *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
               *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
               *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
               *        and `User ID` must not exceed 36 characters. For more information, see the [API
               *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
               *        use agent versions for production traffic. See [Versions and
               *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
               * @return the request
               */
              public DetectIntent detectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
                DetectIntent result = new DetectIntent(session, content);
                initialize(result);
                return result;
              }

              public class DetectIntent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

                private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

                private final java.util.regex.Pattern SESSION_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                /**
                 * Processes a natural language query and returns structured, actionable data as a result. This
                 * method is not idempotent, because it may cause contexts and session entity types to be updated,
                 * which in turn might affect results of future queries. If you might use [Agent
                 * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
                 * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
                 * additional functionality for Agent Assist and other CCAI products. Note: Always use agent
                 * versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 *
                 * Create a request for the method "sessions.detectIntent".
                 *
                 * This request holds the parameters needed by the the dialogflow server.  After setting any
                 * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param session Required. The name of the session this query is sent to. Supported formats: -
               *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               *        `projects//agent/environments//users//sessions/`, -
               *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
               *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
               *        default 'draft' environment (`Environment ID` might be referred to as environment name at
               *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
               *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
               *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
               *        and `User ID` must not exceed 36 characters. For more information, see the [API
               *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
               *        use agent versions for production traffic. See [Versions and
               *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
                 * @since 1.13
                 */
                protected DetectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
                  super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
                  this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                        "Parameter session must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                }

                @Override
                public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
                  return (DetectIntent) super.set$Xgafv($Xgafv);
                }

                @Override
                public DetectIntent setAccessToken(java.lang.String accessToken) {
                  return (DetectIntent) super.setAccessToken(accessToken);
                }

                @Override
                public DetectIntent setAlt(java.lang.String alt) {
                  return (DetectIntent) super.setAlt(alt);
                }

                @Override
                public DetectIntent setCallback(java.lang.String callback) {
                  return (DetectIntent) super.setCallback(callback);
                }

                @Override
                public DetectIntent setFields(java.lang.String fields) {
                  return (DetectIntent) super.setFields(fields);
                }

                @Override
                public DetectIntent setKey(java.lang.String key) {
                  return (DetectIntent) super.setKey(key);
                }

                @Override
                public DetectIntent setOauthToken(java.lang.String oauthToken) {
                  return (DetectIntent) super.setOauthToken(oauthToken);
                }

                @Override
                public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (DetectIntent) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public DetectIntent setQuotaUser(java.lang.String quotaUser) {
                  return (DetectIntent) super.setQuotaUser(quotaUser);
                }

                @Override
                public DetectIntent setUploadType(java.lang.String uploadType) {
                  return (DetectIntent) super.setUploadType(uploadType);
                }

                @Override
                public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
                  return (DetectIntent) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the session this query is sent to. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment (`Environment ID` might be
                 * referred to as environment name at some places). If `User ID` is not specified,
                 * we are using "-". It's up to the API caller to choose an appropriate `Session ID`
                 * and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID`
                 * must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use
                 * agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                @com.google.api.client.util.Key
                private java.lang.String session;

                /** Required. The name of the session this query is sent to. Supported formats: -
               `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               `projects//agent/environments//users//sessions/`, -
               `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
               assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
               environment (`Environment ID` might be referred to as environment name at some places). If `User
               ID` is not specified, we are using "-". It's up to the API caller to choose an appropriate `Session
               ID` and `User Id`. They can be a random number or some type of user and session identifiers
               (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
               For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
               /api-overview). Note: Always use agent versions for production traffic. See [Versions and
               environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                public java.lang.String getSession() {
                  return session;
                }

                /**
                 * Required. The name of the session this query is sent to. Supported formats: -
                 * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 * `projects//agent/environments//users//sessions/`, -
                 * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
                 * not specified we assume default 'us' location. If `Environment ID` is not
                 * specified, we assume default 'draft' environment (`Environment ID` might be
                 * referred to as environment name at some places). If `User ID` is not specified,
                 * we are using "-". It's up to the API caller to choose an appropriate `Session ID`
                 * and `User Id`. They can be a random number or some type of user and session
                 * identifiers (preferably hashed). The length of the `Session ID` and `User ID`
                 * must not exceed 36 characters. For more information, see the [API interactions
                 * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use
                 * agent versions for production traffic. See [Versions and
                 * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                 */
                public DetectIntent setSession(java.lang.String session) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                        "Parameter session must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                  }
                  this.session = session;
                  return this;
                }

                @Override
                public DetectIntent set(String parameterName, Object value) {
                  return (DetectIntent) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Contexts collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code Dialogflow dialogflow = new Dialogflow(...);}
               *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Contexts contexts() {
                return new Contexts();
              }

              /**
               * The "contexts" collection of methods.
               */
              public class Contexts {

                /**
                 * Creates a context. If the specified context already exists, overrides the context.
                 *
                 * Create a request for the method "contexts.create".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
                 *        `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @return the request
                 */
                public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                  Create result = new Create(parent, content);
                  initialize(result);
                  return result;
                }

                public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                  private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                  /**
                   * Creates a context. If the specified context already exists, overrides the context.
                   *
                   * Create a request for the method "contexts.create".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
                 *        `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                   * @since 1.13
                   */
                  protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                    super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                  }

                  @Override
                  public Create set$Xgafv(java.lang.String $Xgafv) {
                    return (Create) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Create setAccessToken(java.lang.String accessToken) {
                    return (Create) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Create setAlt(java.lang.String alt) {
                    return (Create) super.setAlt(alt);
                  }

                  @Override
                  public Create setCallback(java.lang.String callback) {
                    return (Create) super.setCallback(callback);
                  }

                  @Override
                  public Create setFields(java.lang.String fields) {
                    return (Create) super.setFields(fields);
                  }

                  @Override
                  public Create setKey(java.lang.String key) {
                    return (Create) super.setKey(key);
                  }

                  @Override
                  public Create setOauthToken(java.lang.String oauthToken) {
                    return (Create) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Create) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Create setQuotaUser(java.lang.String quotaUser) {
                    return (Create) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Create setUploadType(java.lang.String uploadType) {
                    return (Create) super.setUploadType(uploadType);
                  }

                  @Override
                  public Create setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Create) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The session to create a context for. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
                 `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
                 `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
                 assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
                 environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The session to create a context for. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  public Create setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  @Override
                  public Create set(String parameterName, Object value) {
                    return (Create) super.set(parameterName, value);
                  }
                }
                /**
                 * Deletes the specified context.
                 *
                 * Create a request for the method "contexts.delete".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The name of the context to delete. Supported formats: -
                 *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
                 *        - `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
                 *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                 * @return the request
                 */
                public Delete delete(java.lang.String name) throws java.io.IOException {
                  Delete result = new Delete(name);
                  initialize(result);
                  return result;
                }

                public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                  /**
                   * Deletes the specified context.
                   *
                   * Create a request for the method "contexts.delete".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The name of the context to delete. Supported formats: -
                 *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
                 *        - `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
                 *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                   * @since 1.13
                   */
                  protected Delete(java.lang.String name) {
                    super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                  }

                  @Override
                  public Delete set$Xgafv(java.lang.String $Xgafv) {
                    return (Delete) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Delete setAccessToken(java.lang.String accessToken) {
                    return (Delete) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Delete setAlt(java.lang.String alt) {
                    return (Delete) super.setAlt(alt);
                  }

                  @Override
                  public Delete setCallback(java.lang.String callback) {
                    return (Delete) super.setCallback(callback);
                  }

                  @Override
                  public Delete setFields(java.lang.String fields) {
                    return (Delete) super.setFields(fields);
                  }

                  @Override
                  public Delete setKey(java.lang.String key) {
                    return (Delete) super.setKey(key);
                  }

                  @Override
                  public Delete setOauthToken(java.lang.String oauthToken) {
                    return (Delete) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Delete) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Delete setQuotaUser(java.lang.String quotaUser) {
                    return (Delete) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Delete setUploadType(java.lang.String uploadType) {
                    return (Delete) super.setUploadType(uploadType);
                  }

                  @Override
                  public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Delete) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the context to delete. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The name of the context to delete. Supported formats: -
                 `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 `projects//agent/environments//users//sessions//contexts/`, -
                 `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
                 specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
                 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The name of the context to delete. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  public Delete setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Delete set(String parameterName, Object value) {
                    return (Delete) super.set(parameterName, value);
                  }
                }
                /**
                 * Retrieves the specified context.
                 *
                 * Create a request for the method "contexts.get".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
                 *        `projects//locations//agent/sessions//contexts/`, -
                 *        `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
                 *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                 * @return the request
                 */
                public Get get(java.lang.String name) throws java.io.IOException {
                  Get result = new Get(name);
                  initialize(result);
                  return result;
                }

                public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                  /**
                   * Retrieves the specified context.
                   *
                   * Create a request for the method "contexts.get".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                   * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
                 *        `projects//locations//agent/sessions//contexts/`, -
                 *        `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
                 *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                   * @since 1.13
                   */
                  protected Get(java.lang.String name) {
                    super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public Get set$Xgafv(java.lang.String $Xgafv) {
                    return (Get) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Get setAccessToken(java.lang.String accessToken) {
                    return (Get) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Get setAlt(java.lang.String alt) {
                    return (Get) super.setAlt(alt);
                  }

                  @Override
                  public Get setCallback(java.lang.String callback) {
                    return (Get) super.setCallback(callback);
                  }

                  @Override
                  public Get setFields(java.lang.String fields) {
                    return (Get) super.setFields(fields);
                  }

                  @Override
                  public Get setKey(java.lang.String key) {
                    return (Get) super.setKey(key);
                  }

                  @Override
                  public Get setOauthToken(java.lang.String oauthToken) {
                    return (Get) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Get) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Get setQuotaUser(java.lang.String quotaUser) {
                    return (Get) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Get setUploadType(java.lang.String uploadType) {
                    return (Get) super.setUploadType(uploadType);
                  }

                  @Override
                  public Get setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Get) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the context. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
                 `projects//locations//agent/sessions//contexts/`, -
                 `projects//agent/environments//users//sessions//contexts/`, -
                 `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
                 specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
                 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The name of the context. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  public Get setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Get set(String parameterName, Object value) {
                    return (Get) super.set(parameterName, value);
                  }
                }
                /**
                 * Returns the list of all contexts in the specified session.
                 *
                 * Create a request for the method "contexts.list".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
                 *        `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @return the request
                 */
                public List list(java.lang.String parent) throws java.io.IOException {
                  List result = new List(parent);
                  initialize(result);
                  return result;
                }

                public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

                  private static final String REST_PATH = "v2beta1/{+parent}/contexts";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                  /**
                   * Returns the list of all contexts in the specified session.
                   *
                   * Create a request for the method "contexts.list".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                   * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
                 *        `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   * @since 1.13
                   */
                  protected List(java.lang.String parent) {
                    super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public List set$Xgafv(java.lang.String $Xgafv) {
                    return (List) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public List setAccessToken(java.lang.String accessToken) {
                    return (List) super.setAccessToken(accessToken);
                  }

                  @Override
                  public List setAlt(java.lang.String alt) {
                    return (List) super.setAlt(alt);
                  }

                  @Override
                  public List setCallback(java.lang.String callback) {
                    return (List) super.setCallback(callback);
                  }

                  @Override
                  public List setFields(java.lang.String fields) {
                    return (List) super.setFields(fields);
                  }

                  @Override
                  public List setKey(java.lang.String key) {
                    return (List) super.setKey(key);
                  }

                  @Override
                  public List setOauthToken(java.lang.String oauthToken) {
                    return (List) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (List) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public List setQuotaUser(java.lang.String quotaUser) {
                    return (List) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public List setUploadType(java.lang.String uploadType) {
                    return (List) super.setUploadType(uploadType);
                  }

                  @Override
                  public List setUploadProtocol(java.lang.String uploadProtocol) {
                    return (List) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The session to list all contexts from. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
                 `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
                 `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
                 assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
                 environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The session to list all contexts from. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  public List setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Optional. The maximum number of items to return in a single page. By default
                   * 100 and at most 1000.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.Integer pageSize;

                  /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                   */
                  public java.lang.Integer getPageSize() {
                    return pageSize;
                  }

                  /**
                   * Optional. The maximum number of items to return in a single page. By default
                   * 100 and at most 1000.
                   */
                  public List setPageSize(java.lang.Integer pageSize) {
                    this.pageSize = pageSize;
                    return this;
                  }

                  /** Optional. The next_page_token value returned from a previous list request. */
                  @com.google.api.client.util.Key
                  private java.lang.String pageToken;

                  /** Optional. The next_page_token value returned from a previous list request.
                   */
                  public java.lang.String getPageToken() {
                    return pageToken;
                  }

                  /** Optional. The next_page_token value returned from a previous list request. */
                  public List setPageToken(java.lang.String pageToken) {
                    this.pageToken = pageToken;
                    return this;
                  }

                  @Override
                  public List set(String parameterName, Object value) {
                    return (List) super.set(parameterName, value);
                  }
                }
                /**
                 * Updates the specified context.
                 *
                 * Create a request for the method "contexts.patch".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The unique identifier of the context. Supported formats: -
                 *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
                 *        - `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
                 *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
                 *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
                 *        environment. If `User ID` is not specified, we assume default '-' user. The following
                 *        context names are reserved for internal use by Dialogflow. You should not use these
                 *        contexts or create contexts with these names: * `__system_counters__` *
                 *        `*_id_dialog_context` * `*_dialog_params_size`
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                 * @return the request
                 */
                public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
                  Patch result = new Patch(name, content);
                  initialize(result);
                  return result;
                }

                public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");

                  /**
                   * Updates the specified context.
                   *
                   * Create a request for the method "contexts.patch".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The unique identifier of the context. Supported formats: -
                 *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
                 *        - `projects//agent/environments//users//sessions//contexts/`, -
                 *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
                 *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
                 *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
                 *        environment. If `User ID` is not specified, we assume default '-' user. The following
                 *        context names are reserved for internal use by Dialogflow. You should not use these
                 *        contexts or create contexts with these names: * `__system_counters__` *
                 *        `*_id_dialog_context` * `*_dialog_params_size`
                   * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
                   * @since 1.13
                   */
                  protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                    super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                  }

                  @Override
                  public Patch set$Xgafv(java.lang.String $Xgafv) {
                    return (Patch) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Patch setAccessToken(java.lang.String accessToken) {
                    return (Patch) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Patch setAlt(java.lang.String alt) {
                    return (Patch) super.setAlt(alt);
                  }

                  @Override
                  public Patch setCallback(java.lang.String callback) {
                    return (Patch) super.setCallback(callback);
                  }

                  @Override
                  public Patch setFields(java.lang.String fields) {
                    return (Patch) super.setFields(fields);
                  }

                  @Override
                  public Patch setKey(java.lang.String key) {
                    return (Patch) super.setKey(key);
                  }

                  @Override
                  public Patch setOauthToken(java.lang.String oauthToken) {
                    return (Patch) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Patch) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Patch setQuotaUser(java.lang.String quotaUser) {
                    return (Patch) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Patch setUploadType(java.lang.String uploadType) {
                    return (Patch) super.setUploadType(uploadType);
                  }

                  @Override
                  public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Patch) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The unique identifier of the context. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, The
                   * `Context ID` is always converted to lowercase, may only contain characters in
                   * a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user. The following context names are reserved
                   * for internal use by Dialogflow. You should not use these contexts or create
                   * contexts with these names: * `__system_counters__` * `*_id_dialog_context` *
                   * `*_dialog_params_size`
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The unique identifier of the context. Supported formats: -
                 `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
                 `projects//agent/environments//users//sessions//contexts/`, -
                 `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always
                 converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes
                 long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
                 not specified, we assume default '-' user. The following context names are reserved for internal
                 use by Dialogflow. You should not use these contexts or create contexts with these names: *
                 `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The unique identifier of the context. Supported formats: -
                   * `projects//agent/sessions//contexts/`, -
                   * `projects//locations//agent/sessions//contexts/`, -
                   * `projects//agent/environments//users//sessions//contexts/`, -
                   * `projects//locations//agent/environments//users//sessions//contexts/`, The
                   * `Context ID` is always converted to lowercase, may only contain characters in
                   * a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user. The following context names are reserved
                   * for internal use by Dialogflow. You should not use these contexts or create
                   * contexts with these names: * `__system_counters__` * `*_id_dialog_context` *
                   * `*_dialog_params_size`
                   */
                  public Patch setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  /** Optional. The mask to control which fields get updated. */
                  @com.google.api.client.util.Key
                  private String updateMask;

                  /** Optional. The mask to control which fields get updated.
                   */
                  public String getUpdateMask() {
                    return updateMask;
                  }

                  /** Optional. The mask to control which fields get updated. */
                  public Patch setUpdateMask(String updateMask) {
                    this.updateMask = updateMask;
                    return this;
                  }

                  @Override
                  public Patch set(String parameterName, Object value) {
                    return (Patch) super.set(parameterName, value);
                  }
                }

              }
              /**
               * An accessor for creating requests from the EntityTypes collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code Dialogflow dialogflow = new Dialogflow(...);}
               *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public EntityTypes entityTypes() {
                return new EntityTypes();
              }

              /**
               * The "entityTypes" collection of methods.
               */
              public class EntityTypes {

                /**
                 * Creates a session entity type. If the specified session entity type already exists, overrides the
                 * session entity type. This method doesn't work with Google Assistant integration. Contact
                 * Dialogflow support if you need to use session entities with Google Assistant integration.
                 *
                 * Create a request for the method "entityTypes.create".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The session to create a session entity type for. Supported formats: -
                 *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @return the request
                 */
                public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                  Create result = new Create(parent, content);
                  initialize(result);
                  return result;
                }

                public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                  private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                  /**
                   * Creates a session entity type. If the specified session entity type already exists, overrides
                   * the session entity type. This method doesn't work with Google Assistant integration. Contact
                   * Dialogflow support if you need to use session entities with Google Assistant integration.
                   *
                   * Create a request for the method "entityTypes.create".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The session to create a session entity type for. Supported formats: -
                 *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                   * @since 1.13
                   */
                  protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                    super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                  }

                  @Override
                  public Create set$Xgafv(java.lang.String $Xgafv) {
                    return (Create) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Create setAccessToken(java.lang.String accessToken) {
                    return (Create) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Create setAlt(java.lang.String alt) {
                    return (Create) super.setAlt(alt);
                  }

                  @Override
                  public Create setCallback(java.lang.String callback) {
                    return (Create) super.setCallback(callback);
                  }

                  @Override
                  public Create setFields(java.lang.String fields) {
                    return (Create) super.setFields(fields);
                  }

                  @Override
                  public Create setKey(java.lang.String key) {
                    return (Create) super.setKey(key);
                  }

                  @Override
                  public Create setOauthToken(java.lang.String oauthToken) {
                    return (Create) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Create) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Create setQuotaUser(java.lang.String quotaUser) {
                    return (Create) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Create setUploadType(java.lang.String uploadType) {
                    return (Create) super.setUploadType(uploadType);
                  }

                  @Override
                  public Create setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Create) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The session to create a session entity type for. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The session to create a session entity type for. Supported formats: -
                 `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 `projects//agent/environments//users//sessions/`, -
                 `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
                 assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
                 environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The session to create a session entity type for. Supported formats: -
                   * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  public Create setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  @Override
                  public Create set(String parameterName, Object value) {
                    return (Create) super.set(parameterName, value);
                  }
                }
                /**
                 * Deletes the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
                 * integration.
                 *
                 * Create a request for the method "entityTypes.delete".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The name of the entity type to delete. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                 * @return the request
                 */
                public Delete delete(java.lang.String name) throws java.io.IOException {
                  Delete result = new Delete(name);
                  initialize(result);
                  return result;
                }

                public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                  /**
                   * Deletes the specified session entity type. This method doesn't work with Google Assistant
                   * integration. Contact Dialogflow support if you need to use session entities with Google
                   * Assistant integration.
                   *
                   * Create a request for the method "entityTypes.delete".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The name of the entity type to delete. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                   * @since 1.13
                   */
                  protected Delete(java.lang.String name) {
                    super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                  }

                  @Override
                  public Delete set$Xgafv(java.lang.String $Xgafv) {
                    return (Delete) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Delete setAccessToken(java.lang.String accessToken) {
                    return (Delete) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Delete setAlt(java.lang.String alt) {
                    return (Delete) super.setAlt(alt);
                  }

                  @Override
                  public Delete setCallback(java.lang.String callback) {
                    return (Delete) super.setCallback(callback);
                  }

                  @Override
                  public Delete setFields(java.lang.String fields) {
                    return (Delete) super.setFields(fields);
                  }

                  @Override
                  public Delete setKey(java.lang.String key) {
                    return (Delete) super.setKey(key);
                  }

                  @Override
                  public Delete setOauthToken(java.lang.String oauthToken) {
                    return (Delete) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Delete) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Delete setQuotaUser(java.lang.String quotaUser) {
                    return (Delete) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Delete setUploadType(java.lang.String uploadType) {
                    return (Delete) super.setUploadType(uploadType);
                  }

                  @Override
                  public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Delete) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the entity type to delete. Supported formats: -
                   * `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The name of the entity type to delete. Supported formats: -
                 `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 `projects//agent/environments//users//sessions//entityTypes/` -
                 `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
                 specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
                 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The name of the entity type to delete. Supported formats: -
                   * `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  public Delete setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Delete set(String parameterName, Object value) {
                    return (Delete) super.set(parameterName, value);
                  }
                }
                /**
                 * Retrieves the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
                 * integration.
                 *
                 * Create a request for the method "entityTypes.get".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The name of the session entity type. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                 * @return the request
                 */
                public Get get(java.lang.String name) throws java.io.IOException {
                  Get result = new Get(name);
                  initialize(result);
                  return result;
                }

                public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                  /**
                   * Retrieves the specified session entity type. This method doesn't work with Google Assistant
                   * integration. Contact Dialogflow support if you need to use session entities with Google
                   * Assistant integration.
                   *
                   * Create a request for the method "entityTypes.get".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                   * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The name of the session entity type. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user.
                   * @since 1.13
                   */
                  protected Get(java.lang.String name) {
                    super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public Get set$Xgafv(java.lang.String $Xgafv) {
                    return (Get) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Get setAccessToken(java.lang.String accessToken) {
                    return (Get) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Get setAlt(java.lang.String alt) {
                    return (Get) super.setAlt(alt);
                  }

                  @Override
                  public Get setCallback(java.lang.String callback) {
                    return (Get) super.setCallback(callback);
                  }

                  @Override
                  public Get setFields(java.lang.String fields) {
                    return (Get) super.setFields(fields);
                  }

                  @Override
                  public Get setKey(java.lang.String key) {
                    return (Get) super.setKey(key);
                  }

                  @Override
                  public Get setOauthToken(java.lang.String oauthToken) {
                    return (Get) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Get) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Get setQuotaUser(java.lang.String quotaUser) {
                    return (Get) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Get setUploadType(java.lang.String uploadType) {
                    return (Get) super.setUploadType(uploadType);
                  }

                  @Override
                  public Get setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Get) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the session entity type. Supported formats: -
                   * `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The name of the session entity type. Supported formats: -
                 `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 `projects//agent/environments//users//sessions//entityTypes/` -
                 `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
                 specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
                 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The name of the session entity type. Supported formats: -
                   * `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user.
                   */
                  public Get setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  @Override
                  public Get set(String parameterName, Object value) {
                    return (Get) super.set(parameterName, value);
                  }
                }
                /**
                 * Returns the list of all session entity types in the specified session. This method doesn't work
                 * with Google Assistant integration. Contact Dialogflow support if you need to use session entities
                 * with Google Assistant integration.
                 *
                 * Create a request for the method "entityTypes.list".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The session to list all session entity types from. Supported formats: -
                 *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                 * @return the request
                 */
                public List list(java.lang.String parent) throws java.io.IOException {
                  List result = new List(parent);
                  initialize(result);
                  return result;
                }

                public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

                  private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");

                  /**
                   * Returns the list of all session entity types in the specified session. This method doesn't work
                   * with Google Assistant integration. Contact Dialogflow support if you need to use session
                   * entities with Google Assistant integration.
                   *
                   * Create a request for the method "entityTypes.list".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                   * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                   * must be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The session to list all session entity types from. Supported formats: -
                 *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 *        `projects//agent/environments//users//sessions/`, -
                 *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
                 *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
                 *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                   * @since 1.13
                   */
                  protected List(java.lang.String parent) {
                    super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public List set$Xgafv(java.lang.String $Xgafv) {
                    return (List) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public List setAccessToken(java.lang.String accessToken) {
                    return (List) super.setAccessToken(accessToken);
                  }

                  @Override
                  public List setAlt(java.lang.String alt) {
                    return (List) super.setAlt(alt);
                  }

                  @Override
                  public List setCallback(java.lang.String callback) {
                    return (List) super.setCallback(callback);
                  }

                  @Override
                  public List setFields(java.lang.String fields) {
                    return (List) super.setFields(fields);
                  }

                  @Override
                  public List setKey(java.lang.String key) {
                    return (List) super.setKey(key);
                  }

                  @Override
                  public List setOauthToken(java.lang.String oauthToken) {
                    return (List) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (List) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public List setQuotaUser(java.lang.String quotaUser) {
                    return (List) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public List setUploadType(java.lang.String uploadType) {
                    return (List) super.setUploadType(uploadType);
                  }

                  @Override
                  public List setUploadProtocol(java.lang.String uploadProtocol) {
                    return (List) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The session to list all session entity types from. Supported formats:
                   * - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The session to list all session entity types from. Supported formats: -
                 `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                 `projects//agent/environments//users//sessions/`, -
                 `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
                 assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
                 environment. If `User ID` is not specified, we assume default '-' user.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The session to list all session entity types from. Supported formats:
                   * - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
                   * `projects//agent/environments//users//sessions/`, -
                   * `projects//locations//agent/environments//users//sessions/`, If `Location ID`
                   * is not specified we assume default 'us' location. If `Environment ID` is not
                   * specified, we assume default 'draft' environment. If `User ID` is not
                   * specified, we assume default '-' user.
                   */
                  public List setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Optional. The maximum number of items to return in a single page. By default
                   * 100 and at most 1000.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.Integer pageSize;

                  /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                   */
                  public java.lang.Integer getPageSize() {
                    return pageSize;
                  }

                  /**
                   * Optional. The maximum number of items to return in a single page. By default
                   * 100 and at most 1000.
                   */
                  public List setPageSize(java.lang.Integer pageSize) {
                    this.pageSize = pageSize;
                    return this;
                  }

                  /** Optional. The next_page_token value returned from a previous list request. */
                  @com.google.api.client.util.Key
                  private java.lang.String pageToken;

                  /** Optional. The next_page_token value returned from a previous list request.
                   */
                  public java.lang.String getPageToken() {
                    return pageToken;
                  }

                  /** Optional. The next_page_token value returned from a previous list request. */
                  public List setPageToken(java.lang.String pageToken) {
                    this.pageToken = pageToken;
                    return this;
                  }

                  @Override
                  public List set(String parameterName, Object value) {
                    return (List) super.set(parameterName, value);
                  }
                }
                /**
                 * Updates the specified session entity type. This method doesn't work with Google Assistant
                 * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
                 * integration.
                 *
                 * Create a request for the method "entityTypes.patch".
                 *
                 * This request holds the parameters needed by the dialogflow server.  After setting any optional
                 * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                 *
                 * @param name Required. The unique identifier of this session entity type. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user. `` must be the display name of an existing entity type in the same agent that will
                 *        be overridden or supplemented.
                 * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                 * @return the request
                 */
                public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
                  Patch result = new Patch(name, content);
                  initialize(result);
                  return result;
                }

                public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

                  private static final String REST_PATH = "v2beta1/{+name}";

                  private final java.util.regex.Pattern NAME_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");

                  /**
                   * Updates the specified session entity type. This method doesn't work with Google Assistant
                   * integration. Contact Dialogflow support if you need to use session entities with Google
                   * Assistant integration.
                   *
                   * Create a request for the method "entityTypes.patch".
                   *
                   * This request holds the parameters needed by the the dialogflow server.  After setting any
                   * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param name Required. The unique identifier of this session entity type. Supported formats: -
                 *        `projects//agent/sessions//entityTypes/` -
                 *        `projects//locations//agent/sessions//entityTypes/` -
                 *        `projects//agent/environments//users//sessions//entityTypes/` -
                 *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
                 *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
                 *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                 *        user. `` must be the display name of an existing entity type in the same agent that will
                 *        be overridden or supplemented.
                   * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
                   * @since 1.13
                   */
                  protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                    super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                    this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                  }

                  @Override
                  public Patch set$Xgafv(java.lang.String $Xgafv) {
                    return (Patch) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Patch setAccessToken(java.lang.String accessToken) {
                    return (Patch) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Patch setAlt(java.lang.String alt) {
                    return (Patch) super.setAlt(alt);
                  }

                  @Override
                  public Patch setCallback(java.lang.String callback) {
                    return (Patch) super.setCallback(callback);
                  }

                  @Override
                  public Patch setFields(java.lang.String fields) {
                    return (Patch) super.setFields(fields);
                  }

                  @Override
                  public Patch setKey(java.lang.String key) {
                    return (Patch) super.setKey(key);
                  }

                  @Override
                  public Patch setOauthToken(java.lang.String oauthToken) {
                    return (Patch) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Patch) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Patch setQuotaUser(java.lang.String quotaUser) {
                    return (Patch) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Patch setUploadType(java.lang.String uploadType) {
                    return (Patch) super.setUploadType(uploadType);
                  }

                  @Override
                  public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Patch) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The unique identifier of this session entity type. Supported formats:
                   * - `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user. `` must be the display name of an
                   * existing entity type in the same agent that will be overridden or supplemented.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String name;

                  /** Required. The unique identifier of this session entity type. Supported formats: -
                 `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
                 `projects//agent/environments//users//sessions//entityTypes/` -
                 `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
                 specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
                 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the
                 display name of an existing entity type in the same agent that will be overridden or supplemented.
                   */
                  public java.lang.String getName() {
                    return name;
                  }

                  /**
                   * Required. The unique identifier of this session entity type. Supported formats:
                   * - `projects//agent/sessions//entityTypes/` -
                   * `projects//locations//agent/sessions//entityTypes/` -
                   * `projects//agent/environments//users//sessions//entityTypes/` -
                   * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
                   * `Location ID` is not specified we assume default 'us' location. If `Environment
                   * ID` is not specified, we assume default 'draft' environment. If `User ID` is
                   * not specified, we assume default '-' user. `` must be the display name of an
                   * existing entity type in the same agent that will be overridden or supplemented.
                   */
                  public Patch setName(java.lang.String name) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                          "Parameter name must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$");
                    }
                    this.name = name;
                    return this;
                  }

                  /** Optional. The mask to control which fields get updated. */
                  @com.google.api.client.util.Key
                  private String updateMask;

                  /** Optional. The mask to control which fields get updated.
                   */
                  public String getUpdateMask() {
                    return updateMask;
                  }

                  /** Optional. The mask to control which fields get updated. */
                  public Patch setUpdateMask(String updateMask) {
                    this.updateMask = updateMask;
                    return this;
                  }

                  @Override
                  public Patch set(String parameterName, Object value) {
                    return (Patch) super.set(parameterName, value);
                  }
                }

              }
            }
          }
        }
        /**
         * An accessor for creating requests from the Intents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Intents.List request = dialogflow.intents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Intents intents() {
          return new Intents();
        }

        /**
         * The "intents" collection of methods.
         */
        public class Intents {

          /**
           * Deletes intents in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: An [Empty message](https://developers.google.com/protocol-
           * buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to
           * sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.batchDelete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
           * @return the request
           */
          public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) throws java.io.IOException {
            BatchDelete result = new BatchDelete(parent, content);
            initialize(result);
            return result;
          }

          public class BatchDelete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/intents:batchDelete";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Deletes intents in the specified agent. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty
             * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
             * Note: You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "intents.batchDelete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the agent to delete all entities types for. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest}
             * @since 1.13
             */
            protected BatchDelete(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchDeleteIntentsRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
              return (BatchDelete) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchDelete setAccessToken(java.lang.String accessToken) {
              return (BatchDelete) super.setAccessToken(accessToken);
            }

            @Override
            public BatchDelete setAlt(java.lang.String alt) {
              return (BatchDelete) super.setAlt(alt);
            }

            @Override
            public BatchDelete setCallback(java.lang.String callback) {
              return (BatchDelete) super.setCallback(callback);
            }

            @Override
            public BatchDelete setFields(java.lang.String fields) {
              return (BatchDelete) super.setFields(fields);
            }

            @Override
            public BatchDelete setKey(java.lang.String key) {
              return (BatchDelete) super.setKey(key);
            }

            @Override
            public BatchDelete setOauthToken(java.lang.String oauthToken) {
              return (BatchDelete) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchDelete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchDelete setQuotaUser(java.lang.String quotaUser) {
              return (BatchDelete) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchDelete setUploadType(java.lang.String uploadType) {
              return (BatchDelete) super.setUploadType(uploadType);
            }

            @Override
            public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchDelete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the agent to delete all entities types for. Supported formats:
             * - `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the agent to delete all entities types for. Supported formats: -
           `projects//agent` - `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the agent to delete all entities types for. Supported formats:
             * - `projects//agent` - `projects//locations//agent`
             */
            public BatchDelete setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchDelete set(String parameterName, Object value) {
              return (BatchDelete) super.set(parameterName, value);
            }
          }
          /**
           * Updates/Creates multiple intents in the specified agent. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
           * `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
           * message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
           * `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it
           * queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.batchUpdate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the agent to update or create intents in. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
           * @return the request
           */
          public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) throws java.io.IOException {
            BatchUpdate result = new BatchUpdate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchUpdate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/intents:batchUpdate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Updates/Creates multiple intents in the specified agent. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
             * returned `Operation` type has the following method-specific fields: - `metadata`: An empty
             * [Struct message](https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note:
             * You should always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "intents.batchUpdate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the agent to update or create intents in. Supported formats: -
           *        `projects//agent` - `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest}
             * @since 1.13
             */
            protected BatchUpdate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchUpdateIntentsRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchUpdate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchUpdate setAccessToken(java.lang.String accessToken) {
              return (BatchUpdate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchUpdate setAlt(java.lang.String alt) {
              return (BatchUpdate) super.setAlt(alt);
            }

            @Override
            public BatchUpdate setCallback(java.lang.String callback) {
              return (BatchUpdate) super.setCallback(callback);
            }

            @Override
            public BatchUpdate setFields(java.lang.String fields) {
              return (BatchUpdate) super.setFields(fields);
            }

            @Override
            public BatchUpdate setKey(java.lang.String key) {
              return (BatchUpdate) super.setKey(key);
            }

            @Override
            public BatchUpdate setOauthToken(java.lang.String oauthToken) {
              return (BatchUpdate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchUpdate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
              return (BatchUpdate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchUpdate setUploadType(java.lang.String uploadType) {
              return (BatchUpdate) super.setUploadType(uploadType);
            }

            @Override
            public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the agent to update or create intents in. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the agent to update or create intents in. Supported formats: -
           `projects//agent` - `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the agent to update or create intents in. Supported formats: -
             * `projects//agent` - `projects//locations//agent`
             */
            public BatchUpdate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchUpdate set(String parameterName, Object value) {
              return (BatchUpdate) super.set(parameterName, value);
            }
          }
          /**
           * Creates an intent in the specified agent. Note: You should always train an agent prior to sending
           * it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to create a intent for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

            private static final String REST_PATH = "v2beta1/{+parent}/intents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Creates an intent in the specified agent. Note: You should always train an agent prior to
             * sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "intents.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to create a intent for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to create a intent for. Supported formats: - `projects//agent` -
             * `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to create a intent for. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to create a intent for. Supported formats: - `projects//agent` -
             * `projects//locations//agent`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The resource view to apply to the returned intent. */
            @com.google.api.client.util.Key
            private java.lang.String intentView;

            /** Optional. The resource view to apply to the returned intent.
             */
            public java.lang.String getIntentView() {
              return intentView;
            }

            /** Optional. The resource view to apply to the returned intent. */
            public Create setIntentView(java.lang.String intentView) {
              this.intentView = intentView;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Create setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified intent and its direct or indirect followup intents. Note: You should always
           * train an agent prior to sending it queries. See the [training
           * documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
           *        we also delete them. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");

            /**
             * Deletes the specified intent and its direct or indirect followup intents. Note: You should
             * always train an agent prior to sending it queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "intents.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
           *        we also delete them. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the intent to delete. If this intent has direct or indirect
             * followup intents, we also delete them. Supported formats: -
             * `projects//agent/intents/` - `projects//locations//agent/intents/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
           we also delete them. Supported formats: - `projects//agent/intents/` -
           `projects//locations//agent/intents/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the intent to delete. If this intent has direct or indirect
             * followup intents, we also delete them. Supported formats: -
             * `projects//agent/intents/` - `projects//locations//agent/intents/`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified intent.
           *
           * Create a request for the method "intents.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");

            /**
             * Retrieves the specified intent.
             *
             * Create a request for the method "intents.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
           `projects//locations//agent/intents/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the intent. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The resource view to apply to the returned intent. */
            @com.google.api.client.util.Key
            private java.lang.String intentView;

            /** Optional. The resource view to apply to the returned intent.
             */
            public java.lang.String getIntentView() {
              return intentView;
            }

            /** Optional. The resource view to apply to the returned intent. */
            public Get setIntentView(java.lang.String intentView) {
              this.intentView = intentView;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Get setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all intents in the specified agent.
           *
           * Create a request for the method "intents.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
           *        `projects//locations//agent`. Alternatively, you can specify the environment to list
           *        intents for. Format: `projects//agent/environments/` or
           *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
           *        be returned for non-draft environment.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/intents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Returns the list of all intents in the specified agent.
             *
             * Create a request for the method "intents.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to list all intents from. Format: `projects//agent` or
           *        `projects//locations//agent`. Alternatively, you can specify the environment to list
           *        intents for. Format: `projects//agent/environments/` or
           *        `projects//locations//agent/environments/`. Note: training phrases of the intents will not
           *        be returned for non-draft environment.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListIntentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to list all intents from. Format: `projects//agent` or
             * `projects//locations//agent`. Alternatively, you can specify the environment to list
             * intents for. Format: `projects//agent/environments/` or
             * `projects//locations//agent/environments/`. Note: training phrases of the intents
             * will not be returned for non-draft environment.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to list all intents from. Format: `projects//agent` or
           `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
           Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note:
           training phrases of the intents will not be returned for non-draft environment.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to list all intents from. Format: `projects//agent` or
             * `projects//locations//agent`. Alternatively, you can specify the environment to list
             * intents for. Format: `projects//agent/environments/` or
             * `projects//locations//agent/environments/`. Note: training phrases of the intents
             * will not be returned for non-draft environment.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The resource view to apply to the returned intent. */
            @com.google.api.client.util.Key
            private java.lang.String intentView;

            /** Optional. The resource view to apply to the returned intent.
             */
            public java.lang.String getIntentView() {
              return intentView;
            }

            /** Optional. The resource view to apply to the returned intent. */
            public List setIntentView(java.lang.String intentView) {
              this.intentView = intentView;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public List setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified intent. Note: You should always train an agent prior to sending it queries.
           * See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
           *
           * Create a request for the method "intents.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
           *        Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");

            /**
             * Updates the specified intent. Note: You should always train an agent prior to sending it
             * queries. See the [training
             * documentation](https://cloud.google.com/dialogflow/es/docs/training).
             *
             * Create a request for the method "intents.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
           *        Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
           *        `projects//locations//agent/intents/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Intent.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
             * Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
           Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
           `projects//locations//agent/intents/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
             * Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
             * `projects//locations//agent/intents/`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The resource view to apply to the returned intent. */
            @com.google.api.client.util.Key
            private java.lang.String intentView;

            /** Optional. The resource view to apply to the returned intent.
             */
            public java.lang.String getIntentView() {
              return intentView;
            }

            /** Optional. The resource view to apply to the returned intent. */
            public Patch setIntentView(java.lang.String intentView) {
              this.intentView = intentView;
              return this;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            @com.google.api.client.util.Key
            private java.lang.String languageCode;

            /** Optional. The language used to access language-specific data. If not specified, the agent's default
           language is used. For more information, see [Multilingual intent and entity
           data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
             */
            public java.lang.String getLanguageCode() {
              return languageCode;
            }

            /**
             * Optional. The language used to access language-specific data. If not specified, the
             * agent's default language is used. For more information, see [Multilingual intent and
             * entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-
             * entity).
             */
            public Patch setLanguageCode(java.lang.String languageCode) {
              this.languageCode = languageCode;
              return this;
            }

            /** Optional. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Optional. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Sessions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Sessions.List request = dialogflow.sessions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Sessions sessions() {
          return new Sessions();
        }

        /**
         * The "sessions" collection of methods.
         */
        public class Sessions {

          /**
           * Deletes all active contexts in the specified session.
           *
           * Create a request for the method "sessions.deleteContexts".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link DeleteContexts#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
           * @return the request
           */
          public DeleteContexts deleteContexts(java.lang.String parent) throws java.io.IOException {
            DeleteContexts result = new DeleteContexts(parent);
            initialize(result);
            return result;
          }

          public class DeleteContexts extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+parent}/contexts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

            /**
             * Deletes all active contexts in the specified session.
             *
             * Create a request for the method "sessions.deleteContexts".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link DeleteContexts#execute()} method to invoke the remote
             * operation. <p> {@link DeleteContexts#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Required. The name of the session to delete all contexts from. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified we assume
           *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @since 1.13
             */
            protected DeleteContexts(java.lang.String parent) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public DeleteContexts set$Xgafv(java.lang.String $Xgafv) {
              return (DeleteContexts) super.set$Xgafv($Xgafv);
            }

            @Override
            public DeleteContexts setAccessToken(java.lang.String accessToken) {
              return (DeleteContexts) super.setAccessToken(accessToken);
            }

            @Override
            public DeleteContexts setAlt(java.lang.String alt) {
              return (DeleteContexts) super.setAlt(alt);
            }

            @Override
            public DeleteContexts setCallback(java.lang.String callback) {
              return (DeleteContexts) super.setCallback(callback);
            }

            @Override
            public DeleteContexts setFields(java.lang.String fields) {
              return (DeleteContexts) super.setFields(fields);
            }

            @Override
            public DeleteContexts setKey(java.lang.String key) {
              return (DeleteContexts) super.setKey(key);
            }

            @Override
            public DeleteContexts setOauthToken(java.lang.String oauthToken) {
              return (DeleteContexts) super.setOauthToken(oauthToken);
            }

            @Override
            public DeleteContexts setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DeleteContexts) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DeleteContexts setQuotaUser(java.lang.String quotaUser) {
              return (DeleteContexts) super.setQuotaUser(quotaUser);
            }

            @Override
            public DeleteContexts setUploadType(java.lang.String uploadType) {
              return (DeleteContexts) super.setUploadType(uploadType);
            }

            @Override
            public DeleteContexts setUploadProtocol(java.lang.String uploadProtocol) {
              return (DeleteContexts) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the session to delete all contexts from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the session to delete all contexts from. Supported formats: -
           `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified we assume default 'draft'
           environment. If `User ID` is not specified, we assume default '-' user.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the session to delete all contexts from. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified we
             * assume default 'draft' environment. If `User ID` is not specified, we assume default
             * '-' user.
             */
            public DeleteContexts setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public DeleteContexts set(String parameterName, Object value) {
              return (DeleteContexts) super.set(parameterName, value);
            }
          }
          /**
           * Processes a natural language query and returns structured, actionable data as a result. This
           * method is not idempotent, because it may cause contexts and session entity types to be updated,
           * which in turn might affect results of future queries. If you might use [Agent
           * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
           * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
           * functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
           * production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
           * /agents-versions).
           *
           * Create a request for the method "sessions.detectIntent".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link DetectIntent#execute()} method to invoke the remote operation.
           *
           * @param session Required. The name of the session this query is sent to. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment (`Environment ID` might be referred to as environment name at
           *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
           *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
           *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
           *        and `User ID` must not exceed 36 characters. For more information, see the [API
           *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
           *        use agent versions for production traffic. See [Versions and
           *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
           * @return the request
           */
          public DetectIntent detectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) throws java.io.IOException {
            DetectIntent result = new DetectIntent(session, content);
            initialize(result);
            return result;
          }

          public class DetectIntent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse> {

            private static final String REST_PATH = "v2beta1/{+session}:detectIntent";

            private final java.util.regex.Pattern SESSION_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

            /**
             * Processes a natural language query and returns structured, actionable data as a result. This
             * method is not idempotent, because it may cause contexts and session entity types to be updated,
             * which in turn might affect results of future queries. If you might use [Agent
             * Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
             * future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
             * additional functionality for Agent Assist and other CCAI products. Note: Always use agent
             * versions for production traffic. See [Versions and
             * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             *
             * Create a request for the method "sessions.detectIntent".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link DetectIntent#execute()} method to invoke the remote
             * operation. <p> {@link
             * DetectIntent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param session Required. The name of the session this query is sent to. Supported formats: -
           *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           *        `projects//agent/environments//users//sessions/`, -
           *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
           *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
           *        default 'draft' environment (`Environment ID` might be referred to as environment name at
           *        some places). If `User ID` is not specified, we are using "-". It's up to the API caller
           *        to choose an appropriate `Session ID` and `User Id`. They can be a random number or some
           *        type of user and session identifiers (preferably hashed). The length of the `Session ID`
           *        and `User ID` must not exceed 36 characters. For more information, see the [API
           *        interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always
           *        use agent versions for production traffic. See [Versions and
           *        environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest}
             * @since 1.13
             */
            protected DetectIntent(java.lang.String session, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1DetectIntentResponse.class);
              this.session = com.google.api.client.util.Preconditions.checkNotNull(session, "Required parameter session must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                    "Parameter session must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
              }
            }

            @Override
            public DetectIntent set$Xgafv(java.lang.String $Xgafv) {
              return (DetectIntent) super.set$Xgafv($Xgafv);
            }

            @Override
            public DetectIntent setAccessToken(java.lang.String accessToken) {
              return (DetectIntent) super.setAccessToken(accessToken);
            }

            @Override
            public DetectIntent setAlt(java.lang.String alt) {
              return (DetectIntent) super.setAlt(alt);
            }

            @Override
            public DetectIntent setCallback(java.lang.String callback) {
              return (DetectIntent) super.setCallback(callback);
            }

            @Override
            public DetectIntent setFields(java.lang.String fields) {
              return (DetectIntent) super.setFields(fields);
            }

            @Override
            public DetectIntent setKey(java.lang.String key) {
              return (DetectIntent) super.setKey(key);
            }

            @Override
            public DetectIntent setOauthToken(java.lang.String oauthToken) {
              return (DetectIntent) super.setOauthToken(oauthToken);
            }

            @Override
            public DetectIntent setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DetectIntent) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DetectIntent setQuotaUser(java.lang.String quotaUser) {
              return (DetectIntent) super.setQuotaUser(quotaUser);
            }

            @Override
            public DetectIntent setUploadType(java.lang.String uploadType) {
              return (DetectIntent) super.setUploadType(uploadType);
            }

            @Override
            public DetectIntent setUploadProtocol(java.lang.String uploadProtocol) {
              return (DetectIntent) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the session this query is sent to. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment (`Environment ID` might be referred to as
             * environment name at some places). If `User ID` is not specified, we are using "-".
             * It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They
             * can be a random number or some type of user and session identifiers (preferably
             * hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
             * For more information, see the [API interactions
             * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
             * versions for production traffic. See [Versions and
             * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            @com.google.api.client.util.Key
            private java.lang.String session;

            /** Required. The name of the session this query is sent to. Supported formats: -
           `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
           `projects//agent/environments//users//sessions/`, -
           `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
           assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
           environment (`Environment ID` might be referred to as environment name at some places). If `User
           ID` is not specified, we are using "-". It's up to the API caller to choose an appropriate `Session
           ID` and `User Id`. They can be a random number or some type of user and session identifiers
           (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
           For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs
           /api-overview). Note: Always use agent versions for production traffic. See [Versions and
           environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            public java.lang.String getSession() {
              return session;
            }

            /**
             * Required. The name of the session this query is sent to. Supported formats: -
             * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             * `projects//agent/environments//users//sessions/`, -
             * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             * specified we assume default 'us' location. If `Environment ID` is not specified, we
             * assume default 'draft' environment (`Environment ID` might be referred to as
             * environment name at some places). If `User ID` is not specified, we are using "-".
             * It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They
             * can be a random number or some type of user and session identifiers (preferably
             * hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters.
             * For more information, see the [API interactions
             * guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
             * versions for production traffic. See [Versions and
             * environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
             */
            public DetectIntent setSession(java.lang.String session) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SESSION_PATTERN.matcher(session).matches(),
                    "Parameter session must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
              }
              this.session = session;
              return this;
            }

            @Override
            public DetectIntent set(String parameterName, Object value) {
              return (DetectIntent) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Contexts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Contexts.List request = dialogflow.contexts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Contexts contexts() {
            return new Contexts();
          }

          /**
           * The "contexts" collection of methods.
           */
          public class Contexts {

            /**
             * Creates a context. If the specified context already exists, overrides the context.
             *
             * Create a request for the method "contexts.create".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
             *        `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

              /**
               * Creates a context. If the specified context already exists, overrides the context.
               *
               * Create a request for the method "contexts.create".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
             *        `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to create a context for. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to create a context for. Supported formats: - `projects//agent/sessions/, -
             `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
             environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to create a context for. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified context.
             *
             * Create a request for the method "contexts.delete".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the context to delete. Supported formats: -
             *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
             *        - `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
             *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

              /**
               * Deletes the specified context.
               *
               * Create a request for the method "contexts.delete".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the context to delete. Supported formats: -
             *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
             *        - `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
             *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the context to delete. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
               * ID` is not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the context to delete. Supported formats: -
             `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
             `projects//agent/environments//users//sessions//contexts/`, -
             `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
             specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
             'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the context to delete. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
               * ID` is not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Retrieves the specified context.
             *
             * Create a request for the method "contexts.get".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
             *        `projects//locations//agent/sessions//contexts/`, -
             *        `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
             *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

              /**
               * Retrieves the specified context.
               *
               * Create a request for the method "contexts.get".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
             *        `projects//locations//agent/sessions//contexts/`, -
             *        `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is
             *        not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the context. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
               * ID` is not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the context. Supported formats: - `projects//agent/sessions//contexts/`, -
             `projects//locations//agent/sessions//contexts/`, -
             `projects//agent/environments//users//sessions//contexts/`, -
             `projects//locations//agent/environments//users//sessions//contexts/`, If `Location ID` is not
             specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
             'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the context. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, If `Location
               * ID` is not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the list of all contexts in the specified session.
             *
             * Create a request for the method "contexts.list".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
             *        `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/contexts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

              /**
               * Returns the list of all contexts in the specified session.
               *
               * Create a request for the method "contexts.list".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
             *        `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListContextsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to list all contexts from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to list all contexts from. Supported formats: - `projects//agent/sessions/, -
             `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
             environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to list all contexts from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from a previous list request.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the specified context.
             *
             * Create a request for the method "contexts.patch".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Required. The unique identifier of the context. Supported formats: -
             *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
             *        - `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
             *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
             *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
             *        environment. If `User ID` is not specified, we assume default '-' user. The following
             *        context names are reserved for internal use by Dialogflow. You should not use these
             *        contexts or create contexts with these names: * `__system_counters__` *
             *        `*_id_dialog_context` * `*_dialog_params_size`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");

              /**
               * Updates the specified context.
               *
               * Create a request for the method "contexts.patch".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The unique identifier of the context. Supported formats: -
             *        `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`,
             *        - `projects//agent/environments//users//sessions//contexts/`, -
             *        `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is
             *        always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at
             *        most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
             *        environment. If `User ID` is not specified, we assume default '-' user. The following
             *        context names are reserved for internal use by Dialogflow. You should not use these
             *        contexts or create contexts with these names: * `__system_counters__` *
             *        `*_id_dialog_context` * `*_dialog_params_size`
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context content) {
                super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Context.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The unique identifier of the context. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, The `Context
               * ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-%
               * and may be at most 250 bytes long. If `Environment ID` is not specified, we assume
               * default 'draft' environment. If `User ID` is not specified, we assume default '-'
               * user. The following context names are reserved for internal use by Dialogflow. You
               * should not use these contexts or create contexts with these names: *
               * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The unique identifier of the context. Supported formats: -
             `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, -
             `projects//agent/environments//users//sessions//contexts/`, -
             `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always
             converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes
             long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
             not specified, we assume default '-' user. The following context names are reserved for internal
             use by Dialogflow. You should not use these contexts or create contexts with these names: *
             `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The unique identifier of the context. Supported formats: -
               * `projects//agent/sessions//contexts/`, -
               * `projects//locations//agent/sessions//contexts/`, -
               * `projects//agent/environments//users//sessions//contexts/`, -
               * `projects//locations//agent/environments//users//sessions//contexts/`, The `Context
               * ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-%
               * and may be at most 250 bytes long. If `Environment ID` is not specified, we assume
               * default 'draft' environment. If `User ID` is not specified, we assume default '-'
               * user. The following context names are reserved for internal use by Dialogflow. You
               * should not use these contexts or create contexts with these names: *
               * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** Optional. The mask to control which fields get updated. */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Optional. The mask to control which fields get updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /** Optional. The mask to control which fields get updated. */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the EntityTypes collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.EntityTypes.List request = dialogflow.entityTypes().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public EntityTypes entityTypes() {
            return new EntityTypes();
          }

          /**
           * The "entityTypes" collection of methods.
           */
          public class EntityTypes {

            /**
             * Creates a session entity type. If the specified session entity type already exists, overrides the
             * session entity type. This method doesn't work with Google Assistant integration. Contact
             * Dialogflow support if you need to use session entities with Google Assistant integration.
             *
             * Create a request for the method "entityTypes.create".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to create a session entity type for. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

              private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

              /**
               * Creates a session entity type. If the specified session entity type already exists, overrides
               * the session entity type. This method doesn't work with Google Assistant integration. Contact
               * Dialogflow support if you need to use session entities with Google Assistant integration.
               *
               * Create a request for the method "entityTypes.create".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to create a session entity type for. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to create a session entity type for. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to create a session entity type for. Supported formats: -
             `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
             environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to create a session entity type for. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
             * integration.
             *
             * Create a request for the method "entityTypes.delete".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the entity type to delete. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

              /**
               * Deletes the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google
               * Assistant integration.
               *
               * Create a request for the method "entityTypes.delete".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the entity type to delete. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the entity type to delete. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the entity type to delete. Supported formats: -
             `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
             `projects//agent/environments//users//sessions//entityTypes/` -
             `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
             specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
             'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the entity type to delete. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Retrieves the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
             * integration.
             *
             * Create a request for the method "entityTypes.get".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the session entity type. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

              /**
               * Retrieves the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google
               * Assistant integration.
               *
               * Create a request for the method "entityTypes.get".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the session entity type. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the session entity type. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the session entity type. Supported formats: -
             `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
             `projects//agent/environments//users//sessions//entityTypes/` -
             `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
             specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
             'draft' environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the session entity type. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the list of all session entity types in the specified session. This method doesn't work
             * with Google Assistant integration. Contact Dialogflow support if you need to use session entities
             * with Google Assistant integration.
             *
             * Create a request for the method "entityTypes.list".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The session to list all session entity types from. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/entityTypes";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");

              /**
               * Returns the list of all session entity types in the specified session. This method doesn't work
               * with Google Assistant integration. Contact Dialogflow support if you need to use session
               * entities with Google Assistant integration.
               *
               * Create a request for the method "entityTypes.list".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The session to list all session entity types from. Supported formats: -
             *        `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             *        `projects//agent/environments//users//sessions/`, -
             *        `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not
             *        specified we assume default 'us' location. If `Environment ID` is not specified, we assume
             *        default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListSessionEntityTypesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The session to list all session entity types from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The session to list all session entity types from. Supported formats: -
             `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
             `projects//agent/environments//users//sessions/`, -
             `projects//locations//agent/environments//users//sessions/`, If `Location ID` is not specified we
             assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft'
             environment. If `User ID` is not specified, we assume default '-' user.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The session to list all session entity types from. Supported formats: -
               * `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
               * `projects//agent/environments//users//sessions/`, -
               * `projects//locations//agent/environments//users//sessions/`, If `Location ID` is
               * not specified we assume default 'us' location. If `Environment ID` is not
               * specified, we assume default 'draft' environment. If `User ID` is not specified, we
               * assume default '-' user.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of items to return in a single page. By default 100
               * and at most 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from a previous list request.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** Optional. The next_page_token value returned from a previous list request. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the specified session entity type. This method doesn't work with Google Assistant
             * integration. Contact Dialogflow support if you need to use session entities with Google Assistant
             * integration.
             *
             * Create a request for the method "entityTypes.patch".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Required. The unique identifier of this session entity type. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user. `` must be the display name of an existing entity type in the same agent that will
             *        be overridden or supplemented.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType> {

              private static final String REST_PATH = "v2beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");

              /**
               * Updates the specified session entity type. This method doesn't work with Google Assistant
               * integration. Contact Dialogflow support if you need to use session entities with Google
               * Assistant integration.
               *
               * Create a request for the method "entityTypes.patch".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The unique identifier of this session entity type. Supported formats: -
             *        `projects//agent/sessions//entityTypes/` -
             *        `projects//locations//agent/sessions//entityTypes/` -
             *        `projects//agent/environments//users//sessions//entityTypes/` -
             *        `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID`
             *        is not specified we assume default 'us' location. If `Environment ID` is not specified, we
             *        assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
             *        user. `` must be the display name of an existing entity type in the same agent that will
             *        be overridden or supplemented.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType content) {
                super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SessionEntityType.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The unique identifier of this session entity type. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user. `` must be the display name of an existing
               * entity type in the same agent that will be overridden or supplemented.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The unique identifier of this session entity type. Supported formats: -
             `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
             `projects//agent/environments//users//sessions//entityTypes/` -
             `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not
             specified we assume default 'us' location. If `Environment ID` is not specified, we assume default
             'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the
             display name of an existing entity type in the same agent that will be overridden or supplemented.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The unique identifier of this session entity type. Supported formats: -
               * `projects//agent/sessions//entityTypes/` -
               * `projects//locations//agent/sessions//entityTypes/` -
               * `projects//agent/environments//users//sessions//entityTypes/` -
               * `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
               * `Location ID` is not specified we assume default 'us' location. If `Environment ID`
               * is not specified, we assume default 'draft' environment. If `User ID` is not
               * specified, we assume default '-' user. `` must be the display name of an existing
               * entity type in the same agent that will be overridden or supplemented.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /** Optional. The mask to control which fields get updated. */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Optional. The mask to control which fields get updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /** Optional. The mask to control which fields get updated. */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Versions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Versions.List request = dialogflow.versions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Versions versions() {
          return new Versions();
        }

        /**
         * The "versions" collection of methods.
         */
        public class Versions {

          /**
           * Creates an agent version. The new version points to the agent instance in the "default"
           * environment.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to create a version for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

            private static final String REST_PATH = "v2beta1/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Creates an agent version. The new version points to the agent instance in the "default"
             * environment.
             *
             * Create a request for the method "versions.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to create a version for. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to create a version for. Supported formats: - `projects//agent` -
             * `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to create a version for. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to create a version for. Supported formats: - `projects//agent` -
             * `projects//locations//agent`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Delete the specified agent version.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
           *        `projects//locations//agent/versions/`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");

            /**
             * Delete the specified agent version.
             *
             * Create a request for the method "versions.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
           *        `projects//locations//agent/versions/`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the version to delete. Supported formats: -
             * `projects//agent/versions/` - `projects//locations//agent/versions/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
           `projects//locations//agent/versions/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the version to delete. Supported formats: -
             * `projects//agent/versions/` - `projects//locations//agent/versions/`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified agent version.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the version. Supported formats: - `projects//agent/versions/` -
           *        `projects//locations//agent/versions/`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");

            /**
             * Retrieves the specified agent version.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the version. Supported formats: - `projects//agent/versions/` -
           *        `projects//locations//agent/versions/`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the version. Supported formats: - `projects//agent/versions/` -
             * `projects//locations//agent/versions/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the version. Supported formats: - `projects//agent/versions/` -
           `projects//locations//agent/versions/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the version. Supported formats: - `projects//agent/versions/` -
             * `projects//locations//agent/versions/`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all versions of the specified agent.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The agent to list all versions from. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListVersionsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent$");

            /**
             * Returns the list of all versions of the specified agent.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The agent to list all versions from. Supported formats: - `projects//agent` -
           *        `projects//locations//agent`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListVersionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The agent to list all versions from. Supported formats: - `projects//agent`
             * - `projects//locations//agent`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The agent to list all versions from. Supported formats: - `projects//agent` -
           `projects//locations//agent`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The agent to list all versions from. Supported formats: - `projects//agent`
             * - `projects//locations//agent`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified agent version. Note that this method does not allow you to update the state
           * of the agent the given version points to. It allows you to update only mutable properties of the
           * version resource.
           *
           * Create a request for the method "versions.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. The unique identifier of this agent version. Supported formats: -
           *        `projects//agent/versions/` - `projects//locations//agent/versions/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");

            /**
             * Updates the specified agent version. Note that this method does not allow you to update the
             * state of the agent the given version points to. It allows you to update only mutable properties
             * of the version resource.
             *
             * Create a request for the method "versions.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. The unique identifier of this agent version. Supported formats: -
           *        `projects//agent/versions/` - `projects//locations//agent/versions/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Version.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. The unique identifier of this agent version. Supported formats: -
             * `projects//agent/versions/` - `projects//locations//agent/versions/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. The unique identifier of this agent version. Supported formats: -
           `projects//agent/versions/` - `projects//locations//agent/versions/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. The unique identifier of this agent version. Supported formats: -
             * `projects//agent/versions/` - `projects//locations//agent/versions/`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. The mask to control which fields get updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The mask to control which fields get updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Required. The mask to control which fields get updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the AnswerRecords collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.AnswerRecords.List request = dialogflow.answerRecords().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AnswerRecords answerRecords() {
        return new AnswerRecords();
      }

      /**
       * The "answerRecords" collection of methods.
       */
      public class AnswerRecords {

        /**
         * Deprecated. Retrieves a specific answer record.
         *
         * Create a request for the method "answerRecords.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");

          /**
           * Deprecated. Retrieves a specific answer record.
           *
           * Create a request for the method "answerRecords.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the answer record to retrieve. Format:
           * `projects//locations//answerRecords/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the answer record to retrieve. Format: `projects//locations//answerRecords/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the answer record to retrieve. Format:
           * `projects//locations//answerRecords/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all answer records in the specified project in reverse chronological order.
         *
         * Create a request for the method "answerRecords.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list all answer records for in reverse chronological order. Format:
         *        `projects//locations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/answerRecords";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of all answer records in the specified project in reverse chronological order.
           *
           * Create a request for the method "answerRecords.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list all answer records for in reverse chronological order. Format:
         *        `projects//locations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListAnswerRecordsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list all answer records for in reverse chronological order.
           * Format: `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list all answer records for in reverse chronological order. Format:
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list all answer records for in reverse chronological order.
           * Format: `projects//locations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Filters to restrict results to specific answer records. For more information
           * about filtering, see [API Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. Filters to restrict results to specific answer records. For more information about
         filtering, see [API Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. Filters to restrict results to specific answer records. For more information
           * about filtering, see [API Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of records to return in a single page. The server may
           * return fewer records than this. If unspecified, we use 10. The maximum is 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of records to return in a single page. The server may return fewer
         records than this. If unspecified, we use 10. The maximum is 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of records to return in a single page. The server may
           * return fewer records than this. If unspecified, we use 10. The maximum is 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous
           * list request used to continue listing on the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request
         used to continue listing on the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous
           * list request used to continue listing on the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified answer record.
         *
         * Create a request for the method "answerRecords.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
         *        Format: `projects//locations//answerRecords/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");

          /**
           * Updates the specified answer record.
           *
           * Create a request for the method "answerRecords.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
         *        Format: `projects//locations//answerRecords/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnswerRecord.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique identifier of this answer record. Required for
           * AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique identifier of this answer record. Required for AnswerRecords.UpdateAnswerRecord method.
         Format: `projects//locations//answerRecords/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique identifier of this answer record. Required for
           * AnswerRecords.UpdateAnswerRecord method. Format: `projects//locations//answerRecords/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The mask to control which fields get updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to control which fields get updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The mask to control which fields get updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ConversationProfiles collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.ConversationProfiles.List request = dialogflow.conversationProfiles().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ConversationProfiles conversationProfiles() {
        return new ConversationProfiles();
      }

      /**
       * The "conversationProfiles" collection of methods.
       */
      public class ConversationProfiles {

        /**
         * Clears a suggestion feature from a conversation profile for the given participant role. This
         * method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-
         * running-operations). The returned `Operation` type has the following method-specific fields: -
         * `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
         *
         * Create a request for the method "conversationProfiles.clearSuggestionFeatureConfig".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link ClearSuggestionFeatureConfig#execute()} method to invoke the remote
         * operation.
         *
         * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
         *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest}
         * @return the request
         */
        public ClearSuggestionFeatureConfig clearSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest content) throws java.io.IOException {
          ClearSuggestionFeatureConfig result = new ClearSuggestionFeatureConfig(conversationProfile, content);
          initialize(result);
          return result;
        }

        public class ClearSuggestionFeatureConfig extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+conversationProfile}:clearSuggestionFeatureConfig";

          private final java.util.regex.Pattern CONVERSATION_PROFILE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");

          /**
           * Clears a suggestion feature from a conversation profile for the given participant role. This
           * method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-
           * running-operations). The returned `Operation` type has the following method-specific fields: -
           * `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
           *
           * Create a request for the method "conversationProfiles.clearSuggestionFeatureConfig".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link ClearSuggestionFeatureConfig#execute()} method to invoke
           * the remote operation. <p> {@link ClearSuggestionFeatureConfig#initialize(com.google.api.client.
           * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
         *        `projects//locations//conversationProfiles/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest}
           * @since 1.13
           */
          protected ClearSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.conversationProfile = com.google.api.client.util.Preconditions.checkNotNull(conversationProfile, "Required parameter conversationProfile must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                  "Parameter conversationProfile must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
          }

          @Override
          public ClearSuggestionFeatureConfig set$Xgafv(java.lang.String $Xgafv) {
            return (ClearSuggestionFeatureConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public ClearSuggestionFeatureConfig setAccessToken(java.lang.String accessToken) {
            return (ClearSuggestionFeatureConfig) super.setAccessToken(accessToken);
          }

          @Override
          public ClearSuggestionFeatureConfig setAlt(java.lang.String alt) {
            return (ClearSuggestionFeatureConfig) super.setAlt(alt);
          }

          @Override
          public ClearSuggestionFeatureConfig setCallback(java.lang.String callback) {
            return (ClearSuggestionFeatureConfig) super.setCallback(callback);
          }

          @Override
          public ClearSuggestionFeatureConfig setFields(java.lang.String fields) {
            return (ClearSuggestionFeatureConfig) super.setFields(fields);
          }

          @Override
          public ClearSuggestionFeatureConfig setKey(java.lang.String key) {
            return (ClearSuggestionFeatureConfig) super.setKey(key);
          }

          @Override
          public ClearSuggestionFeatureConfig setOauthToken(java.lang.String oauthToken) {
            return (ClearSuggestionFeatureConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public ClearSuggestionFeatureConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ClearSuggestionFeatureConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ClearSuggestionFeatureConfig setQuotaUser(java.lang.String quotaUser) {
            return (ClearSuggestionFeatureConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public ClearSuggestionFeatureConfig setUploadType(java.lang.String uploadType) {
            return (ClearSuggestionFeatureConfig) super.setUploadType(uploadType);
          }

          @Override
          public ClearSuggestionFeatureConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (ClearSuggestionFeatureConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The Conversation Profile to add or update the suggestion feature config.
           * Format: `projects//locations//conversationProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String conversationProfile;

          /** Required. The Conversation Profile to add or update the suggestion feature config. Format:
         `projects//locations//conversationProfiles/`.
           */
          public java.lang.String getConversationProfile() {
            return conversationProfile;
          }

          /**
           * Required. The Conversation Profile to add or update the suggestion feature config.
           * Format: `projects//locations//conversationProfiles/`.
           */
          public ClearSuggestionFeatureConfig setConversationProfile(java.lang.String conversationProfile) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                  "Parameter conversationProfile must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
            this.conversationProfile = conversationProfile;
            return this;
          }

          @Override
          public ClearSuggestionFeatureConfig set(String parameterName, Object value) {
            return (ClearSuggestionFeatureConfig) super.set(parameterName, value);
          }
        }
        /**
         * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and
         * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
         * GetConversationProfile API.
         *
         * Create a request for the method "conversationProfiles.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to create a conversation profile for. Format: `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

          private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and
           * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
           * GetConversationProfile API.
           *
           * Create a request for the method "conversationProfiles.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to create a conversation profile for. Format: `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to create a conversation profile for. Format:
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to create a conversation profile for. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to create a conversation profile for. Format:
           * `projects//locations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the conversation profile to delete. Format:
         *        `projects//locations//conversationProfiles/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");

          /**
           * Deletes the specified conversation profile.
           *
           * Create a request for the method "conversationProfiles.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the conversation profile to delete. Format:
         *        `projects//locations//conversationProfiles/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the conversation profile to delete. Format:
           * `projects//locations//conversationProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the conversation profile to delete. Format:
         `projects//locations//conversationProfiles/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the conversation profile to delete. Format:
           * `projects//locations//conversationProfiles/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified conversation profile.
         *
         * Create a request for the method "conversationProfiles.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the conversation profile. Format:
         *        `projects//locations//conversationProfiles/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");

          /**
           * Retrieves the specified conversation profile.
           *
           * Create a request for the method "conversationProfiles.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the conversation profile. Format:
         *        `projects//locations//conversationProfiles/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the conversation profile. Format:
           * `projects//locations//conversationProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the conversation profile. Format:
         `projects//locations//conversationProfiles/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the conversation profile. Format:
           * `projects//locations//conversationProfiles/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all conversation profiles in the specified project.
         *
         * Create a request for the method "conversationProfiles.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list all conversation profiles from. Format: `projects//locations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/conversationProfiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of all conversation profiles in the specified project.
           *
           * Create a request for the method "conversationProfiles.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list all conversation profiles from. Format: `projects//locations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationProfilesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list all conversation profiles from. Format:
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list all conversation profiles from. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list all conversation profiles from. Format:
           * `projects//locations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of items to return in a single page. By default 100 and at most
           * 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return in a single page. By default 100 and at most
           * 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified conversation profile. ConversationProfile.CreateTime and
         * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
         * GetConversationProfile API.
         *
         * Create a request for the method "conversationProfiles.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The unique identifier of this conversation profile. Format:
         *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");

          /**
           * Updates the specified conversation profile. ConversationProfile.CreateTime and
           * ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via
           * GetConversationProfile API.
           *
           * Create a request for the method "conversationProfiles.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique identifier of this conversation profile. Format:
         *        `projects//locations//conversationProfiles/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ConversationProfile.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique identifier of this conversation profile. Format:
           * `projects//locations//conversationProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique identifier of this conversation profile. Format:
         `projects//locations//conversationProfiles/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique identifier of this conversation profile. Format:
           * `projects//locations//conversationProfiles/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The mask to control which fields to update. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The mask to control which fields to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The mask to control which fields to update. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Adds or updates a suggestion feature in a conversation profile. If the conversation profile
         * contains the type of suggestion feature for the participant role, it will update it. Otherwise it
         * will insert the suggestion feature. This method is a [long-running
         * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
         * `Operation` type has the following method-specific fields: - `metadata`:
         * SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
         * operation to add or update suggestion feature config for the same conversation profile,
         * participant role and suggestion feature type exists, please cancel the existing long running
         * operation before sending such request, otherwise the request will be rejected.
         *
         * Create a request for the method "conversationProfiles.setSuggestionFeatureConfig".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link SetSuggestionFeatureConfig#execute()} method to invoke the remote
         * operation.
         *
         * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
         *        `projects//locations//conversationProfiles/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest}
         * @return the request
         */
        public SetSuggestionFeatureConfig setSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest content) throws java.io.IOException {
          SetSuggestionFeatureConfig result = new SetSuggestionFeatureConfig(conversationProfile, content);
          initialize(result);
          return result;
        }

        public class SetSuggestionFeatureConfig extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+conversationProfile}:setSuggestionFeatureConfig";

          private final java.util.regex.Pattern CONVERSATION_PROFILE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");

          /**
           * Adds or updates a suggestion feature in a conversation profile. If the conversation profile
           * contains the type of suggestion feature for the participant role, it will update it. Otherwise
           * it will insert the suggestion feature. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
           * returned `Operation` type has the following method-specific fields: - `metadata`:
           * SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
           * operation to add or update suggestion feature config for the same conversation profile,
           * participant role and suggestion feature type exists, please cancel the existing long running
           * operation before sending such request, otherwise the request will be rejected.
           *
           * Create a request for the method "conversationProfiles.setSuggestionFeatureConfig".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link SetSuggestionFeatureConfig#execute()} method to invoke the
           * remote operation. <p> {@link SetSuggestionFeatureConfig#initialize(com.google.api.client.google
           * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param conversationProfile Required. The Conversation Profile to add or update the suggestion feature config. Format:
         *        `projects//locations//conversationProfiles/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest}
           * @since 1.13
           */
          protected SetSuggestionFeatureConfig(java.lang.String conversationProfile, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.conversationProfile = com.google.api.client.util.Preconditions.checkNotNull(conversationProfile, "Required parameter conversationProfile must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                  "Parameter conversationProfile must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
          }

          @Override
          public SetSuggestionFeatureConfig set$Xgafv(java.lang.String $Xgafv) {
            return (SetSuggestionFeatureConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetSuggestionFeatureConfig setAccessToken(java.lang.String accessToken) {
            return (SetSuggestionFeatureConfig) super.setAccessToken(accessToken);
          }

          @Override
          public SetSuggestionFeatureConfig setAlt(java.lang.String alt) {
            return (SetSuggestionFeatureConfig) super.setAlt(alt);
          }

          @Override
          public SetSuggestionFeatureConfig setCallback(java.lang.String callback) {
            return (SetSuggestionFeatureConfig) super.setCallback(callback);
          }

          @Override
          public SetSuggestionFeatureConfig setFields(java.lang.String fields) {
            return (SetSuggestionFeatureConfig) super.setFields(fields);
          }

          @Override
          public SetSuggestionFeatureConfig setKey(java.lang.String key) {
            return (SetSuggestionFeatureConfig) super.setKey(key);
          }

          @Override
          public SetSuggestionFeatureConfig setOauthToken(java.lang.String oauthToken) {
            return (SetSuggestionFeatureConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public SetSuggestionFeatureConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetSuggestionFeatureConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetSuggestionFeatureConfig setQuotaUser(java.lang.String quotaUser) {
            return (SetSuggestionFeatureConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetSuggestionFeatureConfig setUploadType(java.lang.String uploadType) {
            return (SetSuggestionFeatureConfig) super.setUploadType(uploadType);
          }

          @Override
          public SetSuggestionFeatureConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetSuggestionFeatureConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The Conversation Profile to add or update the suggestion feature config.
           * Format: `projects//locations//conversationProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String conversationProfile;

          /** Required. The Conversation Profile to add or update the suggestion feature config. Format:
         `projects//locations//conversationProfiles/`.
           */
          public java.lang.String getConversationProfile() {
            return conversationProfile;
          }

          /**
           * Required. The Conversation Profile to add or update the suggestion feature config.
           * Format: `projects//locations//conversationProfiles/`.
           */
          public SetSuggestionFeatureConfig setConversationProfile(java.lang.String conversationProfile) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PROFILE_PATTERN.matcher(conversationProfile).matches(),
                  "Parameter conversationProfile must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$");
            }
            this.conversationProfile = conversationProfile;
            return this;
          }

          @Override
          public SetSuggestionFeatureConfig set(String parameterName, Object value) {
            return (SetSuggestionFeatureConfig) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Conversations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Conversations.List request = dialogflow.conversations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Conversations conversations() {
        return new Conversations();
      }

      /**
       * The "conversations" collection of methods.
       */
      public class Conversations {

        /**
         * Completes the specified conversation. Finished conversations are purged from the database after
         * 30 days.
         *
         * Create a request for the method "conversations.complete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Complete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource identifier of the conversation to close. Format:
         *        `projects//locations//conversations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
         * @return the request
         */
        public Complete complete(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) throws java.io.IOException {
          Complete result = new Complete(name, content);
          initialize(result);
          return result;
        }

        public class Complete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

          private static final String REST_PATH = "v2beta1/{+name}:complete";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

          /**
           * Completes the specified conversation. Finished conversations are purged from the database after
           * 30 days.
           *
           * Create a request for the method "conversations.complete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Complete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Complete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource identifier of the conversation to close. Format:
         *        `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest}
           * @since 1.13
           */
          protected Complete(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1CompleteConversationRequest content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public Complete set$Xgafv(java.lang.String $Xgafv) {
            return (Complete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Complete setAccessToken(java.lang.String accessToken) {
            return (Complete) super.setAccessToken(accessToken);
          }

          @Override
          public Complete setAlt(java.lang.String alt) {
            return (Complete) super.setAlt(alt);
          }

          @Override
          public Complete setCallback(java.lang.String callback) {
            return (Complete) super.setCallback(callback);
          }

          @Override
          public Complete setFields(java.lang.String fields) {
            return (Complete) super.setFields(fields);
          }

          @Override
          public Complete setKey(java.lang.String key) {
            return (Complete) super.setKey(key);
          }

          @Override
          public Complete setOauthToken(java.lang.String oauthToken) {
            return (Complete) super.setOauthToken(oauthToken);
          }

          @Override
          public Complete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Complete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Complete setQuotaUser(java.lang.String quotaUser) {
            return (Complete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Complete setUploadType(java.lang.String uploadType) {
            return (Complete) super.setUploadType(uploadType);
          }

          @Override
          public Complete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Complete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource identifier of the conversation to close. Format:
           * `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource identifier of the conversation to close. Format:
         `projects//locations//conversations/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource identifier of the conversation to close. Format:
           * `projects//locations//conversations/`.
           */
          public Complete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Complete set(String parameterName, Object value) {
            return (Complete) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation
         * Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage.
         * For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For
         * Assist Stage, there's no dialogflow agent responding to user queries. But we will provide
         * suggestions which are generated from conversation. If Conversation.conversation_profile is
         * configured for a dialogflow agent, conversation will start from `Automated Agent Stage`,
         * otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent
         * with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
         *
         * Create a request for the method "conversations.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource identifier of the project creating the conversation. Format:
         *        `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

          private static final String REST_PATH = "v2beta1/{+parent}/conversations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation
           * Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage.
           * For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For
           * Assist Stage, there's no dialogflow agent responding to user queries. But we will provide
           * suggestions which are generated from conversation. If Conversation.conversation_profile is
           * configured for a dialogflow agent, conversation will start from `Automated Agent Stage`,
           * otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an
           * Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
           *
           * Create a request for the method "conversations.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource identifier of the project creating the conversation. Format:
         *        `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource identifier of the project creating the conversation. Format:
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource identifier of the project creating the conversation. Format:
         `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Resource identifier of the project creating the conversation. Format:
           * `projects//locations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only
           * set it if you cannot wait for the response to return a auto-generated one to you. The
           * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the
           * characters length in range of [3,64]. If the field is provided, the caller is
           * resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2.
           * the consistency for whether to use custom ID or not under a project to better ensure
           * uniqueness.
           */
          @com.google.api.client.util.Key
          private java.lang.String conversationId;

          /** Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if
         you cannot wait for the response to return a auto-generated one to you. The conversation ID must be
         compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If
         the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the
         request will be rejected. 2. the consistency for whether to use custom ID or not under a project to
         better ensure uniqueness.
           */
          public java.lang.String getConversationId() {
            return conversationId;
          }

          /**
           * Optional. Identifier of the conversation. Generally it's auto generated by Google. Only
           * set it if you cannot wait for the response to return a auto-generated one to you. The
           * conversation ID must be compliant with the regression fomula "a-zA-Z*" with the
           * characters length in range of [3,64]. If the field is provided, the caller is
           * resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2.
           * the consistency for whether to use custom ID or not under a project to better ensure
           * uniqueness.
           */
          public Create setConversationId(java.lang.String conversationId) {
            this.conversationId = conversationId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specific conversation.
         *
         * Create a request for the method "conversations.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the conversation. Format: `projects//locations//conversations/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

          /**
           * Retrieves the specific conversation.
           *
           * Create a request for the method "conversations.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the conversation. Format: `projects//locations//conversations/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Conversation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the conversation. Format: `projects//locations//conversations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the conversation. Format: `projects//locations//conversations/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the conversation. Format: `projects//locations//conversations/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all conversations in the specified project.
         *
         * Create a request for the method "conversations.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project from which to list all conversation. Format: `projects//locations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/conversations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of all conversations in the specified project.
           *
           * Create a request for the method "conversations.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project from which to list all conversation. Format: `projects//locations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListConversationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project from which to list all conversation. Format:
           * `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project from which to list all conversation. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project from which to list all conversation. Format:
           * `projects//locations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A filter expression that filters conversations listed in the response. In general, the
           * expression must specify the field name, a comparison operator, and the value to use for
           * filtering: - The value must be a string, a number, or a boolean. - The comparison
           * operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions,
           * separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For
           * clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be
           * filtered on in this way. For example, the following expression only returns `COMPLETED`
           * conversations: `lifecycle_state = "COMPLETED"` For more information about filtering,
           * see [API Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters conversations listed in the response. In general, the expression
         must specify the field name, a comparison operator, and the value to use for filtering: - The value
         must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`,
         or `<`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting
         both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only
         `lifecycle_state` can be filtered on in this way. For example, the following expression only
         returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about
         filtering, see [API Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * A filter expression that filters conversations listed in the response. In general, the
           * expression must specify the field name, a comparison operator, and the value to use for
           * filtering: - The value must be a string, a number, or a boolean. - The comparison
           * operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions,
           * separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For
           * clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be
           * filtered on in this way. For example, the following expression only returns `COMPLETED`
           * conversations: `lifecycle_state = "COMPLETED"` For more information about filtering,
           * see [API Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return in a single page. By default 100 and at
           * most 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Messages collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Messages.List request = dialogflow.messages().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Messages messages() {
          return new Messages();
        }

        /**
         * The "messages" collection of methods.
         */
        public class Messages {

          /**
           * Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages
           * to conversation.
           *
           * Create a request for the method "messages.batchCreate".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Resource identifier of the conversation to create message. Format:
           *        `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest}
           * @return the request
           */
          public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest content) throws java.io.IOException {
            BatchCreate result = new BatchCreate(parent, content);
            initialize(result);
            return result;
          }

          public class BatchCreate extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/messages:batchCreate";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Batch ingests messages to conversation. Customers can use this RPC to ingest historical
             * messages to conversation.
             *
             * Create a request for the method "messages.batchCreate".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
             * operation. <p> {@link
             * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Resource identifier of the conversation to create message. Format:
           *        `projects//locations//conversations/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest}
             * @since 1.13
             */
            protected BatchCreate(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1BatchCreateMessagesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
              return (BatchCreate) super.set$Xgafv($Xgafv);
            }

            @Override
            public BatchCreate setAccessToken(java.lang.String accessToken) {
              return (BatchCreate) super.setAccessToken(accessToken);
            }

            @Override
            public BatchCreate setAlt(java.lang.String alt) {
              return (BatchCreate) super.setAlt(alt);
            }

            @Override
            public BatchCreate setCallback(java.lang.String callback) {
              return (BatchCreate) super.setCallback(callback);
            }

            @Override
            public BatchCreate setFields(java.lang.String fields) {
              return (BatchCreate) super.setFields(fields);
            }

            @Override
            public BatchCreate setKey(java.lang.String key) {
              return (BatchCreate) super.setKey(key);
            }

            @Override
            public BatchCreate setOauthToken(java.lang.String oauthToken) {
              return (BatchCreate) super.setOauthToken(oauthToken);
            }

            @Override
            public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (BatchCreate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public BatchCreate setQuotaUser(java.lang.String quotaUser) {
              return (BatchCreate) super.setQuotaUser(quotaUser);
            }

            @Override
            public BatchCreate setUploadType(java.lang.String uploadType) {
              return (BatchCreate) super.setUploadType(uploadType);
            }

            @Override
            public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
              return (BatchCreate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource identifier of the conversation to create message. Format:
             * `projects//locations//conversations/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Resource identifier of the conversation to create message. Format:
           `projects//locations//conversations/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Resource identifier of the conversation to create message. Format:
             * `projects//locations//conversations/`.
             */
            public BatchCreate setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public BatchCreate set(String parameterName, Object value) {
              return (BatchCreate) super.set(parameterName, value);
            }
          }
          /**
           * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
           * descending order. To fetch updates without duplication, send request with filter
           * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
           * page_token.
           *
           * Create a request for the method "messages.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the conversation to list messages for. Format:
           *        `projects//locations//conversations/`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/messages";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
             * descending order. To fetch updates without duplication, send request with filter
             * `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty
             * page_token.
             *
             * Create a request for the method "messages.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the conversation to list messages for. Format:
           *        `projects//locations//conversations/`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListMessagesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the conversation to list messages for. Format:
             * `projects//locations//conversations/`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the conversation to list messages for. Format:
           `projects//locations//conversations/`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the conversation to list messages for. Format:
             * `projects//locations//conversations/`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Filter on message fields. Currently predicates on `create_time` and
             * `create_time_epoch_microseconds` are supported. `create_time` only support
             * milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or
             * `create_time > "2017-01-15T01:30:15.01Z"`. For more information about filtering, see
             * [API Filtering](https://aip.dev/160).
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Filter on message fields. Currently predicates on `create_time` and
           `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy.
           E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time >
           "2017-01-15T01:30:15.01Z"`. For more information about filtering, see [API
           Filtering](https://aip.dev/160).
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. Filter on message fields. Currently predicates on `create_time` and
             * `create_time_epoch_microseconds` are supported. `create_time` only support
             * milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or
             * `create_time > "2017-01-15T01:30:15.01Z"`. For more information about filtering, see
             * [API Filtering](https://aip.dev/160).
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Participants collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Participants.List request = dialogflow.participants().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Participants participants() {
          return new Participants();
        }

        /**
         * The "participants" collection of methods.
         */
        public class Participants {

          /**
           * Adds a text (chat, for example), or audio (phone recording, for example) message from a
           * participant into the conversation. Note: Always use agent versions for production traffic sent to
           * virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
           * /agents-versions).
           *
           * Create a request for the method "participants.analyzeContent".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote operation.
           *
           * @param participant Required. The name of the participant this text comes from. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
           * @return the request
           */
          public AnalyzeContent analyzeContent(java.lang.String participant, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) throws java.io.IOException {
            AnalyzeContent result = new AnalyzeContent(participant, content);
            initialize(result);
            return result;
          }

          public class AnalyzeContent extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse> {

            private static final String REST_PATH = "v2beta1/{+participant}:analyzeContent";

            private final java.util.regex.Pattern PARTICIPANT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Adds a text (chat, for example), or audio (phone recording, for example) message from a
             * participant into the conversation. Note: Always use agent versions for production traffic sent
             * to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs
             * /agents-versions).
             *
             * Create a request for the method "participants.analyzeContent".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link AnalyzeContent#execute()} method to invoke the remote
             * operation. <p> {@link AnalyzeContent#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param participant Required. The name of the participant this text comes from. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest}
             * @since 1.13
             */
            protected AnalyzeContent(java.lang.String participant, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1AnalyzeContentResponse.class);
              this.participant = com.google.api.client.util.Preconditions.checkNotNull(participant, "Required parameter participant must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                    "Parameter participant must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public AnalyzeContent set$Xgafv(java.lang.String $Xgafv) {
              return (AnalyzeContent) super.set$Xgafv($Xgafv);
            }

            @Override
            public AnalyzeContent setAccessToken(java.lang.String accessToken) {
              return (AnalyzeContent) super.setAccessToken(accessToken);
            }

            @Override
            public AnalyzeContent setAlt(java.lang.String alt) {
              return (AnalyzeContent) super.setAlt(alt);
            }

            @Override
            public AnalyzeContent setCallback(java.lang.String callback) {
              return (AnalyzeContent) super.setCallback(callback);
            }

            @Override
            public AnalyzeContent setFields(java.lang.String fields) {
              return (AnalyzeContent) super.setFields(fields);
            }

            @Override
            public AnalyzeContent setKey(java.lang.String key) {
              return (AnalyzeContent) super.setKey(key);
            }

            @Override
            public AnalyzeContent setOauthToken(java.lang.String oauthToken) {
              return (AnalyzeContent) super.setOauthToken(oauthToken);
            }

            @Override
            public AnalyzeContent setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AnalyzeContent) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AnalyzeContent setQuotaUser(java.lang.String quotaUser) {
              return (AnalyzeContent) super.setQuotaUser(quotaUser);
            }

            @Override
            public AnalyzeContent setUploadType(java.lang.String uploadType) {
              return (AnalyzeContent) super.setUploadType(uploadType);
            }

            @Override
            public AnalyzeContent setUploadProtocol(java.lang.String uploadProtocol) {
              return (AnalyzeContent) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant this text comes from. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String participant;

            /** Required. The name of the participant this text comes from. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getParticipant() {
              return participant;
            }

            /**
             * Required. The name of the participant this text comes from. Format:
             * `projects//locations//conversations//participants/`.
             */
            public AnalyzeContent setParticipant(java.lang.String participant) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARTICIPANT_PATTERN.matcher(participant).matches(),
                    "Parameter participant must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.participant = participant;
              return this;
            }

            @Override
            public AnalyzeContent set(String parameterName, Object value) {
              return (AnalyzeContent) super.set(parameterName, value);
            }
          }
          /**
           * Creates a new participant in a conversation.
           *
           * Create a request for the method "participants.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Resource identifier of the conversation adding the participant. Format:
           *        `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

            private static final String REST_PATH = "v2beta1/{+parent}/participants";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Creates a new participant in a conversation.
             *
             * Create a request for the method "participants.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Resource identifier of the conversation adding the participant. Format:
           *        `projects//locations//conversations/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource identifier of the conversation adding the participant. Format:
             * `projects//locations//conversations/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Resource identifier of the conversation adding the participant. Format:
           `projects//locations//conversations/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Resource identifier of the conversation adding the participant. Format:
             * `projects//locations//conversations/`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves a conversation participant.
           *
           * Create a request for the method "participants.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Retrieves a conversation participant.
             *
             * Create a request for the method "participants.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the participant. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the participant. Format:
             * `projects//locations//conversations//participants/`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all participants in the specified conversation.
           *
           * Create a request for the method "participants.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The conversation to list all participants from. Format:
           *        `projects//locations//conversations/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/participants";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Returns the list of all participants in the specified conversation.
             *
             * Create a request for the method "participants.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The conversation to list all participants from. Format:
           *        `projects//locations//conversations/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListParticipantsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The conversation to list all participants from. Format:
             * `projects//locations//conversations/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The conversation to list all participants from. Format:
           `projects//locations//conversations/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The conversation to list all participants from. Format:
             * `projects//locations//conversations/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return in a single page. By default 100 and
             * at most 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified participant.
           *
           * Create a request for the method "participants.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Optional. The unique identifier of this participant. Format:
           *        `projects//locations//conversations//participants/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

            /**
             * Updates the specified participant.
             *
             * Create a request for the method "participants.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Optional. The unique identifier of this participant. Format:
           *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Participant.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Optional. The unique identifier of this participant. Format:
             * `projects//locations//conversations//participants/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Optional. The unique identifier of this participant. Format:
           `projects//locations//conversations//participants/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Optional. The unique identifier of this participant. Format:
             * `projects//locations//conversations//participants/`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. The mask to specify which fields to update. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The mask to specify which fields to update.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** Required. The mask to specify which fields to update. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Suggestions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Dialogflow dialogflow = new Dialogflow(...);}
           *   {@code Dialogflow.Suggestions.List request = dialogflow.suggestions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Suggestions suggestions() {
            return new Suggestions();
          }

          /**
           * The "suggestions" collection of methods.
           */
          public class Suggestions {

            /**
             * Gets suggested articles for a participant based on specific historical messages. Note that
             * ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try
             * to compile suggestion based on the provided conversation context in the real time.
             *
             * Create a request for the method "suggestions.suggestArticles".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link SuggestArticles#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest}
             * @return the request
             */
            public SuggestArticles suggestArticles(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest content) throws java.io.IOException {
              SuggestArticles result = new SuggestArticles(parent, content);
              initialize(result);
              return result;
            }

            public class SuggestArticles extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestArticles";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

              /**
               * Gets suggested articles for a participant based on specific historical messages. Note that
               * ListSuggestions will only list the auto-generated suggestions, while CompileSuggestion will try
               * to compile suggestion based on the provided conversation context in the real time.
               *
               * Create a request for the method "suggestions.suggestArticles".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link SuggestArticles#execute()} method to invoke the remote
               * operation. <p> {@link SuggestArticles#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest}
               * @since 1.13
               */
              protected SuggestArticles(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestArticlesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
              }

              @Override
              public SuggestArticles set$Xgafv(java.lang.String $Xgafv) {
                return (SuggestArticles) super.set$Xgafv($Xgafv);
              }

              @Override
              public SuggestArticles setAccessToken(java.lang.String accessToken) {
                return (SuggestArticles) super.setAccessToken(accessToken);
              }

              @Override
              public SuggestArticles setAlt(java.lang.String alt) {
                return (SuggestArticles) super.setAlt(alt);
              }

              @Override
              public SuggestArticles setCallback(java.lang.String callback) {
                return (SuggestArticles) super.setCallback(callback);
              }

              @Override
              public SuggestArticles setFields(java.lang.String fields) {
                return (SuggestArticles) super.setFields(fields);
              }

              @Override
              public SuggestArticles setKey(java.lang.String key) {
                return (SuggestArticles) super.setKey(key);
              }

              @Override
              public SuggestArticles setOauthToken(java.lang.String oauthToken) {
                return (SuggestArticles) super.setOauthToken(oauthToken);
              }

              @Override
              public SuggestArticles setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SuggestArticles) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SuggestArticles setQuotaUser(java.lang.String quotaUser) {
                return (SuggestArticles) super.setQuotaUser(quotaUser);
              }

              @Override
              public SuggestArticles setUploadType(java.lang.String uploadType) {
                return (SuggestArticles) super.setUploadType(uploadType);
              }

              @Override
              public SuggestArticles setUploadProtocol(java.lang.String uploadProtocol) {
                return (SuggestArticles) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the participant to fetch suggestion for. Format:
             `projects//locations//conversations//participants/`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              public SuggestArticles setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public SuggestArticles set(String parameterName, Object value) {
                return (SuggestArticles) super.set(parameterName, value);
              }
            }
            /**
             * Gets suggested faq answers for a participant based on specific historical messages.
             *
             * Create a request for the method "suggestions.suggestFaqAnswers".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link SuggestFaqAnswers#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest}
             * @return the request
             */
            public SuggestFaqAnswers suggestFaqAnswers(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest content) throws java.io.IOException {
              SuggestFaqAnswers result = new SuggestFaqAnswers(parent, content);
              initialize(result);
              return result;
            }

            public class SuggestFaqAnswers extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestFaqAnswers";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

              /**
               * Gets suggested faq answers for a participant based on specific historical messages.
               *
               * Create a request for the method "suggestions.suggestFaqAnswers".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link SuggestFaqAnswers#execute()} method to invoke the remote
               * operation. <p> {@link SuggestFaqAnswers#initialize(com.google.api.client.googleapis.services.Ab
               * stractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest}
               * @since 1.13
               */
              protected SuggestFaqAnswers(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
              }

              @Override
              public SuggestFaqAnswers set$Xgafv(java.lang.String $Xgafv) {
                return (SuggestFaqAnswers) super.set$Xgafv($Xgafv);
              }

              @Override
              public SuggestFaqAnswers setAccessToken(java.lang.String accessToken) {
                return (SuggestFaqAnswers) super.setAccessToken(accessToken);
              }

              @Override
              public SuggestFaqAnswers setAlt(java.lang.String alt) {
                return (SuggestFaqAnswers) super.setAlt(alt);
              }

              @Override
              public SuggestFaqAnswers setCallback(java.lang.String callback) {
                return (SuggestFaqAnswers) super.setCallback(callback);
              }

              @Override
              public SuggestFaqAnswers setFields(java.lang.String fields) {
                return (SuggestFaqAnswers) super.setFields(fields);
              }

              @Override
              public SuggestFaqAnswers setKey(java.lang.String key) {
                return (SuggestFaqAnswers) super.setKey(key);
              }

              @Override
              public SuggestFaqAnswers setOauthToken(java.lang.String oauthToken) {
                return (SuggestFaqAnswers) super.setOauthToken(oauthToken);
              }

              @Override
              public SuggestFaqAnswers setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SuggestFaqAnswers) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SuggestFaqAnswers setQuotaUser(java.lang.String quotaUser) {
                return (SuggestFaqAnswers) super.setQuotaUser(quotaUser);
              }

              @Override
              public SuggestFaqAnswers setUploadType(java.lang.String uploadType) {
                return (SuggestFaqAnswers) super.setUploadType(uploadType);
              }

              @Override
              public SuggestFaqAnswers setUploadProtocol(java.lang.String uploadProtocol) {
                return (SuggestFaqAnswers) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the participant to fetch suggestion for. Format:
             `projects//locations//conversations//participants/`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              public SuggestFaqAnswers setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public SuggestFaqAnswers set(String parameterName, Object value) {
                return (SuggestFaqAnswers) super.set(parameterName, value);
              }
            }
            /**
             * Gets smart replies for a participant based on specific historical messages.
             *
             * Create a request for the method "suggestions.suggestSmartReplies".
             *
             * This request holds the parameters needed by the dialogflow server.  After setting any optional
             * parameters, call the {@link SuggestSmartReplies#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest}
             * @return the request
             */
            public SuggestSmartReplies suggestSmartReplies(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest content) throws java.io.IOException {
              SuggestSmartReplies result = new SuggestSmartReplies(parent, content);
              initialize(result);
              return result;
            }

            public class SuggestSmartReplies extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse> {

              private static final String REST_PATH = "v2beta1/{+parent}/suggestions:suggestSmartReplies";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");

              /**
               * Gets smart replies for a participant based on specific historical messages.
               *
               * Create a request for the method "suggestions.suggestSmartReplies".
               *
               * This request holds the parameters needed by the the dialogflow server.  After setting any
               * optional parameters, call the {@link SuggestSmartReplies#execute()} method to invoke the remote
               * operation. <p> {@link SuggestSmartReplies#initialize(com.google.api.client.googleapis.services.
               * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the participant to fetch suggestion for. Format:
             *        `projects//locations//conversations//participants/`.
               * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest}
               * @since 1.13
               */
              protected SuggestSmartReplies(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesRequest content) {
                super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
              }

              @Override
              public SuggestSmartReplies set$Xgafv(java.lang.String $Xgafv) {
                return (SuggestSmartReplies) super.set$Xgafv($Xgafv);
              }

              @Override
              public SuggestSmartReplies setAccessToken(java.lang.String accessToken) {
                return (SuggestSmartReplies) super.setAccessToken(accessToken);
              }

              @Override
              public SuggestSmartReplies setAlt(java.lang.String alt) {
                return (SuggestSmartReplies) super.setAlt(alt);
              }

              @Override
              public SuggestSmartReplies setCallback(java.lang.String callback) {
                return (SuggestSmartReplies) super.setCallback(callback);
              }

              @Override
              public SuggestSmartReplies setFields(java.lang.String fields) {
                return (SuggestSmartReplies) super.setFields(fields);
              }

              @Override
              public SuggestSmartReplies setKey(java.lang.String key) {
                return (SuggestSmartReplies) super.setKey(key);
              }

              @Override
              public SuggestSmartReplies setOauthToken(java.lang.String oauthToken) {
                return (SuggestSmartReplies) super.setOauthToken(oauthToken);
              }

              @Override
              public SuggestSmartReplies setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SuggestSmartReplies) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SuggestSmartReplies setQuotaUser(java.lang.String quotaUser) {
                return (SuggestSmartReplies) super.setQuotaUser(quotaUser);
              }

              @Override
              public SuggestSmartReplies setUploadType(java.lang.String uploadType) {
                return (SuggestSmartReplies) super.setUploadType(uploadType);
              }

              @Override
              public SuggestSmartReplies setUploadProtocol(java.lang.String uploadProtocol) {
                return (SuggestSmartReplies) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the participant to fetch suggestion for. Format:
             `projects//locations//conversations//participants/`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the participant to fetch suggestion for. Format:
               * `projects//locations//conversations//participants/`.
               */
              public SuggestSmartReplies setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public SuggestSmartReplies set(String parameterName, Object value) {
                return (SuggestSmartReplies) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Suggestions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Suggestions.List request = dialogflow.suggestions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Suggestions suggestions() {
          return new Suggestions();
        }

        /**
         * The "suggestions" collection of methods.
         */
        public class Suggestions {

          /**
           * Suggest summary for a conversation based on specific historical messages. The range of the
           * messages to be used for summary can be specified in the request.
           *
           * Create a request for the method "suggestions.suggestConversationSummary".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link SuggestConversationSummary#execute()} method to invoke the remote
           * operation.
           *
           * @param conversation Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest}
           * @return the request
           */
          public SuggestConversationSummary suggestConversationSummary(java.lang.String conversation, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest content) throws java.io.IOException {
            SuggestConversationSummary result = new SuggestConversationSummary(conversation, content);
            initialize(result);
            return result;
          }

          public class SuggestConversationSummary extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse> {

            private static final String REST_PATH = "v2beta1/{+conversation}/suggestions:suggestConversationSummary";

            private final java.util.regex.Pattern CONVERSATION_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Suggest summary for a conversation based on specific historical messages. The range of the
             * messages to be used for summary can be specified in the request.
             *
             * Create a request for the method "suggestions.suggestConversationSummary".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link SuggestConversationSummary#execute()} method to invoke the
             * remote operation. <p> {@link SuggestConversationSummary#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param conversation Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest}
             * @since 1.13
             */
            protected SuggestConversationSummary(java.lang.String conversation, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1SuggestConversationSummaryResponse.class);
              this.conversation = com.google.api.client.util.Preconditions.checkNotNull(conversation, "Required parameter conversation must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PATTERN.matcher(conversation).matches(),
                    "Parameter conversation must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public SuggestConversationSummary set$Xgafv(java.lang.String $Xgafv) {
              return (SuggestConversationSummary) super.set$Xgafv($Xgafv);
            }

            @Override
            public SuggestConversationSummary setAccessToken(java.lang.String accessToken) {
              return (SuggestConversationSummary) super.setAccessToken(accessToken);
            }

            @Override
            public SuggestConversationSummary setAlt(java.lang.String alt) {
              return (SuggestConversationSummary) super.setAlt(alt);
            }

            @Override
            public SuggestConversationSummary setCallback(java.lang.String callback) {
              return (SuggestConversationSummary) super.setCallback(callback);
            }

            @Override
            public SuggestConversationSummary setFields(java.lang.String fields) {
              return (SuggestConversationSummary) super.setFields(fields);
            }

            @Override
            public SuggestConversationSummary setKey(java.lang.String key) {
              return (SuggestConversationSummary) super.setKey(key);
            }

            @Override
            public SuggestConversationSummary setOauthToken(java.lang.String oauthToken) {
              return (SuggestConversationSummary) super.setOauthToken(oauthToken);
            }

            @Override
            public SuggestConversationSummary setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SuggestConversationSummary) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SuggestConversationSummary setQuotaUser(java.lang.String quotaUser) {
              return (SuggestConversationSummary) super.setQuotaUser(quotaUser);
            }

            @Override
            public SuggestConversationSummary setUploadType(java.lang.String uploadType) {
              return (SuggestConversationSummary) super.setUploadType(uploadType);
            }

            @Override
            public SuggestConversationSummary setUploadProtocol(java.lang.String uploadProtocol) {
              return (SuggestConversationSummary) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The conversation to fetch suggestion for. Format:
             * `projects//locations//conversations/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String conversation;

            /** Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
             */
            public java.lang.String getConversation() {
              return conversation;
            }

            /**
             * Required. The conversation to fetch suggestion for. Format:
             * `projects//locations//conversations/`.
             */
            public SuggestConversationSummary setConversation(java.lang.String conversation) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONVERSATION_PATTERN.matcher(conversation).matches(),
                    "Parameter conversation must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.conversation = conversation;
              return this;
            }

            @Override
            public SuggestConversationSummary set(String parameterName, Object value) {
              return (SuggestConversationSummary) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the KnowledgeBases collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.KnowledgeBases.List request = dialogflow.knowledgeBases().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public KnowledgeBases knowledgeBases() {
        return new KnowledgeBases();
      }

      /**
       * The "knowledgeBases" collection of methods.
       */
      public class KnowledgeBases {

        /**
         * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated; only
         * use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.create".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a knowledge base. Note: The `projects.agent.knowledgeBases` resource is deprecated;
           * only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.create".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to create a knowledge base for. Format: `projects//locations/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
            super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to create a knowledge base for. Format: `projects//locations/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.delete".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Deletes the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.delete".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to delete. Format:
           * `projects//locations//knowledgeBases/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
         are also deleted.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. Force deletes the knowledge base. When set to true, any documents in the
           * knowledge base are also deleted.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Retrieves the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the knowledge base to retrieve. Format
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the knowledge base to retrieve. Format
           * `projects//locations//knowledgeBases/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the list of all knowledge bases of the specified agent. Note: The
         * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse> {

          private static final String REST_PATH = "v2beta1/{+parent}/knowledgeBases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns the list of all knowledge bases of the specified agent. Note: The
           * `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListKnowledgeBasesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The project to list of knowledge bases for. Format: `projects//locations/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The filter expression used to filter knowledge bases returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * display_name with has(:) operator * language_code with equals(=) operator
           * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
           * 'display_name:articles' matches knowledge bases whose display name contains "articles".
           * * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
           * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all
           * knowledge bases whose display name contains "articles" and whose language code is "en-
           * gb". Note: An empty filter string (i.e. "") is a no-op and will result in no filtering.
           * For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The filter expression used to filter knowledge bases returned by the list method. The expression
         has the following syntax: [AND ] ... The following fields and operators are supported: *
         display_name with has(:) operator * language_code with equals(=) operator Examples: *
         'language_code=en-us' matches knowledge bases with en-us language code. * 'display_name:articles'
         matches knowledge bases whose display name contains "articles". * 'display_name:"Best Articles"'
         matches knowledge bases whose display name contains "Best Articles". * 'language_code=en-gb AND
         display_name=articles' matches all knowledge bases whose display name contains "articles" and whose
         language code is "en-gb". Note: An empty filter string (i.e. "") is a no-op and will result in no
         filtering. For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The filter expression used to filter knowledge bases returned by the list method. The
           * expression has the following syntax: [AND ] ... The following fields and operators are
           * supported: * display_name with has(:) operator * language_code with equals(=) operator
           * Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. *
           * 'display_name:articles' matches knowledge bases whose display name contains "articles".
           * * 'display_name:"Best Articles"' matches knowledge bases whose display name contains
           * "Best Articles". * 'language_code=en-gb AND display_name=articles' matches all
           * knowledge bases whose display name contains "articles" and whose language code is "en-
           * gb". Note: An empty filter string (i.e. "") is a no-op and will result in no filtering.
           * For more information about filtering, see [API Filtering](https://aip.dev/160).
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return in a single page. By default 10 and at most 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous list request. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous list request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous list request. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
         * deprecated; only use `projects.knowledgeBases`.
         *
         * Create a request for the method "knowledgeBases.patch".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         *        `projects//locations//knowledgeBases/`.
         * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

          /**
           * Updates the specified knowledge base. Note: The `projects.agent.knowledgeBases` resource is
           * deprecated; only use `projects.knowledgeBases`.
           *
           * Create a request for the method "knowledgeBases.patch".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase content) {
            super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1KnowledgeBase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The knowledge base resource name. The name must be empty when creating a knowledge
           * base. Format: `projects//locations//knowledgeBases/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
         `projects//locations//knowledgeBases/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The knowledge base resource name. The name must be empty when creating a knowledge
           * base. Format: `projects//locations//knowledgeBases/`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
         InvalidArgument will be returned for attempting to update other fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Not specified means `update all`. Currently, only `display_name` can be
           * updated, an InvalidArgument will be returned for attempting to update other fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Documents collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dialogflow dialogflow = new Dialogflow(...);}
         *   {@code Dialogflow.Documents.List request = dialogflow.documents().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Documents documents() {
          return new Documents();
        }

        /**
         * The "documents" collection of methods.
         */
        public class Documents {

          /**
           * Creates a new document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.create".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to create a document for. Format:
           *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

            /**
             * Creates a new document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.create".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to create a document for. Format:
           *        `projects//locations//knowledgeBases/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to create a document for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to create a document for. Format:
           `projects//locations//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to create a document for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Whether to import custom metadata from Google Cloud Storage. Only valid when the
             * document source is Google Cloud Storage URI.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean importGcsCustomMetadata;

            /** Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is
           Google Cloud Storage URI.
             */
            public java.lang.Boolean getImportGcsCustomMetadata() {
              return importGcsCustomMetadata;
            }

            /**
             * Whether to import custom metadata from Google Cloud Storage. Only valid when the
             * document source is Google Cloud Storage URI.
             */
            public Create setImportGcsCustomMetadata(java.lang.Boolean importGcsCustomMetadata) {
              this.importGcsCustomMetadata = importGcsCustomMetadata;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
           * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.delete".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to delete. Format:
           *        `projects//locations//knowledgeBases//documents/`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Deletes the specified document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com
             * /protocol-buffers/docs/reference/google.protobuf#empty) Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.delete".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to delete. Format:
           *        `projects//locations//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Dialogflow.this, "DELETE", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to delete. Format:
             * `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to delete. Format:
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to delete. Format:
             * `projects//locations//knowledgeBases//documents/`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is
           * deprecated; only use `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.get".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to retrieve. Format
           *        `projects//locations//knowledgeBases//documents/`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource
             * is deprecated; only use `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.get".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to retrieve. Format
           *        `projects//locations//knowledgeBases//documents/`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to retrieve. Format
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to retrieve. Format
             * `projects//locations//knowledgeBases//documents/`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Create documents by importing data from external sources. Dialogflow supports up to 350 documents
           * in each request. If you try to import more, Dialogflow will return an error. This method is a
           * [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
           * The returned `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
           *
           * Create a request for the method "documents.import".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link DialogflowImport#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to import documents into. Format:
           *        `projects//locations//knowledgeBases/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest}
           * @return the request
           */
          public DialogflowImport dialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest content) throws java.io.IOException {
            DialogflowImport result = new DialogflowImport(parent, content);
            initialize(result);
            return result;
          }

          public class DialogflowImport extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents:import";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

            /**
             * Create documents by importing data from external sources. Dialogflow supports up to 350
             * documents in each request. If you try to import more, Dialogflow will return an error. This
             * method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-
             * running-operation). The returned `Operation` type has the following method-specific fields: -
             * `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
             *
             * Create a request for the method "documents.import".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link DialogflowImport#execute()} method to invoke the remote
             * operation. <p> {@link DialogflowImport#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to import documents into. Format:
           *        `projects//locations//knowledgeBases/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest}
             * @since 1.13
             */
            protected DialogflowImport(java.lang.String parent, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ImportDocumentsRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public DialogflowImport set$Xgafv(java.lang.String $Xgafv) {
              return (DialogflowImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public DialogflowImport setAccessToken(java.lang.String accessToken) {
              return (DialogflowImport) super.setAccessToken(accessToken);
            }

            @Override
            public DialogflowImport setAlt(java.lang.String alt) {
              return (DialogflowImport) super.setAlt(alt);
            }

            @Override
            public DialogflowImport setCallback(java.lang.String callback) {
              return (DialogflowImport) super.setCallback(callback);
            }

            @Override
            public DialogflowImport setFields(java.lang.String fields) {
              return (DialogflowImport) super.setFields(fields);
            }

            @Override
            public DialogflowImport setKey(java.lang.String key) {
              return (DialogflowImport) super.setKey(key);
            }

            @Override
            public DialogflowImport setOauthToken(java.lang.String oauthToken) {
              return (DialogflowImport) super.setOauthToken(oauthToken);
            }

            @Override
            public DialogflowImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DialogflowImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DialogflowImport setQuotaUser(java.lang.String quotaUser) {
              return (DialogflowImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public DialogflowImport setUploadType(java.lang.String uploadType) {
              return (DialogflowImport) super.setUploadType(uploadType);
            }

            @Override
            public DialogflowImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (DialogflowImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to import documents into. Format:
             * `projects//locations//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to import documents into. Format:
           `projects//locations//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to import documents into. Format:
             * `projects//locations//knowledgeBases/`.
             */
            public DialogflowImport setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public DialogflowImport set(String parameterName, Object value) {
              return (DialogflowImport) super.set(parameterName, value);
            }
          }
          /**
           * Returns the list of all documents of the knowledge base. Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.list".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The knowledge base to list all documents for. Format:
           *        `projects//locations//knowledgeBases/`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse> {

            private static final String REST_PATH = "v2beta1/{+parent}/documents";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");

            /**
             * Returns the list of all documents of the knowledge base. Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.list".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The knowledge base to list all documents for. Format:
           *        `projects//locations//knowledgeBases/`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ListDocumentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The knowledge base to list all documents for. Format:
           `projects//locations//knowledgeBases/`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The knowledge base to list all documents for. Format:
             * `projects//locations//knowledgeBases/`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The filter expression used to filter documents returned by the list method. The
             * expression has the following syntax: [AND ] ... The following fields and operators
             * are supported: * knowledge_types with has(:) operator * display_name with has(:)
             * operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches
             * documents with FAQ knowledge type. * "display_name:customer" matches documents whose
             * display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE
             * state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For
             * more information about filtering, see [API Filtering](https://aip.dev/160).
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The filter expression used to filter documents returned by the list method. The expression has the
           following syntax: [AND ] ... The following fields and operators are supported: * knowledge_types
           with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples:
           * "knowledge_types:FAQ" matches documents with FAQ knowledge type. * "display_name:customer"
           matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with
           ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more
           information about filtering, see [API Filtering](https://aip.dev/160).
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * The filter expression used to filter documents returned by the list method. The
             * expression has the following syntax: [AND ] ... The following fields and operators
             * are supported: * knowledge_types with has(:) operator * display_name with has(:)
             * operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches
             * documents with FAQ knowledge type. * "display_name:customer" matches documents whose
             * display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE
             * state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For
             * more information about filtering, see [API Filtering](https://aip.dev/160).
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The maximum number of items to return in a single page. By default 10 and at most
             * 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return in a single page. By default 10 and at most 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of items to return in a single page. By default 10 and at most
             * 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from a previous list request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous list request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from a previous list request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified document. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.patch".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
           *        `projects//locations//knowledgeBases//documents/`.
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Updates the specified document. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.patch".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Optional. The document resource name. The name must be empty when creating a document. Format:
           *        `projects//locations//knowledgeBases//documents/`.
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1Document content) {
              super(Dialogflow.this, "PATCH", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Optional. The document resource name. The name must be empty when creating a
             * document. Format: `projects//locations//knowledgeBases//documents/`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Optional. The document resource name. The name must be empty when creating a document. Format:
           `projects//locations//knowledgeBases//documents/`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Optional. The document resource name. The name must be empty when creating a
             * document. Format: `projects//locations//knowledgeBases//documents/`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Not specified means `update all`. Currently, only `display_name` can be
             * updated, an InvalidArgument will be returned for attempting to update other fields.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
           InvalidArgument will be returned for attempting to update other fields.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. Not specified means `update all`. Currently, only `display_name` can be
             * updated, an InvalidArgument will be returned for attempting to update other fields.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Reloads the specified document from its specified source, content_uri or content. The previously
           * loaded content of the document will be deleted. Note: Even when the content of the document has
           * not changed, there still may be side effects because of internal implementation changes. Note: If
           * the document source is Google Cloud Storage URI, its metadata will be replaced with the custom
           * metadata from Google Cloud Storage if the `import_gcs_custom_metadata` field is set to true in
           * the request. This method is a [long-running
           * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
           * `Operation` type has the following method-specific fields: - `metadata`:
           * KnowledgeOperationMetadata - `response`: Document Note: The
           * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
           * `projects.knowledgeBases.documents`.
           *
           * Create a request for the method "documents.reload".
           *
           * This request holds the parameters needed by the dialogflow server.  After setting any optional
           * parameters, call the {@link Reload#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the document to reload. Format:
           *        `projects//locations//knowledgeBases//documents/`
           * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
           * @return the request
           */
          public Reload reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) throws java.io.IOException {
            Reload result = new Reload(name, content);
            initialize(result);
            return result;
          }

          public class Reload extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v2beta1/{+name}:reload";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");

            /**
             * Reloads the specified document from its specified source, content_uri or content. The
             * previously loaded content of the document will be deleted. Note: Even when the content of the
             * document has not changed, there still may be side effects because of internal implementation
             * changes. Note: If the document source is Google Cloud Storage URI, its metadata will be
             * replaced with the custom metadata from Google Cloud Storage if the `import_gcs_custom_metadata`
             * field is set to true in the request. This method is a [long-running
             * operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The
             * returned `Operation` type has the following method-specific fields: - `metadata`:
             * KnowledgeOperationMetadata - `response`: Document Note: The
             * `projects.agent.knowledgeBases.documents` resource is deprecated; only use
             * `projects.knowledgeBases.documents`.
             *
             * Create a request for the method "documents.reload".
             *
             * This request holds the parameters needed by the the dialogflow server.  After setting any
             * optional parameters, call the {@link Reload#execute()} method to invoke the remote operation.
             * <p> {@link
             * Reload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the document to reload. Format:
           *        `projects//locations//knowledgeBases//documents/`
             * @param content the {@link com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest}
             * @since 1.13
             */
            protected Reload(java.lang.String name, com.google.api.services.dialogflow.v2beta1.model.GoogleCloudDialogflowV2beta1ReloadDocumentRequest content) {
              super(Dialogflow.this, "POST", REST_PATH, content, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
            }

            @Override
            public Reload set$Xgafv(java.lang.String $Xgafv) {
              return (Reload) super.set$Xgafv($Xgafv);
            }

            @Override
            public Reload setAccessToken(java.lang.String accessToken) {
              return (Reload) super.setAccessToken(accessToken);
            }

            @Override
            public Reload setAlt(java.lang.String alt) {
              return (Reload) super.setAlt(alt);
            }

            @Override
            public Reload setCallback(java.lang.String callback) {
              return (Reload) super.setCallback(callback);
            }

            @Override
            public Reload setFields(java.lang.String fields) {
              return (Reload) super.setFields(fields);
            }

            @Override
            public Reload setKey(java.lang.String key) {
              return (Reload) super.setKey(key);
            }

            @Override
            public Reload setOauthToken(java.lang.String oauthToken) {
              return (Reload) super.setOauthToken(oauthToken);
            }

            @Override
            public Reload setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Reload) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Reload setQuotaUser(java.lang.String quotaUser) {
              return (Reload) super.setQuotaUser(quotaUser);
            }

            @Override
            public Reload setUploadType(java.lang.String uploadType) {
              return (Reload) super.setUploadType(uploadType);
            }

            @Override
            public Reload setUploadProtocol(java.lang.String uploadProtocol) {
              return (Reload) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the document to reload. Format:
             * `projects//locations//knowledgeBases//documents/`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the document to reload. Format:
           `projects//locations//knowledgeBases//documents/`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the document to reload. Format:
             * `projects//locations//knowledgeBases//documents/`
             */
            public Reload setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Reload set(String parameterName, Object value) {
              return (Reload) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dialogflow dialogflow = new Dialogflow(...);}
       *   {@code Dialogflow.Operations.List request = dialogflow.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v2beta1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(Dialogflow.this, "POST", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v2beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the dialogflow server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v2beta1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the dialogflow server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dialogflow dialogflow = new Dialogflow(...);}
     *   {@code Dialogflow.Operations.List request = dialogflow.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
       * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
       * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
       * methods to check whether the cancellation succeeded or whether the operation completed despite
       * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
       * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
       * `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @return the request
       */
      public Cancel cancel(java.lang.String name) throws java.io.IOException {
        Cancel result = new Cancel(name);
        initialize(result);
        return result;
      }

      public class Cancel extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2beta1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         * <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @since 1.13
         */
        protected Cancel(java.lang.String name) {
          super(Dialogflow.this, "POST", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v2beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the dialogflow server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends DialogflowRequest<com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v2beta1/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the dialogflow server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Dialogflow.this, "GET", REST_PATH, null, com.google.api.services.dialogflow.v2beta1.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Dialogflow}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Dialogflow}. */
    @Override
    public Dialogflow build() {
      return new Dialogflow(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DialogflowRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDialogflowRequestInitializer(
        DialogflowRequestInitializer dialogflowRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dialogflowRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
