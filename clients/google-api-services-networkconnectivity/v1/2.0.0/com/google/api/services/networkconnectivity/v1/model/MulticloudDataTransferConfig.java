/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * The MulticloudDataTransferConfig resource. This lists the services for which customer is opting
 * in for Multicloud Data Transfer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MulticloudDataTransferConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Time when the MulticloudDataTransferConfig was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. An optional field to provide a description of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. The number of Destinations in use under the MulticloudDataTransferConfig resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer destinationsActiveCount;

  /**
   * Output only. The number of Destinations configured under the MulticloudDataTransferConfig
   * resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer destinationsCount;

  /**
   * The etag is computed by the server, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. User-defined labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The name of the MulticloudDataTransferConfig resource. Format: `projects/{project}/
   * locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. This map services to either their current or planned states. Service names are keys,
   * and the associated values describe the service's state. If a state change is expected, the
   * value will be the list of ADDING or DELETING states depending on the actions taken. Example:
   * "services": { "big-query": { "states": [ { "state": "ADDING", "effective_time":
   * "2024-12-12T08:00:00Z" }, ] }, "cloud-storage": { "states": [ { "state": "ACTIVE", } ] } }
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, StateTimeline> services;

  /**
   * Output only. The Google-generated UUID for the MulticloudDataTransferConfig. This value is
   * unique across all MulticloudDataTransferConfig resources. If a MulticloudDataTransferConfig is
   * deleted and another with the same name is created, the new MulticloudDataTransferConfig is
   * assigned a different uid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Time when the MulticloudDataTransferConfig was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Time when the MulticloudDataTransferConfig was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the MulticloudDataTransferConfig was created.
   * @param createTime createTime or {@code null} for none
   */
  public MulticloudDataTransferConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. An optional field to provide a description of this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. An optional field to provide a description of this resource.
   * @param description description or {@code null} for none
   */
  public MulticloudDataTransferConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. The number of Destinations in use under the MulticloudDataTransferConfig resource.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDestinationsActiveCount() {
    return destinationsActiveCount;
  }

  /**
   * Output only. The number of Destinations in use under the MulticloudDataTransferConfig resource.
   * @param destinationsActiveCount destinationsActiveCount or {@code null} for none
   */
  public MulticloudDataTransferConfig setDestinationsActiveCount(java.lang.Integer destinationsActiveCount) {
    this.destinationsActiveCount = destinationsActiveCount;
    return this;
  }

  /**
   * Output only. The number of Destinations configured under the MulticloudDataTransferConfig
   * resource.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDestinationsCount() {
    return destinationsCount;
  }

  /**
   * Output only. The number of Destinations configured under the MulticloudDataTransferConfig
   * resource.
   * @param destinationsCount destinationsCount or {@code null} for none
   */
  public MulticloudDataTransferConfig setDestinationsCount(java.lang.Integer destinationsCount) {
    this.destinationsCount = destinationsCount;
    return this;
  }

  /**
   * The etag is computed by the server, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * The etag is computed by the server, and may be sent on update and delete requests to ensure the
   * client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public MulticloudDataTransferConfig setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. User-defined labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. User-defined labels.
   * @param labels labels or {@code null} for none
   */
  public MulticloudDataTransferConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The name of the MulticloudDataTransferConfig resource. Format: `projects/{project}/
   * locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the MulticloudDataTransferConfig resource. Format: `projects/{project}/
   * locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
   * @param name name or {@code null} for none
   */
  public MulticloudDataTransferConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. This map services to either their current or planned states. Service names are keys,
   * and the associated values describe the service's state. If a state change is expected, the
   * value will be the list of ADDING or DELETING states depending on the actions taken. Example:
   * "services": { "big-query": { "states": [ { "state": "ADDING", "effective_time":
   * "2024-12-12T08:00:00Z" }, ] }, "cloud-storage": { "states": [ { "state": "ACTIVE", } ] } }
   * @return value or {@code null} for none
   */
  public java.util.Map<String, StateTimeline> getServices() {
    return services;
  }

  /**
   * Optional. This map services to either their current or planned states. Service names are keys,
   * and the associated values describe the service's state. If a state change is expected, the
   * value will be the list of ADDING or DELETING states depending on the actions taken. Example:
   * "services": { "big-query": { "states": [ { "state": "ADDING", "effective_time":
   * "2024-12-12T08:00:00Z" }, ] }, "cloud-storage": { "states": [ { "state": "ACTIVE", } ] } }
   * @param services services or {@code null} for none
   */
  public MulticloudDataTransferConfig setServices(java.util.Map<String, StateTimeline> services) {
    this.services = services;
    return this;
  }

  /**
   * Output only. The Google-generated UUID for the MulticloudDataTransferConfig. This value is
   * unique across all MulticloudDataTransferConfig resources. If a MulticloudDataTransferConfig is
   * deleted and another with the same name is created, the new MulticloudDataTransferConfig is
   * assigned a different uid.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The Google-generated UUID for the MulticloudDataTransferConfig. This value is
   * unique across all MulticloudDataTransferConfig resources. If a MulticloudDataTransferConfig is
   * deleted and another with the same name is created, the new MulticloudDataTransferConfig is
   * assigned a different uid.
   * @param uid uid or {@code null} for none
   */
  public MulticloudDataTransferConfig setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Time when the MulticloudDataTransferConfig was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when the MulticloudDataTransferConfig was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public MulticloudDataTransferConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public MulticloudDataTransferConfig set(String fieldName, Object value) {
    return (MulticloudDataTransferConfig) super.set(fieldName, value);
  }

  @Override
  public MulticloudDataTransferConfig clone() {
    return (MulticloudDataTransferConfig) super.clone();
  }

}
