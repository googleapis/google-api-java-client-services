/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v2.model;

/**
 * Conditions that need to be true for the task to run.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WhenExpression extends com.google.api.client.json.GenericJson {

  /**
   * Operator that represents an Input's relationship to the values
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String expressionOperator;

  /**
   * Input is the string for guard checking which can be a static input or an output from a parent
   * Task.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String input;

  /**
   * Values is an array of strings, which is compared against the input, for guard checking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> values;

  /**
   * Operator that represents an Input's relationship to the values
   * @return value or {@code null} for none
   */
  public java.lang.String getExpressionOperator() {
    return expressionOperator;
  }

  /**
   * Operator that represents an Input's relationship to the values
   * @param expressionOperator expressionOperator or {@code null} for none
   */
  public WhenExpression setExpressionOperator(java.lang.String expressionOperator) {
    this.expressionOperator = expressionOperator;
    return this;
  }

  /**
   * Input is the string for guard checking which can be a static input or an output from a parent
   * Task.
   * @return value or {@code null} for none
   */
  public java.lang.String getInput() {
    return input;
  }

  /**
   * Input is the string for guard checking which can be a static input or an output from a parent
   * Task.
   * @param input input or {@code null} for none
   */
  public WhenExpression setInput(java.lang.String input) {
    this.input = input;
    return this;
  }

  /**
   * Values is an array of strings, which is compared against the input, for guard checking.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getValues() {
    return values;
  }

  /**
   * Values is an array of strings, which is compared against the input, for guard checking.
   * @param values values or {@code null} for none
   */
  public WhenExpression setValues(java.util.List<java.lang.String> values) {
    this.values = values;
    return this;
  }

  @Override
  public WhenExpression set(String fieldName, Object value) {
    return (WhenExpression) super.set(fieldName, value);
  }

  @Override
  public WhenExpression clone() {
    return (WhenExpression) super.clone();
  }

}
