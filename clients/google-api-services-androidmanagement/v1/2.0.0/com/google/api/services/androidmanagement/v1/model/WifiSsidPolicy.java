/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Restrictions on which Wi-Fi SSIDs the device can connect to. Note that this does not affect which
 * networks can be configured on the device. Supported on company-owned devices running Android 13
 * and above.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WifiSsidPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Type of the Wi-Fi SSID policy to be applied.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String wifiSsidPolicyType;

  /**
   * Optional. List of Wi-Fi SSIDs that should be applied in the policy. This field must be non-
   * empty when WifiSsidPolicyType is set to WIFI_SSID_ALLOWLIST. If this is set to a non-empty
   * list, then a nonComplianceDetail detail with API_LEVEL is reported if the Android version is
   * less than 13 and a nonComplianceDetail with MANAGEMENT_MODE is reported for non-company-owned
   * devices.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WifiSsid> wifiSsids;

  static {
    // hack to force ProGuard to consider WifiSsid used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(WifiSsid.class);
  }

  /**
   * Type of the Wi-Fi SSID policy to be applied.
   * @return value or {@code null} for none
   */
  public java.lang.String getWifiSsidPolicyType() {
    return wifiSsidPolicyType;
  }

  /**
   * Type of the Wi-Fi SSID policy to be applied.
   * @param wifiSsidPolicyType wifiSsidPolicyType or {@code null} for none
   */
  public WifiSsidPolicy setWifiSsidPolicyType(java.lang.String wifiSsidPolicyType) {
    this.wifiSsidPolicyType = wifiSsidPolicyType;
    return this;
  }

  /**
   * Optional. List of Wi-Fi SSIDs that should be applied in the policy. This field must be non-
   * empty when WifiSsidPolicyType is set to WIFI_SSID_ALLOWLIST. If this is set to a non-empty
   * list, then a nonComplianceDetail detail with API_LEVEL is reported if the Android version is
   * less than 13 and a nonComplianceDetail with MANAGEMENT_MODE is reported for non-company-owned
   * devices.
   * @return value or {@code null} for none
   */
  public java.util.List<WifiSsid> getWifiSsids() {
    return wifiSsids;
  }

  /**
   * Optional. List of Wi-Fi SSIDs that should be applied in the policy. This field must be non-
   * empty when WifiSsidPolicyType is set to WIFI_SSID_ALLOWLIST. If this is set to a non-empty
   * list, then a nonComplianceDetail detail with API_LEVEL is reported if the Android version is
   * less than 13 and a nonComplianceDetail with MANAGEMENT_MODE is reported for non-company-owned
   * devices.
   * @param wifiSsids wifiSsids or {@code null} for none
   */
  public WifiSsidPolicy setWifiSsids(java.util.List<WifiSsid> wifiSsids) {
    this.wifiSsids = wifiSsids;
    return this;
  }

  @Override
  public WifiSsidPolicy set(String fieldName, Object value) {
    return (WifiSsidPolicy) super.set(fieldName, value);
  }

  @Override
  public WifiSsidPolicy clone() {
    return (WifiSsidPolicy) super.clone();
  }

}
