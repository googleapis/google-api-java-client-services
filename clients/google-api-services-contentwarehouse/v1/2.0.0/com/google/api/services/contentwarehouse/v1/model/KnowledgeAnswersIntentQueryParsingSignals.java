/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Parsing-related signals. Only horizontal signals should appear directly as fields on this
 * message. Each domain should create their own extension for anything that they need to propagate
 * down stream from AQUA. Note that this proto is not the same as the Superroot proto ParsingSignals
 * (http://google3/knowledge/proto/scoring-signals.proto), which is a Superroot-specific signal used
 * in Scoring. Next ID: 4
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersIntentQueryParsingSignals extends com.google.api.client.json.GenericJson {

  /**
   * A parsing score that is independently calibrated by each parser/IG, used by pre-fulfillment
   * ranker, see http://go/prefulfillment-ranker.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double calibratedParsingScore;

  /**
   * This proto holds the complete call path info of the QRewrite client (e.g. the QUS's phase like
   * "RBT","QBT"; the QUS's candidate type like "Identity"; and the ACE's candidate type like
   * "FuzzyMatcher").
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpLoggingQRewriteClientCallPathInfo qrewriteCallPathInfo;

  /**
   * The parser that calibrated the parsing score below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * A parsing score that is independently calibrated by each parser/IG, used by pre-fulfillment
   * ranker, see http://go/prefulfillment-ranker.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCalibratedParsingScore() {
    return calibratedParsingScore;
  }

  /**
   * A parsing score that is independently calibrated by each parser/IG, used by pre-fulfillment
   * ranker, see http://go/prefulfillment-ranker.
   * @param calibratedParsingScore calibratedParsingScore or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryParsingSignals setCalibratedParsingScore(java.lang.Double calibratedParsingScore) {
    this.calibratedParsingScore = calibratedParsingScore;
    return this;
  }

  /**
   * This proto holds the complete call path info of the QRewrite client (e.g. the QUS's phase like
   * "RBT","QBT"; the QUS's candidate type like "Identity"; and the ACE's candidate type like
   * "FuzzyMatcher").
   * @return value or {@code null} for none
   */
  public NlpLoggingQRewriteClientCallPathInfo getQrewriteCallPathInfo() {
    return qrewriteCallPathInfo;
  }

  /**
   * This proto holds the complete call path info of the QRewrite client (e.g. the QUS's phase like
   * "RBT","QBT"; the QUS's candidate type like "Identity"; and the ACE's candidate type like
   * "FuzzyMatcher").
   * @param qrewriteCallPathInfo qrewriteCallPathInfo or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryParsingSignals setQrewriteCallPathInfo(NlpLoggingQRewriteClientCallPathInfo qrewriteCallPathInfo) {
    this.qrewriteCallPathInfo = qrewriteCallPathInfo;
    return this;
  }

  /**
   * The parser that calibrated the parsing score below.
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * The parser that calibrated the parsing score below.
   * @param source source or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryParsingSignals setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  @Override
  public KnowledgeAnswersIntentQueryParsingSignals set(String fieldName, Object value) {
    return (KnowledgeAnswersIntentQueryParsingSignals) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersIntentQueryParsingSignals clone() {
    return (KnowledgeAnswersIntentQueryParsingSignals) super.clone();
  }

}
