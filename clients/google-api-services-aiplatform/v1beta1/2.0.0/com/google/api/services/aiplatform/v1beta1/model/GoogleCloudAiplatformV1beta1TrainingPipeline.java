/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the
 * training task, and optionally may also export data from Vertex AI's Dataset which becomes the
 * training input, upload the Model to Vertex AI, and evaluate the Model.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1TrainingPipeline extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Time when the TrainingPipeline was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The user-defined name of this TrainingPipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will
   * be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this
   * key if model_to_upload is not set separately.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec;

  /**
   * Output only. Time when the TrainingPipeline entered any of the following states:
   * `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or
   * `PIPELINE_STATE_CANCELLED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleRpcStatus error;

  /**
   * Specifies Vertex AI owned input data that may be used for training the Model. The
   * TrainingPipeline's training_task_definition should make clear whether this config is used and
   * if there are any special requirements on how it should be filled. If nothing about this config
   * is mentioned in the training_task_definition, then it should be assumed that the
   * TrainingPipeline does not depend on this configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1InputDataConfig inputDataConfig;

  /**
   * The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can
   * be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. The ID to use for the uploaded Model, which will become the final component of the
   * model resource name. This value may be up to 63 characters, and valid characters are
   * `[a-z0-9_-]`. The first character cannot be a number or hyphen.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelId;

  /**
   * Describes the Model that may be uploaded (via ModelService.UploadModel) by this
   * TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether
   * this Model description should be populated, and if there are any special requirements regarding
   * how it should be filled. If nothing is mentioned in the training_task_definition, then it
   * should be assumed that this field should not be filled and the training task either uploads the
   * Model without a need of this information, or that training task does not support uploading a
   * Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and
   * the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is
   * populated. The Model is always uploaded into the Project and Location in which this pipeline
   * is.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1Model modelToUpload;

  /**
   * Output only. Resource name of the TrainingPipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model,
   * instead, it will become a new version of this `parent_model`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentModel;

  /**
   * Output only. Time when the TrainingPipeline for the first time entered the
   * `PIPELINE_STATE_RUNNING` state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. The detailed state of the pipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Required. A Google Cloud Storage path to the YAML file that defines the training task which is
   * responsible for producing the model artifact, and may also include additional auxiliary work.
   * The definition files that can be used here are found in gs://google-cloud-
   * aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and
   * probably different, including the URI scheme, than the one given on input. The output URI will
   * point to a location where the user only has a read access.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trainingTaskDefinition;

  /**
   * Required. The training task's parameter(s), as specified in the training_task_definition's
   * `inputs`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Object trainingTaskInputs;

  /**
   * Output only. The metadata information as specified in the training_task_definition's
   * `metadata`. This metadata is an auxiliary runtime and final information about the training
   * task. While the pipeline is running this information is populated only at a best effort basis.
   * Only present if the pipeline's training_task_definition contains `metadata` object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Object trainingTaskMetadata;

  /**
   * Output only. Time when the TrainingPipeline was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Time when the TrainingPipeline was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the TrainingPipeline was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The user-defined name of this TrainingPipeline.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The user-defined name of this TrainingPipeline.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will
   * be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this
   * key if model_to_upload is not set separately.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  /**
   * Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will
   * be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this
   * key if model_to_upload is not set separately.
   * @param encryptionSpec encryptionSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setEncryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Output only. Time when the TrainingPipeline entered any of the following states:
   * `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. Time when the TrainingPipeline entered any of the following states:
   * `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
   * @param endTime endTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or
   * `PIPELINE_STATE_CANCELLED`.
   * @return value or {@code null} for none
   */
  public GoogleRpcStatus getError() {
    return error;
  }

  /**
   * Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or
   * `PIPELINE_STATE_CANCELLED`.
   * @param error error or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setError(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Specifies Vertex AI owned input data that may be used for training the Model. The
   * TrainingPipeline's training_task_definition should make clear whether this config is used and
   * if there are any special requirements on how it should be filled. If nothing about this config
   * is mentioned in the training_task_definition, then it should be assumed that the
   * TrainingPipeline does not depend on this configuration.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1InputDataConfig getInputDataConfig() {
    return inputDataConfig;
  }

  /**
   * Specifies Vertex AI owned input data that may be used for training the Model. The
   * TrainingPipeline's training_task_definition should make clear whether this config is used and
   * if there are any special requirements on how it should be filled. If nothing about this config
   * is mentioned in the training_task_definition, then it should be assumed that the
   * TrainingPipeline does not depend on this configuration.
   * @param inputDataConfig inputDataConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setInputDataConfig(GoogleCloudAiplatformV1beta1InputDataConfig inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can
   * be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can
   * be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information and examples of labels.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. The ID to use for the uploaded Model, which will become the final component of the
   * model resource name. This value may be up to 63 characters, and valid characters are
   * `[a-z0-9_-]`. The first character cannot be a number or hyphen.
   * @return value or {@code null} for none
   */
  public java.lang.String getModelId() {
    return modelId;
  }

  /**
   * Optional. The ID to use for the uploaded Model, which will become the final component of the
   * model resource name. This value may be up to 63 characters, and valid characters are
   * `[a-z0-9_-]`. The first character cannot be a number or hyphen.
   * @param modelId modelId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setModelId(java.lang.String modelId) {
    this.modelId = modelId;
    return this;
  }

  /**
   * Describes the Model that may be uploaded (via ModelService.UploadModel) by this
   * TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether
   * this Model description should be populated, and if there are any special requirements regarding
   * how it should be filled. If nothing is mentioned in the training_task_definition, then it
   * should be assumed that this field should not be filled and the training task either uploads the
   * Model without a need of this information, or that training task does not support uploading a
   * Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and
   * the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is
   * populated. The Model is always uploaded into the Project and Location in which this pipeline
   * is.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Model getModelToUpload() {
    return modelToUpload;
  }

  /**
   * Describes the Model that may be uploaded (via ModelService.UploadModel) by this
   * TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether
   * this Model description should be populated, and if there are any special requirements regarding
   * how it should be filled. If nothing is mentioned in the training_task_definition, then it
   * should be assumed that this field should not be filled and the training task either uploads the
   * Model without a need of this information, or that training task does not support uploading a
   * Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and
   * the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is
   * populated. The Model is always uploaded into the Project and Location in which this pipeline
   * is.
   * @param modelToUpload modelToUpload or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setModelToUpload(GoogleCloudAiplatformV1beta1Model modelToUpload) {
    this.modelToUpload = modelToUpload;
    return this;
  }

  /**
   * Output only. Resource name of the TrainingPipeline.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Resource name of the TrainingPipeline.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model,
   * instead, it will become a new version of this `parent_model`.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentModel() {
    return parentModel;
  }

  /**
   * Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model,
   * instead, it will become a new version of this `parent_model`.
   * @param parentModel parentModel or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setParentModel(java.lang.String parentModel) {
    this.parentModel = parentModel;
    return this;
  }

  /**
   * Output only. Time when the TrainingPipeline for the first time entered the
   * `PIPELINE_STATE_RUNNING` state.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. Time when the TrainingPipeline for the first time entered the
   * `PIPELINE_STATE_RUNNING` state.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. The detailed state of the pipeline.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The detailed state of the pipeline.
   * @param state state or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Required. A Google Cloud Storage path to the YAML file that defines the training task which is
   * responsible for producing the model artifact, and may also include additional auxiliary work.
   * The definition files that can be used here are found in gs://google-cloud-
   * aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and
   * probably different, including the URI scheme, than the one given on input. The output URI will
   * point to a location where the user only has a read access.
   * @return value or {@code null} for none
   */
  public java.lang.String getTrainingTaskDefinition() {
    return trainingTaskDefinition;
  }

  /**
   * Required. A Google Cloud Storage path to the YAML file that defines the training task which is
   * responsible for producing the model artifact, and may also include additional auxiliary work.
   * The definition files that can be used here are found in gs://google-cloud-
   * aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and
   * probably different, including the URI scheme, than the one given on input. The output URI will
   * point to a location where the user only has a read access.
   * @param trainingTaskDefinition trainingTaskDefinition or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setTrainingTaskDefinition(java.lang.String trainingTaskDefinition) {
    this.trainingTaskDefinition = trainingTaskDefinition;
    return this;
  }

  /**
   * Required. The training task's parameter(s), as specified in the training_task_definition's
   * `inputs`.
   * @return value or {@code null} for none
   */
  public java.lang.Object getTrainingTaskInputs() {
    return trainingTaskInputs;
  }

  /**
   * Required. The training task's parameter(s), as specified in the training_task_definition's
   * `inputs`.
   * @param trainingTaskInputs trainingTaskInputs or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setTrainingTaskInputs(java.lang.Object trainingTaskInputs) {
    this.trainingTaskInputs = trainingTaskInputs;
    return this;
  }

  /**
   * Output only. The metadata information as specified in the training_task_definition's
   * `metadata`. This metadata is an auxiliary runtime and final information about the training
   * task. While the pipeline is running this information is populated only at a best effort basis.
   * Only present if the pipeline's training_task_definition contains `metadata` object.
   * @return value or {@code null} for none
   */
  public java.lang.Object getTrainingTaskMetadata() {
    return trainingTaskMetadata;
  }

  /**
   * Output only. The metadata information as specified in the training_task_definition's
   * `metadata`. This metadata is an auxiliary runtime and final information about the training
   * task. While the pipeline is running this information is populated only at a best effort basis.
   * Only present if the pipeline's training_task_definition contains `metadata` object.
   * @param trainingTaskMetadata trainingTaskMetadata or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setTrainingTaskMetadata(java.lang.Object trainingTaskMetadata) {
    this.trainingTaskMetadata = trainingTaskMetadata;
    return this;
  }

  /**
   * Output only. Time when the TrainingPipeline was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when the TrainingPipeline was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1TrainingPipeline setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1TrainingPipeline set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1TrainingPipeline) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1TrainingPipeline clone() {
    return (GoogleCloudAiplatformV1beta1TrainingPipeline) super.clone();
  }

}
