/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vectortile.v1;

/**
 * Service definition for SemanticTile (v1).
 *
 * <p>
 * Serves vector tiles containing geospatial data. 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/maps/contact-sales/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SemanticTileRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SemanticTile extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Semantic Tile API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://vectortile.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://vectortile.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SemanticTile(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SemanticTile(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Featuretiles collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code SemanticTile vectortile = new SemanticTile(...);}
   *   {@code SemanticTile.Featuretiles.List request = vectortile.featuretiles().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Featuretiles featuretiles() {
    return new Featuretiles();
  }

  /**
   * The "featuretiles" collection of methods.
   */
  public class Featuretiles {

    /**
     * Gets a feature tile by its tile resource name.
     *
     * Create a request for the method "featuretiles.get".
     *
     * This request holds the parameters needed by the vectortile server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     *        `tiles/` followed by the resource ID, which encodes the tile's global x and y coordinates
     *        and zoom level as `@,,z`. For example, `tiles/@1,2,3z`.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends SemanticTileRequest<com.google.api.services.vectortile.v1.model.FeatureTile> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^featuretiles/[^/]+$");

      /**
       * Gets a feature tile by its tile resource name.
       *
       * Create a request for the method "featuretiles.get".
       *
       * This request holds the parameters needed by the the vectortile server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     *        `tiles/` followed by the resource ID, which encodes the tile's global x and y coordinates
     *        and zoom level as `@,,z`. For example, `tiles/@1,2,3z`.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(SemanticTile.this, "GET", REST_PATH, null, com.google.api.services.vectortile.v1.model.FeatureTile.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^featuretiles/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name of the tile. The tile resource name is prefixed by its collection
       * ID `tiles/` followed by the resource ID, which encodes the tile's global x and y
       * coordinates and zoom level as `@,,z`. For example, `tiles/@1,2,3z`.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     `tiles/` followed by the resource ID, which encodes the tile's global x and y coordinates and zoom
     level as `@,,z`. For example, `tiles/@1,2,3z`.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name of the tile. The tile resource name is prefixed by its collection
       * ID `tiles/` followed by the resource ID, which encodes the tile's global x and y
       * coordinates and zoom level as `@,,z`. For example, `tiles/@1,2,3z`.
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^featuretiles/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * API client name and version. For example, the SDK calling the API. The exact format is up
       * to the client.
       */
      @com.google.api.client.util.Key("clientInfo.apiClient")
      private java.lang.String clientInfoApiClient;

      /** API client name and version. For example, the SDK calling the API. The exact format is up to the
     client.
       */
      public java.lang.String getClientInfoApiClient() {
        return clientInfoApiClient;
      }

      /**
       * API client name and version. For example, the SDK calling the API. The exact format is up
       * to the client.
       */
      public Get setClientInfoApiClient(java.lang.String clientInfoApiClient) {
        this.clientInfoApiClient = clientInfoApiClient;
        return this;
      }

      /**
       * Application ID, such as the package name on Android and the bundle identifier on iOS
       * platforms.
       */
      @com.google.api.client.util.Key("clientInfo.applicationId")
      private java.lang.String clientInfoApplicationId;

      /** Application ID, such as the package name on Android and the bundle identifier on iOS platforms.
       */
      public java.lang.String getClientInfoApplicationId() {
        return clientInfoApplicationId;
      }

      /**
       * Application ID, such as the package name on Android and the bundle identifier on iOS
       * platforms.
       */
      public Get setClientInfoApplicationId(java.lang.String clientInfoApplicationId) {
        this.clientInfoApplicationId = clientInfoApplicationId;
        return this;
      }

      /**
       * Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      @com.google.api.client.util.Key("clientInfo.applicationVersion")
      private java.lang.String clientInfoApplicationVersion;

      /** Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      public java.lang.String getClientInfoApplicationVersion() {
        return clientInfoApplicationVersion;
      }

      /**
       * Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      public Get setClientInfoApplicationVersion(java.lang.String clientInfoApplicationVersion) {
        this.clientInfoApplicationVersion = clientInfoApplicationVersion;
        return this;
      }

      /** Device model as reported by the device. The exact format is platform-dependent. */
      @com.google.api.client.util.Key("clientInfo.deviceModel")
      private java.lang.String clientInfoDeviceModel;

      /** Device model as reported by the device. The exact format is platform-dependent.
       */
      public java.lang.String getClientInfoDeviceModel() {
        return clientInfoDeviceModel;
      }

      /** Device model as reported by the device. The exact format is platform-dependent. */
      public Get setClientInfoDeviceModel(java.lang.String clientInfoDeviceModel) {
        this.clientInfoDeviceModel = clientInfoDeviceModel;
        return this;
      }

      /**
       * Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4".
       * The exact format is platform-dependent.
       */
      @com.google.api.client.util.Key("clientInfo.operatingSystem")
      private java.lang.String clientInfoOperatingSystem;

      /** Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4". The exact
     format is platform-dependent.
       */
      public java.lang.String getClientInfoOperatingSystem() {
        return clientInfoOperatingSystem;
      }

      /**
       * Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4".
       * The exact format is platform-dependent.
       */
      public Get setClientInfoOperatingSystem(java.lang.String clientInfoOperatingSystem) {
        this.clientInfoOperatingSystem = clientInfoOperatingSystem;
        return this;
      }

      /** Platform where the application is running. */
      @com.google.api.client.util.Key("clientInfo.platform")
      private java.lang.String clientInfoPlatform;

      /** Platform where the application is running.
       */
      public java.lang.String getClientInfoPlatform() {
        return clientInfoPlatform;
      }

      /** Platform where the application is running. */
      public Get setClientInfoPlatform(java.lang.String clientInfoPlatform) {
        this.clientInfoPlatform = clientInfoPlatform;
        return this;
      }

      /**
       * Required. A client-generated user ID. The ID should be generated and persisted during the
       * first user session or whenever a pre-existing ID is not found. The exact format is up to
       * the client. This must be non-empty in a GetFeatureTileRequest (whether via the header or
       * GetFeatureTileRequest.client_info).
       */
      @com.google.api.client.util.Key("clientInfo.userId")
      private java.lang.String clientInfoUserId;

      /** Required. A client-generated user ID. The ID should be generated and persisted during the first
     user session or whenever a pre-existing ID is not found. The exact format is up to the client. This
     must be non-empty in a GetFeatureTileRequest (whether via the header or
     GetFeatureTileRequest.client_info).
       */
      public java.lang.String getClientInfoUserId() {
        return clientInfoUserId;
      }

      /**
       * Required. A client-generated user ID. The ID should be generated and persisted during the
       * first user session or whenever a pre-existing ID is not found. The exact format is up to
       * the client. This must be non-empty in a GetFeatureTileRequest (whether via the header or
       * GetFeatureTileRequest.client_info).
       */
      public Get setClientInfoUserId(java.lang.String clientInfoUserId) {
        this.clientInfoUserId = clientInfoUserId;
        return this;
      }

      /**
       * Optional version id identifying the tile that is already in the client's cache. This field
       * should be populated with the most recent version_id value returned by the API for the
       * requested tile. If the version id is empty the server always returns a newly rendered tile.
       * If it is provided the server checks if the tile contents would be identical to one that's
       * already on the client, and if so, returns a stripped-down response tile with
       * STATUS_OK_DATA_UNCHANGED instead.
       */
      @com.google.api.client.util.Key
      private java.lang.String clientTileVersionId;

      /** Optional version id identifying the tile that is already in the client's cache. This field should
     be populated with the most recent version_id value returned by the API for the requested tile. If
     the version id is empty the server always returns a newly rendered tile. If it is provided the
     server checks if the tile contents would be identical to one that's already on the client, and if
     so, returns a stripped-down response tile with STATUS_OK_DATA_UNCHANGED instead.
       */
      public java.lang.String getClientTileVersionId() {
        return clientTileVersionId;
      }

      /**
       * Optional version id identifying the tile that is already in the client's cache. This field
       * should be populated with the most recent version_id value returned by the API for the
       * requested tile. If the version id is empty the server always returns a newly rendered tile.
       * If it is provided the server checks if the tile contents would be identical to one that's
       * already on the client, and if so, returns a stripped-down response tile with
       * STATUS_OK_DATA_UNCHANGED instead.
       */
      public Get setClientTileVersionId(java.lang.String clientTileVersionId) {
        this.clientTileVersionId = clientTileVersionId;
        return this;
      }

      /**
       * Flag indicating whether detailed highway types should be returned. If this is set, the
       * CONTROLLED_ACCESS_HIGHWAY type may be returned. If not, then these highways will have the
       * generic HIGHWAY type. This exists for backwards compatibility reasons.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean enableDetailedHighwayTypes;

      /** Flag indicating whether detailed highway types should be returned. If this is set, the
     CONTROLLED_ACCESS_HIGHWAY type may be returned. If not, then these highways will have the generic
     HIGHWAY type. This exists for backwards compatibility reasons.
       */
      public java.lang.Boolean getEnableDetailedHighwayTypes() {
        return enableDetailedHighwayTypes;
      }

      /**
       * Flag indicating whether detailed highway types should be returned. If this is set, the
       * CONTROLLED_ACCESS_HIGHWAY type may be returned. If not, then these highways will have the
       * generic HIGHWAY type. This exists for backwards compatibility reasons.
       */
      public Get setEnableDetailedHighwayTypes(java.lang.Boolean enableDetailedHighwayTypes) {
        this.enableDetailedHighwayTypes = enableDetailedHighwayTypes;
        return this;
      }

      /**
       * Flag indicating whether human-readable names should be returned for features. If this is
       * set, the display_name field on the feature will be filled out.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean enableFeatureNames;

      /** Flag indicating whether human-readable names should be returned for features. If this is set, the
     display_name field on the feature will be filled out.
       */
      public java.lang.Boolean getEnableFeatureNames() {
        return enableFeatureNames;
      }

      /**
       * Flag indicating whether human-readable names should be returned for features. If this is
       * set, the display_name field on the feature will be filled out.
       */
      public Get setEnableFeatureNames(java.lang.Boolean enableFeatureNames) {
        this.enableFeatureNames = enableFeatureNames;
        return this;
      }

      /**
       * Flag indicating whether 3D building models should be enabled. If this is set structures
       * will be returned as 3D modeled volumes rather than 2.5D extruded areas where possible.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean enableModeledVolumes;

      /** Flag indicating whether 3D building models should be enabled. If this is set structures will be
     returned as 3D modeled volumes rather than 2.5D extruded areas where possible.
       */
      public java.lang.Boolean getEnableModeledVolumes() {
        return enableModeledVolumes;
      }

      /**
       * Flag indicating whether 3D building models should be enabled. If this is set structures
       * will be returned as 3D modeled volumes rather than 2.5D extruded areas where possible.
       */
      public Get setEnableModeledVolumes(java.lang.Boolean enableModeledVolumes) {
        this.enableModeledVolumes = enableModeledVolumes;
        return this;
      }

      /** Flag indicating whether political features should be returned. */
      @com.google.api.client.util.Key
      private java.lang.Boolean enablePoliticalFeatures;

      /** Flag indicating whether political features should be returned.
       */
      public java.lang.Boolean getEnablePoliticalFeatures() {
        return enablePoliticalFeatures;
      }

      /** Flag indicating whether political features should be returned. */
      public Get setEnablePoliticalFeatures(java.lang.Boolean enablePoliticalFeatures) {
        this.enablePoliticalFeatures = enablePoliticalFeatures;
        return this;
      }

      /**
       * Flag indicating whether the returned tile will contain road features that are marked
       * private. Private roads are indicated by the Feature.segment_info.road_info.is_private
       * field.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean enablePrivateRoads;

      /** Flag indicating whether the returned tile will contain road features that are marked private.
     Private roads are indicated by the Feature.segment_info.road_info.is_private field.
       */
      public java.lang.Boolean getEnablePrivateRoads() {
        return enablePrivateRoads;
      }

      /**
       * Flag indicating whether the returned tile will contain road features that are marked
       * private. Private roads are indicated by the Feature.segment_info.road_info.is_private
       * field.
       */
      public Get setEnablePrivateRoads(java.lang.Boolean enablePrivateRoads) {
        this.enablePrivateRoads = enablePrivateRoads;
        return this;
      }

      /**
       * Flag indicating whether unclipped buildings should be returned. If this is set, building
       * render ops will extend beyond the tile boundary. Buildings will only be returned on the
       * tile that contains their centroid.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean enableUnclippedBuildings;

      /** Flag indicating whether unclipped buildings should be returned. If this is set, building render ops
     will extend beyond the tile boundary. Buildings will only be returned on the tile that contains
     their centroid.
       */
      public java.lang.Boolean getEnableUnclippedBuildings() {
        return enableUnclippedBuildings;
      }

      /**
       * Flag indicating whether unclipped buildings should be returned. If this is set, building
       * render ops will extend beyond the tile boundary. Buildings will only be returned on the
       * tile that contains their centroid.
       */
      public Get setEnableUnclippedBuildings(java.lang.Boolean enableUnclippedBuildings) {
        this.enableUnclippedBuildings = enableUnclippedBuildings;
        return this;
      }

      /**
       * Required. The BCP-47 language code corresponding to the language in which the name was
       * requested, such as "en-US" or "sr-Latn". For more information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Required. The BCP-47 language code corresponding to the language in which the name was requested,
     such as "en-US" or "sr-Latn". For more information, see
     http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Required. The BCP-47 language code corresponding to the language in which the name was
       * requested, such as "en-US" or "sr-Latn". For more information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       */
      public Get setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Required. The Unicode country/region code (CLDR) of the location from which the request is
       * coming from, such as "US" and "419". For more information, see
       * http://www.unicode.org/reports/tr35/#unicode_region_subtag.
       */
      @com.google.api.client.util.Key
      private java.lang.String regionCode;

      /** Required. The Unicode country/region code (CLDR) of the location from which the request is coming
     from, such as "US" and "419". For more information, see
     http://www.unicode.org/reports/tr35/#unicode_region_subtag.
       */
      public java.lang.String getRegionCode() {
        return regionCode;
      }

      /**
       * Required. The Unicode country/region code (CLDR) of the location from which the request is
       * coming from, such as "US" and "419". For more information, see
       * http://www.unicode.org/reports/tr35/#unicode_region_subtag.
       */
      public Get setRegionCode(java.lang.String regionCode) {
        this.regionCode = regionCode;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Terraintiles collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code SemanticTile vectortile = new SemanticTile(...);}
   *   {@code SemanticTile.Terraintiles.List request = vectortile.terraintiles().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Terraintiles terraintiles() {
    return new Terraintiles();
  }

  /**
   * The "terraintiles" collection of methods.
   */
  public class Terraintiles {

    /**
     * Gets a terrain tile by its tile resource name.
     *
     * Create a request for the method "terraintiles.get".
     *
     * This request holds the parameters needed by the vectortile server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     *        `terraintiles/` followed by the resource ID, which encodes the tile's global x and y
     *        coordinates and zoom level as `@,,z`. For example, `terraintiles/@1,2,3z`.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends SemanticTileRequest<com.google.api.services.vectortile.v1.model.TerrainTile> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^terraintiles/[^/]+$");

      /**
       * Gets a terrain tile by its tile resource name.
       *
       * Create a request for the method "terraintiles.get".
       *
       * This request holds the parameters needed by the the vectortile server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     *        `terraintiles/` followed by the resource ID, which encodes the tile's global x and y
     *        coordinates and zoom level as `@,,z`. For example, `terraintiles/@1,2,3z`.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(SemanticTile.this, "GET", REST_PATH, null, com.google.api.services.vectortile.v1.model.TerrainTile.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^terraintiles/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name of the tile. The tile resource name is prefixed by its collection
       * ID `terraintiles/` followed by the resource ID, which encodes the tile's global x and y
       * coordinates and zoom level as `@,,z`. For example, `terraintiles/@1,2,3z`.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the tile. The tile resource name is prefixed by its collection ID
     `terraintiles/` followed by the resource ID, which encodes the tile's global x and y coordinates
     and zoom level as `@,,z`. For example, `terraintiles/@1,2,3z`.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name of the tile. The tile resource name is prefixed by its collection
       * ID `terraintiles/` followed by the resource ID, which encodes the tile's global x and y
       * coordinates and zoom level as `@,,z`. For example, `terraintiles/@1,2,3z`.
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^terraintiles/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The precision of terrain altitudes in centimeters. Possible values: between 1 (cm level
       * precision) and 1,000,000 (10-kilometer level precision).
       */
      @com.google.api.client.util.Key
      private java.lang.Integer altitudePrecisionCentimeters;

      /** The precision of terrain altitudes in centimeters. Possible values: between 1 (cm level precision)
     and 1,000,000 (10-kilometer level precision).
       */
      public java.lang.Integer getAltitudePrecisionCentimeters() {
        return altitudePrecisionCentimeters;
      }

      /**
       * The precision of terrain altitudes in centimeters. Possible values: between 1 (cm level
       * precision) and 1,000,000 (10-kilometer level precision).
       */
      public Get setAltitudePrecisionCentimeters(java.lang.Integer altitudePrecisionCentimeters) {
        this.altitudePrecisionCentimeters = altitudePrecisionCentimeters;
        return this;
      }

      /**
       * API client name and version. For example, the SDK calling the API. The exact format is up
       * to the client.
       */
      @com.google.api.client.util.Key("clientInfo.apiClient")
      private java.lang.String clientInfoApiClient;

      /** API client name and version. For example, the SDK calling the API. The exact format is up to the
     client.
       */
      public java.lang.String getClientInfoApiClient() {
        return clientInfoApiClient;
      }

      /**
       * API client name and version. For example, the SDK calling the API. The exact format is up
       * to the client.
       */
      public Get setClientInfoApiClient(java.lang.String clientInfoApiClient) {
        this.clientInfoApiClient = clientInfoApiClient;
        return this;
      }

      /**
       * Application ID, such as the package name on Android and the bundle identifier on iOS
       * platforms.
       */
      @com.google.api.client.util.Key("clientInfo.applicationId")
      private java.lang.String clientInfoApplicationId;

      /** Application ID, such as the package name on Android and the bundle identifier on iOS platforms.
       */
      public java.lang.String getClientInfoApplicationId() {
        return clientInfoApplicationId;
      }

      /**
       * Application ID, such as the package name on Android and the bundle identifier on iOS
       * platforms.
       */
      public Get setClientInfoApplicationId(java.lang.String clientInfoApplicationId) {
        this.clientInfoApplicationId = clientInfoApplicationId;
        return this;
      }

      /**
       * Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      @com.google.api.client.util.Key("clientInfo.applicationVersion")
      private java.lang.String clientInfoApplicationVersion;

      /** Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      public java.lang.String getClientInfoApplicationVersion() {
        return clientInfoApplicationVersion;
      }

      /**
       * Application version number, such as "1.2.3". The exact format is application-dependent.
       */
      public Get setClientInfoApplicationVersion(java.lang.String clientInfoApplicationVersion) {
        this.clientInfoApplicationVersion = clientInfoApplicationVersion;
        return this;
      }

      /** Device model as reported by the device. The exact format is platform-dependent. */
      @com.google.api.client.util.Key("clientInfo.deviceModel")
      private java.lang.String clientInfoDeviceModel;

      /** Device model as reported by the device. The exact format is platform-dependent.
       */
      public java.lang.String getClientInfoDeviceModel() {
        return clientInfoDeviceModel;
      }

      /** Device model as reported by the device. The exact format is platform-dependent. */
      public Get setClientInfoDeviceModel(java.lang.String clientInfoDeviceModel) {
        this.clientInfoDeviceModel = clientInfoDeviceModel;
        return this;
      }

      /**
       * Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4".
       * The exact format is platform-dependent.
       */
      @com.google.api.client.util.Key("clientInfo.operatingSystem")
      private java.lang.String clientInfoOperatingSystem;

      /** Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4". The exact
     format is platform-dependent.
       */
      public java.lang.String getClientInfoOperatingSystem() {
        return clientInfoOperatingSystem;
      }

      /**
       * Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4".
       * The exact format is platform-dependent.
       */
      public Get setClientInfoOperatingSystem(java.lang.String clientInfoOperatingSystem) {
        this.clientInfoOperatingSystem = clientInfoOperatingSystem;
        return this;
      }

      /** Platform where the application is running. */
      @com.google.api.client.util.Key("clientInfo.platform")
      private java.lang.String clientInfoPlatform;

      /** Platform where the application is running.
       */
      public java.lang.String getClientInfoPlatform() {
        return clientInfoPlatform;
      }

      /** Platform where the application is running. */
      public Get setClientInfoPlatform(java.lang.String clientInfoPlatform) {
        this.clientInfoPlatform = clientInfoPlatform;
        return this;
      }

      /**
       * Required. A client-generated user ID. The ID should be generated and persisted during the
       * first user session or whenever a pre-existing ID is not found. The exact format is up to
       * the client. This must be non-empty in a GetFeatureTileRequest (whether via the header or
       * GetFeatureTileRequest.client_info).
       */
      @com.google.api.client.util.Key("clientInfo.userId")
      private java.lang.String clientInfoUserId;

      /** Required. A client-generated user ID. The ID should be generated and persisted during the first
     user session or whenever a pre-existing ID is not found. The exact format is up to the client. This
     must be non-empty in a GetFeatureTileRequest (whether via the header or
     GetFeatureTileRequest.client_info).
       */
      public java.lang.String getClientInfoUserId() {
        return clientInfoUserId;
      }

      /**
       * Required. A client-generated user ID. The ID should be generated and persisted during the
       * first user session or whenever a pre-existing ID is not found. The exact format is up to
       * the client. This must be non-empty in a GetFeatureTileRequest (whether via the header or
       * GetFeatureTileRequest.client_info).
       */
      public Get setClientInfoUserId(java.lang.String clientInfoUserId) {
        this.clientInfoUserId = clientInfoUserId;
        return this;
      }

      /**
       * The maximum allowed resolution for the returned elevation heightmap. Possible values:
       * between 1 and 1024 (and not less than min_elevation_resolution_cells). Over-sized
       * heightmaps will be non-uniformly down-sampled such that each edge is no longer than this
       * value. Non-uniformity is chosen to maximise the amount of preserved data. For example:
       * Original resolution: 100px (width) * 30px (height) max_elevation_resolution: 30 New
       * resolution: 30px (width) * 30px (height)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer maxElevationResolutionCells;

      /** The maximum allowed resolution for the returned elevation heightmap. Possible values: between 1 and
     1024 (and not less than min_elevation_resolution_cells). Over-sized heightmaps will be non-
     uniformly down-sampled such that each edge is no longer than this value. Non-uniformity is chosen
     to maximise the amount of preserved data. For example: Original resolution: 100px (width) * 30px
     (height) max_elevation_resolution: 30 New resolution: 30px (width) * 30px (height)
       */
      public java.lang.Integer getMaxElevationResolutionCells() {
        return maxElevationResolutionCells;
      }

      /**
       * The maximum allowed resolution for the returned elevation heightmap. Possible values:
       * between 1 and 1024 (and not less than min_elevation_resolution_cells). Over-sized
       * heightmaps will be non-uniformly down-sampled such that each edge is no longer than this
       * value. Non-uniformity is chosen to maximise the amount of preserved data. For example:
       * Original resolution: 100px (width) * 30px (height) max_elevation_resolution: 30 New
       * resolution: 30px (width) * 30px (height)
       */
      public Get setMaxElevationResolutionCells(java.lang.Integer maxElevationResolutionCells) {
        this.maxElevationResolutionCells = maxElevationResolutionCells;
        return this;
      }

      /**
       * The minimum allowed resolution for the returned elevation heightmap. Possible values:
       * between 0 and 1024 (and not more than max_elevation_resolution_cells). Zero is supported
       * for backward compatibility. Under-sized heightmaps will be non-uniformly up-sampled such
       * that each edge is no shorter than this value. Non-uniformity is chosen to maximise the
       * amount of preserved data. For example: Original resolution: 30px (width) * 10px (height)
       * min_elevation_resolution: 30 New resolution: 30px (width) * 30px (height)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer minElevationResolutionCells;

      /** The minimum allowed resolution for the returned elevation heightmap. Possible values: between 0 and
     1024 (and not more than max_elevation_resolution_cells). Zero is supported for backward
     compatibility. Under-sized heightmaps will be non-uniformly up-sampled such that each edge is no
     shorter than this value. Non-uniformity is chosen to maximise the amount of preserved data. For
     example: Original resolution: 30px (width) * 10px (height) min_elevation_resolution: 30 New
     resolution: 30px (width) * 30px (height)
       */
      public java.lang.Integer getMinElevationResolutionCells() {
        return minElevationResolutionCells;
      }

      /**
       * The minimum allowed resolution for the returned elevation heightmap. Possible values:
       * between 0 and 1024 (and not more than max_elevation_resolution_cells). Zero is supported
       * for backward compatibility. Under-sized heightmaps will be non-uniformly up-sampled such
       * that each edge is no shorter than this value. Non-uniformity is chosen to maximise the
       * amount of preserved data. For example: Original resolution: 30px (width) * 10px (height)
       * min_elevation_resolution: 30 New resolution: 30px (width) * 30px (height)
       */
      public Get setMinElevationResolutionCells(java.lang.Integer minElevationResolutionCells) {
        this.minElevationResolutionCells = minElevationResolutionCells;
        return this;
      }

      /** Terrain formats that the client understands. */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> terrainFormats;

      /** Terrain formats that the client understands.
       */
      public java.util.List<java.lang.String> getTerrainFormats() {
        return terrainFormats;
      }

      /** Terrain formats that the client understands. */
      public Get setTerrainFormats(java.util.List<java.lang.String> terrainFormats) {
        this.terrainFormats = terrainFormats;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link SemanticTile}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link SemanticTile}. */
    @Override
    public SemanticTile build() {
      return new SemanticTile(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SemanticTileRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSemanticTileRequestInitializer(
        SemanticTileRequestInitializer semantictileRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(semantictileRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
