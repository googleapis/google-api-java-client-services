/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.iap.v1.model;

/**
 * PolicyDelegationConfig allows google-internal teams to use IAP for apps hosted in a tenant
 * project. Using these settings, the app can delegate permission check to happen against the linked
 * customer project. This is only ever supposed to be used by google internal teams, hence the
 * restriction on the proto.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Identity-Aware Proxy API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PolicyDelegationSettings extends com.google.api.client.json.GenericJson {

  /**
   * Permission to check in IAM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iamPermission;

  /**
   * The DNS name of the service (e.g. "resourcemanager.googleapis.com"). This should be the domain
   * name part of the full resource names (see https://aip.dev/122#full-resource-names), which is
   * usually the same as IamServiceSpec.service of the service where the resource type is defined.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iamServiceName;

  /**
   * Policy name to be checked
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolicyName policyName;

  /**
   * IAM resource to check permission on
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Resource resource;

  /**
   * Permission to check in IAM.
   * @return value or {@code null} for none
   */
  public java.lang.String getIamPermission() {
    return iamPermission;
  }

  /**
   * Permission to check in IAM.
   * @param iamPermission iamPermission or {@code null} for none
   */
  public PolicyDelegationSettings setIamPermission(java.lang.String iamPermission) {
    this.iamPermission = iamPermission;
    return this;
  }

  /**
   * The DNS name of the service (e.g. "resourcemanager.googleapis.com"). This should be the domain
   * name part of the full resource names (see https://aip.dev/122#full-resource-names), which is
   * usually the same as IamServiceSpec.service of the service where the resource type is defined.
   * @return value or {@code null} for none
   */
  public java.lang.String getIamServiceName() {
    return iamServiceName;
  }

  /**
   * The DNS name of the service (e.g. "resourcemanager.googleapis.com"). This should be the domain
   * name part of the full resource names (see https://aip.dev/122#full-resource-names), which is
   * usually the same as IamServiceSpec.service of the service where the resource type is defined.
   * @param iamServiceName iamServiceName or {@code null} for none
   */
  public PolicyDelegationSettings setIamServiceName(java.lang.String iamServiceName) {
    this.iamServiceName = iamServiceName;
    return this;
  }

  /**
   * Policy name to be checked
   * @return value or {@code null} for none
   */
  public PolicyName getPolicyName() {
    return policyName;
  }

  /**
   * Policy name to be checked
   * @param policyName policyName or {@code null} for none
   */
  public PolicyDelegationSettings setPolicyName(PolicyName policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * IAM resource to check permission on
   * @return value or {@code null} for none
   */
  public Resource getResource() {
    return resource;
  }

  /**
   * IAM resource to check permission on
   * @param resource resource or {@code null} for none
   */
  public PolicyDelegationSettings setResource(Resource resource) {
    this.resource = resource;
    return this;
  }

  @Override
  public PolicyDelegationSettings set(String fieldName, Object value) {
    return (PolicyDelegationSettings) super.set(fieldName, value);
  }

  @Override
  public PolicyDelegationSettings clone() {
    return (PolicyDelegationSettings) super.clone();
  }

}
