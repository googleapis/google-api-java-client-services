/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Configuration for bias detection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig extends com.google.api.client.json.GenericJson {

  /**
   * Specification for how the data should be sliced for bias. It contains a list of slices, with
   * limitation of two slices. The first slice of data will be the slice_a. The second slice in the
   * list (slice_b) will be compared against the first slice. If only a single slice is provided,
   * then slice_a will be compared against "not slice_a". Below are examples with feature
   * "education" with value "low", "medium", "high" in the dataset: Example 1: bias_slices =
   * [{'education': 'low'}] A single slice provided. In this case, slice_a is the collection of data
   * with 'education' equals 'low', and slice_b is the collection of data with 'education' equals
   * 'medium' or 'high'. Example 2: bias_slices = [{'education': 'low'}, {'education': 'high'}] Two
   * slices provided. In this case, slice_a is the collection of data with 'education' equals 'low',
   * and slice_b is the collection of data with 'education' equals 'high'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec biasSlices;

  /**
   * Positive labels selection on the target field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> labels;

  /**
   * Specification for how the data should be sliced for bias. It contains a list of slices, with
   * limitation of two slices. The first slice of data will be the slice_a. The second slice in the
   * list (slice_b) will be compared against the first slice. If only a single slice is provided,
   * then slice_a will be compared against "not slice_a". Below are examples with feature
   * "education" with value "low", "medium", "high" in the dataset: Example 1: bias_slices =
   * [{'education': 'low'}] A single slice provided. In this case, slice_a is the collection of data
   * with 'education' equals 'low', and slice_b is the collection of data with 'education' equals
   * 'medium' or 'high'. Example 2: bias_slices = [{'education': 'low'}, {'education': 'high'}] Two
   * slices provided. In this case, slice_a is the collection of data with 'education' equals 'low',
   * and slice_b is the collection of data with 'education' equals 'high'.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec getBiasSlices() {
    return biasSlices;
  }

  /**
   * Specification for how the data should be sliced for bias. It contains a list of slices, with
   * limitation of two slices. The first slice of data will be the slice_a. The second slice in the
   * list (slice_b) will be compared against the first slice. If only a single slice is provided,
   * then slice_a will be compared against "not slice_a". Below are examples with feature
   * "education" with value "low", "medium", "high" in the dataset: Example 1: bias_slices =
   * [{'education': 'low'}] A single slice provided. In this case, slice_a is the collection of data
   * with 'education' equals 'low', and slice_b is the collection of data with 'education' equals
   * 'medium' or 'high'. Example 2: bias_slices = [{'education': 'low'}, {'education': 'high'}] Two
   * slices provided. In this case, slice_a is the collection of data with 'education' equals 'low',
   * and slice_b is the collection of data with 'education' equals 'high'.
   * @param biasSlices biasSlices or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig setBiasSlices(GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec biasSlices) {
    this.biasSlices = biasSlices;
    return this;
  }

  /**
   * Positive labels selection on the target field.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Positive labels selection on the target field.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig setLabels(java.util.List<java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig clone() {
    return (GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig) super.clone();
  }

}
