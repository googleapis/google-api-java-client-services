/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A Geometry Store ID and, in some contexts, geometry materialized from the record associated with
 * that ID.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreGeometryStoreReferenceProto extends com.google.api.client.json.GenericJson {

  /**
   * Geometry (in STGeography format) materialized from the footprint field of the Geometry Store
   * record associated with the geometry_id referenced above.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String footprint;

  /**
   * Geometry materialized from the full_fidelity_proto field of the Geometry Store record
   * associated with the geometry_id referenced above.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostoreCityJsonProto geometry;

  /**
   * The ID of a record in the Geometry Store.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String geometryId;

  /**
   * Geometry (in STGeography format) materialized from the footprint field of the Geometry Store
   * record associated with the geometry_id referenced above.
   * @see #decodeFootprint()
   * @return value or {@code null} for none
   */
  public java.lang.String getFootprint() {
    return footprint;
  }

  /**
   * Geometry (in STGeography format) materialized from the footprint field of the Geometry Store
   * record associated with the geometry_id referenced above.
   * @see #getFootprint()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeFootprint() {
    return com.google.api.client.util.Base64.decodeBase64(footprint);
  }

  /**
   * Geometry (in STGeography format) materialized from the footprint field of the Geometry Store
   * record associated with the geometry_id referenced above.
   * @see #encodeFootprint()
   * @param footprint footprint or {@code null} for none
   */
  public GeostoreGeometryStoreReferenceProto setFootprint(java.lang.String footprint) {
    this.footprint = footprint;
    return this;
  }

  /**
   * Geometry (in STGeography format) materialized from the footprint field of the Geometry Store
   * record associated with the geometry_id referenced above.
   * @see #setFootprint()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GeostoreGeometryStoreReferenceProto encodeFootprint(byte[] footprint) {
    this.footprint = com.google.api.client.util.Base64.encodeBase64URLSafeString(footprint);
    return this;
  }

  /**
   * Geometry materialized from the full_fidelity_proto field of the Geometry Store record
   * associated with the geometry_id referenced above.
   * @return value or {@code null} for none
   */
  public GeostoreCityJsonProto getGeometry() {
    return geometry;
  }

  /**
   * Geometry materialized from the full_fidelity_proto field of the Geometry Store record
   * associated with the geometry_id referenced above.
   * @param geometry geometry or {@code null} for none
   */
  public GeostoreGeometryStoreReferenceProto setGeometry(GeostoreCityJsonProto geometry) {
    this.geometry = geometry;
    return this;
  }

  /**
   * The ID of a record in the Geometry Store.
   * @return value or {@code null} for none
   */
  public java.lang.String getGeometryId() {
    return geometryId;
  }

  /**
   * The ID of a record in the Geometry Store.
   * @param geometryId geometryId or {@code null} for none
   */
  public GeostoreGeometryStoreReferenceProto setGeometryId(java.lang.String geometryId) {
    this.geometryId = geometryId;
    return this;
  }

  @Override
  public GeostoreGeometryStoreReferenceProto set(String fieldName, Object value) {
    return (GeostoreGeometryStoreReferenceProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreGeometryStoreReferenceProto clone() {
    return (GeostoreGeometryStoreReferenceProto) super.clone();
  }

}
