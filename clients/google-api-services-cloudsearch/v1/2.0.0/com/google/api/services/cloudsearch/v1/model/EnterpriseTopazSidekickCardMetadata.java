/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Card metadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseTopazSidekickCardMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Declares a preference for how this card should be packed in MSCR. All cards in a response must
   * correspond to a single category. As a result, cards may be dropped from the response if this
   * field is set. Any card that does not match the category of the card with the highest priority
   * in the response will be dropped.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cardCategory;

  /**
   * An ID to identify the card and match actions to it. Be thoughtful of new card IDs since actions
   * will be associated to that ID. E.g., if two card IDs collide, the system will think that the
   * actions have been applied to the same card. Similarly, if EAS can return multiple cards of the
   * same type (e.g., Meetings), ensure that the card_id identifies a given instance of the card so
   * that, e.g., dismissals only affect the dismissed card as opposed to affecting all meeting
   * cards.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cardId;

  /**
   * Chronology.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String chronology;

  /**
   * Debug info (only reported if request's debug_level > 0).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String debugInfo;

  /**
   * Information about the NLP done to get the card.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseTopazSidekickNlpMetadata nlpMetadata;

  /**
   * Ranking params.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnterpriseTopazSidekickRankingParams rankingParams;

  /**
   * Render mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String renderMode;

  /**
   * Declares a preference for how this card should be packed in MSCR. All cards in a response must
   * correspond to a single category. As a result, cards may be dropped from the response if this
   * field is set. Any card that does not match the category of the card with the highest priority
   * in the response will be dropped.
   * @return value or {@code null} for none
   */
  public java.lang.String getCardCategory() {
    return cardCategory;
  }

  /**
   * Declares a preference for how this card should be packed in MSCR. All cards in a response must
   * correspond to a single category. As a result, cards may be dropped from the response if this
   * field is set. Any card that does not match the category of the card with the highest priority
   * in the response will be dropped.
   * @param cardCategory cardCategory or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setCardCategory(java.lang.String cardCategory) {
    this.cardCategory = cardCategory;
    return this;
  }

  /**
   * An ID to identify the card and match actions to it. Be thoughtful of new card IDs since actions
   * will be associated to that ID. E.g., if two card IDs collide, the system will think that the
   * actions have been applied to the same card. Similarly, if EAS can return multiple cards of the
   * same type (e.g., Meetings), ensure that the card_id identifies a given instance of the card so
   * that, e.g., dismissals only affect the dismissed card as opposed to affecting all meeting
   * cards.
   * @return value or {@code null} for none
   */
  public java.lang.String getCardId() {
    return cardId;
  }

  /**
   * An ID to identify the card and match actions to it. Be thoughtful of new card IDs since actions
   * will be associated to that ID. E.g., if two card IDs collide, the system will think that the
   * actions have been applied to the same card. Similarly, if EAS can return multiple cards of the
   * same type (e.g., Meetings), ensure that the card_id identifies a given instance of the card so
   * that, e.g., dismissals only affect the dismissed card as opposed to affecting all meeting
   * cards.
   * @param cardId cardId or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setCardId(java.lang.String cardId) {
    this.cardId = cardId;
    return this;
  }

  /**
   * Chronology.
   * @return value or {@code null} for none
   */
  public java.lang.String getChronology() {
    return chronology;
  }

  /**
   * Chronology.
   * @param chronology chronology or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setChronology(java.lang.String chronology) {
    this.chronology = chronology;
    return this;
  }

  /**
   * Debug info (only reported if request's debug_level > 0).
   * @return value or {@code null} for none
   */
  public java.lang.String getDebugInfo() {
    return debugInfo;
  }

  /**
   * Debug info (only reported if request's debug_level > 0).
   * @param debugInfo debugInfo or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setDebugInfo(java.lang.String debugInfo) {
    this.debugInfo = debugInfo;
    return this;
  }

  /**
   * Information about the NLP done to get the card.
   * @return value or {@code null} for none
   */
  public EnterpriseTopazSidekickNlpMetadata getNlpMetadata() {
    return nlpMetadata;
  }

  /**
   * Information about the NLP done to get the card.
   * @param nlpMetadata nlpMetadata or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setNlpMetadata(EnterpriseTopazSidekickNlpMetadata nlpMetadata) {
    this.nlpMetadata = nlpMetadata;
    return this;
  }

  /**
   * Ranking params.
   * @return value or {@code null} for none
   */
  public EnterpriseTopazSidekickRankingParams getRankingParams() {
    return rankingParams;
  }

  /**
   * Ranking params.
   * @param rankingParams rankingParams or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setRankingParams(EnterpriseTopazSidekickRankingParams rankingParams) {
    this.rankingParams = rankingParams;
    return this;
  }

  /**
   * Render mode.
   * @return value or {@code null} for none
   */
  public java.lang.String getRenderMode() {
    return renderMode;
  }

  /**
   * Render mode.
   * @param renderMode renderMode or {@code null} for none
   */
  public EnterpriseTopazSidekickCardMetadata setRenderMode(java.lang.String renderMode) {
    this.renderMode = renderMode;
    return this;
  }

  @Override
  public EnterpriseTopazSidekickCardMetadata set(String fieldName, Object value) {
    return (EnterpriseTopazSidekickCardMetadata) super.set(fieldName, value);
  }

  @Override
  public EnterpriseTopazSidekickCardMetadata clone() {
    return (EnterpriseTopazSidekickCardMetadata) super.clone();
  }

}
