/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.transcoder.v1beta1.model;

/**
 * Multiplexing settings for output stream.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Transcoder API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MuxStream extends com.google.api.client.json.GenericJson {

  /**
   * The container format. The default is `"mp4"` Supported container formats: - 'ts' - 'fmp4'- the
   * corresponding file extension is `".m4s"` - 'mp4' - 'vtt'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String container;

  /**
   * List of `ElementaryStream.key`s multiplexed in this stream.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> elementaryStreams;

  /**
   * Encryption settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Encryption encryption;

  /**
   * The name of the generated file. The default is `MuxStream.key` with the extension suffix
   * corresponding to the `MuxStream.container`. Individual segments also have an incremental
   * 10-digit zero-padded suffix starting from 0 before the extension, such as
   * `"mux_stream0000000123.ts"`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileName;

  /**
   * A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key`
   * with the `".m3u8"` extension suffix.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * Segment settings for `"ts"`, `"fmp4"` and `"vtt"`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SegmentSettings segmentSettings;

  /**
   * The container format. The default is `"mp4"` Supported container formats: - 'ts' - 'fmp4'- the
   * corresponding file extension is `".m4s"` - 'mp4' - 'vtt'
   * @return value or {@code null} for none
   */
  public java.lang.String getContainer() {
    return container;
  }

  /**
   * The container format. The default is `"mp4"` Supported container formats: - 'ts' - 'fmp4'- the
   * corresponding file extension is `".m4s"` - 'mp4' - 'vtt'
   * @param container container or {@code null} for none
   */
  public MuxStream setContainer(java.lang.String container) {
    this.container = container;
    return this;
  }

  /**
   * List of `ElementaryStream.key`s multiplexed in this stream.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getElementaryStreams() {
    return elementaryStreams;
  }

  /**
   * List of `ElementaryStream.key`s multiplexed in this stream.
   * @param elementaryStreams elementaryStreams or {@code null} for none
   */
  public MuxStream setElementaryStreams(java.util.List<java.lang.String> elementaryStreams) {
    this.elementaryStreams = elementaryStreams;
    return this;
  }

  /**
   * Encryption settings.
   * @return value or {@code null} for none
   */
  public Encryption getEncryption() {
    return encryption;
  }

  /**
   * Encryption settings.
   * @param encryption encryption or {@code null} for none
   */
  public MuxStream setEncryption(Encryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * The name of the generated file. The default is `MuxStream.key` with the extension suffix
   * corresponding to the `MuxStream.container`. Individual segments also have an incremental
   * 10-digit zero-padded suffix starting from 0 before the extension, such as
   * `"mux_stream0000000123.ts"`.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileName() {
    return fileName;
  }

  /**
   * The name of the generated file. The default is `MuxStream.key` with the extension suffix
   * corresponding to the `MuxStream.container`. Individual segments also have an incremental
   * 10-digit zero-padded suffix starting from 0 before the extension, such as
   * `"mux_stream0000000123.ts"`.
   * @param fileName fileName or {@code null} for none
   */
  public MuxStream setFileName(java.lang.String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key`
   * with the `".m3u8"` extension suffix.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key`
   * with the `".m3u8"` extension suffix.
   * @param key key or {@code null} for none
   */
  public MuxStream setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * Segment settings for `"ts"`, `"fmp4"` and `"vtt"`.
   * @return value or {@code null} for none
   */
  public SegmentSettings getSegmentSettings() {
    return segmentSettings;
  }

  /**
   * Segment settings for `"ts"`, `"fmp4"` and `"vtt"`.
   * @param segmentSettings segmentSettings or {@code null} for none
   */
  public MuxStream setSegmentSettings(SegmentSettings segmentSettings) {
    this.segmentSettings = segmentSettings;
    return this;
  }

  @Override
  public MuxStream set(String fieldName, Object value) {
    return (MuxStream) super.set(fieldName, value);
  }

  @Override
  public MuxStream clone() {
    return (MuxStream) super.clone();
  }

}
