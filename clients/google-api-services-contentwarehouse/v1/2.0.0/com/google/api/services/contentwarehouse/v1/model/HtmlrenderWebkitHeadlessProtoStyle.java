/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next id: 54
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HtmlrenderWebkitHeadlessProtoStyle extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundAttachment;

  /**
   * Background color encoded as ARGB
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long backgroundColorArgb;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Long> backgroundGradientColorStopArgb;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean backgroundGradientRepeat;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundGradientType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundImageRepeat;

  /**
   * The url of the background image in the first layer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundImageUrl;

  /**
   * Background image position (x, y).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset backgroundImageXPos;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset backgroundImageYPos;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backgroundSize;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset backgroundSizeHeight;

  /**
   * Only present (but may be missing) if background_size == SIZE_LENGTH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset backgroundSizeWidth;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderColorArgbBottom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderColorArgbLeft;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderColorArgbRight;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderColorArgbTop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderPixelWidthBottom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderPixelWidthLeft;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderPixelWidthRight;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long borderPixelWidthTop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String borderStyleBottom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String borderStyleLeft;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String borderStyleRight;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String borderStyleTop;

  /**
   * Default value for clip is "auto", which is represented here as !has_clip().
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoRectangle clip;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String direction;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String display;

  /**
   * Font and text decorations:
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fontFamily;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer fontSize;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fontStyle;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer fontWeight;

  /**
   * Foreground color encoded as ARGB
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long foregroundColorArgb;

  /**
   * Starting from Chromium, has_background is set when there is a non-empty specification for
   * background_image, whether it be a url, gradient or other cases, such as cross-fade. Besides
   * setting this field, We additionally parse url and gradient cases and populate some of the
   * following background fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasBackground;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String listStyleImageUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String listStyleType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset marginBottom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset marginLeft;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset marginRight;

  /**
   * Margin
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset marginTop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float opacity;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String overflowX;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String overflowY;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset paddingBottom;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset paddingLeft;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset paddingRight;

  /**
   * Padding
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoOffset paddingTop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String position;

  /**
   * List of referenced resource indexes for any resources that this style references. (e.g.
   * background images.) (see document.proto)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> referencedResourceIndex;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textAlign;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textDecoration;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long textShadowColorArgb;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String visibility;

  /**
   * Default value for z-index is "auto" which means "inherit from parent".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer zIndex;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundAttachment() {
    return backgroundAttachment;
  }

  /**
   * @param backgroundAttachment backgroundAttachment or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundAttachment(java.lang.String backgroundAttachment) {
    this.backgroundAttachment = backgroundAttachment;
    return this;
  }

  /**
   * Background color encoded as ARGB
   * @return value or {@code null} for none
   */
  public java.lang.Long getBackgroundColorArgb() {
    return backgroundColorArgb;
  }

  /**
   * Background color encoded as ARGB
   * @param backgroundColorArgb backgroundColorArgb or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundColorArgb(java.lang.Long backgroundColorArgb) {
    this.backgroundColorArgb = backgroundColorArgb;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getBackgroundGradientColorStopArgb() {
    return backgroundGradientColorStopArgb;
  }

  /**
   * @param backgroundGradientColorStopArgb backgroundGradientColorStopArgb or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundGradientColorStopArgb(java.util.List<java.lang.Long> backgroundGradientColorStopArgb) {
    this.backgroundGradientColorStopArgb = backgroundGradientColorStopArgb;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBackgroundGradientRepeat() {
    return backgroundGradientRepeat;
  }

  /**
   * @param backgroundGradientRepeat backgroundGradientRepeat or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundGradientRepeat(java.lang.Boolean backgroundGradientRepeat) {
    this.backgroundGradientRepeat = backgroundGradientRepeat;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundGradientType() {
    return backgroundGradientType;
  }

  /**
   * @param backgroundGradientType backgroundGradientType or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundGradientType(java.lang.String backgroundGradientType) {
    this.backgroundGradientType = backgroundGradientType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundImageRepeat() {
    return backgroundImageRepeat;
  }

  /**
   * @param backgroundImageRepeat backgroundImageRepeat or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundImageRepeat(java.lang.String backgroundImageRepeat) {
    this.backgroundImageRepeat = backgroundImageRepeat;
    return this;
  }

  /**
   * The url of the background image in the first layer.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundImageUrl() {
    return backgroundImageUrl;
  }

  /**
   * The url of the background image in the first layer.
   * @param backgroundImageUrl backgroundImageUrl or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundImageUrl(java.lang.String backgroundImageUrl) {
    this.backgroundImageUrl = backgroundImageUrl;
    return this;
  }

  /**
   * Background image position (x, y).
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getBackgroundImageXPos() {
    return backgroundImageXPos;
  }

  /**
   * Background image position (x, y).
   * @param backgroundImageXPos backgroundImageXPos or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundImageXPos(HtmlrenderWebkitHeadlessProtoOffset backgroundImageXPos) {
    this.backgroundImageXPos = backgroundImageXPos;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getBackgroundImageYPos() {
    return backgroundImageYPos;
  }

  /**
   * @param backgroundImageYPos backgroundImageYPos or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundImageYPos(HtmlrenderWebkitHeadlessProtoOffset backgroundImageYPos) {
    this.backgroundImageYPos = backgroundImageYPos;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBackgroundSize() {
    return backgroundSize;
  }

  /**
   * @param backgroundSize backgroundSize or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundSize(java.lang.String backgroundSize) {
    this.backgroundSize = backgroundSize;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getBackgroundSizeHeight() {
    return backgroundSizeHeight;
  }

  /**
   * @param backgroundSizeHeight backgroundSizeHeight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundSizeHeight(HtmlrenderWebkitHeadlessProtoOffset backgroundSizeHeight) {
    this.backgroundSizeHeight = backgroundSizeHeight;
    return this;
  }

  /**
   * Only present (but may be missing) if background_size == SIZE_LENGTH.
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getBackgroundSizeWidth() {
    return backgroundSizeWidth;
  }

  /**
   * Only present (but may be missing) if background_size == SIZE_LENGTH.
   * @param backgroundSizeWidth backgroundSizeWidth or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBackgroundSizeWidth(HtmlrenderWebkitHeadlessProtoOffset backgroundSizeWidth) {
    this.backgroundSizeWidth = backgroundSizeWidth;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderColorArgbBottom() {
    return borderColorArgbBottom;
  }

  /**
   * @param borderColorArgbBottom borderColorArgbBottom or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderColorArgbBottom(java.lang.Long borderColorArgbBottom) {
    this.borderColorArgbBottom = borderColorArgbBottom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderColorArgbLeft() {
    return borderColorArgbLeft;
  }

  /**
   * @param borderColorArgbLeft borderColorArgbLeft or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderColorArgbLeft(java.lang.Long borderColorArgbLeft) {
    this.borderColorArgbLeft = borderColorArgbLeft;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderColorArgbRight() {
    return borderColorArgbRight;
  }

  /**
   * @param borderColorArgbRight borderColorArgbRight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderColorArgbRight(java.lang.Long borderColorArgbRight) {
    this.borderColorArgbRight = borderColorArgbRight;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderColorArgbTop() {
    return borderColorArgbTop;
  }

  /**
   * @param borderColorArgbTop borderColorArgbTop or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderColorArgbTop(java.lang.Long borderColorArgbTop) {
    this.borderColorArgbTop = borderColorArgbTop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderPixelWidthBottom() {
    return borderPixelWidthBottom;
  }

  /**
   * @param borderPixelWidthBottom borderPixelWidthBottom or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderPixelWidthBottom(java.lang.Long borderPixelWidthBottom) {
    this.borderPixelWidthBottom = borderPixelWidthBottom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderPixelWidthLeft() {
    return borderPixelWidthLeft;
  }

  /**
   * @param borderPixelWidthLeft borderPixelWidthLeft or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderPixelWidthLeft(java.lang.Long borderPixelWidthLeft) {
    this.borderPixelWidthLeft = borderPixelWidthLeft;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderPixelWidthRight() {
    return borderPixelWidthRight;
  }

  /**
   * @param borderPixelWidthRight borderPixelWidthRight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderPixelWidthRight(java.lang.Long borderPixelWidthRight) {
    this.borderPixelWidthRight = borderPixelWidthRight;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getBorderPixelWidthTop() {
    return borderPixelWidthTop;
  }

  /**
   * @param borderPixelWidthTop borderPixelWidthTop or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderPixelWidthTop(java.lang.Long borderPixelWidthTop) {
    this.borderPixelWidthTop = borderPixelWidthTop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBorderStyleBottom() {
    return borderStyleBottom;
  }

  /**
   * @param borderStyleBottom borderStyleBottom or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderStyleBottom(java.lang.String borderStyleBottom) {
    this.borderStyleBottom = borderStyleBottom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBorderStyleLeft() {
    return borderStyleLeft;
  }

  /**
   * @param borderStyleLeft borderStyleLeft or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderStyleLeft(java.lang.String borderStyleLeft) {
    this.borderStyleLeft = borderStyleLeft;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBorderStyleRight() {
    return borderStyleRight;
  }

  /**
   * @param borderStyleRight borderStyleRight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderStyleRight(java.lang.String borderStyleRight) {
    this.borderStyleRight = borderStyleRight;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBorderStyleTop() {
    return borderStyleTop;
  }

  /**
   * @param borderStyleTop borderStyleTop or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setBorderStyleTop(java.lang.String borderStyleTop) {
    this.borderStyleTop = borderStyleTop;
    return this;
  }

  /**
   * Default value for clip is "auto", which is represented here as !has_clip().
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRectangle getClip() {
    return clip;
  }

  /**
   * Default value for clip is "auto", which is represented here as !has_clip().
   * @param clip clip or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setClip(HtmlrenderWebkitHeadlessProtoRectangle clip) {
    this.clip = clip;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDirection() {
    return direction;
  }

  /**
   * @param direction direction or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setDirection(java.lang.String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplay() {
    return display;
  }

  /**
   * @param display display or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setDisplay(java.lang.String display) {
    this.display = display;
    return this;
  }

  /**
   * Font and text decorations:
   * @return value or {@code null} for none
   */
  public java.lang.String getFontFamily() {
    return fontFamily;
  }

  /**
   * Font and text decorations:
   * @param fontFamily fontFamily or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setFontFamily(java.lang.String fontFamily) {
    this.fontFamily = fontFamily;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFontSize() {
    return fontSize;
  }

  /**
   * @param fontSize fontSize or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setFontSize(java.lang.Integer fontSize) {
    this.fontSize = fontSize;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFontStyle() {
    return fontStyle;
  }

  /**
   * @param fontStyle fontStyle or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setFontStyle(java.lang.String fontStyle) {
    this.fontStyle = fontStyle;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFontWeight() {
    return fontWeight;
  }

  /**
   * @param fontWeight fontWeight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setFontWeight(java.lang.Integer fontWeight) {
    this.fontWeight = fontWeight;
    return this;
  }

  /**
   * Foreground color encoded as ARGB
   * @return value or {@code null} for none
   */
  public java.lang.Long getForegroundColorArgb() {
    return foregroundColorArgb;
  }

  /**
   * Foreground color encoded as ARGB
   * @param foregroundColorArgb foregroundColorArgb or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setForegroundColorArgb(java.lang.Long foregroundColorArgb) {
    this.foregroundColorArgb = foregroundColorArgb;
    return this;
  }

  /**
   * Starting from Chromium, has_background is set when there is a non-empty specification for
   * background_image, whether it be a url, gradient or other cases, such as cross-fade. Besides
   * setting this field, We additionally parse url and gradient cases and populate some of the
   * following background fields.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasBackground() {
    return hasBackground;
  }

  /**
   * Starting from Chromium, has_background is set when there is a non-empty specification for
   * background_image, whether it be a url, gradient or other cases, such as cross-fade. Besides
   * setting this field, We additionally parse url and gradient cases and populate some of the
   * following background fields.
   * @param hasBackground hasBackground or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setHasBackground(java.lang.Boolean hasBackground) {
    this.hasBackground = hasBackground;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getListStyleImageUrl() {
    return listStyleImageUrl;
  }

  /**
   * @param listStyleImageUrl listStyleImageUrl or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setListStyleImageUrl(java.lang.String listStyleImageUrl) {
    this.listStyleImageUrl = listStyleImageUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getListStyleType() {
    return listStyleType;
  }

  /**
   * @param listStyleType listStyleType or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setListStyleType(java.lang.String listStyleType) {
    this.listStyleType = listStyleType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getMarginBottom() {
    return marginBottom;
  }

  /**
   * @param marginBottom marginBottom or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setMarginBottom(HtmlrenderWebkitHeadlessProtoOffset marginBottom) {
    this.marginBottom = marginBottom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getMarginLeft() {
    return marginLeft;
  }

  /**
   * @param marginLeft marginLeft or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setMarginLeft(HtmlrenderWebkitHeadlessProtoOffset marginLeft) {
    this.marginLeft = marginLeft;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getMarginRight() {
    return marginRight;
  }

  /**
   * @param marginRight marginRight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setMarginRight(HtmlrenderWebkitHeadlessProtoOffset marginRight) {
    this.marginRight = marginRight;
    return this;
  }

  /**
   * Margin
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getMarginTop() {
    return marginTop;
  }

  /**
   * Margin
   * @param marginTop marginTop or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setMarginTop(HtmlrenderWebkitHeadlessProtoOffset marginTop) {
    this.marginTop = marginTop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getOpacity() {
    return opacity;
  }

  /**
   * @param opacity opacity or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setOpacity(java.lang.Float opacity) {
    this.opacity = opacity;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOverflowX() {
    return overflowX;
  }

  /**
   * @param overflowX overflowX or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setOverflowX(java.lang.String overflowX) {
    this.overflowX = overflowX;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOverflowY() {
    return overflowY;
  }

  /**
   * @param overflowY overflowY or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setOverflowY(java.lang.String overflowY) {
    this.overflowY = overflowY;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getPaddingBottom() {
    return paddingBottom;
  }

  /**
   * @param paddingBottom paddingBottom or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setPaddingBottom(HtmlrenderWebkitHeadlessProtoOffset paddingBottom) {
    this.paddingBottom = paddingBottom;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getPaddingLeft() {
    return paddingLeft;
  }

  /**
   * @param paddingLeft paddingLeft or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setPaddingLeft(HtmlrenderWebkitHeadlessProtoOffset paddingLeft) {
    this.paddingLeft = paddingLeft;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getPaddingRight() {
    return paddingRight;
  }

  /**
   * @param paddingRight paddingRight or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setPaddingRight(HtmlrenderWebkitHeadlessProtoOffset paddingRight) {
    this.paddingRight = paddingRight;
    return this;
  }

  /**
   * Padding
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoOffset getPaddingTop() {
    return paddingTop;
  }

  /**
   * Padding
   * @param paddingTop paddingTop or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setPaddingTop(HtmlrenderWebkitHeadlessProtoOffset paddingTop) {
    this.paddingTop = paddingTop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPosition() {
    return position;
  }

  /**
   * @param position position or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setPosition(java.lang.String position) {
    this.position = position;
    return this;
  }

  /**
   * List of referenced resource indexes for any resources that this style references. (e.g.
   * background images.) (see document.proto)
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getReferencedResourceIndex() {
    return referencedResourceIndex;
  }

  /**
   * List of referenced resource indexes for any resources that this style references. (e.g.
   * background images.) (see document.proto)
   * @param referencedResourceIndex referencedResourceIndex or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setReferencedResourceIndex(java.util.List<java.lang.Integer> referencedResourceIndex) {
    this.referencedResourceIndex = referencedResourceIndex;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTextAlign() {
    return textAlign;
  }

  /**
   * @param textAlign textAlign or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setTextAlign(java.lang.String textAlign) {
    this.textAlign = textAlign;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTextDecoration() {
    return textDecoration;
  }

  /**
   * @param textDecoration textDecoration or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setTextDecoration(java.lang.String textDecoration) {
    this.textDecoration = textDecoration;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getTextShadowColorArgb() {
    return textShadowColorArgb;
  }

  /**
   * @param textShadowColorArgb textShadowColorArgb or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setTextShadowColorArgb(java.lang.Long textShadowColorArgb) {
    this.textShadowColorArgb = textShadowColorArgb;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getVisibility() {
    return visibility;
  }

  /**
   * @param visibility visibility or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setVisibility(java.lang.String visibility) {
    this.visibility = visibility;
    return this;
  }

  /**
   * Default value for z-index is "auto" which means "inherit from parent".
   * @return value or {@code null} for none
   */
  public java.lang.Integer getZIndex() {
    return zIndex;
  }

  /**
   * Default value for z-index is "auto" which means "inherit from parent".
   * @param zIndex zIndex or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoStyle setZIndex(java.lang.Integer zIndex) {
    this.zIndex = zIndex;
    return this;
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoStyle set(String fieldName, Object value) {
    return (HtmlrenderWebkitHeadlessProtoStyle) super.set(fieldName, value);
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoStyle clone() {
    return (HtmlrenderWebkitHeadlessProtoStyle) super.clone();
  }

}
