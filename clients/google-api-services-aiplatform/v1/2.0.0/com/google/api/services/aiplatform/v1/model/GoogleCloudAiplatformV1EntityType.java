/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * An entity type is a type of object in a system that needs to be modeled and have stored
 * information about. For example, driver is an entity type, and driver0 is an instance of an entity
 * type driver.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1EntityType extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this EntityType was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Description of the EntityType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Used to perform a consistent read-modify-write updates. If not set, a blind
   * "overwrite" update happens.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one EntityType (System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. The default monitoring configuration for all Features with value type
   * (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated
   * with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring
   * is enabled. Otherwise, snapshot analysis monitoring is disabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1FeaturestoreMonitoringConfig monitoringConfig;

  /**
   * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestor
   * es/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the
   * client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin
   * letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value
   * will be unique given a featurestore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Config for data retention policy in offline storage. TTL in days for feature values
   * that will be stored in offline storage. The Feature Store offline storage periodically removes
   * obsolete feature values older than `offline_storage_ttl_days` since the feature generation
   * time. If unset (or explicitly set to 0), default to 4000 days TTL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer offlineStorageTtlDays;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. Timestamp when this EntityType was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Timestamp when this EntityType was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this EntityType was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Description of the EntityType.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the EntityType.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Used to perform a consistent read-modify-write updates. If not set, a blind
   * "overwrite" update happens.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. Used to perform a consistent read-modify-write updates. If not set, a blind
   * "overwrite" update happens.
   * @param etag etag or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one EntityType (System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one EntityType (System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. The default monitoring configuration for all Features with value type
   * (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated
   * with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring
   * is enabled. Otherwise, snapshot analysis monitoring is disabled.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1FeaturestoreMonitoringConfig getMonitoringConfig() {
    return monitoringConfig;
  }

  /**
   * Optional. The default monitoring configuration for all Features with value type
   * (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated
   * with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring
   * is enabled. Otherwise, snapshot analysis monitoring is disabled.
   * @param monitoringConfig monitoringConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setMonitoringConfig(GoogleCloudAiplatformV1FeaturestoreMonitoringConfig monitoringConfig) {
    this.monitoringConfig = monitoringConfig;
    return this;
  }

  /**
   * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestor
   * es/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the
   * client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin
   * letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value
   * will be unique given a featurestore.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestor
   * es/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the
   * client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin
   * letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value
   * will be unique given a featurestore.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Config for data retention policy in offline storage. TTL in days for feature values
   * that will be stored in offline storage. The Feature Store offline storage periodically removes
   * obsolete feature values older than `offline_storage_ttl_days` since the feature generation
   * time. If unset (or explicitly set to 0), default to 4000 days TTL.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOfflineStorageTtlDays() {
    return offlineStorageTtlDays;
  }

  /**
   * Optional. Config for data retention policy in offline storage. TTL in days for feature values
   * that will be stored in offline storage. The Feature Store offline storage periodically removes
   * obsolete feature values older than `offline_storage_ttl_days` since the feature generation
   * time. If unset (or explicitly set to 0), default to 4000 days TTL.
   * @param offlineStorageTtlDays offlineStorageTtlDays or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setOfflineStorageTtlDays(java.lang.Integer offlineStorageTtlDays) {
    this.offlineStorageTtlDays = offlineStorageTtlDays;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. Timestamp when this EntityType was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this EntityType was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1EntityType setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1EntityType set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1EntityType) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1EntityType clone() {
    return (GoogleCloudAiplatformV1EntityType) super.clone();
  }

}
