/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidenterprise.model;

/**
 * Model definition for ProductsApproveRequest.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play EMM API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ProductsApproveRequest extends com.google.api.client.json.GenericJson {

  /**
   * The approval URL that was shown to the user. Only the permissions shown to the user with that
   * URL will be accepted, which may not be the product's entire set of permissions. For example,
   * the URL may only display new permissions from an update after the product was approved, or not
   * include new permissions if the product was updated since the URL was generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ApprovalUrlInfo approvalUrlInfo;

  /**
   * Sets how new permission requests for the product are handled. "allPermissions" automatically
   * approves all current and future permissions for the product. "currentPermissionsOnly" approves
   * the current set of permissions for the product, but any future permissions added through
   * updates will require manual reapproval. If not specified, only the current set of permissions
   * will be approved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String approvedPermissions;

  /**
   * The approval URL that was shown to the user. Only the permissions shown to the user with that
   * URL will be accepted, which may not be the product's entire set of permissions. For example,
   * the URL may only display new permissions from an update after the product was approved, or not
   * include new permissions if the product was updated since the URL was generated.
   * @return value or {@code null} for none
   */
  public ApprovalUrlInfo getApprovalUrlInfo() {
    return approvalUrlInfo;
  }

  /**
   * The approval URL that was shown to the user. Only the permissions shown to the user with that
   * URL will be accepted, which may not be the product's entire set of permissions. For example,
   * the URL may only display new permissions from an update after the product was approved, or not
   * include new permissions if the product was updated since the URL was generated.
   * @param approvalUrlInfo approvalUrlInfo or {@code null} for none
   */
  public ProductsApproveRequest setApprovalUrlInfo(ApprovalUrlInfo approvalUrlInfo) {
    this.approvalUrlInfo = approvalUrlInfo;
    return this;
  }

  /**
   * Sets how new permission requests for the product are handled. "allPermissions" automatically
   * approves all current and future permissions for the product. "currentPermissionsOnly" approves
   * the current set of permissions for the product, but any future permissions added through
   * updates will require manual reapproval. If not specified, only the current set of permissions
   * will be approved.
   * @return value or {@code null} for none
   */
  public java.lang.String getApprovedPermissions() {
    return approvedPermissions;
  }

  /**
   * Sets how new permission requests for the product are handled. "allPermissions" automatically
   * approves all current and future permissions for the product. "currentPermissionsOnly" approves
   * the current set of permissions for the product, but any future permissions added through
   * updates will require manual reapproval. If not specified, only the current set of permissions
   * will be approved.
   * @param approvedPermissions approvedPermissions or {@code null} for none
   */
  public ProductsApproveRequest setApprovedPermissions(java.lang.String approvedPermissions) {
    this.approvedPermissions = approvedPermissions;
    return this;
  }

  @Override
  public ProductsApproveRequest set(String fieldName, Object value) {
    return (ProductsApproveRequest) super.set(fieldName, value);
  }

  @Override
  public ProductsApproveRequest clone() {
    return (ProductsApproveRequest) super.clone();
  }

}
