/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contactcenterinsights.v1.model;

/**
 * The measure related to conversations.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Contact Center AI Insights API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure extends com.google.api.client.json.GenericJson {

  /**
   * The average agent's sentiment score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float averageAgentSentimentScore;

  /**
   * The average client's sentiment score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float averageClientSentimentScore;

  /**
   * The average customer satisfaction rating.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageCustomerSatisfactionRating;

  /**
   * The average duration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String averageDuration;

  /**
   * The average normalized QA score for a scorecard. When computing the average across a set of
   * conversations, if a conversation has been evaluated with multiple revisions of a scorecard,
   * only the latest revision results will be used. Will exclude 0's in average calculation. Will be
   * only populated if the request specifies a dimension of QA_SCORECARD_ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageQaNormalizedScore;

  /**
   * Average QA normalized score averaged for questions averaged across all revisions of the parent
   * scorecard. Will be only populated if the request specifies a dimension of QA_QUESTION_ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double averageQaQuestionNormalizedScore;

  /**
   * The average silence percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float averageSilencePercentage;

  /**
   * The average turn count.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float averageTurnCount;

  /**
   * The conversation count.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer conversationCount;

  /**
   * Average QA normalized score for all the tags.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore> qaTagScores;

  /**
   * The average agent's sentiment score.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverageAgentSentimentScore() {
    return averageAgentSentimentScore;
  }

  /**
   * The average agent's sentiment score.
   * @param averageAgentSentimentScore averageAgentSentimentScore or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageAgentSentimentScore(java.lang.Float averageAgentSentimentScore) {
    this.averageAgentSentimentScore = averageAgentSentimentScore;
    return this;
  }

  /**
   * The average client's sentiment score.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverageClientSentimentScore() {
    return averageClientSentimentScore;
  }

  /**
   * The average client's sentiment score.
   * @param averageClientSentimentScore averageClientSentimentScore or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageClientSentimentScore(java.lang.Float averageClientSentimentScore) {
    this.averageClientSentimentScore = averageClientSentimentScore;
    return this;
  }

  /**
   * The average customer satisfaction rating.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageCustomerSatisfactionRating() {
    return averageCustomerSatisfactionRating;
  }

  /**
   * The average customer satisfaction rating.
   * @param averageCustomerSatisfactionRating averageCustomerSatisfactionRating or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageCustomerSatisfactionRating(java.lang.Double averageCustomerSatisfactionRating) {
    this.averageCustomerSatisfactionRating = averageCustomerSatisfactionRating;
    return this;
  }

  /**
   * The average duration.
   * @return value or {@code null} for none
   */
  public String getAverageDuration() {
    return averageDuration;
  }

  /**
   * The average duration.
   * @param averageDuration averageDuration or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageDuration(String averageDuration) {
    this.averageDuration = averageDuration;
    return this;
  }

  /**
   * The average normalized QA score for a scorecard. When computing the average across a set of
   * conversations, if a conversation has been evaluated with multiple revisions of a scorecard,
   * only the latest revision results will be used. Will exclude 0's in average calculation. Will be
   * only populated if the request specifies a dimension of QA_SCORECARD_ID.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageQaNormalizedScore() {
    return averageQaNormalizedScore;
  }

  /**
   * The average normalized QA score for a scorecard. When computing the average across a set of
   * conversations, if a conversation has been evaluated with multiple revisions of a scorecard,
   * only the latest revision results will be used. Will exclude 0's in average calculation. Will be
   * only populated if the request specifies a dimension of QA_SCORECARD_ID.
   * @param averageQaNormalizedScore averageQaNormalizedScore or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageQaNormalizedScore(java.lang.Double averageQaNormalizedScore) {
    this.averageQaNormalizedScore = averageQaNormalizedScore;
    return this;
  }

  /**
   * Average QA normalized score averaged for questions averaged across all revisions of the parent
   * scorecard. Will be only populated if the request specifies a dimension of QA_QUESTION_ID.
   * @return value or {@code null} for none
   */
  public java.lang.Double getAverageQaQuestionNormalizedScore() {
    return averageQaQuestionNormalizedScore;
  }

  /**
   * Average QA normalized score averaged for questions averaged across all revisions of the parent
   * scorecard. Will be only populated if the request specifies a dimension of QA_QUESTION_ID.
   * @param averageQaQuestionNormalizedScore averageQaQuestionNormalizedScore or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageQaQuestionNormalizedScore(java.lang.Double averageQaQuestionNormalizedScore) {
    this.averageQaQuestionNormalizedScore = averageQaQuestionNormalizedScore;
    return this;
  }

  /**
   * The average silence percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverageSilencePercentage() {
    return averageSilencePercentage;
  }

  /**
   * The average silence percentage.
   * @param averageSilencePercentage averageSilencePercentage or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageSilencePercentage(java.lang.Float averageSilencePercentage) {
    this.averageSilencePercentage = averageSilencePercentage;
    return this;
  }

  /**
   * The average turn count.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverageTurnCount() {
    return averageTurnCount;
  }

  /**
   * The average turn count.
   * @param averageTurnCount averageTurnCount or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setAverageTurnCount(java.lang.Float averageTurnCount) {
    this.averageTurnCount = averageTurnCount;
    return this;
  }

  /**
   * The conversation count.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getConversationCount() {
    return conversationCount;
  }

  /**
   * The conversation count.
   * @param conversationCount conversationCount or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setConversationCount(java.lang.Integer conversationCount) {
    this.conversationCount = conversationCount;
    return this;
  }

  /**
   * Average QA normalized score for all the tags.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore> getQaTagScores() {
    return qaTagScores;
  }

  /**
   * Average QA normalized score for all the tags.
   * @param qaTagScores qaTagScores or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure setQaTagScores(java.util.List<GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasureQaTagScore> qaTagScores) {
    this.qaTagScores = qaTagScores;
    return this;
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure set(String fieldName, Object value) {
    return (GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure clone() {
    return (GoogleCloudContactcenterinsightsV1QueryMetricsResponseSliceDataPointConversationMeasure) super.clone();
  }

}
