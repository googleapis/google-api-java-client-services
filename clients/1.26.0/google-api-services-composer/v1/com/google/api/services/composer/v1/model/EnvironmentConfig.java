/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.composer.v1.model;

/**
 * Configuration information for an environment.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Composer API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnvironmentConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow
   * web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String airflowUri;

  /**
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage
   * objects reside in a flat namespace, a hierarchical file tree can be simulated using
   * "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated
   * directory with the given prefix.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dagGcsPrefix;

  /**
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gkeCluster;

  /**
   * The configuration used for the Kubernetes Engine cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodeConfig nodeConfig;

  /**
   * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer nodeCount;

  /**
   * The configuration settings for software inside the environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareConfig softwareConfig;

  /**
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow
   * web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * @return value or {@code null} for none
   */
  public java.lang.String getAirflowUri() {
    return airflowUri;
  }

  /**
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow
   * web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * @param airflowUri airflowUri or {@code null} for none
   */
  public EnvironmentConfig setAirflowUri(java.lang.String airflowUri) {
    this.airflowUri = airflowUri;
    return this;
  }

  /**
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage
   * objects reside in a flat namespace, a hierarchical file tree can be simulated using
   * "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated
   * directory with the given prefix.
   * @return value or {@code null} for none
   */
  public java.lang.String getDagGcsPrefix() {
    return dagGcsPrefix;
  }

  /**
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage
   * objects reside in a flat namespace, a hierarchical file tree can be simulated using
   * "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated
   * directory with the given prefix.
   * @param dagGcsPrefix dagGcsPrefix or {@code null} for none
   */
  public EnvironmentConfig setDagGcsPrefix(java.lang.String dagGcsPrefix) {
    this.dagGcsPrefix = dagGcsPrefix;
    return this;
  }

  /**
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getGkeCluster() {
    return gkeCluster;
  }

  /**
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * @param gkeCluster gkeCluster or {@code null} for none
   */
  public EnvironmentConfig setGkeCluster(java.lang.String gkeCluster) {
    this.gkeCluster = gkeCluster;
    return this;
  }

  /**
   * The configuration used for the Kubernetes Engine cluster.
   * @return value or {@code null} for none
   */
  public NodeConfig getNodeConfig() {
    return nodeConfig;
  }

  /**
   * The configuration used for the Kubernetes Engine cluster.
   * @param nodeConfig nodeConfig or {@code null} for none
   */
  public EnvironmentConfig setNodeConfig(NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
    return this;
  }

  /**
   * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNodeCount() {
    return nodeCount;
  }

  /**
   * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment.
   * @param nodeCount nodeCount or {@code null} for none
   */
  public EnvironmentConfig setNodeCount(java.lang.Integer nodeCount) {
    this.nodeCount = nodeCount;
    return this;
  }

  /**
   * The configuration settings for software inside the environment.
   * @return value or {@code null} for none
   */
  public SoftwareConfig getSoftwareConfig() {
    return softwareConfig;
  }

  /**
   * The configuration settings for software inside the environment.
   * @param softwareConfig softwareConfig or {@code null} for none
   */
  public EnvironmentConfig setSoftwareConfig(SoftwareConfig softwareConfig) {
    this.softwareConfig = softwareConfig;
    return this;
  }

  @Override
  public EnvironmentConfig set(String fieldName, Object value) {
    return (EnvironmentConfig) super.set(fieldName, value);
  }

  @Override
  public EnvironmentConfig clone() {
    return (EnvironmentConfig) super.clone();
  }

}
