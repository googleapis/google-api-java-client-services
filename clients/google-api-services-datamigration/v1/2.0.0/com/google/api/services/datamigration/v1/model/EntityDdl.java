/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datamigration.v1.model;

/**
 * A single DDL statement for a specific entity
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Database Migration API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EntityDdl extends com.google.api.client.json.GenericJson {

  /**
   * The actual ddl code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ddl;

  /**
   * Type of DDL (Create, Alter).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ddlType;

  /**
   * The name of the database entity the ddl refers to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entity;

  /**
   * The entity type (if the DDL is for a sub entity).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityType;

  /**
   * EntityIssues found for this ddl.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> issueId;

  /**
   * The actual ddl code.
   * @return value or {@code null} for none
   */
  public java.lang.String getDdl() {
    return ddl;
  }

  /**
   * The actual ddl code.
   * @param ddl ddl or {@code null} for none
   */
  public EntityDdl setDdl(java.lang.String ddl) {
    this.ddl = ddl;
    return this;
  }

  /**
   * Type of DDL (Create, Alter).
   * @return value or {@code null} for none
   */
  public java.lang.String getDdlType() {
    return ddlType;
  }

  /**
   * Type of DDL (Create, Alter).
   * @param ddlType ddlType or {@code null} for none
   */
  public EntityDdl setDdlType(java.lang.String ddlType) {
    this.ddlType = ddlType;
    return this;
  }

  /**
   * The name of the database entity the ddl refers to.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntity() {
    return entity;
  }

  /**
   * The name of the database entity the ddl refers to.
   * @param entity entity or {@code null} for none
   */
  public EntityDdl setEntity(java.lang.String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * The entity type (if the DDL is for a sub entity).
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityType() {
    return entityType;
  }

  /**
   * The entity type (if the DDL is for a sub entity).
   * @param entityType entityType or {@code null} for none
   */
  public EntityDdl setEntityType(java.lang.String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * EntityIssues found for this ddl.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIssueId() {
    return issueId;
  }

  /**
   * EntityIssues found for this ddl.
   * @param issueId issueId or {@code null} for none
   */
  public EntityDdl setIssueId(java.util.List<java.lang.String> issueId) {
    this.issueId = issueId;
    return this;
  }

  @Override
  public EntityDdl set(String fieldName, Object value) {
    return (EntityDdl) super.set(fieldName, value);
  }

  @Override
  public EntityDdl clone() {
    return (EntityDdl) super.clone();
  }

}
