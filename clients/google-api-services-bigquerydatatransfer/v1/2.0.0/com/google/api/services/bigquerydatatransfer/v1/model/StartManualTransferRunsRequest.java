/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigquerydatatransfer.v1.model;

/**
 * A request to start manual transfer runs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the BigQuery Data Transfer API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StartManualTransferRunsRequest extends com.google.api.client.json.GenericJson {

  /**
   * A run_time timestamp for historical data files or reports that are scheduled to be transferred
   * by the scheduled transfer run. requested_run_time must be a past time and cannot include future
   * time values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String requestedRunTime;

  /**
   * A time_range start and end timestamp for historical data files or reports that are scheduled to
   * be transferred by the scheduled transfer run. requested_time_range must be a past time and
   * cannot include future time values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeRange requestedTimeRange;

  /**
   * A run_time timestamp for historical data files or reports that are scheduled to be transferred
   * by the scheduled transfer run. requested_run_time must be a past time and cannot include future
   * time values.
   * @return value or {@code null} for none
   */
  public String getRequestedRunTime() {
    return requestedRunTime;
  }

  /**
   * A run_time timestamp for historical data files or reports that are scheduled to be transferred
   * by the scheduled transfer run. requested_run_time must be a past time and cannot include future
   * time values.
   * @param requestedRunTime requestedRunTime or {@code null} for none
   */
  public StartManualTransferRunsRequest setRequestedRunTime(String requestedRunTime) {
    this.requestedRunTime = requestedRunTime;
    return this;
  }

  /**
   * A time_range start and end timestamp for historical data files or reports that are scheduled to
   * be transferred by the scheduled transfer run. requested_time_range must be a past time and
   * cannot include future time values.
   * @return value or {@code null} for none
   */
  public TimeRange getRequestedTimeRange() {
    return requestedTimeRange;
  }

  /**
   * A time_range start and end timestamp for historical data files or reports that are scheduled to
   * be transferred by the scheduled transfer run. requested_time_range must be a past time and
   * cannot include future time values.
   * @param requestedTimeRange requestedTimeRange or {@code null} for none
   */
  public StartManualTransferRunsRequest setRequestedTimeRange(TimeRange requestedTimeRange) {
    this.requestedTimeRange = requestedTimeRange;
    return this;
  }

  @Override
  public StartManualTransferRunsRequest set(String fieldName, Object value) {
    return (StartManualTransferRunsRequest) super.set(fieldName, value);
  }

  @Override
  public StartManualTransferRunsRequest clone() {
    return (StartManualTransferRunsRequest) super.clone();
  }

}
