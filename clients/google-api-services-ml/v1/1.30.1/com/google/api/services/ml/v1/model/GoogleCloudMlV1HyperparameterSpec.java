/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.ml.v1.model;

/**
 * Represents a set of hyperparameters to optimize.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Machine Learning Engine. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudMlV1HyperparameterSpec extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI
   * Platform hyperparameter tuning algorithm if unspecified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String algorithm;

  /**
   * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableTrialEarlyStopping;

  /**
   * Required. The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`.
   *
   * Defaults to `MAXIMIZE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String goal;

  /**
   * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of
   * TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all
   * scopes.  For versions of TensorFlow prior to 0.12, this should be only the tag passed to
   * tf.Summary. By default, "training/hptuning/metric" will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hyperparameterMetricTag;

  /**
   * Optional. The number of failed trials that need to be seen before failing the hyperparameter
   * tuning job. You can specify this field to override the default failing criteria for AI Platform
   * hyperparameter tuning jobs.
   *
   * Defaults to zero, which means the service decides when a hyperparameter job should fail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxFailedTrials;

  /**
   * Optional. The number of training trials to run concurrently. You can reduce the time it takes
   * to perform hyperparameter tuning by adding trials in parallel. However, each trail only
   * benefits from the information gained in completed trials. That means that a trial does not get
   * access to the results of trials running at the same time, which could reduce the quality of the
   * overall optimization.
   *
   * Each trial will use the same scale tier and machine types.
   *
   * Defaults to one.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxParallelTrials;

  /**
   * Optional. How many training trials should be attempted to optimize the specified
   * hyperparameters.
   *
   * Defaults to one.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxTrials;

  /**
   * Required. The set of parameters to tune.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudMlV1ParameterSpec> params;

  /**
   * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id
   * will be used to find the corresponding vizier study guid and resume the study.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resumePreviousJobId;

  /**
   * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI
   * Platform hyperparameter tuning algorithm if unspecified.
   * @return value or {@code null} for none
   */
  public java.lang.String getAlgorithm() {
    return algorithm;
  }

  /**
   * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI
   * Platform hyperparameter tuning algorithm if unspecified.
   * @param algorithm algorithm or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setAlgorithm(java.lang.String algorithm) {
    this.algorithm = algorithm;
    return this;
  }

  /**
   * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableTrialEarlyStopping() {
    return enableTrialEarlyStopping;
  }

  /**
   * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
   * @param enableTrialEarlyStopping enableTrialEarlyStopping or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setEnableTrialEarlyStopping(java.lang.Boolean enableTrialEarlyStopping) {
    this.enableTrialEarlyStopping = enableTrialEarlyStopping;
    return this;
  }

  /**
   * Required. The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`.
   *
   * Defaults to `MAXIMIZE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getGoal() {
    return goal;
  }

  /**
   * Required. The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`.
   *
   * Defaults to `MAXIMIZE`.
   * @param goal goal or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setGoal(java.lang.String goal) {
    this.goal = goal;
    return this;
  }

  /**
   * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of
   * TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all
   * scopes.  For versions of TensorFlow prior to 0.12, this should be only the tag passed to
   * tf.Summary. By default, "training/hptuning/metric" will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getHyperparameterMetricTag() {
    return hyperparameterMetricTag;
  }

  /**
   * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of
   * TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all
   * scopes.  For versions of TensorFlow prior to 0.12, this should be only the tag passed to
   * tf.Summary. By default, "training/hptuning/metric" will be used.
   * @param hyperparameterMetricTag hyperparameterMetricTag or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setHyperparameterMetricTag(java.lang.String hyperparameterMetricTag) {
    this.hyperparameterMetricTag = hyperparameterMetricTag;
    return this;
  }

  /**
   * Optional. The number of failed trials that need to be seen before failing the hyperparameter
   * tuning job. You can specify this field to override the default failing criteria for AI Platform
   * hyperparameter tuning jobs.
   *
   * Defaults to zero, which means the service decides when a hyperparameter job should fail.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxFailedTrials() {
    return maxFailedTrials;
  }

  /**
   * Optional. The number of failed trials that need to be seen before failing the hyperparameter
   * tuning job. You can specify this field to override the default failing criteria for AI Platform
   * hyperparameter tuning jobs.
   *
   * Defaults to zero, which means the service decides when a hyperparameter job should fail.
   * @param maxFailedTrials maxFailedTrials or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setMaxFailedTrials(java.lang.Integer maxFailedTrials) {
    this.maxFailedTrials = maxFailedTrials;
    return this;
  }

  /**
   * Optional. The number of training trials to run concurrently. You can reduce the time it takes
   * to perform hyperparameter tuning by adding trials in parallel. However, each trail only
   * benefits from the information gained in completed trials. That means that a trial does not get
   * access to the results of trials running at the same time, which could reduce the quality of the
   * overall optimization.
   *
   * Each trial will use the same scale tier and machine types.
   *
   * Defaults to one.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxParallelTrials() {
    return maxParallelTrials;
  }

  /**
   * Optional. The number of training trials to run concurrently. You can reduce the time it takes
   * to perform hyperparameter tuning by adding trials in parallel. However, each trail only
   * benefits from the information gained in completed trials. That means that a trial does not get
   * access to the results of trials running at the same time, which could reduce the quality of the
   * overall optimization.
   *
   * Each trial will use the same scale tier and machine types.
   *
   * Defaults to one.
   * @param maxParallelTrials maxParallelTrials or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setMaxParallelTrials(java.lang.Integer maxParallelTrials) {
    this.maxParallelTrials = maxParallelTrials;
    return this;
  }

  /**
   * Optional. How many training trials should be attempted to optimize the specified
   * hyperparameters.
   *
   * Defaults to one.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxTrials() {
    return maxTrials;
  }

  /**
   * Optional. How many training trials should be attempted to optimize the specified
   * hyperparameters.
   *
   * Defaults to one.
   * @param maxTrials maxTrials or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setMaxTrials(java.lang.Integer maxTrials) {
    this.maxTrials = maxTrials;
    return this;
  }

  /**
   * Required. The set of parameters to tune.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudMlV1ParameterSpec> getParams() {
    return params;
  }

  /**
   * Required. The set of parameters to tune.
   * @param params params or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setParams(java.util.List<GoogleCloudMlV1ParameterSpec> params) {
    this.params = params;
    return this;
  }

  /**
   * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id
   * will be used to find the corresponding vizier study guid and resume the study.
   * @return value or {@code null} for none
   */
  public java.lang.String getResumePreviousJobId() {
    return resumePreviousJobId;
  }

  /**
   * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id
   * will be used to find the corresponding vizier study guid and resume the study.
   * @param resumePreviousJobId resumePreviousJobId or {@code null} for none
   */
  public GoogleCloudMlV1HyperparameterSpec setResumePreviousJobId(java.lang.String resumePreviousJobId) {
    this.resumePreviousJobId = resumePreviousJobId;
    return this;
  }

  @Override
  public GoogleCloudMlV1HyperparameterSpec set(String fieldName, Object value) {
    return (GoogleCloudMlV1HyperparameterSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudMlV1HyperparameterSpec clone() {
    return (GoogleCloudMlV1HyperparameterSpec) super.clone();
  }

}
