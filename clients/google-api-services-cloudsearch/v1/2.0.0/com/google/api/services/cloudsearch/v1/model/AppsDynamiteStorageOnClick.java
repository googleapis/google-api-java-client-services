/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Model definition for AppsDynamiteStorageOnClick.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteStorageOnClick extends com.google.api.client.json.GenericJson {

  /**
   * If specified, an action is triggered by this onClick.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteStorageAction action;

  /**
   * Triggers host app action on click directly without invoking form actions. This is currently not
   * available to end-users and is used internal only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HostAppActionMarkup hostAppAction;

  /**
   * An add-on triggers this action when the action needs to open a link. This differs from the
   * open_link above in that this needs to talk to server to get the link. Thus some preparation
   * work is required for web client to do before the open link action response comes back.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteStorageAction openDynamicLinkAction;

  /**
   * If specified, this onClick triggers an open link action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteStorageOpenLink openLink;

  /**
   * If specified, an action is triggered by this onClick.
   * @return value or {@code null} for none
   */
  public AppsDynamiteStorageAction getAction() {
    return action;
  }

  /**
   * If specified, an action is triggered by this onClick.
   * @param action action or {@code null} for none
   */
  public AppsDynamiteStorageOnClick setAction(AppsDynamiteStorageAction action) {
    this.action = action;
    return this;
  }

  /**
   * Triggers host app action on click directly without invoking form actions. This is currently not
   * available to end-users and is used internal only.
   * @return value or {@code null} for none
   */
  public HostAppActionMarkup getHostAppAction() {
    return hostAppAction;
  }

  /**
   * Triggers host app action on click directly without invoking form actions. This is currently not
   * available to end-users and is used internal only.
   * @param hostAppAction hostAppAction or {@code null} for none
   */
  public AppsDynamiteStorageOnClick setHostAppAction(HostAppActionMarkup hostAppAction) {
    this.hostAppAction = hostAppAction;
    return this;
  }

  /**
   * An add-on triggers this action when the action needs to open a link. This differs from the
   * open_link above in that this needs to talk to server to get the link. Thus some preparation
   * work is required for web client to do before the open link action response comes back.
   * @return value or {@code null} for none
   */
  public AppsDynamiteStorageAction getOpenDynamicLinkAction() {
    return openDynamicLinkAction;
  }

  /**
   * An add-on triggers this action when the action needs to open a link. This differs from the
   * open_link above in that this needs to talk to server to get the link. Thus some preparation
   * work is required for web client to do before the open link action response comes back.
   * @param openDynamicLinkAction openDynamicLinkAction or {@code null} for none
   */
  public AppsDynamiteStorageOnClick setOpenDynamicLinkAction(AppsDynamiteStorageAction openDynamicLinkAction) {
    this.openDynamicLinkAction = openDynamicLinkAction;
    return this;
  }

  /**
   * If specified, this onClick triggers an open link action.
   * @return value or {@code null} for none
   */
  public AppsDynamiteStorageOpenLink getOpenLink() {
    return openLink;
  }

  /**
   * If specified, this onClick triggers an open link action.
   * @param openLink openLink or {@code null} for none
   */
  public AppsDynamiteStorageOnClick setOpenLink(AppsDynamiteStorageOpenLink openLink) {
    this.openLink = openLink;
    return this;
  }

  @Override
  public AppsDynamiteStorageOnClick set(String fieldName, Object value) {
    return (AppsDynamiteStorageOnClick) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteStorageOnClick clone() {
    return (AppsDynamiteStorageOnClick) super.clone();
  }

}
