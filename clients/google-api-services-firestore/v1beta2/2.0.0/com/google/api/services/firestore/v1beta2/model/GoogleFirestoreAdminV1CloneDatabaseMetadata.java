/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1beta2.model;

/**
 * Metadata for the long-running operation from the CloneDatabase request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1CloneDatabaseMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The name of the database being cloned to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String database;

  /**
   * The time the clone finished, unset for ongoing clones.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * The operation state of the clone.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operationState;

  /**
   * The snapshot from which this database was cloned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1PitrSnapshot pitrSnapshot;

  /**
   * How far along the clone is as an estimated percentage of remaining time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleFirestoreAdminV1Progress progressPercentage;

  /**
   * The time the clone was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * The name of the database being cloned to.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabase() {
    return database;
  }

  /**
   * The name of the database being cloned to.
   * @param database database or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setDatabase(java.lang.String database) {
    this.database = database;
    return this;
  }

  /**
   * The time the clone finished, unset for ongoing clones.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * The time the clone finished, unset for ongoing clones.
   * @param endTime endTime or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The operation state of the clone.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperationState() {
    return operationState;
  }

  /**
   * The operation state of the clone.
   * @param operationState operationState or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setOperationState(java.lang.String operationState) {
    this.operationState = operationState;
    return this;
  }

  /**
   * The snapshot from which this database was cloned.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1PitrSnapshot getPitrSnapshot() {
    return pitrSnapshot;
  }

  /**
   * The snapshot from which this database was cloned.
   * @param pitrSnapshot pitrSnapshot or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setPitrSnapshot(GoogleFirestoreAdminV1PitrSnapshot pitrSnapshot) {
    this.pitrSnapshot = pitrSnapshot;
    return this;
  }

  /**
   * How far along the clone is as an estimated percentage of remaining time.
   * @return value or {@code null} for none
   */
  public GoogleFirestoreAdminV1Progress getProgressPercentage() {
    return progressPercentage;
  }

  /**
   * How far along the clone is as an estimated percentage of remaining time.
   * @param progressPercentage progressPercentage or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setProgressPercentage(GoogleFirestoreAdminV1Progress progressPercentage) {
    this.progressPercentage = progressPercentage;
    return this;
  }

  /**
   * The time the clone was started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * The time the clone was started.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleFirestoreAdminV1CloneDatabaseMetadata setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1CloneDatabaseMetadata set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1CloneDatabaseMetadata) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1CloneDatabaseMetadata clone() {
    return (GoogleFirestoreAdminV1CloneDatabaseMetadata) super.clone();
  }

}
