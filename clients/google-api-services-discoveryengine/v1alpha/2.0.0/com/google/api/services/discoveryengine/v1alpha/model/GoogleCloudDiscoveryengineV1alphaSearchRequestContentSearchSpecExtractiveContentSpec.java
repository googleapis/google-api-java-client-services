/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * A specification for configuring the extractive content in a search response.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec extends com.google.api.client.json.GenericJson {

  /**
   * The maximum number of extractive answers returned in each search result. An extractive answer
   * is a verbatim answer extracted from the original document, which provides a precise and
   * contextually relevant answer to the search query. If the number of matching answers is less
   * than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the
   * `max_extractive_answer_count`. At most one answer is returned for each SearchResult.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxExtractiveAnswerCount;

  /**
   * The max number of extractive segments returned in each search result. Only applied if the
   * DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is
   * SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original
   * document that is relevant to the search query, and, in general, more verbose than an extractive
   * answer. The segment could then be used as input for LLMs to generate summaries and answers. If
   * the number of matching segments is less than `max_extractive_segment_count`, return all of the
   * segments. Otherwise, return the `max_extractive_segment_count`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxExtractiveSegmentCount;

  /**
   * Specifies whether to return the confidence score from the extractive segments in each search
   * result. The default value is `false`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean returnExtractiveSegmentScore;

  /**
   * The maximum number of extractive answers returned in each search result. An extractive answer
   * is a verbatim answer extracted from the original document, which provides a precise and
   * contextually relevant answer to the search query. If the number of matching answers is less
   * than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the
   * `max_extractive_answer_count`. At most one answer is returned for each SearchResult.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxExtractiveAnswerCount() {
    return maxExtractiveAnswerCount;
  }

  /**
   * The maximum number of extractive answers returned in each search result. An extractive answer
   * is a verbatim answer extracted from the original document, which provides a precise and
   * contextually relevant answer to the search query. If the number of matching answers is less
   * than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the
   * `max_extractive_answer_count`. At most one answer is returned for each SearchResult.
   * @param maxExtractiveAnswerCount maxExtractiveAnswerCount or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec setMaxExtractiveAnswerCount(java.lang.Integer maxExtractiveAnswerCount) {
    this.maxExtractiveAnswerCount = maxExtractiveAnswerCount;
    return this;
  }

  /**
   * The max number of extractive segments returned in each search result. Only applied if the
   * DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is
   * SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original
   * document that is relevant to the search query, and, in general, more verbose than an extractive
   * answer. The segment could then be used as input for LLMs to generate summaries and answers. If
   * the number of matching segments is less than `max_extractive_segment_count`, return all of the
   * segments. Otherwise, return the `max_extractive_segment_count`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxExtractiveSegmentCount() {
    return maxExtractiveSegmentCount;
  }

  /**
   * The max number of extractive segments returned in each search result. Only applied if the
   * DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is
   * SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original
   * document that is relevant to the search query, and, in general, more verbose than an extractive
   * answer. The segment could then be used as input for LLMs to generate summaries and answers. If
   * the number of matching segments is less than `max_extractive_segment_count`, return all of the
   * segments. Otherwise, return the `max_extractive_segment_count`.
   * @param maxExtractiveSegmentCount maxExtractiveSegmentCount or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec setMaxExtractiveSegmentCount(java.lang.Integer maxExtractiveSegmentCount) {
    this.maxExtractiveSegmentCount = maxExtractiveSegmentCount;
    return this;
  }

  /**
   * Specifies whether to return the confidence score from the extractive segments in each search
   * result. The default value is `false`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReturnExtractiveSegmentScore() {
    return returnExtractiveSegmentScore;
  }

  /**
   * Specifies whether to return the confidence score from the extractive segments in each search
   * result. The default value is `false`.
   * @param returnExtractiveSegmentScore returnExtractiveSegmentScore or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec setReturnExtractiveSegmentScore(java.lang.Boolean returnExtractiveSegmentScore) {
    this.returnExtractiveSegmentScore = returnExtractiveSegmentScore;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec clone() {
    return (GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec) super.clone();
  }

}
