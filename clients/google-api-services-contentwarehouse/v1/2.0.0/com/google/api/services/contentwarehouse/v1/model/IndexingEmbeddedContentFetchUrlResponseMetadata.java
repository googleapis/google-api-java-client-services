/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Capsulate all metadata annotated from fetch server. This message will typically go through: -
 * EmbeddedContentFetcher, or - EmbeddedLinkGetter-> DenormalizedContent -> ContentStore. And
 * finally deposit in referenced_resources and link_info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexingEmbeddedContentFetchUrlResponseMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String adsResourceType;

  /**
   * The field always exists, and has four options: UNKNOWN, CONTENT, ROBOTED and ERROR, which are
   * defined in indexing.converter.CrawlStatus.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer crawlStatus;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String criticalResourceType;

  /**
   * True if the response is fetched with SMARTPHONE user agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean fetchWithSmartphoneUa;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isAdsResource;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCriticalResource;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isTrivialResource;

  /**
   * Number of trawler fetches while fetching this URL. In most cases, this number will be 0 or 1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numTrawlerFetches;

  /**
   * Used for logging purposes only here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rewriteMethod;

  /**
   * Note that this robots_info should only be used for noindex_reason and will only be present for
   * TARGET_MAIN_FRAME / TARGET_SUBFRAME fetches.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingConverterRobotsInfo robotsInfo;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAdsResourceType() {
    return adsResourceType;
  }

  /**
   * @param adsResourceType adsResourceType or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setAdsResourceType(java.lang.String adsResourceType) {
    this.adsResourceType = adsResourceType;
    return this;
  }

  /**
   * The field always exists, and has four options: UNKNOWN, CONTENT, ROBOTED and ERROR, which are
   * defined in indexing.converter.CrawlStatus.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCrawlStatus() {
    return crawlStatus;
  }

  /**
   * The field always exists, and has four options: UNKNOWN, CONTENT, ROBOTED and ERROR, which are
   * defined in indexing.converter.CrawlStatus.
   * @param crawlStatus crawlStatus or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setCrawlStatus(java.lang.Integer crawlStatus) {
    this.crawlStatus = crawlStatus;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCriticalResourceType() {
    return criticalResourceType;
  }

  /**
   * @param criticalResourceType criticalResourceType or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setCriticalResourceType(java.lang.String criticalResourceType) {
    this.criticalResourceType = criticalResourceType;
    return this;
  }

  /**
   * True if the response is fetched with SMARTPHONE user agent.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFetchWithSmartphoneUa() {
    return fetchWithSmartphoneUa;
  }

  /**
   * True if the response is fetched with SMARTPHONE user agent.
   * @param fetchWithSmartphoneUa fetchWithSmartphoneUa or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setFetchWithSmartphoneUa(java.lang.Boolean fetchWithSmartphoneUa) {
    this.fetchWithSmartphoneUa = fetchWithSmartphoneUa;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsAdsResource() {
    return isAdsResource;
  }

  /**
   * @param isAdsResource isAdsResource or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setIsAdsResource(java.lang.Boolean isAdsResource) {
    this.isAdsResource = isAdsResource;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCriticalResource() {
    return isCriticalResource;
  }

  /**
   * @param isCriticalResource isCriticalResource or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setIsCriticalResource(java.lang.Boolean isCriticalResource) {
    this.isCriticalResource = isCriticalResource;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsTrivialResource() {
    return isTrivialResource;
  }

  /**
   * @param isTrivialResource isTrivialResource or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setIsTrivialResource(java.lang.Boolean isTrivialResource) {
    this.isTrivialResource = isTrivialResource;
    return this;
  }

  /**
   * Number of trawler fetches while fetching this URL. In most cases, this number will be 0 or 1.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumTrawlerFetches() {
    return numTrawlerFetches;
  }

  /**
   * Number of trawler fetches while fetching this URL. In most cases, this number will be 0 or 1.
   * @param numTrawlerFetches numTrawlerFetches or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setNumTrawlerFetches(java.lang.Integer numTrawlerFetches) {
    this.numTrawlerFetches = numTrawlerFetches;
    return this;
  }

  /**
   * Used for logging purposes only here.
   * @return value or {@code null} for none
   */
  public java.lang.String getRewriteMethod() {
    return rewriteMethod;
  }

  /**
   * Used for logging purposes only here.
   * @param rewriteMethod rewriteMethod or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setRewriteMethod(java.lang.String rewriteMethod) {
    this.rewriteMethod = rewriteMethod;
    return this;
  }

  /**
   * Note that this robots_info should only be used for noindex_reason and will only be present for
   * TARGET_MAIN_FRAME / TARGET_SUBFRAME fetches.
   * @return value or {@code null} for none
   */
  public IndexingConverterRobotsInfo getRobotsInfo() {
    return robotsInfo;
  }

  /**
   * Note that this robots_info should only be used for noindex_reason and will only be present for
   * TARGET_MAIN_FRAME / TARGET_SUBFRAME fetches.
   * @param robotsInfo robotsInfo or {@code null} for none
   */
  public IndexingEmbeddedContentFetchUrlResponseMetadata setRobotsInfo(IndexingConverterRobotsInfo robotsInfo) {
    this.robotsInfo = robotsInfo;
    return this;
  }

  @Override
  public IndexingEmbeddedContentFetchUrlResponseMetadata set(String fieldName, Object value) {
    return (IndexingEmbeddedContentFetchUrlResponseMetadata) super.set(fieldName, value);
  }

  @Override
  public IndexingEmbeddedContentFetchUrlResponseMetadata clone() {
    return (IndexingEmbeddedContentFetchUrlResponseMetadata) super.clone();
  }

}
