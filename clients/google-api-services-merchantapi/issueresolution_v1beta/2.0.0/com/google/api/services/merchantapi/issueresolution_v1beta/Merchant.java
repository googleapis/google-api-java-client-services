/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.issueresolution_v1beta;

/**
 * Service definition for Merchant (issueresolution_v1beta).
 *
 * <p>
 * Programmatically manage your Merchant Center Accounts.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/merchant/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MerchantRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Merchant extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Merchant API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://merchantapi.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://merchantapi.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Merchant(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Merchant(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.Accounts.List request = merchantapi.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the AggregateProductStatuses collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.AggregateProductStatuses.List request = merchantapi.aggregateProductStatuses().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AggregateProductStatuses aggregateProductStatuses() {
      return new AggregateProductStatuses();
    }

    /**
     * The "aggregateProductStatuses" collection of methods.
     */
    public class AggregateProductStatuses {

      /**
       * Lists the `AggregateProductStatuses` resources for your merchant account. The response might
       * contain fewer items than specified by `pageSize`. If `pageToken` was returned in previous
       * request, it can be used to obtain additional results.
       *
       * Create a request for the method "aggregateProductStatuses.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account to list aggregate product statuses for. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.issueresolution_v1beta.model.ListAggregateProductStatusesResponse> {

        private static final String REST_PATH = "issueresolution/v1beta/{+parent}/aggregateProductStatuses";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the `AggregateProductStatuses` resources for your merchant account. The response might
         * contain fewer items than specified by `pageSize`. If `pageToken` was returned in previous
         * request, it can be used to obtain additional results.
         *
         * Create a request for the method "aggregateProductStatuses.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account to list aggregate product statuses for. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.issueresolution_v1beta.model.ListAggregateProductStatusesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account to list aggregate product statuses for. Format:
         * `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account to list aggregate product statuses for. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account to list aggregate product statuses for. Format:
         * `accounts/{account}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. A filter expression that filters the aggregate product statuses. Filtering is
         * only supported by the `reporting_context` and `country` field. For example:
         * `reporting_context = "SHOPPING_ADS" AND country = "US"`.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. A filter expression that filters the aggregate product statuses. Filtering is only
       supported by the `reporting_context` and `country` field. For example: `reporting_context =
       "SHOPPING_ADS" AND country = "US"`.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. A filter expression that filters the aggregate product statuses. Filtering is
         * only supported by the `reporting_context` and `country` field. For example:
         * `reporting_context = "SHOPPING_ADS" AND country = "US"`.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. The maximum number of aggregate product statuses to return. The service may
         * return fewer than this value. If unspecified, at most 25 aggregate product statuses are
         * returned. The maximum value is 250; values above 250 are coerced to 250.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of aggregate product statuses to return. The service may return fewer
       than this value. If unspecified, at most 25 aggregate product statuses are returned. The maximum
       value is 250; values above 250 are coerced to 250.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of aggregate product statuses to return. The service may
         * return fewer than this value. If unspecified, at most 25 aggregate product statuses are
         * returned. The maximum value is 250; values above 250 are coerced to 250.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListAggregateProductStatuses` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListAggregateProductStatuses` must match the call that provided the page
         * token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListAggregateProductStatuses` call. Provide this
       to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListAggregateProductStatuses` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListAggregateProductStatuses` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListAggregateProductStatuses` must match the call that provided the page
         * token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Issueresolution collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.Issueresolution.List request = merchantapi.issueresolution().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Issueresolution issueresolution() {
    return new Issueresolution();
  }

  /**
   * The "issueresolution" collection of methods.
   */
  public class Issueresolution {

    /**
     * Provide a list of business's account issues with an issue resolution content and available
     * actions. This content and actions are meant to be rendered and shown in third-party applications.
     *
     * Create a request for the method "issueresolution.renderaccountissues".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Renderaccountissues#execute()} method to invoke the remote operation.
     *
     * @param name Required. The account to fetch issues for. Format: `accounts/{account}`
     * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload}
     * @return the request
     */
    public Renderaccountissues renderaccountissues(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload content) throws java.io.IOException {
      Renderaccountissues result = new Renderaccountissues(name, content);
      initialize(result);
      return result;
    }

    public class Renderaccountissues extends MerchantRequest<com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderAccountIssuesResponse> {

      private static final String REST_PATH = "issueresolution/v1beta/{+name}:renderaccountissues";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Provide a list of business's account issues with an issue resolution content and available
       * actions. This content and actions are meant to be rendered and shown in third-party
       * applications.
       *
       * Create a request for the method "issueresolution.renderaccountissues".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Renderaccountissues#execute()} method to invoke the remote
       * operation. <p> {@link Renderaccountissues#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. The account to fetch issues for. Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload}
       * @since 1.13
       */
      protected Renderaccountissues(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload content) {
        super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderAccountIssuesResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Renderaccountissues set$Xgafv(java.lang.String $Xgafv) {
        return (Renderaccountissues) super.set$Xgafv($Xgafv);
      }

      @Override
      public Renderaccountissues setAccessToken(java.lang.String accessToken) {
        return (Renderaccountissues) super.setAccessToken(accessToken);
      }

      @Override
      public Renderaccountissues setAlt(java.lang.String alt) {
        return (Renderaccountissues) super.setAlt(alt);
      }

      @Override
      public Renderaccountissues setCallback(java.lang.String callback) {
        return (Renderaccountissues) super.setCallback(callback);
      }

      @Override
      public Renderaccountissues setFields(java.lang.String fields) {
        return (Renderaccountissues) super.setFields(fields);
      }

      @Override
      public Renderaccountissues setKey(java.lang.String key) {
        return (Renderaccountissues) super.setKey(key);
      }

      @Override
      public Renderaccountissues setOauthToken(java.lang.String oauthToken) {
        return (Renderaccountissues) super.setOauthToken(oauthToken);
      }

      @Override
      public Renderaccountissues setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Renderaccountissues) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Renderaccountissues setQuotaUser(java.lang.String quotaUser) {
        return (Renderaccountissues) super.setQuotaUser(quotaUser);
      }

      @Override
      public Renderaccountissues setUploadType(java.lang.String uploadType) {
        return (Renderaccountissues) super.setUploadType(uploadType);
      }

      @Override
      public Renderaccountissues setUploadProtocol(java.lang.String uploadProtocol) {
        return (Renderaccountissues) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The account to fetch issues for. Format: `accounts/{account}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The account to fetch issues for. Format: `accounts/{account}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The account to fetch issues for. Format: `accounts/{account}` */
      public Renderaccountissues setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize issue resolution content. If not set, the result will be in default language `en-
       * US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize issue
     resolution content. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize issue resolution content. If not set, the result will be in default language `en-
       * US`.
       */
      public Renderaccountissues setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an
       * issue resolution content. For example 'America/Los_Angeles'. If not set, results will use
       * as a default UTC.
       */
      @com.google.api.client.util.Key
      private java.lang.String timeZone;

      /** Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an issue
     resolution content. For example 'America/Los_Angeles'. If not set, results will use as a default
     UTC.
       */
      public java.lang.String getTimeZone() {
        return timeZone;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an
       * issue resolution content. For example 'America/Los_Angeles'. If not set, results will use
       * as a default UTC.
       */
      public Renderaccountissues setTimeZone(java.lang.String timeZone) {
        this.timeZone = timeZone;
        return this;
      }

      @Override
      public Renderaccountissues set(String parameterName, Object value) {
        return (Renderaccountissues) super.set(parameterName, value);
      }
    }
    /**
     * Provide a list of issues for business's product with an issue resolution content and available
     * actions. This content and actions are meant to be rendered and shown in third-party applications.
     *
     * Create a request for the method "issueresolution.renderproductissues".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Renderproductissues#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the product to fetch issues for. Format:
     *        `accounts/{account}/products/{product}`
     * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload}
     * @return the request
     */
    public Renderproductissues renderproductissues(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload content) throws java.io.IOException {
      Renderproductissues result = new Renderproductissues(name, content);
      initialize(result);
      return result;
    }

    public class Renderproductissues extends MerchantRequest<com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderProductIssuesResponse> {

      private static final String REST_PATH = "issueresolution/v1beta/{+name}:renderproductissues";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+$");

      /**
       * Provide a list of issues for business's product with an issue resolution content and available
       * actions. This content and actions are meant to be rendered and shown in third-party
       * applications.
       *
       * Create a request for the method "issueresolution.renderproductissues".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Renderproductissues#execute()} method to invoke the remote
       * operation. <p> {@link Renderproductissues#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. The name of the product to fetch issues for. Format:
     *        `accounts/{account}/products/{product}`
       * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload}
       * @since 1.13
       */
      protected Renderproductissues(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderIssuesRequestPayload content) {
        super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.issueresolution_v1beta.model.RenderProductIssuesResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/products/[^/]+$");
        }
      }

      @Override
      public Renderproductissues set$Xgafv(java.lang.String $Xgafv) {
        return (Renderproductissues) super.set$Xgafv($Xgafv);
      }

      @Override
      public Renderproductissues setAccessToken(java.lang.String accessToken) {
        return (Renderproductissues) super.setAccessToken(accessToken);
      }

      @Override
      public Renderproductissues setAlt(java.lang.String alt) {
        return (Renderproductissues) super.setAlt(alt);
      }

      @Override
      public Renderproductissues setCallback(java.lang.String callback) {
        return (Renderproductissues) super.setCallback(callback);
      }

      @Override
      public Renderproductissues setFields(java.lang.String fields) {
        return (Renderproductissues) super.setFields(fields);
      }

      @Override
      public Renderproductissues setKey(java.lang.String key) {
        return (Renderproductissues) super.setKey(key);
      }

      @Override
      public Renderproductissues setOauthToken(java.lang.String oauthToken) {
        return (Renderproductissues) super.setOauthToken(oauthToken);
      }

      @Override
      public Renderproductissues setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Renderproductissues) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Renderproductissues setQuotaUser(java.lang.String quotaUser) {
        return (Renderproductissues) super.setQuotaUser(quotaUser);
      }

      @Override
      public Renderproductissues setUploadType(java.lang.String uploadType) {
        return (Renderproductissues) super.setUploadType(uploadType);
      }

      @Override
      public Renderproductissues setUploadProtocol(java.lang.String uploadProtocol) {
        return (Renderproductissues) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the product to fetch issues for. Format:
       * `accounts/{account}/products/{product}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the product to fetch issues for. Format:
     `accounts/{account}/products/{product}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the product to fetch issues for. Format:
       * `accounts/{account}/products/{product}`
       */
      public Renderproductissues setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/products/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize an issue resolution content. If not set, the result will be in default language
       * `en-US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize an
     issue resolution content. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize an issue resolution content. If not set, the result will be in default language
       * `en-US`.
       */
      public Renderproductissues setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an
       * issue resolution content. For example 'America/Los_Angeles'. If not set, results will use
       * as a default UTC.
       */
      @com.google.api.client.util.Key
      private java.lang.String timeZone;

      /** Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an issue
     resolution content. For example 'America/Los_Angeles'. If not set, results will use as a default
     UTC.
       */
      public java.lang.String getTimeZone() {
        return timeZone;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in an
       * issue resolution content. For example 'America/Los_Angeles'. If not set, results will use
       * as a default UTC.
       */
      public Renderproductissues setTimeZone(java.lang.String timeZone) {
        this.timeZone = timeZone;
        return this;
      }

      @Override
      public Renderproductissues set(String parameterName, Object value) {
        return (Renderproductissues) super.set(parameterName, value);
      }
    }
    /**
     * Start an action. The action can be requested by a business in third-party application. Before the
     * business can request the action, the third-party application needs to show them action specific
     * content and display a user input form. The action can be successfully started only once all
     * `required` inputs are provided. If any `required` input is missing, or invalid value was
     * provided, the service will return 400 error. Validation errors will contain Ids for all
     * problematic field together with translated, human readable error messages that can be shown to
     * the user.
     *
     * Create a request for the method "issueresolution.triggeraction".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Triggeraction#execute()} method to invoke the remote operation.
     *
     * @param name Required. The business's account that is triggering the action. Format: `accounts/{account}`
     * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionPayload}
     * @return the request
     */
    public Triggeraction triggeraction(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionPayload content) throws java.io.IOException {
      Triggeraction result = new Triggeraction(name, content);
      initialize(result);
      return result;
    }

    public class Triggeraction extends MerchantRequest<com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionResponse> {

      private static final String REST_PATH = "issueresolution/v1beta/{+name}:triggeraction";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Start an action. The action can be requested by a business in third-party application. Before
       * the business can request the action, the third-party application needs to show them action
       * specific content and display a user input form. The action can be successfully started only
       * once all `required` inputs are provided. If any `required` input is missing, or invalid value
       * was provided, the service will return 400 error. Validation errors will contain Ids for all
       * problematic field together with translated, human readable error messages that can be shown to
       * the user.
       *
       * Create a request for the method "issueresolution.triggeraction".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Triggeraction#execute()} method to invoke the remote
       * operation. <p> {@link Triggeraction#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param name Required. The business's account that is triggering the action. Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionPayload}
       * @since 1.13
       */
      protected Triggeraction(java.lang.String name, com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionPayload content) {
        super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.issueresolution_v1beta.model.TriggerActionResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Triggeraction set$Xgafv(java.lang.String $Xgafv) {
        return (Triggeraction) super.set$Xgafv($Xgafv);
      }

      @Override
      public Triggeraction setAccessToken(java.lang.String accessToken) {
        return (Triggeraction) super.setAccessToken(accessToken);
      }

      @Override
      public Triggeraction setAlt(java.lang.String alt) {
        return (Triggeraction) super.setAlt(alt);
      }

      @Override
      public Triggeraction setCallback(java.lang.String callback) {
        return (Triggeraction) super.setCallback(callback);
      }

      @Override
      public Triggeraction setFields(java.lang.String fields) {
        return (Triggeraction) super.setFields(fields);
      }

      @Override
      public Triggeraction setKey(java.lang.String key) {
        return (Triggeraction) super.setKey(key);
      }

      @Override
      public Triggeraction setOauthToken(java.lang.String oauthToken) {
        return (Triggeraction) super.setOauthToken(oauthToken);
      }

      @Override
      public Triggeraction setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Triggeraction) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Triggeraction setQuotaUser(java.lang.String quotaUser) {
        return (Triggeraction) super.setQuotaUser(quotaUser);
      }

      @Override
      public Triggeraction setUploadType(java.lang.String uploadType) {
        return (Triggeraction) super.setUploadType(uploadType);
      }

      @Override
      public Triggeraction setUploadProtocol(java.lang.String uploadProtocol) {
        return (Triggeraction) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The business's account that is triggering the action. Format:
       * `accounts/{account}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The business's account that is triggering the action. Format: `accounts/{account}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The business's account that is triggering the action. Format:
       * `accounts/{account}`
       */
      public Triggeraction setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to
       * localize the response. If not set, the result will be in default language `en-US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to localize
     the response. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to
       * localize the response. If not set, the result will be in default language `en-US`.
       */
      public Triggeraction setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public Triggeraction set(String parameterName, Object value) {
        return (Triggeraction) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Merchant}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Merchant}. */
    @Override
    public Merchant build() {
      return new Merchant(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MerchantRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMerchantRequestInitializer(
        MerchantRequestInitializer merchantRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(merchantRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
