/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chat.v1.model;

/**
 * An event that happens in a specific space.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Chat API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SpaceEvent extends com.google.api.client.json.GenericJson {

  /**
   * Time of the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String eventTime;

  /**
   * Type of the space event. The following event types are supported: * New membership:
   * `google.workspace.chat.membership.v1.created` * Deleted membership:
   * `google.workspace.chat.membership.v1.deleted` * Updated membership:
   * `google.workspace.chat.membership.v1.updated` * New message:
   * `google.workspace.chat.message.v1.created` * Deleted message:
   * `google.workspace.chat.message.v1.deleted` * Updated message:
   * `google.workspace.chat.message.v1.updated` * New reaction:
   * `google.workspace.chat.reaction.v1.created` * Deleted reaction:
   * `google.workspace.chat.reaction.v1.deleted` * Updated space:
   * `google.workspace.chat.space.v1.updated` Note that requesting or subscribing to the preceding
   * event types automatically sets up the subscription or response to also return batched versions
   * of the event type. For example, if you subscribe to
   * `google.workspace.chat.membership.v1.created`, you also receive events for
   * `google.workspace.chat.membership.v1.batchCreated`. For more details see
   * https://developers.google.com/workspace/events/guides/events-chat#output_only_event_types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String eventType;

  /**
   * Payload for batch new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchCreated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipBatchCreatedEventData membershipBatchCreatedEventData;

  /**
   * Payload for batch deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchDeleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipBatchDeletedEventData membershipBatchDeletedEventData;

  /**
   * Payload for batch updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchUpdated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipBatchUpdatedEventData membershipBatchUpdatedEventData;

  /**
   * Payload for new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.created`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipCreatedEventData membershipCreatedEventData;

  /**
   * Payload for deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.deleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipDeletedEventData membershipDeletedEventData;

  /**
   * Payload for updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.updated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipUpdatedEventData membershipUpdatedEventData;

  /**
   * Payload for batch new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchCreated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageBatchCreatedEventData messageBatchCreatedEventData;

  /**
   * Payload for batch deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchDeleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageBatchDeletedEventData messageBatchDeletedEventData;

  /**
   * Payload for batch updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchUpdated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageBatchUpdatedEventData messageBatchUpdatedEventData;

  /**
   * Payload for new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.created`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageCreatedEventData messageCreatedEventData;

  /**
   * Payload for deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.deleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageDeletedEventData messageDeletedEventData;

  /**
   * Payload for updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.updated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MessageUpdatedEventData messageUpdatedEventData;

  /**
   * The resource name of the space event. Format: `spaces/{space}/spaceEvents/{spaceEvent}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Payload for batch new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchCreated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReactionBatchCreatedEventData reactionBatchCreatedEventData;

  /**
   * Payload for batch deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchDeleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReactionBatchDeletedEventData reactionBatchDeletedEventData;

  /**
   * Payload for new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.created`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReactionCreatedEventData reactionCreatedEventData;

  /**
   * Payload for deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.deleted`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReactionDeletedEventData reactionDeletedEventData;

  /**
   * Payload for batch updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.batchUpdated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SpaceBatchUpdatedEventData spaceBatchUpdatedEventData;

  /**
   * Payload for updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.updated`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SpaceUpdatedEventData spaceUpdatedEventData;

  /**
   * Time of the event.
   * @return value or {@code null} for none
   */
  public String getEventTime() {
    return eventTime;
  }

  /**
   * Time of the event.
   * @param eventTime eventTime or {@code null} for none
   */
  public SpaceEvent setEventTime(String eventTime) {
    this.eventTime = eventTime;
    return this;
  }

  /**
   * Type of the space event. The following event types are supported: * New membership:
   * `google.workspace.chat.membership.v1.created` * Deleted membership:
   * `google.workspace.chat.membership.v1.deleted` * Updated membership:
   * `google.workspace.chat.membership.v1.updated` * New message:
   * `google.workspace.chat.message.v1.created` * Deleted message:
   * `google.workspace.chat.message.v1.deleted` * Updated message:
   * `google.workspace.chat.message.v1.updated` * New reaction:
   * `google.workspace.chat.reaction.v1.created` * Deleted reaction:
   * `google.workspace.chat.reaction.v1.deleted` * Updated space:
   * `google.workspace.chat.space.v1.updated` Note that requesting or subscribing to the preceding
   * event types automatically sets up the subscription or response to also return batched versions
   * of the event type. For example, if you subscribe to
   * `google.workspace.chat.membership.v1.created`, you also receive events for
   * `google.workspace.chat.membership.v1.batchCreated`. For more details see
   * https://developers.google.com/workspace/events/guides/events-chat#output_only_event_types.
   * @return value or {@code null} for none
   */
  public java.lang.String getEventType() {
    return eventType;
  }

  /**
   * Type of the space event. The following event types are supported: * New membership:
   * `google.workspace.chat.membership.v1.created` * Deleted membership:
   * `google.workspace.chat.membership.v1.deleted` * Updated membership:
   * `google.workspace.chat.membership.v1.updated` * New message:
   * `google.workspace.chat.message.v1.created` * Deleted message:
   * `google.workspace.chat.message.v1.deleted` * Updated message:
   * `google.workspace.chat.message.v1.updated` * New reaction:
   * `google.workspace.chat.reaction.v1.created` * Deleted reaction:
   * `google.workspace.chat.reaction.v1.deleted` * Updated space:
   * `google.workspace.chat.space.v1.updated` Note that requesting or subscribing to the preceding
   * event types automatically sets up the subscription or response to also return batched versions
   * of the event type. For example, if you subscribe to
   * `google.workspace.chat.membership.v1.created`, you also receive events for
   * `google.workspace.chat.membership.v1.batchCreated`. For more details see
   * https://developers.google.com/workspace/events/guides/events-chat#output_only_event_types.
   * @param eventType eventType or {@code null} for none
   */
  public SpaceEvent setEventType(java.lang.String eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * Payload for batch new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchCreated`.
   * @return value or {@code null} for none
   */
  public MembershipBatchCreatedEventData getMembershipBatchCreatedEventData() {
    return membershipBatchCreatedEventData;
  }

  /**
   * Payload for batch new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchCreated`.
   * @param membershipBatchCreatedEventData membershipBatchCreatedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipBatchCreatedEventData(MembershipBatchCreatedEventData membershipBatchCreatedEventData) {
    this.membershipBatchCreatedEventData = membershipBatchCreatedEventData;
    return this;
  }

  /**
   * Payload for batch deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchDeleted`.
   * @return value or {@code null} for none
   */
  public MembershipBatchDeletedEventData getMembershipBatchDeletedEventData() {
    return membershipBatchDeletedEventData;
  }

  /**
   * Payload for batch deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchDeleted`.
   * @param membershipBatchDeletedEventData membershipBatchDeletedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipBatchDeletedEventData(MembershipBatchDeletedEventData membershipBatchDeletedEventData) {
    this.membershipBatchDeletedEventData = membershipBatchDeletedEventData;
    return this;
  }

  /**
   * Payload for batch updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchUpdated`.
   * @return value or {@code null} for none
   */
  public MembershipBatchUpdatedEventData getMembershipBatchUpdatedEventData() {
    return membershipBatchUpdatedEventData;
  }

  /**
   * Payload for batch updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.batchUpdated`.
   * @param membershipBatchUpdatedEventData membershipBatchUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipBatchUpdatedEventData(MembershipBatchUpdatedEventData membershipBatchUpdatedEventData) {
    this.membershipBatchUpdatedEventData = membershipBatchUpdatedEventData;
    return this;
  }

  /**
   * Payload for new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.created`.
   * @return value or {@code null} for none
   */
  public MembershipCreatedEventData getMembershipCreatedEventData() {
    return membershipCreatedEventData;
  }

  /**
   * Payload for new membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.created`.
   * @param membershipCreatedEventData membershipCreatedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipCreatedEventData(MembershipCreatedEventData membershipCreatedEventData) {
    this.membershipCreatedEventData = membershipCreatedEventData;
    return this;
  }

  /**
   * Payload for deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.deleted`.
   * @return value or {@code null} for none
   */
  public MembershipDeletedEventData getMembershipDeletedEventData() {
    return membershipDeletedEventData;
  }

  /**
   * Payload for deleted membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.deleted`.
   * @param membershipDeletedEventData membershipDeletedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipDeletedEventData(MembershipDeletedEventData membershipDeletedEventData) {
    this.membershipDeletedEventData = membershipDeletedEventData;
    return this;
  }

  /**
   * Payload for updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.updated`.
   * @return value or {@code null} for none
   */
  public MembershipUpdatedEventData getMembershipUpdatedEventData() {
    return membershipUpdatedEventData;
  }

  /**
   * Payload for updated membership events where the `EventType` field is
   * `google.workspace.chat.membership.v1.updated`.
   * @param membershipUpdatedEventData membershipUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setMembershipUpdatedEventData(MembershipUpdatedEventData membershipUpdatedEventData) {
    this.membershipUpdatedEventData = membershipUpdatedEventData;
    return this;
  }

  /**
   * Payload for batch new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchCreated`.
   * @return value or {@code null} for none
   */
  public MessageBatchCreatedEventData getMessageBatchCreatedEventData() {
    return messageBatchCreatedEventData;
  }

  /**
   * Payload for batch new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchCreated`.
   * @param messageBatchCreatedEventData messageBatchCreatedEventData or {@code null} for none
   */
  public SpaceEvent setMessageBatchCreatedEventData(MessageBatchCreatedEventData messageBatchCreatedEventData) {
    this.messageBatchCreatedEventData = messageBatchCreatedEventData;
    return this;
  }

  /**
   * Payload for batch deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchDeleted`.
   * @return value or {@code null} for none
   */
  public MessageBatchDeletedEventData getMessageBatchDeletedEventData() {
    return messageBatchDeletedEventData;
  }

  /**
   * Payload for batch deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchDeleted`.
   * @param messageBatchDeletedEventData messageBatchDeletedEventData or {@code null} for none
   */
  public SpaceEvent setMessageBatchDeletedEventData(MessageBatchDeletedEventData messageBatchDeletedEventData) {
    this.messageBatchDeletedEventData = messageBatchDeletedEventData;
    return this;
  }

  /**
   * Payload for batch updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchUpdated`.
   * @return value or {@code null} for none
   */
  public MessageBatchUpdatedEventData getMessageBatchUpdatedEventData() {
    return messageBatchUpdatedEventData;
  }

  /**
   * Payload for batch updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.batchUpdated`.
   * @param messageBatchUpdatedEventData messageBatchUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setMessageBatchUpdatedEventData(MessageBatchUpdatedEventData messageBatchUpdatedEventData) {
    this.messageBatchUpdatedEventData = messageBatchUpdatedEventData;
    return this;
  }

  /**
   * Payload for new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.created`.
   * @return value or {@code null} for none
   */
  public MessageCreatedEventData getMessageCreatedEventData() {
    return messageCreatedEventData;
  }

  /**
   * Payload for new message events where the `EventType` field is
   * `google.workspace.chat.message.v1.created`.
   * @param messageCreatedEventData messageCreatedEventData or {@code null} for none
   */
  public SpaceEvent setMessageCreatedEventData(MessageCreatedEventData messageCreatedEventData) {
    this.messageCreatedEventData = messageCreatedEventData;
    return this;
  }

  /**
   * Payload for deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.deleted`.
   * @return value or {@code null} for none
   */
  public MessageDeletedEventData getMessageDeletedEventData() {
    return messageDeletedEventData;
  }

  /**
   * Payload for deleted message events where the `EventType` field is
   * `google.workspace.chat.message.v1.deleted`.
   * @param messageDeletedEventData messageDeletedEventData or {@code null} for none
   */
  public SpaceEvent setMessageDeletedEventData(MessageDeletedEventData messageDeletedEventData) {
    this.messageDeletedEventData = messageDeletedEventData;
    return this;
  }

  /**
   * Payload for updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.updated`.
   * @return value or {@code null} for none
   */
  public MessageUpdatedEventData getMessageUpdatedEventData() {
    return messageUpdatedEventData;
  }

  /**
   * Payload for updated message events where the `EventType` field is
   * `google.workspace.chat.message.v1.updated`.
   * @param messageUpdatedEventData messageUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setMessageUpdatedEventData(MessageUpdatedEventData messageUpdatedEventData) {
    this.messageUpdatedEventData = messageUpdatedEventData;
    return this;
  }

  /**
   * The resource name of the space event. Format: `spaces/{space}/spaceEvents/{spaceEvent}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the space event. Format: `spaces/{space}/spaceEvents/{spaceEvent}`
   * @param name name or {@code null} for none
   */
  public SpaceEvent setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Payload for batch new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchCreated`.
   * @return value or {@code null} for none
   */
  public ReactionBatchCreatedEventData getReactionBatchCreatedEventData() {
    return reactionBatchCreatedEventData;
  }

  /**
   * Payload for batch new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchCreated`.
   * @param reactionBatchCreatedEventData reactionBatchCreatedEventData or {@code null} for none
   */
  public SpaceEvent setReactionBatchCreatedEventData(ReactionBatchCreatedEventData reactionBatchCreatedEventData) {
    this.reactionBatchCreatedEventData = reactionBatchCreatedEventData;
    return this;
  }

  /**
   * Payload for batch deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchDeleted`.
   * @return value or {@code null} for none
   */
  public ReactionBatchDeletedEventData getReactionBatchDeletedEventData() {
    return reactionBatchDeletedEventData;
  }

  /**
   * Payload for batch deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.batchDeleted`.
   * @param reactionBatchDeletedEventData reactionBatchDeletedEventData or {@code null} for none
   */
  public SpaceEvent setReactionBatchDeletedEventData(ReactionBatchDeletedEventData reactionBatchDeletedEventData) {
    this.reactionBatchDeletedEventData = reactionBatchDeletedEventData;
    return this;
  }

  /**
   * Payload for new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.created`.
   * @return value or {@code null} for none
   */
  public ReactionCreatedEventData getReactionCreatedEventData() {
    return reactionCreatedEventData;
  }

  /**
   * Payload for new reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.created`.
   * @param reactionCreatedEventData reactionCreatedEventData or {@code null} for none
   */
  public SpaceEvent setReactionCreatedEventData(ReactionCreatedEventData reactionCreatedEventData) {
    this.reactionCreatedEventData = reactionCreatedEventData;
    return this;
  }

  /**
   * Payload for deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.deleted`.
   * @return value or {@code null} for none
   */
  public ReactionDeletedEventData getReactionDeletedEventData() {
    return reactionDeletedEventData;
  }

  /**
   * Payload for deleted reaction events where the `EventType` field is
   * `google.workspace.chat.reaction.v1.deleted`.
   * @param reactionDeletedEventData reactionDeletedEventData or {@code null} for none
   */
  public SpaceEvent setReactionDeletedEventData(ReactionDeletedEventData reactionDeletedEventData) {
    this.reactionDeletedEventData = reactionDeletedEventData;
    return this;
  }

  /**
   * Payload for batch updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.batchUpdated`.
   * @return value or {@code null} for none
   */
  public SpaceBatchUpdatedEventData getSpaceBatchUpdatedEventData() {
    return spaceBatchUpdatedEventData;
  }

  /**
   * Payload for batch updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.batchUpdated`.
   * @param spaceBatchUpdatedEventData spaceBatchUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setSpaceBatchUpdatedEventData(SpaceBatchUpdatedEventData spaceBatchUpdatedEventData) {
    this.spaceBatchUpdatedEventData = spaceBatchUpdatedEventData;
    return this;
  }

  /**
   * Payload for updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.updated`.
   * @return value or {@code null} for none
   */
  public SpaceUpdatedEventData getSpaceUpdatedEventData() {
    return spaceUpdatedEventData;
  }

  /**
   * Payload for updated space events where the `EventType` field is
   * `google.workspace.chat.space.v1.updated`.
   * @param spaceUpdatedEventData spaceUpdatedEventData or {@code null} for none
   */
  public SpaceEvent setSpaceUpdatedEventData(SpaceUpdatedEventData spaceUpdatedEventData) {
    this.spaceUpdatedEventData = spaceUpdatedEventData;
    return this;
  }

  @Override
  public SpaceEvent set(String fieldName, Object value) {
    return (SpaceEvent) super.set(fieldName, value);
  }

  @Override
  public SpaceEvent clone() {
    return (SpaceEvent) super.clone();
  }

}
