/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.playablelocations.v3.model;

/**
 * Life of a query: - When a game starts in a new location, your game server issues a
 * SamplePlayableLocations request. The request specifies the S2 cell, and contains one or more
 * "criteria" for filtering: - Criterion 0: i locations for long-lived bases, or level 0 monsters,
 * or... - Criterion 1: j locations for short-lived bases, or level 1 monsters, ... - Criterion 2: k
 * locations for random objects. - etc (up to 5 criterion may be specified). `PlayableLocationList`
 * will then contain mutually exclusive lists of `PlayableLocation` objects that satisfy each of the
 * criteria. Think of it as a collection of real-world locations that you can then associate with
 * your game state. Note: These points are impermanent in nature. E.g, parks can close, and places
 * can be removed. The response specifies how long you can expect the playable locations to last.
 * Once they expire, you should query the `samplePlayableLocations` API again to get a fresh view of
 * the real world.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Playable Locations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. Specifies the area to search within for playable locations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlayablelocationsV3SampleAreaFilter areaFilter;

  /**
   * Required. Specifies one or more (up to 5) criteria for filtering the returned playable
   * locations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleMapsPlayablelocationsV3SampleCriterion> criteria;

  static {
    // hack to force ProGuard to consider GoogleMapsPlayablelocationsV3SampleCriterion used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleMapsPlayablelocationsV3SampleCriterion.class);
  }

  /**
   * Required. Specifies the area to search within for playable locations.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3SampleAreaFilter getAreaFilter() {
    return areaFilter;
  }

  /**
   * Required. Specifies the area to search within for playable locations.
   * @param areaFilter areaFilter or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest setAreaFilter(GoogleMapsPlayablelocationsV3SampleAreaFilter areaFilter) {
    this.areaFilter = areaFilter;
    return this;
  }

  /**
   * Required. Specifies one or more (up to 5) criteria for filtering the returned playable
   * locations.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleMapsPlayablelocationsV3SampleCriterion> getCriteria() {
    return criteria;
  }

  /**
   * Required. Specifies one or more (up to 5) criteria for filtering the returned playable
   * locations.
   * @param criteria criteria or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest setCriteria(java.util.List<GoogleMapsPlayablelocationsV3SampleCriterion> criteria) {
    this.criteria = criteria;
    return this;
  }

  @Override
  public GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest set(String fieldName, Object value) {
    return (GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest clone() {
    return (GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest) super.clone();
  }

}
