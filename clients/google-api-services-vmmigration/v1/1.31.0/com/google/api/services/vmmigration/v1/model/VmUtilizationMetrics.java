/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1.model;

/**
 * Utilization metrics values for a single VM.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VM Migration API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VmUtilizationMetrics extends com.google.api.client.json.GenericJson {

  /**
   * Average CPU usage, percent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer cpuAveragePercent;

  /**
   * Max CPU usage, percent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer cpuMaxPercent;

  /**
   * Average disk IO rate, in kilobytes per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long diskIoRateAverageKbps;

  /**
   * Max disk IO rate, in kilobytes per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long diskIoRateMaxKbps;

  /**
   * Average memory usage, percent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memoryAveragePercent;

  /**
   * Max memory usage, percent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memoryMaxPercent;

  /**
   * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per
   * second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long networkThroughputAverageKbps;

  /**
   * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long networkThroughputMaxKbps;

  /**
   * Average CPU usage, percent.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCpuAveragePercent() {
    return cpuAveragePercent;
  }

  /**
   * Average CPU usage, percent.
   * @param cpuAveragePercent cpuAveragePercent or {@code null} for none
   */
  public VmUtilizationMetrics setCpuAveragePercent(java.lang.Integer cpuAveragePercent) {
    this.cpuAveragePercent = cpuAveragePercent;
    return this;
  }

  /**
   * Max CPU usage, percent.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCpuMaxPercent() {
    return cpuMaxPercent;
  }

  /**
   * Max CPU usage, percent.
   * @param cpuMaxPercent cpuMaxPercent or {@code null} for none
   */
  public VmUtilizationMetrics setCpuMaxPercent(java.lang.Integer cpuMaxPercent) {
    this.cpuMaxPercent = cpuMaxPercent;
    return this;
  }

  /**
   * Average disk IO rate, in kilobytes per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDiskIoRateAverageKbps() {
    return diskIoRateAverageKbps;
  }

  /**
   * Average disk IO rate, in kilobytes per second.
   * @param diskIoRateAverageKbps diskIoRateAverageKbps or {@code null} for none
   */
  public VmUtilizationMetrics setDiskIoRateAverageKbps(java.lang.Long diskIoRateAverageKbps) {
    this.diskIoRateAverageKbps = diskIoRateAverageKbps;
    return this;
  }

  /**
   * Max disk IO rate, in kilobytes per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDiskIoRateMaxKbps() {
    return diskIoRateMaxKbps;
  }

  /**
   * Max disk IO rate, in kilobytes per second.
   * @param diskIoRateMaxKbps diskIoRateMaxKbps or {@code null} for none
   */
  public VmUtilizationMetrics setDiskIoRateMaxKbps(java.lang.Long diskIoRateMaxKbps) {
    this.diskIoRateMaxKbps = diskIoRateMaxKbps;
    return this;
  }

  /**
   * Average memory usage, percent.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemoryAveragePercent() {
    return memoryAveragePercent;
  }

  /**
   * Average memory usage, percent.
   * @param memoryAveragePercent memoryAveragePercent or {@code null} for none
   */
  public VmUtilizationMetrics setMemoryAveragePercent(java.lang.Integer memoryAveragePercent) {
    this.memoryAveragePercent = memoryAveragePercent;
    return this;
  }

  /**
   * Max memory usage, percent.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemoryMaxPercent() {
    return memoryMaxPercent;
  }

  /**
   * Max memory usage, percent.
   * @param memoryMaxPercent memoryMaxPercent or {@code null} for none
   */
  public VmUtilizationMetrics setMemoryMaxPercent(java.lang.Integer memoryMaxPercent) {
    this.memoryMaxPercent = memoryMaxPercent;
    return this;
  }

  /**
   * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per
   * second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNetworkThroughputAverageKbps() {
    return networkThroughputAverageKbps;
  }

  /**
   * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per
   * second.
   * @param networkThroughputAverageKbps networkThroughputAverageKbps or {@code null} for none
   */
  public VmUtilizationMetrics setNetworkThroughputAverageKbps(java.lang.Long networkThroughputAverageKbps) {
    this.networkThroughputAverageKbps = networkThroughputAverageKbps;
    return this;
  }

  /**
   * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNetworkThroughputMaxKbps() {
    return networkThroughputMaxKbps;
  }

  /**
   * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
   * @param networkThroughputMaxKbps networkThroughputMaxKbps or {@code null} for none
   */
  public VmUtilizationMetrics setNetworkThroughputMaxKbps(java.lang.Long networkThroughputMaxKbps) {
    this.networkThroughputMaxKbps = networkThroughputMaxKbps;
    return this;
  }

  @Override
  public VmUtilizationMetrics set(String fieldName, Object value) {
    return (VmUtilizationMetrics) super.set(fieldName, value);
  }

  @Override
  public VmUtilizationMetrics clone() {
    return (VmUtilizationMetrics) super.clone();
  }

}
