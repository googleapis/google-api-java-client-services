/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.adsensehost.model;

/**
 * Model definition for AssociationSession.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AdSense Host API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssociationSession extends com.google.api.client.json.GenericJson {

  /**
   * Hosted account id of the associated publisher after association. Present if status is ACCEPTED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountId;

  /**
   * Unique identifier of this association session.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Kind of resource this is, in this case adsensehost#associationSession.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The products to associate with the user. Options: AFC, AFG, AFV, AFS (deprecated), AFMC
   * (deprecated)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> productCodes;

  /**
   * Redirect URL of this association session. Used to redirect users into the AdSense association
   * flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String redirectUrl;

  /**
   * Status of the completed association, available once the association callback token has been
   * verified. One of ACCEPTED, REJECTED, or ERROR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * The preferred locale of the user themselves when going through the AdSense association flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userLocale;

  /**
   * The locale of the user's hosted website.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String websiteLocale;

  /**
   * The URL of the user's hosted website.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String websiteUrl;

  /**
   * Hosted account id of the associated publisher after association. Present if status is ACCEPTED.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountId() {
    return accountId;
  }

  /**
   * Hosted account id of the associated publisher after association. Present if status is ACCEPTED.
   * @param accountId accountId or {@code null} for none
   */
  public AssociationSession setAccountId(java.lang.String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Unique identifier of this association session.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Unique identifier of this association session.
   * @param id id or {@code null} for none
   */
  public AssociationSession setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Kind of resource this is, in this case adsensehost#associationSession.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Kind of resource this is, in this case adsensehost#associationSession.
   * @param kind kind or {@code null} for none
   */
  public AssociationSession setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The products to associate with the user. Options: AFC, AFG, AFV, AFS (deprecated), AFMC
   * (deprecated)
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProductCodes() {
    return productCodes;
  }

  /**
   * The products to associate with the user. Options: AFC, AFG, AFV, AFS (deprecated), AFMC
   * (deprecated)
   * @param productCodes productCodes or {@code null} for none
   */
  public AssociationSession setProductCodes(java.util.List<java.lang.String> productCodes) {
    this.productCodes = productCodes;
    return this;
  }

  /**
   * Redirect URL of this association session. Used to redirect users into the AdSense association
   * flow.
   * @return value or {@code null} for none
   */
  public java.lang.String getRedirectUrl() {
    return redirectUrl;
  }

  /**
   * Redirect URL of this association session. Used to redirect users into the AdSense association
   * flow.
   * @param redirectUrl redirectUrl or {@code null} for none
   */
  public AssociationSession setRedirectUrl(java.lang.String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

  /**
   * Status of the completed association, available once the association callback token has been
   * verified. One of ACCEPTED, REJECTED, or ERROR.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Status of the completed association, available once the association callback token has been
   * verified. One of ACCEPTED, REJECTED, or ERROR.
   * @param status status or {@code null} for none
   */
  public AssociationSession setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * The preferred locale of the user themselves when going through the AdSense association flow.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserLocale() {
    return userLocale;
  }

  /**
   * The preferred locale of the user themselves when going through the AdSense association flow.
   * @param userLocale userLocale or {@code null} for none
   */
  public AssociationSession setUserLocale(java.lang.String userLocale) {
    this.userLocale = userLocale;
    return this;
  }

  /**
   * The locale of the user's hosted website.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebsiteLocale() {
    return websiteLocale;
  }

  /**
   * The locale of the user's hosted website.
   * @param websiteLocale websiteLocale or {@code null} for none
   */
  public AssociationSession setWebsiteLocale(java.lang.String websiteLocale) {
    this.websiteLocale = websiteLocale;
    return this;
  }

  /**
   * The URL of the user's hosted website.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebsiteUrl() {
    return websiteUrl;
  }

  /**
   * The URL of the user's hosted website.
   * @param websiteUrl websiteUrl or {@code null} for none
   */
  public AssociationSession setWebsiteUrl(java.lang.String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  @Override
  public AssociationSession set(String fieldName, Object value) {
    return (AssociationSession) super.set(fieldName, value);
  }

  @Override
  public AssociationSession clone() {
    return (AssociationSession) super.clone();
  }

}
