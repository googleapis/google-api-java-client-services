{
  "resources": {
    "projects": {
      "resources": {
        "subscriptions": {
          "methods": {
            "setIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "pubsub.projects.subscriptions.setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy."
            },
            "modifyAckDeadline": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyAckDeadline",
              "path": "v1/{+subscription}:modifyAckDeadline",
              "id": "pubsub.projects.subscriptions.modifyAckDeadline",
              "request": {
                "$ref": "ModifyAckDeadlineRequest"
              },
              "description": "Modifies the ack deadline for a specific message. This method is useful\nto indicate that more time is needed to process a message by the\nsubscriber, or to make the message available for redelivery if the\nprocessing was interrupted. Note that this does not modify the\nsubscription-level `ackDeadlineSeconds` used for subsequent messages.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST"
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "pubsub.projects.subscriptions.getIamPolicy"
            },
            "pull": {
              "path": "v1/{+subscription}:pull",
              "id": "pubsub.projects.subscriptions.pull",
              "request": {
                "$ref": "PullRequest"
              },
              "description": "Pulls messages from the server. The server may return `UNAVAILABLE` if\nthere are too many concurrent pull requests pending for the given\nsubscription.",
              "response": {
                "$ref": "PullResponse"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "description": "The subscription from which messages should be pulled.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:pull"
            },
            "list": {
              "path": "v1/{+project}/subscriptions",
              "id": "pubsub.projects.subscriptions.list",
              "description": "Lists matching subscriptions.",
              "response": {
                "$ref": "ListSubscriptionsResponse"
              },
              "parameterOrder": [
                "project"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "pageToken": {
                  "description": "The value returned by the last `ListSubscriptionsResponse`; indicates that\nthis is a continuation of a prior `ListSubscriptions` call, and that the\nsystem should return the next page of data.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of subscriptions to return.",
                  "format": "int32",
                  "type": "integer"
                },
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The name of the project in which to list subscriptions.\nFormat is `projects/{project-id}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions"
            },
            "create": {
              "parameters": {
                "name": {
                  "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.subscriptions.create",
              "description": "Creates a subscription to a given topic. See the\n\u003ca href=\"https://cloud.google.com/pubsub/docs/admin#resource_names\"\u003e\nresource name rules\u003c/a\u003e.\nIf the subscription already exists, returns `ALREADY_EXISTS`.\nIf the corresponding topic doesn't exist, returns `NOT_FOUND`.\n\nIf the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic, conforming\nto the\n[resource name\nformat](https://cloud.google.com/pubsub/docs/admin#resource_names). The\ngenerated name is populated in the returned Subscription object. Note that\nfor REST API requests, you must specify a name in the request.",
              "request": {
                "$ref": "Subscription"
              },
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT"
            },
            "acknowledge": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The subscription whose message is being acknowledged.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:acknowledge",
              "id": "pubsub.projects.subscriptions.acknowledge",
              "path": "v1/{+subscription}:acknowledge",
              "request": {
                "$ref": "AcknowledgeRequest"
              },
              "description": "Acknowledges the messages associated with the `ack_ids` in the\n`AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages\nfrom the subscription.\n\nAcknowledging a message whose ack deadline has expired may succeed,\nbut such a message may be redelivered later. Acknowledging a message more\nthan once will not result in an error.",
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "Empty"
              }
            },
            "get": {
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription to get.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "path": "v1/{+subscription}",
              "id": "pubsub.projects.subscriptions.get",
              "description": "Gets the configuration details of a subscription."
            },
            "patch": {
              "path": "v1/{+name}",
              "id": "pubsub.projects.subscriptions.patch",
              "request": {
                "$ref": "UpdateSubscriptionRequest"
              },
              "description": "Updates an existing subscription. Note that certain properties of a\nsubscription, such as its topic, are not modifiable.",
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}"
            },
            "testIamPermissions": {
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "id": "pubsub.projects.subscriptions.testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "modifyPushConfig": {
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "subscription": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyPushConfig",
              "id": "pubsub.projects.subscriptions.modifyPushConfig",
              "path": "v1/{+subscription}:modifyPushConfig",
              "description": "Modifies the `PushConfig` for a specified subscription.\n\nThis may be used to change a push subscription to a pull one (signified by\nan empty `PushConfig`) or vice versa, or change the endpoint URL and other\nattributes of a push subscription. Messages will accumulate for delivery\ncontinuously through the call regardless of changes to the `PushConfig`.",
              "request": {
                "$ref": "ModifyPushConfigRequest"
              }
            },
            "seek": {
              "description": "Seeks an existing subscription to a point in time or to a given snapshot,\nwhichever is provided in the request. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot. Note that both the subscription and the snapshot\nmust be on the same topic.",
              "request": {
                "$ref": "SeekRequest"
              },
              "response": {
                "$ref": "SeekResponse"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "parameters": {
                "subscription": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The subscription to affect.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:seek",
              "path": "v1/{+subscription}:seek",
              "id": "pubsub.projects.subscriptions.seek"
            },
            "delete": {
              "description": "Deletes an existing subscription. All messages retained in the subscription\nare immediately dropped. Calls to `Pull` after deletion will return\n`NOT_FOUND`. After a subscription is deleted, a new one may be created with\nthe same name, but the new one has no association with the old\nsubscription or its topic unless the same topic is specified.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "subscription": {
                  "description": "The subscription to delete.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "path": "v1/{+subscription}",
              "id": "pubsub.projects.subscriptions.delete"
            }
          }
        },
        "snapshots": {
          "methods": {
            "delete": {
              "description": "Removes an existing snapshot. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.\u003cbr\u003e\u003cbr\u003e\nWhen the snapshot is deleted, all messages retained in the snapshot\nare immediately dropped. After a snapshot is deleted, a new one may be\ncreated with the same name, but the new one has no association with the old\nsnapshot or its subscription, unless the same subscription is specified.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "snapshot"
              ],
              "parameters": {
                "snapshot": {
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path",
                  "description": "The name of the snapshot to delete.\nFormat is `projects/{project}/snapshots/{snap}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "id": "pubsub.projects.snapshots.delete",
              "path": "v1/{+snapshot}"
            },
            "list": {
              "description": "Lists the existing snapshots. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.",
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "parameterOrder": [
                "project"
              ],
              "httpMethod": "GET",
              "parameters": {
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The name of the project in which to list snapshots.\nFormat is `projects/{project-id}`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value returned by the last `ListSnapshotsResponse`; indicates that this\nis a continuation of a prior `ListSnapshots` call, and that the system\nshould return the next page of data.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of snapshots to return.",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots",
              "path": "v1/{+project}/snapshots",
              "id": "pubsub.projects.snapshots.list"
            },
            "create": {
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path",
                  "description": "Optional user-provided name for this snapshot.\nIf the name is not provided in the request, the server will assign a random\nname for this snapshot on the same project as the subscription.\nNote that for REST API requests, you must specify a name.  See the\n\u003ca href=\"https://cloud.google.com/pubsub/docs/admin#resource_names\"\u003e\nresource name rules\u003c/a\u003e.\nFormat is `projects/{project}/snapshots/{snap}`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.snapshots.create",
              "description": "Creates a snapshot from the requested subscription. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.\n\u003cbr\u003e\u003cbr\u003eIf the snapshot already exists, returns `ALREADY_EXISTS`.\nIf the requested subscription doesn't exist, returns `NOT_FOUND`.\nIf the backlog in the subscription is too old -- and the resulting snapshot\nwould expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.\nSee also the `Snapshot.expire_time` field. If the name is not provided in\nthe request, the server will assign a random\nname for this snapshot on the same project as the subscription, conforming\nto the\n[resource name\nformat](https://cloud.google.com/pubsub/docs/admin#resource_names). The\ngenerated name is populated in the returned Snapshot object. Note that for\nREST API requests, you must specify a name in the request.",
              "request": {
                "$ref": "CreateSnapshotRequest"
              }
            },
            "setIamPolicy": {
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "Policy"
              },
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:setIamPolicy",
              "id": "pubsub.projects.snapshots.setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy"
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "pubsub.projects.snapshots.getIamPolicy"
            },
            "get": {
              "description": "Gets the configuration details of a snapshot. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow you to manage message acknowledgments in bulk. That\nis, you can set the acknowledgment state of messages in an existing\nsubscription to the state captured by a snapshot.",
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "snapshot"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "snapshot": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path",
                  "description": "The name of the snapshot to get.\nFormat is `projects/{project}/snapshots/{snap}`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "path": "v1/{+snapshot}",
              "id": "pubsub.projects.snapshots.get"
            },
            "patch": {
              "description": "Updates an existing snapshot. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.",
              "request": {
                "$ref": "UpdateSnapshotRequest"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Snapshot"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the snapshot.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "id": "pubsub.projects.snapshots.patch",
              "path": "v1/{+name}"
            },
            "testIamPermissions": {
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "id": "pubsub.projects.snapshots.testIamPermissions"
            }
          }
        },
        "topics": {
          "methods": {
            "getIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "pubsub.projects.topics.getIamPolicy",
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
            },
            "patch": {
              "request": {
                "$ref": "UpdateTopicRequest"
              },
              "description": "Updates an existing topic. Note that certain properties of a\ntopic are not modifiable.",
              "response": {
                "$ref": "Topic"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.topics.patch"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "topic": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "description": "The name of the topic to get.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+topic}",
              "id": "pubsub.projects.topics.get",
              "description": "Gets the configuration of a topic.",
              "response": {
                "$ref": "Topic"
              },
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "GET"
            },
            "publish": {
              "response": {
                "$ref": "PublishResponse"
              },
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "topic": {
                  "location": "path",
                  "description": "The messages in the request will be published on this topic.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:publish",
              "path": "v1/{+topic}:publish",
              "id": "pubsub.projects.topics.publish",
              "request": {
                "$ref": "PublishRequest"
              },
              "description": "Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic\ndoes not exist."
            },
            "testIamPermissions": {
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "id": "pubsub.projects.topics.testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "delete": {
              "parameters": {
                "topic": {
                  "location": "path",
                  "description": "Name of the topic to delete.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+topic}",
              "id": "pubsub.projects.topics.delete",
              "description": "Deletes the topic with the given name. Returns `NOT_FOUND` if the topic\ndoes not exist. After a topic is deleted, a new topic may be created with\nthe same name; this is an entirely new topic with none of the old\nconfiguration or subscriptions. Existing subscriptions to this topic are\nnot deleted, but their `topic` field is set to `_deleted-topic_`.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "DELETE"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/topics",
              "path": "v1/{+project}/topics",
              "id": "pubsub.projects.topics.list",
              "description": "Lists matching topics.",
              "response": {
                "$ref": "ListTopicsResponse"
              },
              "parameterOrder": [
                "project"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "project": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The name of the project in which to list topics.\nFormat is `projects/{project-id}`."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value returned by the last `ListTopicsResponse`; indicates that this is\na continuation of a prior `ListTopics` call, and that the system should\nreturn the next page of data.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of topics to return.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "setIamPolicy": {
              "path": "v1/{+resource}:setIamPolicy",
              "id": "pubsub.projects.topics.setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:setIamPolicy"
            },
            "create": {
              "response": {
                "$ref": "Topic"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.topics.create",
              "description": "Creates the given topic with the given name. See the\n\u003ca href=\"https://cloud.google.com/pubsub/docs/admin#resource_names\"\u003e\nresource name rules\u003c/a\u003e.",
              "request": {
                "$ref": "Topic"
              }
            }
          },
          "resources": {
            "subscriptions": {
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/topics/{topicsId}/subscriptions",
                  "path": "v1/{+topic}/subscriptions",
                  "id": "pubsub.projects.topics.subscriptions.list",
                  "description": "Lists the names of the subscriptions on this topic.",
                  "response": {
                    "$ref": "ListTopicSubscriptionsResponse"
                  },
                  "parameterOrder": [
                    "topic"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListTopicSubscriptionsResponse`; indicates\nthat this is a continuation of a prior `ListTopicSubscriptions` call, and\nthat the system should return the next page of data."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of subscription names to return.",
                      "format": "int32"
                    },
                    "topic": {
                      "pattern": "^projects/[^/]+/topics/[^/]+$",
                      "location": "path",
                      "description": "The name of the topic that subscriptions are attached to.\nFormat is `projects/{project}/topics/{topic}`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/pubsub"
                  ]
                }
              }
            },
            "snapshots": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListTopicSnapshotsResponse"
                  },
                  "parameterOrder": [
                    "topic"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/pubsub"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListTopicSnapshotsResponse`; indicates\nthat this is a continuation of a prior `ListTopicSnapshots` call, and\nthat the system should return the next page of data.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of snapshot names to return.",
                      "format": "int32"
                    },
                    "topic": {
                      "location": "path",
                      "description": "The name of the topic that snapshots are attached to.\nFormat is `projects/{project}/topics/{topic}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/topics/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/topics/{topicsId}/snapshots",
                  "path": "v1/{+topic}/snapshots",
                  "id": "pubsub.projects.topics.snapshots.list",
                  "description": "Lists the names of the snapshots on this topic. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot."
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    }
  },
  "schemas": {
    "UpdateSnapshotRequest": {
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "Indicates which fields in the provided snapshot to update.\nMust be specified and non-empty.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "snapshot": {
          "$ref": "Snapshot",
          "description": "The updated snapshot object."
        }
      },
      "id": "UpdateSnapshotRequest",
      "description": "Request for the UpdateSnapshot method."
    },
    "ListSubscriptionsResponse": {
      "description": "Response for the `ListSubscriptions` method.",
      "type": "object",
      "properties": {
        "subscriptions": {
          "description": "The subscriptions that match the request.",
          "type": "array",
          "items": {
            "$ref": "Subscription"
          }
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListSubscriptionsRequest` to get more subscriptions.",
          "type": "string"
        }
      },
      "id": "ListSubscriptionsResponse"
    },
    "ListSnapshotsResponse": {
      "description": "Response for the `ListSnapshots` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more snapshot that match the\nrequest; this value should be passed in a new `ListSnapshotsRequest`.",
          "type": "string"
        },
        "snapshots": {
          "description": "The resulting snapshots.",
          "type": "array",
          "items": {
            "$ref": "Snapshot"
          }
        }
      },
      "id": "ListSnapshotsResponse"
    },
    "MessageStoragePolicy": {
      "type": "object",
      "properties": {
        "allowedPersistenceRegions": {
          "description": "The list of GCP region IDs where messages that are published to the topic\nmay be persisted in storage. Messages published by publishers running in\nnon-allowed GCP regions (or running outside of GCP altogether) will be\nrouted for storage in one of the allowed regions. An empty list indicates a\nmisconfiguration at the project or organization level, which will result in\nall Publish operations failing.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "MessageStoragePolicy"
    },
    "CreateSnapshotRequest": {
      "description": "Request for the `CreateSnapshot` method.",
      "type": "object",
      "properties": {
        "subscription": {
          "description": "The subscription whose backlog the snapshot retains.\nSpecifically, the created snapshot is guaranteed to retain:\n (a) The existing backlog on the subscription. More precisely, this is\n     defined as the messages in the subscription's backlog that are\n     unacknowledged upon the successful completion of the\n     `CreateSnapshot` request; as well as:\n (b) Any messages published to the subscription's topic following the\n     successful completion of the CreateSnapshot request.\nFormat is `projects/{project}/subscriptions/{sub}`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e.",
          "type": "object"
        }
      },
      "id": "CreateSnapshotRequest"
    },
    "ListTopicSnapshotsResponse": {
      "description": "Response for the `ListTopicSnapshots` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more snapshots that match\nthe request; this value should be passed in a new\n`ListTopicSnapshotsRequest` to get more snapshots.",
          "type": "string"
        },
        "snapshots": {
          "description": "The names of the snapshots that match the request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListTopicSnapshotsResponse"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "Topic": {
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "The resource name of the Cloud KMS CryptoKey to be used to protect access\nto messages published on this topic.\n\nThe expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e."
        },
        "messageStoragePolicy": {
          "description": "Policy constraining how messages published to the topic may be stored. It\nis determined when the topic is created based on the policy configured at\nthe project level. It must not be set by the caller in the request to\nCreateTopic or to UpdateTopic. This field will be populated in the\nresponses for GetTopic, CreateTopic, and UpdateTopic: if not present in the\nresponse, then no constraints are in effect.",
          "$ref": "MessageStoragePolicy"
        },
        "name": {
          "description": "The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
          "type": "string"
        }
      },
      "id": "Topic",
      "description": "A topic resource."
    },
    "Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).",
      "type": "object",
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "version": {
          "description": "Deprecated.",
          "format": "int32",
          "type": "integer"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      },
      "id": "Policy"
    },
    "OidcToken": {
      "id": "OidcToken",
      "description": "Contains information needed for generating an\n[OpenID Connect\ntoken](https://developers.google.com/identity/protocols/OpenIDConnect).",
      "type": "object",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience to be used when generating OIDC token. The audience claim\nidentifies the recipients that the JWT is intended for. The audience\nvalue is a single case-sensitive string. Having multiple values (array)\nfor the audience field is not supported. More info about the OIDC JWT\ntoken audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3\nNote: if not specified, the Push endpoint URL will be used."
        },
        "serviceAccountEmail": {
          "description": "[Service account\nemail](https://cloud.google.com/iam/docs/service-accounts)\nto be used for generating the OIDC token. The caller (for\nCreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must\nhave the iam.serviceAccounts.actAs permission for the service account.",
          "type": "string"
        }
      }
    },
    "UpdateTopicRequest": {
      "description": "Request for the UpdateTopic method.",
      "type": "object",
      "properties": {
        "updateMask": {
          "type": "string",
          "description": "Indicates which fields in the provided topic to update. Must be specified\nand non-empty. Note that if `update_mask` contains\n\"message_storage_policy\" then the new value will be determined based on the\npolicy configured at the project or organization level. The\n`message_storage_policy` must not be set in the `topic` provided above.",
          "format": "google-fieldmask"
        },
        "topic": {
          "$ref": "Topic",
          "description": "The updated topic object."
        }
      },
      "id": "UpdateTopicRequest"
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "Binding"
    },
    "Expr": {
      "type": "object",
      "properties": {
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        }
      },
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\""
    },
    "SeekRequest": {
      "description": "Request for the `Seek` method.",
      "type": "object",
      "properties": {
        "snapshot": {
          "description": "The snapshot to seek to. The snapshot's topic must be the same as that of\nthe provided subscription.\nFormat is `projects/{project}/snapshots/{snap}`.",
          "type": "string"
        },
        "time": {
          "description": "The time to seek to.\nMessages retained in the subscription that were published before this\ntime are marked as acknowledged, and messages retained in the\nsubscription that were published after this time are marked as\nunacknowledged. Note that this operation affects only those messages\nretained in the subscription (configured by the combination of\n`message_retention_duration` and `retain_acked_messages`). For example,\nif `time` corresponds to a point before the message retention\nwindow (or to a point before the system's notion of the subscription\ncreation time), only retained messages will be marked as unacknowledged,\nand already-expunged messages will not be restored.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "SeekRequest"
    },
    "ReceivedMessage": {
      "description": "A message and its corresponding acknowledgment ID.",
      "type": "object",
      "properties": {
        "message": {
          "$ref": "PubsubMessage",
          "description": "The message."
        },
        "ackId": {
          "description": "This ID can be used to acknowledge the received message.",
          "type": "string"
        }
      },
      "id": "ReceivedMessage"
    },
    "PushConfig": {
      "type": "object",
      "properties": {
        "pushEndpoint": {
          "type": "string",
          "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use \"https://example.com/push\"."
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Endpoint configuration attributes.\n\nEvery endpoint has a set of API supported attributes that can be used to\ncontrol different aspects of the message delivery.\n\nThe currently supported attribute is `x-goog-version`, which you can\nuse to change the format of the pushed message. This attribute\nindicates the version of the data expected by the endpoint. This\ncontrols the shape of the pushed message (i.e., its fields and metadata).\nThe endpoint version is based on the version of the Pub/Sub API.\n\nIf not present during the `CreateSubscription` call, it will default to\nthe version of the API used to make such call. If not present during a\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\ncalls will always return a valid version, even if the subscription was\ncreated without this attribute.\n\nThe possible values for this attribute are:\n\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.",
          "type": "object"
        },
        "oidcToken": {
          "description": "If specified, Pub/Sub will generate and attach an OIDC JWT token as an\n`Authorization` header in the HTTP request for every pushed message.",
          "$ref": "OidcToken"
        }
      },
      "id": "PushConfig",
      "description": "Configuration for a push delivery endpoint."
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "PullRequest": {
      "id": "PullRequest",
      "description": "Request for the `Pull` method.",
      "type": "object",
      "properties": {
        "maxMessages": {
          "description": "The maximum number of messages returned for this request. The Pub/Sub\nsystem may return fewer than the number specified.",
          "format": "int32",
          "type": "integer"
        },
        "returnImmediately": {
          "type": "boolean",
          "description": "If this field set to true, the system will respond immediately even if\nit there are no messages available to return in the `Pull` response.\nOtherwise, the system may wait (for a bounded amount of time) until at\nleast one message is available, rather than returning no messages."
        }
      }
    },
    "PublishRequest": {
      "id": "PublishRequest",
      "description": "Request for the Publish method.",
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "PubsubMessage"
          },
          "description": "The messages to publish."
        }
      }
    },
    "UpdateSubscriptionRequest": {
      "description": "Request for the UpdateSubscription method.",
      "type": "object",
      "properties": {
        "subscription": {
          "description": "The updated subscription object.",
          "$ref": "Subscription"
        },
        "updateMask": {
          "description": "Indicates which fields in the provided subscription to update.\nMust be specified and non-empty.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "id": "UpdateSubscriptionRequest"
    },
    "PublishResponse": {
      "description": "Response for the `Publish` method.",
      "type": "object",
      "properties": {
        "messageIds": {
          "description": "The server-assigned ID of each published message, in the same order as\nthe messages in the request. IDs are guaranteed to be unique within\nthe topic.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "PublishResponse"
    },
    "Subscription": {
      "id": "Subscription",
      "description": "A subscription resource.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The name of the topic from which this subscription is receiving messages.\nFormat is `projects/{project}/topics/{topic}`.\nThe value of this field will be `_deleted-topic_` if the topic has been\ndeleted.",
          "type": "string"
        },
        "pushConfig": {
          "$ref": "PushConfig",
          "description": "If push delivery is used with this subscription, this field is\nused to configure it. An empty `pushConfig` signifies that the subscriber\nwill pull and ack messages using API methods."
        },
        "ackDeadlineSeconds": {
          "description": "The approximate amount of time (on a best-effort basis) Pub/Sub waits for\nthe subscriber to acknowledge receipt before resending the message. In the\ninterval after the message is delivered and before it is acknowledged, it\nis considered to be \u003ci\u003eoutstanding\u003c/i\u003e. During that time period, the\nmessage will not be redelivered (on a best-effort basis).\n\nFor pull subscriptions, this value is used as the initial value for the ack\ndeadline. To override this value for a given message, call\n`ModifyAckDeadline` with the corresponding `ack_id` if using\nnon-streaming pull or send the `ack_id` in a\n`StreamingModifyAckDeadlineRequest` if using streaming pull.\nThe minimum custom deadline you can specify is 10 seconds.\nThe maximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\n\nFor push delivery, this value is also used to set the request timeout for\nthe call to the push endpoint.\n\nIf the subscriber never acknowledges the message, the Pub/Sub\nsystem will eventually redeliver the message.",
          "format": "int32",
          "type": "integer"
        },
        "messageRetentionDuration": {
          "description": "How long to retain unacknowledged messages in the subscription's backlog,\nfrom the moment a message is published.\nIf `retain_acked_messages` is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a `Seek`\ncan be done. Defaults to 7 days. Cannot be more than 7 days or less than 10\nminutes.",
          "format": "google-duration",
          "type": "string"
        },
        "retainAckedMessages": {
          "description": "Indicates whether to retain acknowledged messages. If true, then\nmessages are not expunged from the subscription's backlog, even if they are\nacknowledged, until they fall out of the `message_retention_duration`\nwindow. This must be true if you would like to\n\u003ca\nhref=\"https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time\"\u003e\nSeek to a timestamp\u003c/a\u003e.",
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e.",
          "type": "object"
        },
        "expirationPolicy": {
          "$ref": "ExpirationPolicy",
          "description": "A policy that specifies the conditions for this subscription's expiration.\nA subscription is considered active as long as any connected subscriber is\nsuccessfully consuming messages from the subscription or is issuing\noperations on the subscription. If `expiration_policy` is not set, a\n*default policy* with `ttl` of 31 days will be used. The minimum allowed\nvalue for `expiration_policy.ttl` is 1 day."
        },
        "name": {
          "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
          "type": "string"
        }
      }
    },
    "ExpirationPolicy": {
      "description": "A policy that specifies the conditions for resource expiration (i.e.,\nautomatic resource deletion).",
      "type": "object",
      "properties": {
        "ttl": {
          "type": "string",
          "description": "Specifies the \"time-to-live\" duration for an associated resource. The\nresource expires if it is not active for a period of `ttl`. The definition\nof \"activity\" depends on the type of the associated resource. The minimum\nand maximum allowed values for `ttl` depend on the type of the associated\nresource, as well. If `ttl` is not set, the associated resource never\nexpires.",
          "format": "google-duration"
        }
      },
      "id": "ExpirationPolicy"
    },
    "SeekResponse": {
      "description": "Response for the `Seek` method (this response is empty).",
      "type": "object",
      "properties": {},
      "id": "SeekResponse"
    },
    "ModifyAckDeadlineRequest": {
      "id": "ModifyAckDeadlineRequest",
      "description": "Request for the ModifyAckDeadline method.",
      "type": "object",
      "properties": {
        "ackDeadlineSeconds": {
          "description": "The new ack deadline with respect to the time this request was sent to\nthe Pub/Sub system. For example, if the value is 10, the new\nack deadline will expire 10 seconds after the `ModifyAckDeadline` call\nwas made. Specifying zero might immediately make the message available for\ndelivery to another subscriber client. This typically results in an\nincrease in the rate of message redeliveries (that is, duplicates).\nThe minimum deadline you can specify is 0 seconds.\nThe maximum deadline you can specify is 600 seconds (10 minutes).",
          "format": "int32",
          "type": "integer"
        },
        "ackIds": {
          "description": "List of acknowledgment IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot resource. Snapshots are used in\n\u003ca href=\"https://cloud.google.com/pubsub/docs/replay-overview\"\u003eSeek\u003c/a\u003e\noperations, which allow\nyou to manage message acknowledgments in bulk. That is, you can set the\nacknowledgment state of messages in an existing subscription to the state\ncaptured by a snapshot.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The name of the topic from which this snapshot is retaining messages.",
          "type": "string"
        },
        "labels": {
          "description": "See \u003ca href=\"https://cloud.google.com/pubsub/docs/labels\"\u003e Creating and\nmanaging labels\u003c/a\u003e.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expireTime": {
          "description": "The snapshot is guaranteed to exist up until this time.\nA newly-created snapshot expires no later than 7 days from the time of its\ncreation. Its exact lifetime is determined at creation by the existing\nbacklog in the source subscription. Specifically, the lifetime of the\nsnapshot is `7 days - (age of oldest unacked message in the subscription)`.\nFor example, consider a subscription whose oldest unacked message is 3 days\nold. If a snapshot is created from this subscription, the snapshot -- which\nwill always capture this 3-day-old backlog as long as the snapshot\nexists -- will expire in 4 days. The service will refuse to create a\nsnapshot that would expire in less than 1 hour after creation.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        }
      },
      "id": "Snapshot"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ModifyPushConfigRequest": {
      "description": "Request for the ModifyPushConfig method.",
      "type": "object",
      "properties": {
        "pushConfig": {
          "description": "The push configuration for future deliveries.\n\nAn empty `pushConfig` indicates that the Pub/Sub system should\nstop pushing messages from the given subscription and allow\nmessages to be pulled and acknowledged - effectively pausing\nthe subscription if `Pull` or `StreamingPull` is not called.",
          "$ref": "PushConfig"
        }
      },
      "id": "ModifyPushConfigRequest"
    },
    "PubsubMessage": {
      "id": "PubsubMessage",
      "description": "A message that is published by publishers and consumed by subscribers. The\nmessage must contain either a non-empty data field or at least one attribute.\nNote that client libraries represent this object differently\ndepending on the language. See the corresponding\n\u003ca href=\"https://cloud.google.com/pubsub/docs/reference/libraries\"\u003eclient\nlibrary documentation\u003c/a\u003e for more information. See\n\u003ca href=\"https://cloud.google.com/pubsub/quotas\"\u003eQuotas and limits\u003c/a\u003e\nfor more information about message limits.",
      "type": "object",
      "properties": {
        "publishTime": {
          "type": "string",
          "description": "The time at which the message was published, populated by the server when\nit receives the `Publish` call. It must not be populated by the\npublisher in a `Publish` call.",
          "format": "google-datetime"
        },
        "data": {
          "description": "The message data field. If this field is empty, the message must contain\nat least one attribute.",
          "format": "byte",
          "type": "string"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional attributes for this message.",
          "type": "object"
        },
        "messageId": {
          "type": "string",
          "description": "ID of this message, assigned by the server when the message is published.\nGuaranteed to be unique within the topic. This value may be read by a\nsubscriber that receives a `PubsubMessage` via a `Pull` call or a push\ndelivery. It must not be populated by the publisher in a `Publish` call."
        }
      }
    },
    "AcknowledgeRequest": {
      "id": "AcknowledgeRequest",
      "description": "Request for the Acknowledge method.",
      "type": "object",
      "properties": {
        "ackIds": {
          "description": "The acknowledgment ID for the messages being acknowledged that was returned\nby the Pub/Sub system in the `Pull` response. Must not be empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListTopicsResponse": {
      "type": "object",
      "properties": {
        "topics": {
          "description": "The resulting topics.",
          "type": "array",
          "items": {
            "$ref": "Topic"
          }
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more topics that match the\nrequest; this value should be passed in a new `ListTopicsRequest`.",
          "type": "string"
        }
      },
      "id": "ListTopicsResponse",
      "description": "Response for the `ListTopics` method."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "ListTopicSubscriptionsResponse": {
      "description": "Response for the `ListTopicSubscriptions` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListTopicSubscriptionsRequest` to get more subscriptions."
        },
        "subscriptions": {
          "description": "The names of the subscriptions that match the request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListTopicSubscriptionsResponse"
    },
    "PullResponse": {
      "description": "Response for the `Pull` method.",
      "type": "object",
      "properties": {
        "receivedMessages": {
          "description": "Received Pub/Sub messages. The list will be empty if there are no more\nmessages available in the backlog. For JSON, the response can be entirely\nempty. The Pub/Sub system may return fewer than the `maxMessages` requested\neven if there are more messages available in the backlog.",
          "type": "array",
          "items": {
            "$ref": "ReceivedMessage"
          }
        }
      },
      "id": "PullResponse"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "version": "v1",
  "baseUrl": "https://pubsub.googleapis.com/",
  "canonicalName": "Pubsub",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/pubsub": {
          "description": "View and manage Pub/Sub topics and subscriptions"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "description": "Provides reliable, many-to-many, asynchronous messaging between applications.\n",
  "servicePath": "",
  "rootUrl": "https://pubsub.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "pubsub",
  "batchPath": "batch",
  "revision": "20190606",
  "documentationLink": "https://cloud.google.com/pubsub/docs",
  "id": "pubsub:v1",
  "title": "Cloud Pub/Sub API",
  "ownerName": "Google",
  "discoveryVersion": "v1"
}
