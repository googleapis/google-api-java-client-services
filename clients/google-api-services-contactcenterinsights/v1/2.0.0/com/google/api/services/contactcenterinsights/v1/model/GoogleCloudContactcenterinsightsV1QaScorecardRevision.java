/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contactcenterinsights.v1.model;

/**
 * A revision of a QaScorecard. Modifying published scorecard fields would invalidate existing
 * scorecard results â€” the questions may have changed, or the score weighting will make existing
 * scores impossible to understand. So changes must create a new revision, rather than modifying the
 * existing resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Contact Center AI Insights API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContactcenterinsightsV1QaScorecardRevision extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Alternative IDs for this revision of the scorecard, e.g., `latest`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> alternateIds;

  /**
   * Output only. The timestamp that the revision was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Identifier. The name of the scorecard revision. Format:
   * projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The snapshot of the scorecard at the time of this revision's creation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContactcenterinsightsV1QaScorecard snapshot;

  /**
   * Output only. State of the scorecard revision, indicating whether it's ready to be used in
   * analysis.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Alternative IDs for this revision of the scorecard, e.g., `latest`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAlternateIds() {
    return alternateIds;
  }

  /**
   * Output only. Alternative IDs for this revision of the scorecard, e.g., `latest`.
   * @param alternateIds alternateIds or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision setAlternateIds(java.util.List<java.lang.String> alternateIds) {
    this.alternateIds = alternateIds;
    return this;
  }

  /**
   * Output only. The timestamp that the revision was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp that the revision was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Identifier. The name of the scorecard revision. Format:
   * projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The name of the scorecard revision. Format:
   * projects/{project}/locations/{location}/qaScorecards/{qa_scorecard}/revisions/{revision}
   * @param name name or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The snapshot of the scorecard at the time of this revision's creation.
   * @return value or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecard getSnapshot() {
    return snapshot;
  }

  /**
   * The snapshot of the scorecard at the time of this revision's creation.
   * @param snapshot snapshot or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision setSnapshot(GoogleCloudContactcenterinsightsV1QaScorecard snapshot) {
    this.snapshot = snapshot;
    return this;
  }

  /**
   * Output only. State of the scorecard revision, indicating whether it's ready to be used in
   * analysis.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the scorecard revision, indicating whether it's ready to be used in
   * analysis.
   * @param state state or {@code null} for none
   */
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision set(String fieldName, Object value) {
    return (GoogleCloudContactcenterinsightsV1QaScorecardRevision) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContactcenterinsightsV1QaScorecardRevision clone() {
    return (GoogleCloudContactcenterinsightsV1QaScorecardRevision) super.clone();
  }

}
