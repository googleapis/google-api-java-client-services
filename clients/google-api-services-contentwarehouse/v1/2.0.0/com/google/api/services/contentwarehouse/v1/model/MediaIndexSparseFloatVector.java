/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for MediaIndexSparseFloatVector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MediaIndexSparseFloatVector extends com.google.api.client.json.GenericJson {

  /**
   * Parallel arrays of column / value. Exactly one of those columns vector should be set. Columns
   * must be in monotonically increasing order.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> columns;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String columnsInt16;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> columnsInt32;

  /**
   * Columns are fixed integers, used for accelerated parse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> columnsInt64;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String columnsInt8;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> values;

  /**
   * Parallel arrays of column / value. Exactly one of those columns vector should be set. Columns
   * must be in monotonically increasing order.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getColumns() {
    return columns;
  }

  /**
   * Parallel arrays of column / value. Exactly one of those columns vector should be set. Columns
   * must be in monotonically increasing order.
   * @param columns columns or {@code null} for none
   */
  public MediaIndexSparseFloatVector setColumns(java.util.List<java.lang.Long> columns) {
    this.columns = columns;
    return this;
  }

  /**
   * @see #decodeColumnsInt16()
   * @return value or {@code null} for none
   */
  public java.lang.String getColumnsInt16() {
    return columnsInt16;
  }

  /**

   * @see #getColumnsInt16()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeColumnsInt16() {
    return com.google.api.client.util.Base64.decodeBase64(columnsInt16);
  }

  /**
   * @see #encodeColumnsInt16()
   * @param columnsInt16 columnsInt16 or {@code null} for none
   */
  public MediaIndexSparseFloatVector setColumnsInt16(java.lang.String columnsInt16) {
    this.columnsInt16 = columnsInt16;
    return this;
  }

  /**

   * @see #setColumnsInt16()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public MediaIndexSparseFloatVector encodeColumnsInt16(byte[] columnsInt16) {
    this.columnsInt16 = com.google.api.client.util.Base64.encodeBase64URLSafeString(columnsInt16);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getColumnsInt32() {
    return columnsInt32;
  }

  /**
   * @param columnsInt32 columnsInt32 or {@code null} for none
   */
  public MediaIndexSparseFloatVector setColumnsInt32(java.util.List<java.lang.Integer> columnsInt32) {
    this.columnsInt32 = columnsInt32;
    return this;
  }

  /**
   * Columns are fixed integers, used for accelerated parse.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getColumnsInt64() {
    return columnsInt64;
  }

  /**
   * Columns are fixed integers, used for accelerated parse.
   * @param columnsInt64 columnsInt64 or {@code null} for none
   */
  public MediaIndexSparseFloatVector setColumnsInt64(java.util.List<java.lang.Long> columnsInt64) {
    this.columnsInt64 = columnsInt64;
    return this;
  }

  /**
   * @see #decodeColumnsInt8()
   * @return value or {@code null} for none
   */
  public java.lang.String getColumnsInt8() {
    return columnsInt8;
  }

  /**

   * @see #getColumnsInt8()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeColumnsInt8() {
    return com.google.api.client.util.Base64.decodeBase64(columnsInt8);
  }

  /**
   * @see #encodeColumnsInt8()
   * @param columnsInt8 columnsInt8 or {@code null} for none
   */
  public MediaIndexSparseFloatVector setColumnsInt8(java.lang.String columnsInt8) {
    this.columnsInt8 = columnsInt8;
    return this;
  }

  /**

   * @see #setColumnsInt8()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public MediaIndexSparseFloatVector encodeColumnsInt8(byte[] columnsInt8) {
    this.columnsInt8 = com.google.api.client.util.Base64.encodeBase64URLSafeString(columnsInt8);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getValues() {
    return values;
  }

  /**
   * @param values values or {@code null} for none
   */
  public MediaIndexSparseFloatVector setValues(java.util.List<java.lang.Float> values) {
    this.values = values;
    return this;
  }

  @Override
  public MediaIndexSparseFloatVector set(String fieldName, Object value) {
    return (MediaIndexSparseFloatVector) super.set(fieldName, value);
  }

  @Override
  public MediaIndexSparseFloatVector clone() {
    return (MediaIndexSparseFloatVector) super.clone();
  }

}
