/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinesslodging.v1.model;

/**
 * Policies regarding guest-owned animals.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the My Business Lodging API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Pets extends com.google.api.client.json.GenericJson {

  /**
   * Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean catsAllowed;

  /**
   * Cats allowed exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String catsAllowedException;

  /**
   * Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dogsAllowed;

  /**
   * Dogs allowed exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dogsAllowedException;

  /**
   * Pets allowed. Household animals are allowed at the property and in the specific guest room of
   * their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a
   * fee. Service animals are not considered to be pets, so not governed by this policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean petsAllowed;

  /**
   * Pets allowed exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String petsAllowedException;

  /**
   * Pets allowed free. Household animals are allowed at the property and in the specific guest room
   * of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean petsAllowedFree;

  /**
   * Pets allowed free exception.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String petsAllowedFreeException;

  /**
   * Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCatsAllowed() {
    return catsAllowed;
  }

  /**
   * Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * @param catsAllowed catsAllowed or {@code null} for none
   */
  public Pets setCatsAllowed(java.lang.Boolean catsAllowed) {
    this.catsAllowed = catsAllowed;
    return this;
  }

  /**
   * Cats allowed exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getCatsAllowedException() {
    return catsAllowedException;
  }

  /**
   * Cats allowed exception.
   * @param catsAllowedException catsAllowedException or {@code null} for none
   */
  public Pets setCatsAllowedException(java.lang.String catsAllowedException) {
    this.catsAllowedException = catsAllowedException;
    return this;
  }

  /**
   * Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDogsAllowed() {
    return dogsAllowed;
  }

  /**
   * Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the
   * guest room of their owner. May or may not require a fee.
   * @param dogsAllowed dogsAllowed or {@code null} for none
   */
  public Pets setDogsAllowed(java.lang.Boolean dogsAllowed) {
    this.dogsAllowed = dogsAllowed;
    return this;
  }

  /**
   * Dogs allowed exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getDogsAllowedException() {
    return dogsAllowedException;
  }

  /**
   * Dogs allowed exception.
   * @param dogsAllowedException dogsAllowedException or {@code null} for none
   */
  public Pets setDogsAllowedException(java.lang.String dogsAllowedException) {
    this.dogsAllowedException = dogsAllowedException;
    return this;
  }

  /**
   * Pets allowed. Household animals are allowed at the property and in the specific guest room of
   * their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a
   * fee. Service animals are not considered to be pets, so not governed by this policy.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPetsAllowed() {
    return petsAllowed;
  }

  /**
   * Pets allowed. Household animals are allowed at the property and in the specific guest room of
   * their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a
   * fee. Service animals are not considered to be pets, so not governed by this policy.
   * @param petsAllowed petsAllowed or {@code null} for none
   */
  public Pets setPetsAllowed(java.lang.Boolean petsAllowed) {
    this.petsAllowed = petsAllowed;
    return this;
  }

  /**
   * Pets allowed exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getPetsAllowedException() {
    return petsAllowedException;
  }

  /**
   * Pets allowed exception.
   * @param petsAllowedException petsAllowedException or {@code null} for none
   */
  public Pets setPetsAllowedException(java.lang.String petsAllowedException) {
    this.petsAllowedException = petsAllowedException;
    return this;
  }

  /**
   * Pets allowed free. Household animals are allowed at the property and in the specific guest room
   * of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPetsAllowedFree() {
    return petsAllowedFree;
  }

  /**
   * Pets allowed free. Household animals are allowed at the property and in the specific guest room
   * of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.
   * @param petsAllowedFree petsAllowedFree or {@code null} for none
   */
  public Pets setPetsAllowedFree(java.lang.Boolean petsAllowedFree) {
    this.petsAllowedFree = petsAllowedFree;
    return this;
  }

  /**
   * Pets allowed free exception.
   * @return value or {@code null} for none
   */
  public java.lang.String getPetsAllowedFreeException() {
    return petsAllowedFreeException;
  }

  /**
   * Pets allowed free exception.
   * @param petsAllowedFreeException petsAllowedFreeException or {@code null} for none
   */
  public Pets setPetsAllowedFreeException(java.lang.String petsAllowedFreeException) {
    this.petsAllowedFreeException = petsAllowedFreeException;
    return this;
  }

  @Override
  public Pets set(String fieldName, Object value) {
    return (Pets) super.set(fieldName, value);
  }

  @Override
  public Pets clone() {
    return (Pets) super.clone();
  }

}
