/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A Topic represents a Knowledge Graph entity with its associated properties and their values.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FreebaseTopic extends com.google.api.client.json.GenericJson {

  /**
   * The id (mid and human-readable id) of the topic. The id will always be present and will contain
   * a mid value for topics in the topic sstable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FreebaseId id;

  /**
   * The property-value bindings associated with the topic. Note that in the case where a property
   * is relevant to a topic based on its type, but no values of that property are present for the
   * topic, the PropertyValue will simply not appear, rather than being present with a null value,
   * or empty repeated value list.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<FreebasePropertyValue> propertyValue;

  static {
    // hack to force ProGuard to consider FreebasePropertyValue used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(FreebasePropertyValue.class);
  }

  /**
   * The id (mid and human-readable id) of the topic. The id will always be present and will contain
   * a mid value for topics in the topic sstable.
   * @return value or {@code null} for none
   */
  public FreebaseId getId() {
    return id;
  }

  /**
   * The id (mid and human-readable id) of the topic. The id will always be present and will contain
   * a mid value for topics in the topic sstable.
   * @param id id or {@code null} for none
   */
  public FreebaseTopic setId(FreebaseId id) {
    this.id = id;
    return this;
  }

  /**
   * The property-value bindings associated with the topic. Note that in the case where a property
   * is relevant to a topic based on its type, but no values of that property are present for the
   * topic, the PropertyValue will simply not appear, rather than being present with a null value,
   * or empty repeated value list.
   * @return value or {@code null} for none
   */
  public java.util.List<FreebasePropertyValue> getPropertyValue() {
    return propertyValue;
  }

  /**
   * The property-value bindings associated with the topic. Note that in the case where a property
   * is relevant to a topic based on its type, but no values of that property are present for the
   * topic, the PropertyValue will simply not appear, rather than being present with a null value,
   * or empty repeated value list.
   * @param propertyValue propertyValue or {@code null} for none
   */
  public FreebaseTopic setPropertyValue(java.util.List<FreebasePropertyValue> propertyValue) {
    this.propertyValue = propertyValue;
    return this;
  }

  @Override
  public FreebaseTopic set(String fieldName, Object value) {
    return (FreebaseTopic) super.set(fieldName, value);
  }

  @Override
  public FreebaseTopic clone() {
    return (FreebaseTopic) super.clone();
  }

}
