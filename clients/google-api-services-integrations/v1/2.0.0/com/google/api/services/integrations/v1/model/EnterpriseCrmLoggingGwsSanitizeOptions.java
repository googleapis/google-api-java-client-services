/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize
 * the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g.,
 * scrubbed). The specific sanitizer implementation is determined by run-time configuration and
 * environment options (e.g., prod vs. qa). next_id: 5
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EnterpriseCrmLoggingGwsSanitizeOptions extends com.google.api.client.json.GenericJson {

  /**
   * If true, the value has already been sanitized and needs no further sanitization. For instance,
   * a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isAlreadySanitized;

  /**
   * To which type(s) of logs the sanitize options apply.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> logType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String privacy;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sanitizeType;

  /**
   * If true, the value has already been sanitized and needs no further sanitization. For instance,
   * a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsAlreadySanitized() {
    return isAlreadySanitized;
  }

  /**
   * If true, the value has already been sanitized and needs no further sanitization. For instance,
   * a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
   * @param isAlreadySanitized isAlreadySanitized or {@code null} for none
   */
  public EnterpriseCrmLoggingGwsSanitizeOptions setIsAlreadySanitized(java.lang.Boolean isAlreadySanitized) {
    this.isAlreadySanitized = isAlreadySanitized;
    return this;
  }

  /**
   * To which type(s) of logs the sanitize options apply.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLogType() {
    return logType;
  }

  /**
   * To which type(s) of logs the sanitize options apply.
   * @param logType logType or {@code null} for none
   */
  public EnterpriseCrmLoggingGwsSanitizeOptions setLogType(java.util.List<java.lang.String> logType) {
    this.logType = logType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPrivacy() {
    return privacy;
  }

  /**
   * @param privacy privacy or {@code null} for none
   */
  public EnterpriseCrmLoggingGwsSanitizeOptions setPrivacy(java.lang.String privacy) {
    this.privacy = privacy;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSanitizeType() {
    return sanitizeType;
  }

  /**
   * @param sanitizeType sanitizeType or {@code null} for none
   */
  public EnterpriseCrmLoggingGwsSanitizeOptions setSanitizeType(java.lang.String sanitizeType) {
    this.sanitizeType = sanitizeType;
    return this;
  }

  @Override
  public EnterpriseCrmLoggingGwsSanitizeOptions set(String fieldName, Object value) {
    return (EnterpriseCrmLoggingGwsSanitizeOptions) super.set(fieldName, value);
  }

  @Override
  public EnterpriseCrmLoggingGwsSanitizeOptions clone() {
    return (EnterpriseCrmLoggingGwsSanitizeOptions) super.clone();
  }

}
