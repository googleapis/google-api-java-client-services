/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datapipelines.v1.model;

/**
 * A single value in a row. The value set must correspond to the correct type from the row's schema.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Data pipelines API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatapipelinesV1FieldValue extends com.google.api.client.json.GenericJson {

  /**
   * The array value of this field. Corresponds to TYPE_NAME_ARRAY in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1ArrayValue arrayValue;

  /**
   * The atomic value of this field. Must correspond to the correct atomic type in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1AtomicValue atomicValue;

  /**
   * The enum value of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the schema if that
   * logical type represents an `EnumerationType` type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1EnumerationValue enumValue;

  /**
   * The fixed-length byte collection of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the
   * schema if that logical type represents a `FixedBytes` type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1FixedBytesValue fixedBytesValue;

  /**
   * The iterable value of this field. Corresponds to TYPE_NAME_ITERABLE in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1IterableValue iterableValue;

  /**
   * The map value of this field. Corresponds to TYPE_NAME_MAP in the schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1MapValue mapValue;

  /**
   * The row value of this field. Corresponds to TYPE_NAME_ROW in the schema. This row also holds to
   * its own schema.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDatapipelinesV1Row rowValue;

  /**
   * The array value of this field. Corresponds to TYPE_NAME_ARRAY in the schema.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1ArrayValue getArrayValue() {
    return arrayValue;
  }

  /**
   * The array value of this field. Corresponds to TYPE_NAME_ARRAY in the schema.
   * @param arrayValue arrayValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setArrayValue(GoogleCloudDatapipelinesV1ArrayValue arrayValue) {
    this.arrayValue = arrayValue;
    return this;
  }

  /**
   * The atomic value of this field. Must correspond to the correct atomic type in the schema.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1AtomicValue getAtomicValue() {
    return atomicValue;
  }

  /**
   * The atomic value of this field. Must correspond to the correct atomic type in the schema.
   * @param atomicValue atomicValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setAtomicValue(GoogleCloudDatapipelinesV1AtomicValue atomicValue) {
    this.atomicValue = atomicValue;
    return this;
  }

  /**
   * The enum value of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the schema if that
   * logical type represents an `EnumerationType` type.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1EnumerationValue getEnumValue() {
    return enumValue;
  }

  /**
   * The enum value of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the schema if that
   * logical type represents an `EnumerationType` type.
   * @param enumValue enumValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setEnumValue(GoogleCloudDatapipelinesV1EnumerationValue enumValue) {
    this.enumValue = enumValue;
    return this;
  }

  /**
   * The fixed-length byte collection of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the
   * schema if that logical type represents a `FixedBytes` type.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FixedBytesValue getFixedBytesValue() {
    return fixedBytesValue;
  }

  /**
   * The fixed-length byte collection of this field. Corresponds to TYPE_NAME_LOGICAL_TYPE in the
   * schema if that logical type represents a `FixedBytes` type.
   * @param fixedBytesValue fixedBytesValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setFixedBytesValue(GoogleCloudDatapipelinesV1FixedBytesValue fixedBytesValue) {
    this.fixedBytesValue = fixedBytesValue;
    return this;
  }

  /**
   * The iterable value of this field. Corresponds to TYPE_NAME_ITERABLE in the schema.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1IterableValue getIterableValue() {
    return iterableValue;
  }

  /**
   * The iterable value of this field. Corresponds to TYPE_NAME_ITERABLE in the schema.
   * @param iterableValue iterableValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setIterableValue(GoogleCloudDatapipelinesV1IterableValue iterableValue) {
    this.iterableValue = iterableValue;
    return this;
  }

  /**
   * The map value of this field. Corresponds to TYPE_NAME_MAP in the schema.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1MapValue getMapValue() {
    return mapValue;
  }

  /**
   * The map value of this field. Corresponds to TYPE_NAME_MAP in the schema.
   * @param mapValue mapValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setMapValue(GoogleCloudDatapipelinesV1MapValue mapValue) {
    this.mapValue = mapValue;
    return this;
  }

  /**
   * The row value of this field. Corresponds to TYPE_NAME_ROW in the schema. This row also holds to
   * its own schema.
   * @return value or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1Row getRowValue() {
    return rowValue;
  }

  /**
   * The row value of this field. Corresponds to TYPE_NAME_ROW in the schema. This row also holds to
   * its own schema.
   * @param rowValue rowValue or {@code null} for none
   */
  public GoogleCloudDatapipelinesV1FieldValue setRowValue(GoogleCloudDatapipelinesV1Row rowValue) {
    this.rowValue = rowValue;
    return this;
  }

  @Override
  public GoogleCloudDatapipelinesV1FieldValue set(String fieldName, Object value) {
    return (GoogleCloudDatapipelinesV1FieldValue) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatapipelinesV1FieldValue clone() {
    return (GoogleCloudDatapipelinesV1FieldValue) super.clone();
  }

}
