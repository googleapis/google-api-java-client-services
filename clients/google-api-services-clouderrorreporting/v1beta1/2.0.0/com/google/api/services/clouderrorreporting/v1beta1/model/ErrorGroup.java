/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouderrorreporting.v1beta1.model;

/**
 * Description of a group of similar error events.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Error Reporting API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ErrorGroup extends com.google.api.client.json.GenericJson {

  /**
   * An opaque identifier of the group. This field is assigned by the Error Reporting system and
   * always populated. In the group resource name, the `group_id` is a unique identifier for a
   * particular error group. The identifier is derived from key parts of the error-log content and
   * is treated as Service Data. For information about how Service Data is handled, see [Google
   * Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupId;

  /**
   * The group resource name. Written as `projects/{projectID}/groups/{group_id}` or
   * `projects/{projectID}/locations/{location}/groups/{group_id}` Examples: `projects/my-
   * project-123/groups/my-group`, `projects/my-project-123/locations/us-central1/groups/my-group`
   * In the group resource name, the `group_id` is a unique identifier for a particular error group.
   * The identifier is derived from key parts of the error-log content and is treated as Service
   * Data. For information about how Service Data is handled, see [Google Cloud Privacy
   * Notice](https://cloud.google.com/terms/cloud-privacy-notice). For a list of supported
   * locations, see [Supported Regions](https://cloud.google.com/logging/docs/region-support).
   * `global` is the default when unspecified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Error group's resolution status. An unspecified resolution status will be interpreted as OPEN
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resolutionStatus;

  /**
   * Associated tracking issues.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TrackingIssue> trackingIssues;

  /**
   * An opaque identifier of the group. This field is assigned by the Error Reporting system and
   * always populated. In the group resource name, the `group_id` is a unique identifier for a
   * particular error group. The identifier is derived from key parts of the error-log content and
   * is treated as Service Data. For information about how Service Data is handled, see [Google
   * Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupId() {
    return groupId;
  }

  /**
   * An opaque identifier of the group. This field is assigned by the Error Reporting system and
   * always populated. In the group resource name, the `group_id` is a unique identifier for a
   * particular error group. The identifier is derived from key parts of the error-log content and
   * is treated as Service Data. For information about how Service Data is handled, see [Google
   * Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).
   * @param groupId groupId or {@code null} for none
   */
  public ErrorGroup setGroupId(java.lang.String groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * The group resource name. Written as `projects/{projectID}/groups/{group_id}` or
   * `projects/{projectID}/locations/{location}/groups/{group_id}` Examples: `projects/my-
   * project-123/groups/my-group`, `projects/my-project-123/locations/us-central1/groups/my-group`
   * In the group resource name, the `group_id` is a unique identifier for a particular error group.
   * The identifier is derived from key parts of the error-log content and is treated as Service
   * Data. For information about how Service Data is handled, see [Google Cloud Privacy
   * Notice](https://cloud.google.com/terms/cloud-privacy-notice). For a list of supported
   * locations, see [Supported Regions](https://cloud.google.com/logging/docs/region-support).
   * `global` is the default when unspecified.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The group resource name. Written as `projects/{projectID}/groups/{group_id}` or
   * `projects/{projectID}/locations/{location}/groups/{group_id}` Examples: `projects/my-
   * project-123/groups/my-group`, `projects/my-project-123/locations/us-central1/groups/my-group`
   * In the group resource name, the `group_id` is a unique identifier for a particular error group.
   * The identifier is derived from key parts of the error-log content and is treated as Service
   * Data. For information about how Service Data is handled, see [Google Cloud Privacy
   * Notice](https://cloud.google.com/terms/cloud-privacy-notice). For a list of supported
   * locations, see [Supported Regions](https://cloud.google.com/logging/docs/region-support).
   * `global` is the default when unspecified.
   * @param name name or {@code null} for none
   */
  public ErrorGroup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Error group's resolution status. An unspecified resolution status will be interpreted as OPEN
   * @return value or {@code null} for none
   */
  public java.lang.String getResolutionStatus() {
    return resolutionStatus;
  }

  /**
   * Error group's resolution status. An unspecified resolution status will be interpreted as OPEN
   * @param resolutionStatus resolutionStatus or {@code null} for none
   */
  public ErrorGroup setResolutionStatus(java.lang.String resolutionStatus) {
    this.resolutionStatus = resolutionStatus;
    return this;
  }

  /**
   * Associated tracking issues.
   * @return value or {@code null} for none
   */
  public java.util.List<TrackingIssue> getTrackingIssues() {
    return trackingIssues;
  }

  /**
   * Associated tracking issues.
   * @param trackingIssues trackingIssues or {@code null} for none
   */
  public ErrorGroup setTrackingIssues(java.util.List<TrackingIssue> trackingIssues) {
    this.trackingIssues = trackingIssues;
    return this;
  }

  @Override
  public ErrorGroup set(String fieldName, Object value) {
    return (ErrorGroup) super.set(fieldName, value);
  }

  @Override
  public ErrorGroup clone() {
    return (ErrorGroup) super.clone();
  }

}
