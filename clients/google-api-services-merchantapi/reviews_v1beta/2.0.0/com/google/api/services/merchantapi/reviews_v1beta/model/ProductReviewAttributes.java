/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.reviews_v1beta.model;

/**
 * Attributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ProductReviewAttributes extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The name of the aggregator of the product reviews. A publisher may use a reviews
   * aggregator to manage reviews and provide the feeds. This element indicates the use of an
   * aggregator and contains information about the aggregator.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String aggregatorName;

  /**
   * Optional. Contains ASINs (Amazon Standard Identification Numbers) associated with a product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> asins;

  /**
   * Optional. Contains brand names associated with a product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> brands;

  /**
   * Optional. The method used to collect the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String collectionMethod;

  /**
   * Optional. Contains the disadvantages based on the opinion of the reviewer. Omit boilerplate
   * text like "con:" unless it was written by the reviewer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> cons;

  /**
   * Required. The content of the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String content;

  /**
   * Optional. Contains GTINs (global trade item numbers) associated with a product. Sub-types of
   * GTINs (e.g. UPC, EAN, ISBN, JAN) are supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> gtins;

  /**
   * Optional. Indicates whether the review is marked as spam in the publisher's system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isSpam;

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min attribute.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maxRating;

  /**
   * Optional. Contains the ratings associated with the review. The minimum possible number for the
   * rating. This should be the worst possible rating and should not be a value for no rating.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long minRating;

  /**
   * Optional. Contains MPNs (manufacturer part numbers) associated with a product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> mpns;

  /**
   * Optional. The URI of the product. This URI can have the same value as the `review_link`
   * element, if the review URI and the product URI are the same.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> productLinks;

  /**
   * Optional. Descriptive name of a product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> productNames;

  /**
   * Optional. Contains the advantages based on the opinion of the reviewer. Omit boilerplate text
   * like "pro:" unless it was written by the reviewer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> pros;

  /**
   * Optional. A link to the company favicon of the publisher. The image dimensions should be
   * favicon size: 16x16 pixels. The image format should be GIF, JPG or PNG.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publisherFavicon;

  /**
   * Optional. The name of the publisher of the product reviews. The information about the
   * publisher, which may be a retailer, manufacturer, reviews service company, or any entity that
   * publishes product reviews.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publisherName;

  /**
   * Optional. The reviewer's overall rating of the product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double rating;

  /**
   * Optional. The country of the review defined by ISO 3166-1 Alpha-2 Country Code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewCountry;

  /**
   * Optional. The language of the review defined by BCP-47 language code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewLanguage;

  /**
   * Optional. The URI of the review landing page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReviewLink reviewLink;

  /**
   * Required. The timestamp indicating when the review was written.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reviewTime;

  /**
   * Optional. The author of the product review. A permanent, unique identifier for the author of
   * the review in the publisher's system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewerId;

  /**
   * Optional. A URI to an image of the reviewed product created by the review author. The URI does
   * not have to end with an image file extension.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> reviewerImageLinks;

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reviewerIsAnonymous;

  /**
   * Optional. The name of the reviewer of the product review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewerUsername;

  /**
   * Optional. Contains SKUs (stock keeping units) associated with a product. Often this matches the
   * product Offer Id in the product feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> skus;

  /**
   * Optional. The name of the subclient of the product reviews. The subclient is an identifier of
   * the product review source. It should be equivalent to the directory provided in the file data
   * source path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subclientName;

  /**
   * Optional. The title of the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Optional. A permanent, unique identifier for the transaction associated with the review in the
   * publisher's system. This ID can be used to indicate that multiple reviews are associated with
   * the same transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String transactionId;

  /**
   * Optional. The name of the aggregator of the product reviews. A publisher may use a reviews
   * aggregator to manage reviews and provide the feeds. This element indicates the use of an
   * aggregator and contains information about the aggregator.
   * @return value or {@code null} for none
   */
  public java.lang.String getAggregatorName() {
    return aggregatorName;
  }

  /**
   * Optional. The name of the aggregator of the product reviews. A publisher may use a reviews
   * aggregator to manage reviews and provide the feeds. This element indicates the use of an
   * aggregator and contains information about the aggregator.
   * @param aggregatorName aggregatorName or {@code null} for none
   */
  public ProductReviewAttributes setAggregatorName(java.lang.String aggregatorName) {
    this.aggregatorName = aggregatorName;
    return this;
  }

  /**
   * Optional. Contains ASINs (Amazon Standard Identification Numbers) associated with a product.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAsins() {
    return asins;
  }

  /**
   * Optional. Contains ASINs (Amazon Standard Identification Numbers) associated with a product.
   * @param asins asins or {@code null} for none
   */
  public ProductReviewAttributes setAsins(java.util.List<java.lang.String> asins) {
    this.asins = asins;
    return this;
  }

  /**
   * Optional. Contains brand names associated with a product.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBrands() {
    return brands;
  }

  /**
   * Optional. Contains brand names associated with a product.
   * @param brands brands or {@code null} for none
   */
  public ProductReviewAttributes setBrands(java.util.List<java.lang.String> brands) {
    this.brands = brands;
    return this;
  }

  /**
   * Optional. The method used to collect the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getCollectionMethod() {
    return collectionMethod;
  }

  /**
   * Optional. The method used to collect the review.
   * @param collectionMethod collectionMethod or {@code null} for none
   */
  public ProductReviewAttributes setCollectionMethod(java.lang.String collectionMethod) {
    this.collectionMethod = collectionMethod;
    return this;
  }

  /**
   * Optional. Contains the disadvantages based on the opinion of the reviewer. Omit boilerplate
   * text like "con:" unless it was written by the reviewer.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCons() {
    return cons;
  }

  /**
   * Optional. Contains the disadvantages based on the opinion of the reviewer. Omit boilerplate
   * text like "con:" unless it was written by the reviewer.
   * @param cons cons or {@code null} for none
   */
  public ProductReviewAttributes setCons(java.util.List<java.lang.String> cons) {
    this.cons = cons;
    return this;
  }

  /**
   * Required. The content of the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Required. The content of the review.
   * @param content content or {@code null} for none
   */
  public ProductReviewAttributes setContent(java.lang.String content) {
    this.content = content;
    return this;
  }

  /**
   * Optional. Contains GTINs (global trade item numbers) associated with a product. Sub-types of
   * GTINs (e.g. UPC, EAN, ISBN, JAN) are supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getGtins() {
    return gtins;
  }

  /**
   * Optional. Contains GTINs (global trade item numbers) associated with a product. Sub-types of
   * GTINs (e.g. UPC, EAN, ISBN, JAN) are supported.
   * @param gtins gtins or {@code null} for none
   */
  public ProductReviewAttributes setGtins(java.util.List<java.lang.String> gtins) {
    this.gtins = gtins;
    return this;
  }

  /**
   * Optional. Indicates whether the review is marked as spam in the publisher's system.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsSpam() {
    return isSpam;
  }

  /**
   * Optional. Indicates whether the review is marked as spam in the publisher's system.
   * @param isSpam isSpam or {@code null} for none
   */
  public ProductReviewAttributes setIsSpam(java.lang.Boolean isSpam) {
    this.isSpam = isSpam;
    return this;
  }

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min attribute.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaxRating() {
    return maxRating;
  }

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min attribute.
   * @param maxRating maxRating or {@code null} for none
   */
  public ProductReviewAttributes setMaxRating(java.lang.Long maxRating) {
    this.maxRating = maxRating;
    return this;
  }

  /**
   * Optional. Contains the ratings associated with the review. The minimum possible number for the
   * rating. This should be the worst possible rating and should not be a value for no rating.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMinRating() {
    return minRating;
  }

  /**
   * Optional. Contains the ratings associated with the review. The minimum possible number for the
   * rating. This should be the worst possible rating and should not be a value for no rating.
   * @param minRating minRating or {@code null} for none
   */
  public ProductReviewAttributes setMinRating(java.lang.Long minRating) {
    this.minRating = minRating;
    return this;
  }

  /**
   * Optional. Contains MPNs (manufacturer part numbers) associated with a product.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getMpns() {
    return mpns;
  }

  /**
   * Optional. Contains MPNs (manufacturer part numbers) associated with a product.
   * @param mpns mpns or {@code null} for none
   */
  public ProductReviewAttributes setMpns(java.util.List<java.lang.String> mpns) {
    this.mpns = mpns;
    return this;
  }

  /**
   * Optional. The URI of the product. This URI can have the same value as the `review_link`
   * element, if the review URI and the product URI are the same.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProductLinks() {
    return productLinks;
  }

  /**
   * Optional. The URI of the product. This URI can have the same value as the `review_link`
   * element, if the review URI and the product URI are the same.
   * @param productLinks productLinks or {@code null} for none
   */
  public ProductReviewAttributes setProductLinks(java.util.List<java.lang.String> productLinks) {
    this.productLinks = productLinks;
    return this;
  }

  /**
   * Optional. Descriptive name of a product.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProductNames() {
    return productNames;
  }

  /**
   * Optional. Descriptive name of a product.
   * @param productNames productNames or {@code null} for none
   */
  public ProductReviewAttributes setProductNames(java.util.List<java.lang.String> productNames) {
    this.productNames = productNames;
    return this;
  }

  /**
   * Optional. Contains the advantages based on the opinion of the reviewer. Omit boilerplate text
   * like "pro:" unless it was written by the reviewer.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPros() {
    return pros;
  }

  /**
   * Optional. Contains the advantages based on the opinion of the reviewer. Omit boilerplate text
   * like "pro:" unless it was written by the reviewer.
   * @param pros pros or {@code null} for none
   */
  public ProductReviewAttributes setPros(java.util.List<java.lang.String> pros) {
    this.pros = pros;
    return this;
  }

  /**
   * Optional. A link to the company favicon of the publisher. The image dimensions should be
   * favicon size: 16x16 pixels. The image format should be GIF, JPG or PNG.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublisherFavicon() {
    return publisherFavicon;
  }

  /**
   * Optional. A link to the company favicon of the publisher. The image dimensions should be
   * favicon size: 16x16 pixels. The image format should be GIF, JPG or PNG.
   * @param publisherFavicon publisherFavicon or {@code null} for none
   */
  public ProductReviewAttributes setPublisherFavicon(java.lang.String publisherFavicon) {
    this.publisherFavicon = publisherFavicon;
    return this;
  }

  /**
   * Optional. The name of the publisher of the product reviews. The information about the
   * publisher, which may be a retailer, manufacturer, reviews service company, or any entity that
   * publishes product reviews.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublisherName() {
    return publisherName;
  }

  /**
   * Optional. The name of the publisher of the product reviews. The information about the
   * publisher, which may be a retailer, manufacturer, reviews service company, or any entity that
   * publishes product reviews.
   * @param publisherName publisherName or {@code null} for none
   */
  public ProductReviewAttributes setPublisherName(java.lang.String publisherName) {
    this.publisherName = publisherName;
    return this;
  }

  /**
   * Optional. The reviewer's overall rating of the product.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRating() {
    return rating;
  }

  /**
   * Optional. The reviewer's overall rating of the product.
   * @param rating rating or {@code null} for none
   */
  public ProductReviewAttributes setRating(java.lang.Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Optional. The country of the review defined by ISO 3166-1 Alpha-2 Country Code.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewCountry() {
    return reviewCountry;
  }

  /**
   * Optional. The country of the review defined by ISO 3166-1 Alpha-2 Country Code.
   * @param reviewCountry reviewCountry or {@code null} for none
   */
  public ProductReviewAttributes setReviewCountry(java.lang.String reviewCountry) {
    this.reviewCountry = reviewCountry;
    return this;
  }

  /**
   * Optional. The language of the review defined by BCP-47 language code.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewLanguage() {
    return reviewLanguage;
  }

  /**
   * Optional. The language of the review defined by BCP-47 language code.
   * @param reviewLanguage reviewLanguage or {@code null} for none
   */
  public ProductReviewAttributes setReviewLanguage(java.lang.String reviewLanguage) {
    this.reviewLanguage = reviewLanguage;
    return this;
  }

  /**
   * Optional. The URI of the review landing page.
   * @return value or {@code null} for none
   */
  public ReviewLink getReviewLink() {
    return reviewLink;
  }

  /**
   * Optional. The URI of the review landing page.
   * @param reviewLink reviewLink or {@code null} for none
   */
  public ProductReviewAttributes setReviewLink(ReviewLink reviewLink) {
    this.reviewLink = reviewLink;
    return this;
  }

  /**
   * Required. The timestamp indicating when the review was written.
   * @return value or {@code null} for none
   */
  public String getReviewTime() {
    return reviewTime;
  }

  /**
   * Required. The timestamp indicating when the review was written.
   * @param reviewTime reviewTime or {@code null} for none
   */
  public ProductReviewAttributes setReviewTime(String reviewTime) {
    this.reviewTime = reviewTime;
    return this;
  }

  /**
   * Optional. The author of the product review. A permanent, unique identifier for the author of
   * the review in the publisher's system.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewerId() {
    return reviewerId;
  }

  /**
   * Optional. The author of the product review. A permanent, unique identifier for the author of
   * the review in the publisher's system.
   * @param reviewerId reviewerId or {@code null} for none
   */
  public ProductReviewAttributes setReviewerId(java.lang.String reviewerId) {
    this.reviewerId = reviewerId;
    return this;
  }

  /**
   * Optional. A URI to an image of the reviewed product created by the review author. The URI does
   * not have to end with an image file extension.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getReviewerImageLinks() {
    return reviewerImageLinks;
  }

  /**
   * Optional. A URI to an image of the reviewed product created by the review author. The URI does
   * not have to end with an image file extension.
   * @param reviewerImageLinks reviewerImageLinks or {@code null} for none
   */
  public ProductReviewAttributes setReviewerImageLinks(java.util.List<java.lang.String> reviewerImageLinks) {
    this.reviewerImageLinks = reviewerImageLinks;
    return this;
  }

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReviewerIsAnonymous() {
    return reviewerIsAnonymous;
  }

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * @param reviewerIsAnonymous reviewerIsAnonymous or {@code null} for none
   */
  public ProductReviewAttributes setReviewerIsAnonymous(java.lang.Boolean reviewerIsAnonymous) {
    this.reviewerIsAnonymous = reviewerIsAnonymous;
    return this;
  }

  /**
   * Optional. The name of the reviewer of the product review.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewerUsername() {
    return reviewerUsername;
  }

  /**
   * Optional. The name of the reviewer of the product review.
   * @param reviewerUsername reviewerUsername or {@code null} for none
   */
  public ProductReviewAttributes setReviewerUsername(java.lang.String reviewerUsername) {
    this.reviewerUsername = reviewerUsername;
    return this;
  }

  /**
   * Optional. Contains SKUs (stock keeping units) associated with a product. Often this matches the
   * product Offer Id in the product feed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSkus() {
    return skus;
  }

  /**
   * Optional. Contains SKUs (stock keeping units) associated with a product. Often this matches the
   * product Offer Id in the product feed.
   * @param skus skus or {@code null} for none
   */
  public ProductReviewAttributes setSkus(java.util.List<java.lang.String> skus) {
    this.skus = skus;
    return this;
  }

  /**
   * Optional. The name of the subclient of the product reviews. The subclient is an identifier of
   * the product review source. It should be equivalent to the directory provided in the file data
   * source path.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubclientName() {
    return subclientName;
  }

  /**
   * Optional. The name of the subclient of the product reviews. The subclient is an identifier of
   * the product review source. It should be equivalent to the directory provided in the file data
   * source path.
   * @param subclientName subclientName or {@code null} for none
   */
  public ProductReviewAttributes setSubclientName(java.lang.String subclientName) {
    this.subclientName = subclientName;
    return this;
  }

  /**
   * Optional. The title of the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Optional. The title of the review.
   * @param title title or {@code null} for none
   */
  public ProductReviewAttributes setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Optional. A permanent, unique identifier for the transaction associated with the review in the
   * publisher's system. This ID can be used to indicate that multiple reviews are associated with
   * the same transaction.
   * @return value or {@code null} for none
   */
  public java.lang.String getTransactionId() {
    return transactionId;
  }

  /**
   * Optional. A permanent, unique identifier for the transaction associated with the review in the
   * publisher's system. This ID can be used to indicate that multiple reviews are associated with
   * the same transaction.
   * @param transactionId transactionId or {@code null} for none
   */
  public ProductReviewAttributes setTransactionId(java.lang.String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  @Override
  public ProductReviewAttributes set(String fieldName, Object value) {
    return (ProductReviewAttributes) super.set(fieldName, value);
  }

  @Override
  public ProductReviewAttributes clone() {
    return (ProductReviewAttributes) super.clone();
  }

}
