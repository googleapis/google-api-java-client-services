{
  "name": "displayvideo",
  "batchPath": "batch",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/doubleclickbidmanager": {
          "description": "View and manage your reports in DoubleClick Bid Manager"
        },
        "https://www.googleapis.com/auth/display-video": {
          "description": "Create, see, edit, and permanently delete your Display & Video 360 entities and reports"
        },
        "https://www.googleapis.com/auth/display-video-mediaplanning": {
          "description": "Create, see, and edit Display & Video 360 Campaign entities and see billing invoices"
        }
      }
    }
  },
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "title": "Display & Video 360 API",
  "servicePath": "",
  "resources": {
    "inventorySourceGroups": {
      "resources": {
        "assignedInventorySources": {
          "methods": {
            "create": {
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.create",
              "request": {
                "$ref": "AssignedInventorySource"
              },
              "response": {
                "$ref": "AssignedInventorySource"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "description": "Creates an assignment between an inventory source and an inventory source group.",
              "parameters": {
                "inventorySourceGroupId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "Required. The ID of the inventory source group to which the assignment will be assigned.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "advertiserId": {
                  "location": "query",
                  "format": "int64",
                  "type": "string",
                  "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner will not have access to this assigned inventory source."
                },
                "partnerId": {
                  "location": "query",
                  "description": "The ID of the partner that owns the parent inventory source group. Only this partner will have write access to this assigned inventory source.",
                  "format": "int64",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources",
              "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources"
            },
            "delete": {
              "httpMethod": "DELETE",
              "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources/{assignedInventorySourcesId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources/{+assignedInventorySourceId}",
              "parameters": {
                "advertiserId": {
                  "type": "string",
                  "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to this assigned inventory source.",
                  "format": "int64",
                  "location": "query"
                },
                "inventorySourceGroupId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Required. The ID of the inventory source group to which this assignment is assigned.",
                  "required": true,
                  "format": "int64"
                },
                "partnerId": {
                  "type": "string",
                  "description": "The ID of the partner that owns the parent inventory source group. Only this partner has write access to this assigned inventory source.",
                  "location": "query",
                  "format": "int64"
                },
                "assignedInventorySourceId": {
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the assigned inventory source to delete.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Deletes the assignment between an inventory source and an inventory source group.",
              "parameterOrder": [
                "inventorySourceGroupId",
                "assignedInventorySourceId"
              ],
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.delete"
            },
            "list": {
              "description": "Lists inventory sources assigned to an inventory source group.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "ListAssignedInventorySourcesResponse"
              },
              "parameters": {
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `assignedInventorySourceId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `assignedInventorySourceId desc`.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedInventorySources` method. If not specified, the first page of results will be returned.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "description": "Allows filtering by assigned inventory source fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedInventorySourceId` The length of this field should be no more than 500 characters.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32"
                },
                "inventorySourceGroupId": {
                  "type": "string",
                  "description": "Required. The ID of the inventory source group to which these assignments are assigned.",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "location": "path"
                },
                "advertiserId": {
                  "location": "query",
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the advertiser that has access to the assignment. If the parent inventory source group is partner-owned, only advertisers to which the parent group is explicitly shared can access the assigned inventory source."
                },
                "partnerId": {
                  "description": "The ID of the partner that has access to the assignment. If the parent inventory source group is advertiser-owned, the assignment cannot be accessed via a partner.",
                  "type": "string",
                  "location": "query",
                  "format": "int64"
                }
              },
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.list",
              "httpMethod": "GET",
              "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources",
              "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources"
            },
            "bulkEdit": {
              "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}/assignedInventorySources:bulkEdit",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "BulkEditAssignedInventorySourcesRequest"
              },
              "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}/assignedInventorySources:bulkEdit",
              "id": "displayvideo.inventorySourceGroups.assignedInventorySources.bulkEdit",
              "parameterOrder": [
                "inventorySourceGroupId"
              ],
              "parameters": {
                "inventorySourceGroupId": {
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Required. The ID of the inventory source group to which the assignments are assigned.",
                  "location": "path"
                }
              },
              "description": "Bulk edits multiple assignments between inventory sources and a single inventory source group. The operation will delete the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.deleted_assigned_inventory_sources and then create the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.created_assigned_inventory_sources.",
              "response": {
                "$ref": "BulkEditAssignedInventorySourcesResponse"
              }
            }
          }
        }
      },
      "methods": {
        "patch": {
          "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupId}",
          "request": {
            "$ref": "InventorySourceGroup"
          },
          "path": "v1/inventorySourceGroups/{inventorySourceGroupId}",
          "description": "Updates an inventory source group. Returns the updated inventory source group if successful.",
          "id": "displayvideo.inventorySourceGroups.patch",
          "response": {
            "$ref": "InventorySourceGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "httpMethod": "PATCH",
          "parameterOrder": [
            "inventorySourceGroupId"
          ],
          "parameters": {
            "inventorySourceGroupId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Output only. The unique ID of the inventory source group. Assigned by the system.",
              "format": "int64"
            },
            "advertiserId": {
              "type": "string",
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.",
              "format": "int64",
              "location": "query"
            },
            "partnerId": {
              "format": "int64",
              "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to this group.",
              "type": "string",
              "location": "query"
            },
            "updateMask": {
              "description": "Required. The mask to control which fields to update.",
              "format": "google-fieldmask",
              "type": "string",
              "location": "query"
            }
          }
        },
        "list": {
          "response": {
            "$ref": "ListInventorySourceGroupsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.inventorySourceGroups.list",
          "path": "v1/inventorySourceGroups",
          "parameterOrder": [],
          "description": "Lists inventory source groups that are accessible to the current user. The order is defined by the order_by parameter.",
          "parameters": {
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.",
              "type": "string",
              "location": "query"
            },
            "advertiserId": {
              "format": "int64",
              "location": "query",
              "description": "The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.",
              "type": "string"
            },
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `inventorySourceGroupId` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "type": "string"
            },
            "pageSize": {
              "type": "integer",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "location": "query",
              "format": "int32"
            },
            "filter": {
              "location": "query",
              "description": "Allows filtering by inventory source group properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `inventorySourceGroupId` The length of this field should be no more than 500 characters.",
              "type": "string"
            },
            "partnerId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "The ID of the partner that has access to the inventory source group. A partner cannot access advertiser-owned inventory source groups."
            }
          },
          "flatPath": "v1/inventorySourceGroups",
          "httpMethod": "GET"
        },
        "delete": {
          "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}",
          "id": "displayvideo.inventorySourceGroups.delete",
          "description": "Deletes an inventory source group.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "inventorySourceGroupId"
          ],
          "httpMethod": "DELETE",
          "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}",
          "parameters": {
            "inventorySourceGroupId": {
              "type": "string",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the inventory source group to delete.",
              "location": "path"
            },
            "partnerId": {
              "format": "int64",
              "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to this group.",
              "type": "string",
              "location": "query"
            },
            "advertiserId": {
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.",
              "type": "string",
              "location": "query",
              "format": "int64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "get": {
          "response": {
            "$ref": "InventorySourceGroup"
          },
          "id": "displayvideo.inventorySourceGroups.get",
          "flatPath": "v1/inventorySourceGroups/{inventorySourceGroupsId}",
          "httpMethod": "GET",
          "description": "Gets an inventory source group.",
          "parameterOrder": [
            "inventorySourceGroupId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "inventorySourceGroupId": {
              "description": "Required. The ID of the inventory source group to fetch.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "required": true
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the inventory source group. A partner cannot access an advertiser-owned inventory source group.",
              "location": "query",
              "type": "string",
              "format": "int64"
            },
            "advertiserId": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group."
            }
          },
          "path": "v1/inventorySourceGroups/{+inventorySourceGroupId}"
        },
        "create": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "request": {
            "$ref": "InventorySourceGroup"
          },
          "description": "Creates a new inventory source group. Returns the newly created inventory source group if successful.",
          "path": "v1/inventorySourceGroups",
          "httpMethod": "POST",
          "response": {
            "$ref": "InventorySourceGroup"
          },
          "parameters": {
            "partnerId": {
              "format": "int64",
              "type": "string",
              "description": "The ID of the partner that owns the inventory source group. Only this partner will have write access to this group. Only advertisers to which this group is explicitly shared will have read access to this group.",
              "location": "query"
            },
            "advertiserId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the advertiser that owns the inventory source group. The parent partner will not have access to this group.",
              "format": "int64"
            }
          },
          "id": "displayvideo.inventorySourceGroups.create",
          "parameterOrder": [],
          "flatPath": "v1/inventorySourceGroups"
        }
      }
    },
    "floodlightGroups": {
      "methods": {
        "get": {
          "id": "displayvideo.floodlightGroups.get",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "floodlightGroupId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the Floodlight group to fetch.",
              "location": "path",
              "format": "int64"
            },
            "partnerId": {
              "format": "int64",
              "location": "query",
              "description": "Required. The partner context by which the Floodlight group is being accessed.",
              "type": "string"
            }
          },
          "path": "v1/floodlightGroups/{+floodlightGroupId}",
          "response": {
            "$ref": "FloodlightGroup"
          },
          "description": "Gets a Floodlight group.",
          "httpMethod": "GET",
          "flatPath": "v1/floodlightGroups/{floodlightGroupsId}",
          "parameterOrder": [
            "floodlightGroupId"
          ]
        },
        "patch": {
          "httpMethod": "PATCH",
          "parameters": {
            "floodlightGroupId": {
              "format": "int64",
              "required": true,
              "type": "string",
              "description": "Output only. The unique ID of the Floodlight group. Assigned by the system.",
              "location": "path"
            },
            "partnerId": {
              "location": "query",
              "type": "string",
              "format": "int64",
              "description": "Required. The partner context by which the Floodlight group is being accessed."
            },
            "updateMask": {
              "type": "string",
              "description": "Required. The mask to control which fields to update.",
              "format": "google-fieldmask",
              "location": "query"
            }
          },
          "parameterOrder": [
            "floodlightGroupId"
          ],
          "flatPath": "v1/floodlightGroups/{floodlightGroupId}",
          "description": "Updates an existing Floodlight group. Returns the updated Floodlight group if successful.",
          "path": "v1/floodlightGroups/{floodlightGroupId}",
          "request": {
            "$ref": "FloodlightGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.floodlightGroups.patch",
          "response": {
            "$ref": "FloodlightGroup"
          }
        }
      }
    },
    "customLists": {
      "methods": {
        "list": {
          "parameters": {
            "advertiserId": {
              "format": "int64",
              "description": "The ID of the DV360 advertiser that has access to the fetched custom lists.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomLists` method. If not specified, the first page of results will be returned."
            },
            "pageSize": {
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer",
              "format": "int32",
              "location": "query"
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "Allows filtering by custom list fields. Supported syntax: * Filter expressions for custom lists currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All custom lists for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters."
            },
            "orderBy": {
              "description": "Field by which to sort the list. Acceptable values are: * `customListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "v1/customLists",
          "parameterOrder": [],
          "description": "Lists custom lists. The order is defined by the order_by parameter.",
          "id": "displayvideo.customLists.list",
          "path": "v1/customLists",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "ListCustomListsResponse"
          }
        },
        "get": {
          "id": "displayvideo.customLists.get",
          "response": {
            "$ref": "CustomList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v1/customLists/{customListsId}",
          "parameterOrder": [
            "customListId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "advertiserId": {
              "location": "query",
              "format": "int64",
              "description": "The ID of the DV360 advertiser that has access to the fetched custom lists.",
              "type": "string"
            },
            "customListId": {
              "required": true,
              "description": "Required. The ID of the custom list to fetch.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64"
            }
          },
          "description": "Gets a custom list.",
          "path": "v1/customLists/{+customListId}"
        }
      }
    },
    "firstAndThirdPartyAudiences": {
      "methods": {
        "list": {
          "parameters": {
            "partnerId": {
              "location": "query",
              "format": "int64",
              "description": "The ID of the partner that has access to the fetched first and third party audiences.",
              "type": "string"
            },
            "advertiserId": {
              "location": "query",
              "type": "string",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the fetched first and third party audiences."
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListFirstAndThirdPartyAudiences` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "pageSize": {
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer",
              "format": "int32",
              "location": "query"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Allows filtering by first and third party audience fields. Supported syntax: * Filter expressions for first and third party audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All first and third party audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters."
            },
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `firstAndThirdPartyAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "type": "string"
            }
          },
          "path": "v1/firstAndThirdPartyAudiences",
          "parameterOrder": [],
          "response": {
            "$ref": "ListFirstAndThirdPartyAudiencesResponse"
          },
          "description": "Lists first and third party audiences. The order is defined by the order_by parameter.",
          "httpMethod": "GET",
          "id": "displayvideo.firstAndThirdPartyAudiences.list",
          "flatPath": "v1/firstAndThirdPartyAudiences",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "get": {
          "id": "displayvideo.firstAndThirdPartyAudiences.get",
          "response": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "path": "v1/firstAndThirdPartyAudiences/{+firstAndThirdPartyAudienceId}",
          "httpMethod": "GET",
          "description": "Gets a first and third party audience.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameterOrder": [
            "firstAndThirdPartyAudienceId"
          ],
          "flatPath": "v1/firstAndThirdPartyAudiences/{firstAndThirdPartyAudiencesId}",
          "parameters": {
            "partnerId": {
              "location": "query",
              "description": "The ID of the partner that has access to the fetched first and third party audience.",
              "format": "int64",
              "type": "string"
            },
            "firstAndThirdPartyAudienceId": {
              "format": "int64",
              "description": "Required. The ID of the first and third party audience to fetch.",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$"
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "The ID of the advertiser that has access to the fetched first and third party audience."
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "download": {
          "parameterOrder": [
            "resourceName"
          ],
          "description": "Downloads media. Download is supported on the URI `/download/{resource_name=**}?alt=media.` **Note**: Download requests will not be successful without including `alt=media` query string.",
          "id": "displayvideo.media.download",
          "response": {
            "$ref": "GoogleBytestreamMedia"
          },
          "path": "download/{+resourceName}",
          "supportsMediaDownload": true,
          "scopes": [
            "https://www.googleapis.com/auth/display-video",
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "httpMethod": "GET",
          "flatPath": "download/{downloadId}",
          "parameters": {
            "resourceName": {
              "description": "Name of the media that is being downloaded. See ReadRequest.resource_name.",
              "required": true,
              "type": "string",
              "pattern": "^.*$",
              "location": "path"
            }
          }
        }
      }
    },
    "combinedAudiences": {
      "methods": {
        "get": {
          "id": "displayvideo.combinedAudiences.get",
          "parameters": {
            "combinedAudienceId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "description": "Required. The ID of the combined audience to fetch.",
              "type": "string",
              "format": "int64"
            },
            "advertiserId": {
              "type": "string",
              "format": "int64",
              "description": "The ID of the advertiser that has access to the fetched combined audience.",
              "location": "query"
            },
            "partnerId": {
              "format": "int64",
              "type": "string",
              "description": "The ID of the partner that has access to the fetched combined audience.",
              "location": "query"
            }
          },
          "flatPath": "v1/combinedAudiences/{combinedAudiencesId}",
          "path": "v1/combinedAudiences/{+combinedAudienceId}",
          "description": "Gets a combined audience.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "CombinedAudience"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "combinedAudienceId"
          ]
        },
        "list": {
          "parameterOrder": [],
          "description": "Lists combined audiences. The order is defined by the order_by parameter.",
          "path": "v1/combinedAudiences",
          "flatPath": "v1/combinedAudiences",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
            },
            "partnerId": {
              "description": "The ID of the partner that has access to the fetched combined audiences.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `combinedAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`."
            },
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCombinedAudiences` method. If not specified, the first page of results will be returned.",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "type": "string",
              "description": "Allows filtering by combined audience fields. Supported syntax: * Filter expressions for combined audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All combined audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters.",
              "location": "query"
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched combined audiences.",
              "location": "query",
              "type": "string",
              "format": "int64"
            }
          },
          "response": {
            "$ref": "ListCombinedAudiencesResponse"
          },
          "id": "displayvideo.combinedAudiences.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        }
      }
    },
    "advertisers": {
      "resources": {
        "assets": {
          "methods": {
            "upload": {
              "id": "displayvideo.advertisers.assets.upload",
              "httpMethod": "POST",
              "flatPath": "v1/advertisers/{advertisersId}/assets",
              "description": "Uploads an asset. Returns the ID of the newly uploaded asset if successful. The asset file size should be no more than 10 MB for images, 200 MB for ZIP files, and 1 GB for videos.",
              "mediaUpload": {
                "protocols": {
                  "simple": {
                    "path": "/upload/v1/advertisers/{+advertiserId}/assets",
                    "multipart": true
                  }
                },
                "accept": [
                  "*/*"
                ]
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser this asset belongs to.",
                  "format": "int64",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "CreateAssetResponse"
              },
              "supportsMediaUpload": true,
              "path": "v1/advertisers/{+advertiserId}/assets",
              "request": {
                "$ref": "CreateAssetRequest"
              }
            }
          }
        },
        "insertionOrders": {
          "methods": {
            "create": {
              "flatPath": "v1/advertisers/{advertisersId}/insertionOrders",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v1/advertisers/{+advertiserId}/insertionOrders",
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.insertionOrders.create",
              "request": {
                "$ref": "InsertionOrder"
              },
              "response": {
                "$ref": "InsertionOrder"
              },
              "parameters": {
                "advertiserId": {
                  "description": "Output only. The unique ID of the advertiser the insertion order belongs to.",
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "required": true
                }
              },
              "description": "Creates a new insertion order. Returns the newly created insertion order if successful.",
              "httpMethod": "POST"
            },
            "patch": {
              "response": {
                "$ref": "InsertionOrder"
              },
              "description": "Updates an existing insertion order. Returns the updated insertion order if successful.",
              "flatPath": "v1/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.insertionOrders.patch",
              "httpMethod": "PATCH",
              "path": "v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "request": {
                "$ref": "InsertionOrder"
              },
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Required. The mask to control which fields to update.",
                  "format": "google-fieldmask",
                  "location": "query"
                },
                "insertionOrderId": {
                  "location": "path",
                  "description": "Output only. The unique ID of the insertion order. Assigned by the system.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true
                },
                "advertiserId": {
                  "location": "path",
                  "format": "int64",
                  "description": "Output only. The unique ID of the advertiser the insertion order belongs to.",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "delete": {
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "description": "Deletes an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist. The insertion order should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "insertionOrderId": {
                  "pattern": "^[^/]+$",
                  "description": "The ID of the insertion order we need to delete.",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                },
                "advertiserId": {
                  "description": "The ID of the advertiser this insertion order belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "id": "displayvideo.advertisers.insertionOrders.delete",
              "flatPath": "v1/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}",
              "httpMethod": "DELETE"
            },
            "get": {
              "id": "displayvideo.advertisers.insertionOrders.get",
              "path": "v1/advertisers/{+advertiserId}/insertionOrders/{+insertionOrderId}",
              "parameterOrder": [
                "advertiserId",
                "insertionOrderId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "GET",
              "parameters": {
                "insertionOrderId": {
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The ID of the insertion order to fetch.",
                  "required": true
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the advertiser this insertion order belongs to.",
                  "format": "int64"
                }
              },
              "description": "Gets an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist.",
              "response": {
                "$ref": "InsertionOrder"
              },
              "flatPath": "v1/advertisers/{advertisersId}/insertionOrders/{insertionOrdersId}"
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInsertionOrders` method. If not specified, the first page of results will be returned.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "advertiserId": {
                  "required": true,
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser to list insertion orders for."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows filtering by insertion order properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `campaignId` - `entityStatus` Examples: * All insertion orders under a campaign: `campaignId=\"1234\"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` insertion orders under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\")` The length of this field should be no more than 500 characters."
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * \"displayName\" (default) * \"entityStatus\" The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`."
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/advertisers/{advertisersId}/insertionOrders",
              "response": {
                "$ref": "ListInsertionOrdersResponse"
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v1/advertisers/{+advertiserId}/insertionOrders",
              "id": "displayvideo.advertisers.insertionOrders.list",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Lists insertion orders in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, insertion orders with `ENTITY_STATUS_ARCHIVED` will not be included in the results."
            }
          }
        },
        "locationLists": {
          "resources": {
            "assignedLocations": {
              "methods": {
                "list": {
                  "flatPath": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "httpMethod": "GET",
                  "description": "Lists locations assigned to a location list.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.list",
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ],
                  "path": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedLocations` method. If not specified, the first page of results will be returned."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows filtering by location list assignment fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedLocationId` The length of this field should be no more than 500 characters."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "format": "int32"
                    },
                    "locationListId": {
                      "location": "path",
                      "format": "int64",
                      "description": "Required. The ID of the location list to which these assignments are assigned.",
                      "required": true,
                      "type": "string"
                    },
                    "advertiserId": {
                      "required": true,
                      "format": "int64",
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field by which to sort the list. Acceptable values are: * `assignedLocationId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `assignedLocationId desc`."
                    }
                  },
                  "response": {
                    "$ref": "ListAssignedLocationsResponse"
                  }
                },
                "create": {
                  "parameters": {
                    "locationListId": {
                      "required": true,
                      "description": "Required. The ID of the location list for which the assignment will be created.",
                      "location": "path",
                      "format": "int64",
                      "type": "string"
                    },
                    "advertiserId": {
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "format": "int64",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "AssignedLocation"
                  },
                  "response": {
                    "$ref": "AssignedLocation"
                  },
                  "description": "Creates an assignment between a location and a location list.",
                  "flatPath": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.create",
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ]
                },
                "bulkEdit": {
                  "parameters": {
                    "advertiserId": {
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "required": true,
                      "format": "int64",
                      "type": "string"
                    },
                    "locationListId": {
                      "required": true,
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "format": "int64",
                      "description": "Required. The ID of the location list to which these assignments are assigned.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "BulkEditAssignedLocationsResponse"
                  },
                  "flatPath": "v1/advertisers/{advertiserId}/locationLists/{locationListsId}/assignedLocations:bulkEdit",
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.bulkEdit",
                  "request": {
                    "$ref": "BulkEditAssignedLocationsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Bulk edits multiple assignments between locations and a single location list. The operation will delete the assigned locations provided in BulkEditAssignedLocationsRequest.deleted_assigned_locations and then create the assigned locations provided in BulkEditAssignedLocationsRequest.created_assigned_locations.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId"
                  ],
                  "path": "v1/advertisers/{advertiserId}/locationLists/{+locationListId}/assignedLocations:bulkEdit"
                },
                "delete": {
                  "id": "displayvideo.advertisers.locationLists.assignedLocations.delete",
                  "parameterOrder": [
                    "advertiserId",
                    "locationListId",
                    "assignedLocationId"
                  ],
                  "description": "Deletes the assignment between a location and a location list.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "flatPath": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{assignedLocationsId}",
                  "parameters": {
                    "locationListId": {
                      "location": "path",
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "description": "Required. The ID of the location list to which this assignment is assigned."
                    },
                    "advertiserId": {
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                      "required": true,
                      "type": "string",
                      "format": "int64"
                    },
                    "assignedLocationId": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the assigned location to delete.",
                      "required": true,
                      "format": "int64"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{+assignedLocationId}",
                  "httpMethod": "DELETE"
                }
              }
            }
          },
          "methods": {
            "create": {
              "parameters": {
                "advertiserId": {
                  "description": "Required. The ID of the DV360 advertiser to which the location list belongs.",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "LocationList"
              },
              "request": {
                "$ref": "LocationList"
              },
              "description": "Creates a new location list. Returns the newly created location list if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.locationLists.create",
              "httpMethod": "POST",
              "flatPath": "v1/advertisers/{advertisersId}/locationLists",
              "path": "v1/advertisers/{+advertiserId}/locationLists"
            },
            "get": {
              "parameterOrder": [
                "advertiserId",
                "locationListId"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/advertisers/{advertisersId}/locationLists/{locationListsId}",
              "response": {
                "$ref": "LocationList"
              },
              "parameters": {
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the DV360 advertiser to which the fetched location list belongs.",
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "locationListId": {
                  "description": "Required. The ID of the location list to fetch.",
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "description": "Gets a location list.",
              "path": "v1/advertisers/{+advertiserId}/locationLists/{+locationListId}",
              "id": "displayvideo.advertisers.locationLists.get",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/locationLists",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Allows filtering by location list fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `locationType` Examples: * All regional location list: `locationType=\"TARGETING_LOCATION_TYPE_REGIONAL\"` * All proximity location list: `locationType=\"TARGETING_LOCATION_TYPE_PROXIMITY\"`",
                  "type": "string"
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "description": "Required. The ID of the DV360 advertiser to which the fetched location lists belong."
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * `locationListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Requested page size. Must be between `1` and `100`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLocationLists` method. If not specified, the first page of results will be returned."
                }
              },
              "path": "v1/advertisers/{+advertiserId}/locationLists",
              "description": "Lists location lists based on a given advertiser id.",
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.locationLists.list",
              "response": {
                "$ref": "ListLocationListsResponse"
              }
            },
            "patch": {
              "parameters": {
                "locationListId": {
                  "type": "string",
                  "format": "int64",
                  "location": "path",
                  "description": "Output only. The unique ID of the location list. Assigned by the system.",
                  "required": true
                },
                "advertiserId": {
                  "format": "int64",
                  "description": "Required. The ID of the DV360 advertiser to which the location lists belongs.",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. The mask to control which fields to update."
                }
              },
              "description": "Updates a location list. Returns the updated location list if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "LocationList"
              },
              "flatPath": "v1/advertisers/{advertisersId}/locationLists/{locationListId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "advertiserId",
                "locationListId"
              ],
              "request": {
                "$ref": "LocationList"
              },
              "path": "v1/advertisers/{+advertiserId}/locationLists/{locationListId}",
              "id": "displayvideo.advertisers.locationLists.patch"
            }
          }
        },
        "creatives": {
          "methods": {
            "list": {
              "id": "displayvideo.advertisers.creatives.list",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "GET",
              "parameters": {
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `creativeId` (default) * `createTime` * `mediaDuration` * `dimensions` (sorts by width first, then by height) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `createTime desc`.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCreatives` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows filtering by creative properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restriction for the same field must be combined by `OR`. * Restriction for different fields must be combined by `AND`. * Between `(` and `)` there can only be restrictions combined by `OR` for the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)` for the following fields: - `entityStatus` - `creativeType`. - `dimensions` - `minDuration` - `maxDuration` - `approvalStatus` - `exchangeReviewStatus` - `dynamic` - `creativeId` * The operator must be `HAS (:)` for the following fields: - `lineItemIds` * For `entityStatus`, `minDuration`, `maxDuration`, and `dynamic` there may be at most one restriction. * For `dimensions`, the value is in the form of `\"{width}x{height}\"`. * For `exchangeReviewStatus`, the value is in the form of `{exchange}-{reviewStatus}`. * For `minDuration` and `maxDuration`, the value is in the form of `\"{duration}s\"`. Only seconds are supported with millisecond granularity. * There may be multiple `lineItemIds` restrictions in order to search against multiple possible line item IDs. * There may be multiple `creativeId` restrictions in order to search against multiple possible creative IDs. Examples: * All native creatives: `creativeType=\"CREATIVE_TYPE_NATIVE\"` * All active creatives with 300x400 or 50x100 dimensions: `entityStatus=\"ENTITY_STATUS_ACTIVE\" AND (dimensions=\"300x400\" OR dimensions=\"50x100\")` * All dynamic creatives that are approved by AdX or AppNexus, with a minimum duration of 5 seconds and 200ms. `dynamic=\"true\" AND minDuration=\"5.2s\" AND (exchangeReviewStatus=\"EXCHANGE_GOOGLE_AD_MANAGER-REVIEW_STATUS_APPROVED\" OR exchangeReviewStatus=\"EXCHANGE_APPNEXUS-REVIEW_STATUS_APPROVED\")` * All video creatives that are associated with line item ID 1 or 2: `creativeType=\"CREATIVE_TYPE_VIDEO\" AND (lineItemIds:1 OR lineItemIds:2)` * Find creatives by multiple creative IDs: `creativeId=1 OR creativeId=2` The length of this field should be no more than 500 characters."
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The ID of the advertiser to list creatives for.",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v1/advertisers/{+advertiserId}/creatives",
              "description": "Lists creatives in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, creatives with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "flatPath": "v1/advertisers/{advertisersId}/creatives"
            },
            "patch": {
              "response": {
                "$ref": "Creative"
              },
              "id": "displayvideo.advertisers.creatives.patch",
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "description": "Output only. The unique ID of the advertiser the creative belongs to.",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "creativeId": {
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "description": "Output only. The unique ID of the creative. Assigned by the system.",
                  "pattern": "^[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "type": "string",
                  "description": "Required. The mask to control which fields to update.",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              },
              "flatPath": "v1/advertisers/{advertisersId}/creatives/{creativesId}",
              "request": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Updates an existing creative. Returns the updated creative if successful.",
              "path": "v1/advertisers/{+advertiserId}/creatives/{+creativeId}"
            },
            "delete": {
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/creatives/{creativesId}",
              "parameters": {
                "creativeId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "The ID of the creative to be deleted.",
                  "format": "int64",
                  "type": "string"
                },
                "advertiserId": {
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "The ID of the advertiser this creative belongs to.",
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.creatives.delete",
              "httpMethod": "DELETE",
              "path": "v1/advertisers/{+advertiserId}/creatives/{+creativeId}",
              "response": {
                "$ref": "Empty"
              },
              "description": "Deletes a creative. Returns error code `NOT_FOUND` if the creative does not exist. The creative should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, before it can be deleted."
            },
            "get": {
              "path": "v1/advertisers/{+advertiserId}/creatives/{+creativeId}",
              "parameters": {
                "advertiserId": {
                  "description": "Required. The ID of the advertiser this creative belongs to.",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$"
                },
                "creativeId": {
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "type": "string",
                  "description": "Required. The ID of the creative to fetch."
                }
              },
              "description": "Gets a creative.",
              "response": {
                "$ref": "Creative"
              },
              "flatPath": "v1/advertisers/{advertisersId}/creatives/{creativesId}",
              "parameterOrder": [
                "advertiserId",
                "creativeId"
              ],
              "httpMethod": "GET",
              "id": "displayvideo.advertisers.creatives.get",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "create": {
              "description": "Creates a new creative. Returns the newly created creative if successful.",
              "flatPath": "v1/advertisers/{advertisersId}/creatives",
              "request": {
                "$ref": "Creative"
              },
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "description": "Output only. The unique ID of the advertiser the creative belongs to.",
                  "location": "path",
                  "required": true,
                  "pattern": "^[^/]+$"
                }
              },
              "id": "displayvideo.advertisers.creatives.create",
              "parameterOrder": [
                "advertiserId"
              ],
              "path": "v1/advertisers/{+advertiserId}/creatives",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "Creative"
              }
            }
          }
        },
        "channels": {
          "resources": {
            "sites": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "response": {
                    "$ref": "ListSitesResponse"
                  },
                  "id": "displayvideo.advertisers.channels.sites.list",
                  "description": "Lists sites in a channel.",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "partnerId": {
                      "location": "query",
                      "description": "The ID of the partner that owns the parent channel.",
                      "type": "string",
                      "format": "int64"
                    },
                    "pageSize": {
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "channelId": {
                      "pattern": "^[^/]+$",
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The ID of the parent channel to which the requested sites belong."
                    },
                    "advertiserId": {
                      "required": true,
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "format": "int64"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `urlOrAppId desc`."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains \"google\": `urlOrAppId : \"google\"`"
                    }
                  },
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "flatPath": "v1/advertisers/{advertisersId}/channels/{channelsId}/sites",
                  "httpMethod": "GET",
                  "path": "v1/advertisers/{+advertiserId}/channels/{+channelId}/sites"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "flatPath": "v1/advertisers/{advertiserId}/channels/{channelsId}/sites/{sitesId}",
                  "id": "displayvideo.advertisers.channels.sites.delete",
                  "path": "v1/advertisers/{advertiserId}/channels/{+channelId}/sites/{+urlOrAppId}",
                  "description": "Deletes a site from a channel.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId",
                    "urlOrAppId"
                  ],
                  "parameters": {
                    "partnerId": {
                      "format": "int64",
                      "type": "string",
                      "description": "The ID of the partner that owns the parent channel.",
                      "location": "query"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "required": true,
                      "type": "string",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "location": "path"
                    },
                    "urlOrAppId": {
                      "description": "Required. The URL or app ID of the site to delete.",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "channelId": {
                      "type": "string",
                      "description": "Required. The ID of the parent channel to which the site belongs.",
                      "format": "int64",
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Site"
                  },
                  "response": {
                    "$ref": "Site"
                  },
                  "flatPath": "v1/advertisers/{advertiserId}/channels/{channelsId}/sites",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "description": "Creates a site in a channel.",
                  "parameters": {
                    "channelId": {
                      "type": "string",
                      "location": "path",
                      "format": "int64",
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the parent channel in which the site will be created.",
                      "required": true
                    },
                    "partnerId": {
                      "location": "query",
                      "type": "string",
                      "description": "The ID of the partner that owns the parent channel.",
                      "format": "int64"
                    },
                    "advertiserId": {
                      "format": "int64",
                      "type": "string",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/advertisers/{advertiserId}/channels/{+channelId}/sites",
                  "id": "displayvideo.advertisers.channels.sites.create"
                },
                "bulkEdit": {
                  "flatPath": "v1/advertisers/{advertiserId}/channels/{channelsId}/sites:bulkEdit",
                  "id": "displayvideo.advertisers.channels.sites.bulkEdit",
                  "parameters": {
                    "advertiserId": {
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "channelId": {
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "format": "int64",
                      "location": "path",
                      "description": "Required. The ID of the parent channel to which the sites belong.",
                      "required": true
                    }
                  },
                  "path": "v1/advertisers/{advertiserId}/channels/{+channelId}/sites:bulkEdit",
                  "parameterOrder": [
                    "advertiserId",
                    "channelId"
                  ],
                  "request": {
                    "$ref": "BulkEditSitesRequest"
                  },
                  "description": "Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.",
                  "response": {
                    "$ref": "BulkEditSitesResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                }
              }
            }
          },
          "methods": {
            "get": {
              "response": {
                "$ref": "Channel"
              },
              "parameterOrder": [
                "advertiserId",
                "channelId"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/channels/{channelsId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.channels.get",
              "path": "v1/advertisers/{+advertiserId}/channels/{+channelId}",
              "description": "Gets a channel for a partner or advertiser.",
              "httpMethod": "GET",
              "parameters": {
                "partnerId": {
                  "type": "string",
                  "format": "int64",
                  "location": "query",
                  "description": "The ID of the partner that owns the fetched channel."
                },
                "advertiserId": {
                  "location": "path",
                  "description": "The ID of the advertiser that owns the fetched channel.",
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64"
                },
                "channelId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Required. The ID of the channel to fetch.",
                  "format": "int64",
                  "required": true
                }
              }
            },
            "create": {
              "flatPath": "v1/advertisers/{advertisersId}/channels",
              "httpMethod": "POST",
              "request": {
                "$ref": "Channel"
              },
              "path": "v1/advertisers/{+advertiserId}/channels",
              "id": "displayvideo.advertisers.channels.create",
              "description": "Creates a new channel. Returns the newly created channel if successful.",
              "parameterOrder": [
                "advertiserId"
              ],
              "response": {
                "$ref": "Channel"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "partnerId": {
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the partner that owns the created channel.",
                  "location": "query"
                },
                "advertiserId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the advertiser that owns the created channel.",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "list": {
              "path": "v1/advertisers/{+advertiserId}/channels",
              "description": "Lists channels for a partner or advertiser.",
              "parameters": {
                "filter": {
                  "description": "Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains \"google\": `displayName : \"google\"`. The length of this field should be no more than 500 characters.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned.",
                  "type": "string",
                  "location": "query"
                },
                "advertiserId": {
                  "required": true,
                  "location": "path",
                  "format": "int64",
                  "description": "The ID of the advertiser that owns the channels.",
                  "type": "string",
                  "pattern": "^[^/]+$"
                },
                "partnerId": {
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the partner that owns the channels.",
                  "location": "query"
                },
                "orderBy": {
                  "location": "query",
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string"
                }
              },
              "flatPath": "v1/advertisers/{advertisersId}/channels",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.channels.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "advertiserId"
              ],
              "response": {
                "$ref": "ListChannelsResponse"
              }
            },
            "patch": {
              "parameters": {
                "channelId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "Output only. The unique ID of the channel. Assigned by the system.",
                  "type": "string"
                },
                "partnerId": {
                  "format": "int64",
                  "description": "The ID of the partner that owns the created channel.",
                  "location": "query",
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "The ID of the advertiser that owns the created channel."
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The mask to control which fields to update.",
                  "format": "google-fieldmask"
                }
              },
              "response": {
                "$ref": "Channel"
              },
              "flatPath": "v1/advertisers/{advertisersId}/channels/{channelId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "id": "displayvideo.advertisers.channels.patch",
              "description": "Updates a channel. Returns the updated channel if successful.",
              "request": {
                "$ref": "Channel"
              },
              "path": "v1/advertisers/{+advertiserId}/channels/{channelId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "advertiserId",
                "channelId"
              ]
            }
          }
        },
        "lineItems": {
          "methods": {
            "bulkListLineItemAssignedTargetingOptions": {
              "httpMethod": "GET",
              "description": "Lists assigned targeting options of a line item across targeting types.",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "id": "displayvideo.advertisers.lineItems.bulkListLineItemAssignedTargetingOptions",
              "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkListLineItemAssignedTargetingOptions",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "BulkListLineItemAssignedTargetingOptionsResponse"
              },
              "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}:bulkListLineItemAssignedTargetingOptions",
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL `targetingType=\"TARGETING_TYPE_PROXIMITY_LOCATION_LIST\" OR targetingType=\"TARGETING_TYPE_CHANNEL\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListLineItemAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                },
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser the line item belongs to.",
                  "required": true,
                  "location": "path",
                  "format": "int64",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "lineItemId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "description": "Required. The ID of the line item to list assigned targeting options for."
                }
              }
            },
            "get": {
              "id": "displayvideo.advertisers.lineItems.get",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "description": "Gets a line item.",
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser this line item belongs to."
                },
                "lineItemId": {
                  "description": "Required. The ID of the line item to fetch.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "response": {
                "$ref": "LineItem"
              },
              "httpMethod": "GET",
              "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}"
            },
            "list": {
              "flatPath": "v1/advertisers/{advertisersId}/lineItems",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * \"displayName\" (default) * \"entityStatus\" * “flight.dateRange.endDate” The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItems` method. If not specified, the first page of results will be returned.",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "Allows filtering by line item properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `campaignId` - `insertionOrderId` - `entityStatus` - `lineItemType` Examples: * All line items under an insertion order: `insertionOrderId=\"1234\"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` and `LINE_ITEM_TYPE_DISPLAY_DEFAULT` line items under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\") AND lineItemType=\"LINE_ITEM_TYPE_DISPLAY_DEFAULT\"` The length of this field should be no more than 500 characters.",
                  "location": "query"
                },
                "advertiserId": {
                  "format": "int64",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "type": "string",
                  "description": "Required. The ID of the advertiser to list line items for.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListLineItemsResponse"
              },
              "description": "Lists line items in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, line items with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.lineItems.list",
              "httpMethod": "GET",
              "path": "v1/advertisers/{+advertiserId}/lineItems",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ]
            },
            "delete": {
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "id": "displayvideo.advertisers.lineItems.delete",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "lineItemId": {
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the line item we need to fetch.",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true
                },
                "advertiserId": {
                  "type": "string",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "description": "The ID of the advertiser this line item belongs to.",
                  "pattern": "^[^/]+$"
                }
              },
              "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}",
              "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "description": "Deletes a line item. Returns error code `NOT_FOUND` if the line item does not exist. The line item should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "DELETE"
            },
            "create": {
              "path": "v1/advertisers/{+advertiserId}/lineItems",
              "request": {
                "$ref": "LineItem"
              },
              "parameters": {
                "advertiserId": {
                  "location": "path",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "description": "Output only. The unique ID of the advertiser the line item belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "LineItem"
              },
              "description": "Creates a new line item. Returns the newly created line item if successful.",
              "id": "displayvideo.advertisers.lineItems.create",
              "parameterOrder": [
                "advertiserId"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/lineItems",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "POST"
            },
            "bulkEditLineItemAssignedTargetingOptions": {
              "request": {
                "$ref": "BulkEditLineItemAssignedTargetingOptionsRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "lineItemId": {
                  "format": "int64",
                  "description": "Required. The ID of the line item the assigned targeting option will belong to.",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "description": "Required. The ID of the advertiser the line item belongs to.",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "response": {
                "$ref": "BulkEditLineItemAssignedTargetingOptionsResponse"
              },
              "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}:bulkEditLineItemAssignedTargetingOptions",
              "id": "displayvideo.advertisers.lineItems.bulkEditLineItemAssignedTargetingOptions",
              "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}:bulkEditLineItemAssignedTargetingOptions",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Bulk edits targeting options under a single line item. The operation will delete the assigned targeting options provided in BulkEditLineItemAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditLineItemAssignedTargetingOptionsRequest.create_requests ."
            },
            "patch": {
              "request": {
                "$ref": "LineItem"
              },
              "parameters": {
                "lineItemId": {
                  "description": "Output only. The unique ID of the line item. Assigned by the system.",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "format": "int64"
                },
                "updateMask": {
                  "description": "Required. The mask to control which fields to update.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "advertiserId": {
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "description": "Output only. The unique ID of the advertiser the line item belongs to.",
                  "location": "path",
                  "format": "int64"
                }
              },
              "id": "displayvideo.advertisers.lineItems.patch",
              "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}",
              "parameterOrder": [
                "advertiserId",
                "lineItemId"
              ],
              "response": {
                "$ref": "LineItem"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "description": "Updates an existing line item. Returns the updated line item if successful.",
              "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}",
              "httpMethod": "PATCH"
            }
          },
          "resources": {
            "targetingTypes": {
              "resources": {
                "assignedTargetingOptions": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType"
                      ],
                      "response": {
                        "$ref": "ListLineItemAssignedTargetingOptionsResponse"
                      },
                      "description": "Lists the targeting options assigned to a line item.",
                      "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "parameters": {
                        "advertiserId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "type": "string",
                          "format": "int64",
                          "pattern": "^[^/]+$"
                        },
                        "targetingType": {
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "description": "Required. Identifies the type of assigned targeting options to list.",
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges."
                          ],
                          "location": "path",
                          "required": true,
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE"
                          ]
                        },
                        "lineItemId": {
                          "description": "Required. The ID of the line item to list assigned targeting options for.",
                          "location": "path",
                          "pattern": "^[^/]+$",
                          "format": "int64",
                          "type": "string",
                          "required": true
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`."
                        },
                        "pageSize": {
                          "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId=\"1\" OR assignedTargetingOptionId=\"2\"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance=\"NOT_INHERITED\" OR inheritance=\"INHERITED_FROM_PARTNER\"` The length of this field should be no more than 500 characters.",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItemAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                        }
                      },
                      "httpMethod": "GET",
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions"
                    },
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes an assigned targeting option from a line item.",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.delete",
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "parameters": {
                        "advertiserId": {
                          "type": "string",
                          "format": "int64",
                          "pattern": "^[^/]+$",
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "required": true,
                          "location": "path"
                        },
                        "targetingType": {
                          "pattern": "^[^/]+$",
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges."
                          ],
                          "required": true,
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE"
                          ],
                          "location": "path",
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "type": "string"
                        },
                        "lineItemId": {
                          "required": true,
                          "description": "Required. The ID of the line item the assigned targeting option belongs to.",
                          "format": "int64",
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "assignedTargetingOptionId": {
                          "required": true,
                          "pattern": "^[^/]+$",
                          "description": "Required. The ID of the assigned targeting option to delete.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}"
                    },
                    "get": {
                      "parameters": {
                        "assignedTargetingOptionId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. An identifier unique to the targeting type in this line item that identifies the assigned targeting option being requested.",
                          "type": "string",
                          "pattern": "^[^/]+$"
                        },
                        "targetingType": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges."
                          ],
                          "pattern": "^[^/]+$",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE"
                          ],
                          "required": true
                        },
                        "advertiserId": {
                          "format": "int64",
                          "required": true,
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "pattern": "^[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "lineItemId": {
                          "type": "string",
                          "pattern": "^[^/]+$",
                          "location": "path",
                          "format": "int64",
                          "required": true,
                          "description": "Required. The ID of the line item the assigned targeting option belongs to."
                        }
                      },
                      "description": "Gets a single targeting option assigned to a line item.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType",
                        "assignedTargetingOptionId"
                      ],
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.get",
                      "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                      "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "id": "displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.create",
                      "description": "Assigns a targeting option to a line item. Returns the assigned targeting option if successful.",
                      "request": {
                        "$ref": "AssignedTargetingOption"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/display-video"
                      ],
                      "parameterOrder": [
                        "advertiserId",
                        "lineItemId",
                        "targetingType"
                      ],
                      "path": "v1/advertisers/{+advertiserId}/lineItems/{+lineItemId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                      "flatPath": "v1/advertisers/{advertisersId}/lineItems/{lineItemsId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                      "parameters": {
                        "lineItemId": {
                          "type": "string",
                          "required": true,
                          "format": "int64",
                          "description": "Required. The ID of the line item the assigned targeting option will belong to.",
                          "location": "path",
                          "pattern": "^[^/]+$"
                        },
                        "advertiserId": {
                          "location": "path",
                          "required": true,
                          "pattern": "^[^/]+$",
                          "description": "Required. The ID of the advertiser the line item belongs to.",
                          "format": "int64",
                          "type": "string"
                        },
                        "targetingType": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Identifies the type of this assigned targeting option.",
                          "pattern": "^[^/]+$",
                          "enum": [
                            "TARGETING_TYPE_UNSPECIFIED",
                            "TARGETING_TYPE_CHANNEL",
                            "TARGETING_TYPE_APP_CATEGORY",
                            "TARGETING_TYPE_APP",
                            "TARGETING_TYPE_URL",
                            "TARGETING_TYPE_DAY_AND_TIME",
                            "TARGETING_TYPE_AGE_RANGE",
                            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                            "TARGETING_TYPE_GENDER",
                            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                            "TARGETING_TYPE_USER_REWARDED_CONTENT",
                            "TARGETING_TYPE_PARENTAL_STATUS",
                            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                            "TARGETING_TYPE_DEVICE_TYPE",
                            "TARGETING_TYPE_AUDIENCE_GROUP",
                            "TARGETING_TYPE_BROWSER",
                            "TARGETING_TYPE_HOUSEHOLD_INCOME",
                            "TARGETING_TYPE_ON_SCREEN_POSITION",
                            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                            "TARGETING_TYPE_ENVIRONMENT",
                            "TARGETING_TYPE_CARRIER_AND_ISP",
                            "TARGETING_TYPE_OPERATING_SYSTEM",
                            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                            "TARGETING_TYPE_KEYWORD",
                            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                            "TARGETING_TYPE_VIEWABILITY",
                            "TARGETING_TYPE_CATEGORY",
                            "TARGETING_TYPE_INVENTORY_SOURCE",
                            "TARGETING_TYPE_LANGUAGE",
                            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                            "TARGETING_TYPE_GEO_REGION",
                            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                            "TARGETING_TYPE_EXCHANGE",
                            "TARGETING_TYPE_SUB_EXCHANGE"
                          ],
                          "required": true,
                          "enumDescriptions": [
                            "Default value when type is not specified or is unknown in this version.",
                            "Target a channel (a custom group of related websites or apps).",
                            "Target an app category (for example, education or puzzle games).",
                            "Target a specific app (for example, Angry Birds).",
                            "Target a specific url (for example, quora.com).",
                            "Target ads during a chosen time period on a specific day.",
                            "Target ads to a specific age range (for example, 18-24).",
                            "Target ads to the specified regions on a regional location list.",
                            "Target ads to the specified points of interest on a proximity location list.",
                            "Target ads to a specific gender (for example, female or male).",
                            "Target a specific video player size for video ads.",
                            "Target user rewarded content for video ads.",
                            "Target ads to a specific parental status (for example, parent or not a parent).",
                            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                            "Target ads in a specific content outstream position.",
                            "Target ads to a specific device type (for example, tablet or connected TV).",
                            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                            "Target ads to specific web browsers (for example, Chrome).",
                            "Target ads to a specific household income range (for example, top 10%).",
                            "Target ads in a specific on screen position.",
                            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                            "Filter website content by sensitive categories (for example, adult).",
                            "Target ads to a specific environment (for example, web or app).",
                            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                            "Target ads to a specific operating system (for example, macOS).",
                            "Target ads to a specific device make or model (for example, Roku or Samsung).",
                            "Target ads to a specific keyword (for example, dog or retriever).",
                            "Target ads to a specific negative keyword list.",
                            "Target ads to a specific viewability (for example, 80% viewable).",
                            "Target ads to a specific content category (for example, arts & entertainment).",
                            "Purchase impressions from specific deals and auction packages.",
                            "Target ads to a specific language (for example, English or Japanese).",
                            "Target ads to ads.txt authorized sellers.",
                            "Target ads to a specific regional location (for example, a city or state).",
                            "Purchase impressions from a group of deals and auction packages.",
                            "Purchase impressions from specific exchanges.",
                            "Purchase impressions from specific sub-exchanges."
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "targetingTypes": {
          "resources": {
            "assignedTargetingOptions": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "flatPath": "v1/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Assigns a targeting option to an advertiser. Returns the assigned targeting option if successful.",
                  "path": "v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType"
                  ],
                  "httpMethod": "POST",
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.create",
                  "parameters": {
                    "targetingType": {
                      "description": "Required. Identifies the type of this assigned targeting option.",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE"
                      ],
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges."
                      ]
                    },
                    "advertiserId": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the advertiser.",
                      "format": "int64",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  }
                },
                "delete": {
                  "flatPath": "v1/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                  "parameters": {
                    "targetingType": {
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "description": "Required. Identifies the type of this assigned targeting option.",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges."
                      ],
                      "location": "path",
                      "required": true,
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE"
                      ]
                    },
                    "advertiserId": {
                      "description": "Required. The ID of the advertiser.",
                      "required": true,
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "format": "int64"
                    },
                    "assignedTargetingOptionId": {
                      "description": "Required. The ID of the assigned targeting option to delete.",
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Deletes an assigned targeting option from an advertiser.",
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}"
                },
                "get": {
                  "description": "Gets a single targeting option assigned to an advertiser.",
                  "httpMethod": "GET",
                  "parameters": {
                    "advertiserId": {
                      "location": "path",
                      "type": "string",
                      "format": "int64",
                      "description": "Required. The ID of the advertiser.",
                      "required": true,
                      "pattern": "^[^/]+$"
                    },
                    "targetingType": {
                      "description": "Required. Identifies the type of this assigned targeting option.",
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "type": "string",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE"
                      ],
                      "required": true,
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges."
                      ]
                    },
                    "assignedTargetingOptionId": {
                      "required": true,
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "description": "Required. An identifier unique to the targeting type in this advertiser that identifies the assigned targeting option being requested.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType",
                    "assignedTargetingOptionId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.get",
                  "response": {
                    "$ref": "AssignedTargetingOption"
                  },
                  "flatPath": "v1/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions/{assignedTargetingOptionsId}",
                  "path": "v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions/{+assignedTargetingOptionId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListAdvertiserAssignedTargetingOptionsResponse"
                  },
                  "path": "v1/advertisers/{+advertiserId}/targetingTypes/{+targetingType}/assignedTargetingOptions",
                  "parameters": {
                    "advertiserId": {
                      "required": true,
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "description": "Required. The ID of the advertiser.",
                      "format": "int64",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` Examples: * AssignedTargetingOption with ID 123456 `assignedTargetingOptionId=\"123456\"` The length of this field should be no more than 500 characters."
                    },
                    "targetingType": {
                      "required": true,
                      "description": "Required. Identifies the type of assigned targeting options to list.",
                      "location": "path",
                      "type": "string",
                      "enum": [
                        "TARGETING_TYPE_UNSPECIFIED",
                        "TARGETING_TYPE_CHANNEL",
                        "TARGETING_TYPE_APP_CATEGORY",
                        "TARGETING_TYPE_APP",
                        "TARGETING_TYPE_URL",
                        "TARGETING_TYPE_DAY_AND_TIME",
                        "TARGETING_TYPE_AGE_RANGE",
                        "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                        "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                        "TARGETING_TYPE_GENDER",
                        "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                        "TARGETING_TYPE_USER_REWARDED_CONTENT",
                        "TARGETING_TYPE_PARENTAL_STATUS",
                        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                        "TARGETING_TYPE_DEVICE_TYPE",
                        "TARGETING_TYPE_AUDIENCE_GROUP",
                        "TARGETING_TYPE_BROWSER",
                        "TARGETING_TYPE_HOUSEHOLD_INCOME",
                        "TARGETING_TYPE_ON_SCREEN_POSITION",
                        "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                        "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                        "TARGETING_TYPE_ENVIRONMENT",
                        "TARGETING_TYPE_CARRIER_AND_ISP",
                        "TARGETING_TYPE_OPERATING_SYSTEM",
                        "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                        "TARGETING_TYPE_KEYWORD",
                        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                        "TARGETING_TYPE_VIEWABILITY",
                        "TARGETING_TYPE_CATEGORY",
                        "TARGETING_TYPE_INVENTORY_SOURCE",
                        "TARGETING_TYPE_LANGUAGE",
                        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                        "TARGETING_TYPE_GEO_REGION",
                        "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                        "TARGETING_TYPE_EXCHANGE",
                        "TARGETING_TYPE_SUB_EXCHANGE"
                      ],
                      "pattern": "^[^/]+$",
                      "enumDescriptions": [
                        "Default value when type is not specified or is unknown in this version.",
                        "Target a channel (a custom group of related websites or apps).",
                        "Target an app category (for example, education or puzzle games).",
                        "Target a specific app (for example, Angry Birds).",
                        "Target a specific url (for example, quora.com).",
                        "Target ads during a chosen time period on a specific day.",
                        "Target ads to a specific age range (for example, 18-24).",
                        "Target ads to the specified regions on a regional location list.",
                        "Target ads to the specified points of interest on a proximity location list.",
                        "Target ads to a specific gender (for example, female or male).",
                        "Target a specific video player size for video ads.",
                        "Target user rewarded content for video ads.",
                        "Target ads to a specific parental status (for example, parent or not a parent).",
                        "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                        "Target ads in a specific content outstream position.",
                        "Target ads to a specific device type (for example, tablet or connected TV).",
                        "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                        "Target ads to specific web browsers (for example, Chrome).",
                        "Target ads to a specific household income range (for example, top 10%).",
                        "Target ads in a specific on screen position.",
                        "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                        "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                        "Filter website content by sensitive categories (for example, adult).",
                        "Target ads to a specific environment (for example, web or app).",
                        "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                        "Target ads to a specific operating system (for example, macOS).",
                        "Target ads to a specific device make or model (for example, Roku or Samsung).",
                        "Target ads to a specific keyword (for example, dog or retriever).",
                        "Target ads to a specific negative keyword list.",
                        "Target ads to a specific viewability (for example, 80% viewable).",
                        "Target ads to a specific content category (for example, arts & entertainment).",
                        "Purchase impressions from specific deals and auction packages.",
                        "Target ads to a specific language (for example, English or Japanese).",
                        "Target ads to ads.txt authorized sellers.",
                        "Target ads to a specific regional location (for example, a city or state).",
                        "Purchase impressions from a group of deals and auction packages.",
                        "Purchase impressions from specific exchanges.",
                        "Purchase impressions from specific sub-exchanges."
                      ]
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `assignedTargetingOptionId desc`."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameterOrder": [
                    "advertiserId",
                    "targetingType"
                  ],
                  "id": "displayvideo.advertisers.targetingTypes.assignedTargetingOptions.list",
                  "flatPath": "v1/advertisers/{advertisersId}/targetingTypes/{targetingTypesId}/assignedTargetingOptions",
                  "httpMethod": "GET",
                  "description": "Lists the targeting options assigned to an advertiser."
                }
              }
            }
          }
        },
        "campaigns": {
          "methods": {
            "list": {
              "parameters": {
                "filter": {
                  "description": "Allows filtering by campaign properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `entityStatus` Examples: * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` campaigns under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\")` The length of this field should be no more than 500 characters.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCampaigns` method. If not specified, the first page of results will be returned.",
                  "type": "string"
                },
                "orderBy": {
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
                  "format": "int32"
                },
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the advertiser to list campaigns for.",
                  "pattern": "^[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "path": "v1/advertisers/{+advertiserId}/campaigns",
              "description": "Lists campaigns in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, campaigns with `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
              "flatPath": "v1/advertisers/{advertisersId}/campaigns",
              "response": {
                "$ref": "ListCampaignsResponse"
              },
              "parameterOrder": [
                "advertiserId"
              ],
              "id": "displayvideo.advertisers.campaigns.list",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ]
            },
            "delete": {
              "path": "v1/advertisers/{+advertiserId}/campaigns/{+campaignId}",
              "id": "displayvideo.advertisers.campaigns.delete",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "description": "Permanently deletes a campaign. A deleted campaign cannot be recovered. The campaign should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.",
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "parameters": {
                "campaignId": {
                  "type": "string",
                  "description": "The ID of the campaign we need to delete.",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "pattern": "^[^/]+$"
                },
                "advertiserId": {
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "The ID of the advertiser this campaign belongs to.",
                  "location": "path"
                }
              },
              "flatPath": "v1/advertisers/{advertisersId}/campaigns/{campaignsId}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ]
            },
            "get": {
              "id": "displayvideo.advertisers.campaigns.get",
              "description": "Gets a campaign.",
              "httpMethod": "GET",
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "parameters": {
                "advertiserId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the advertiser this campaign belongs to."
                },
                "campaignId": {
                  "description": "Required. The ID of the campaign to fetch.",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$"
                }
              },
              "path": "v1/advertisers/{+advertiserId}/campaigns/{+campaignId}",
              "flatPath": "v1/advertisers/{advertisersId}/campaigns/{campaignsId}",
              "response": {
                "$ref": "Campaign"
              }
            },
            "patch": {
              "id": "displayvideo.advertisers.campaigns.patch",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "path": "v1/advertisers/{+advertiserId}/campaigns/{+campaignId}",
              "parameterOrder": [
                "advertiserId",
                "campaignId"
              ],
              "response": {
                "$ref": "Campaign"
              },
              "flatPath": "v1/advertisers/{advertisersId}/campaigns/{campaignsId}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "Campaign"
              },
              "description": "Updates an existing campaign. Returns the updated campaign if successful.",
              "parameters": {
                "updateMask": {
                  "description": "Required. The mask to control which fields to update.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "advertiserId": {
                  "location": "path",
                  "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "required": true
                },
                "campaignId": {
                  "description": "Output only. The unique ID of the campaign. Assigned by the system.",
                  "format": "int64",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$"
                }
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/display-video-mediaplanning"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/campaigns",
              "path": "v1/advertisers/{+advertiserId}/campaigns",
              "httpMethod": "POST",
              "parameters": {
                "advertiserId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
                  "format": "int64",
                  "pattern": "^[^/]+$"
                }
              },
              "description": "Creates a new campaign. Returns the newly created campaign if successful.",
              "request": {
                "$ref": "Campaign"
              },
              "id": "displayvideo.advertisers.campaigns.create",
              "parameterOrder": [
                "advertiserId"
              ],
              "response": {
                "$ref": "Campaign"
              }
            }
          }
        },
        "negativeKeywordLists": {
          "resources": {
            "negativeKeywords": {
              "methods": {
                "create": {
                  "path": "v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "request": {
                    "$ref": "NegativeKeyword"
                  },
                  "response": {
                    "$ref": "NegativeKeyword"
                  },
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords",
                  "description": "Creates a negative keyword in a negative keyword list.",
                  "parameters": {
                    "advertiserId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "location": "path",
                      "format": "int64"
                    },
                    "negativeKeywordListId": {
                      "required": true,
                      "description": "Required. The ID of the parent negative keyword list in which the negative keyword will be created.",
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "location": "path",
                      "format": "int64"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "advertiserId": {
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "location": "path"
                    },
                    "keywordValue": {
                      "pattern": "^[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The keyword value of the negative keyword to delete."
                    },
                    "negativeKeywordListId": {
                      "description": "Required. The ID of the parent negative keyword list to which the negative keyword belongs.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "format": "int64"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.delete",
                  "description": "Deletes a negative keyword from a negative keyword list.",
                  "path": "v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords/{+keywordValue}",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId",
                    "keywordValue"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "flatPath": "v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords/{negativeKeywordsId}"
                },
                "bulkEdit": {
                  "request": {
                    "$ref": "BulkEditNegativeKeywordsRequest"
                  },
                  "response": {
                    "$ref": "BulkEditNegativeKeywordsResponse"
                  },
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.bulkEdit",
                  "flatPath": "v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords:bulkEdit",
                  "description": "Bulk edits negative keywords in a single negative keyword list. The operation will delete the negative keywords provided in BulkEditNegativeKeywordsRequest.deleted_negative_keywords and then create the negative keywords provided in BulkEditNegativeKeywordsRequest.created_negative_keywords. This operation is guaranteed to be atomic and will never result in a partial success or partial failure.",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/advertisers/{advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords:bulkEdit",
                  "parameters": {
                    "advertiserId": {
                      "format": "int64",
                      "location": "path",
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "type": "string",
                      "required": true
                    },
                    "negativeKeywordListId": {
                      "pattern": "^[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the parent negative keyword list to which the negative keywords belong.",
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ]
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "Allows filtering by negative keyword fields. Supported syntax: * Filter expressions for negative keyword currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `keywordValue` Examples: * All negative keywords for which the keyword value contains \"google\": `keywordValue : \"google\"`",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywords` method. If not specified, the first page of results will be returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "advertiserId": {
                      "required": true,
                      "description": "Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^[^/]+$",
                      "format": "int64"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                      "type": "integer",
                      "location": "query"
                    },
                    "negativeKeywordListId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "format": "int64",
                      "description": "Required. The ID of the parent negative keyword list to which the requested negative keywords belong.",
                      "pattern": "^[^/]+$"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Field by which to sort the list. Acceptable values are: * `keywordValue` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `keywordValue desc`.",
                      "type": "string"
                    }
                  },
                  "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}/negativeKeywords",
                  "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}/negativeKeywords",
                  "description": "Lists negative keywords in a negative keyword list.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "advertiserId",
                    "negativeKeywordListId"
                  ],
                  "response": {
                    "$ref": "ListNegativeKeywordsResponse"
                  },
                  "id": "displayvideo.advertisers.negativeKeywordLists.negativeKeywords.list"
                }
              }
            }
          },
          "methods": {
            "get": {
              "id": "displayvideo.advertisers.negativeKeywordLists.get",
              "description": "Gets a negative keyword list given an advertiser ID and a negative keyword list ID.",
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}",
              "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}",
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ],
              "parameters": {
                "negativeKeywordListId": {
                  "type": "string",
                  "required": true,
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "description": "Required. The ID of the negative keyword list to fetch.",
                  "location": "path"
                },
                "advertiserId": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The ID of the DV360 advertiser to which the fetched negative keyword list belongs.",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "format": "int64"
                }
              }
            },
            "list": {
              "httpMethod": "GET",
              "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists",
              "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists",
              "parameters": {
                "pageSize": {
                  "description": "Requested page size. Must be between `1` and `100`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "advertiserId": {
                  "description": "Required. The ID of the DV360 advertiser to which the fetched negative keyword lists belong.",
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywordLists` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                }
              },
              "description": "Lists negative keyword lists based on a given advertiser id.",
              "response": {
                "$ref": "ListNegativeKeywordListsResponse"
              },
              "id": "displayvideo.advertisers.negativeKeywordLists.list",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameterOrder": [
                "advertiserId"
              ]
            },
            "create": {
              "request": {
                "$ref": "NegativeKeywordList"
              },
              "description": "Creates a new negative keyword list. Returns the newly created negative keyword list if successful.",
              "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists",
              "id": "displayvideo.advertisers.negativeKeywordLists.create",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists",
              "parameterOrder": [
                "advertiserId"
              ],
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "required": true,
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list will belong.",
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path"
                }
              }
            },
            "delete": {
              "id": "displayvideo.advertisers.negativeKeywordLists.delete",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "DELETE",
              "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists/{+negativeKeywordListId}",
              "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListsId}",
              "description": "Deletes a negative keyword list given an advertiser ID and a negative keyword list ID.",
              "parameters": {
                "advertiserId": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list belongs."
                },
                "negativeKeywordListId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "location": "path",
                  "description": "Required. The ID of the negative keyword list to delete.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ]
            },
            "patch": {
              "httpMethod": "PATCH",
              "path": "v1/advertisers/{+advertiserId}/negativeKeywordLists/{negativeKeywordListId}",
              "response": {
                "$ref": "NegativeKeywordList"
              },
              "description": "Updates a negative keyword list. Returns the updated negative keyword list if successful.",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "request": {
                "$ref": "NegativeKeywordList"
              },
              "parameters": {
                "negativeKeywordListId": {
                  "type": "string",
                  "format": "int64",
                  "description": "Output only. The unique ID of the negative keyword list. Assigned by the system.",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The mask to control which fields to update."
                },
                "advertiserId": {
                  "description": "Required. The ID of the DV360 advertiser to which the negative keyword list belongs.",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "advertiserId",
                "negativeKeywordListId"
              ],
              "flatPath": "v1/advertisers/{advertisersId}/negativeKeywordLists/{negativeKeywordListId}",
              "id": "displayvideo.advertisers.negativeKeywordLists.patch"
            }
          }
        }
      },
      "methods": {
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "Advertiser"
          },
          "parameterOrder": [
            "advertiserId"
          ],
          "path": "v1/advertisers/{+advertiserId}",
          "flatPath": "v1/advertisers/{advertisersId}",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Advertiser"
          },
          "id": "displayvideo.advertisers.patch",
          "description": "Updates an existing advertiser. Returns the updated advertiser if successful.",
          "parameters": {
            "advertiserId": {
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "description": "Output only. The unique ID of the advertiser. Assigned by the system."
            },
            "updateMask": {
              "location": "query",
              "description": "Required. The mask to control which fields to update.",
              "format": "google-fieldmask",
              "type": "string"
            }
          }
        },
        "delete": {
          "parameters": {
            "advertiserId": {
              "location": "path",
              "format": "int64",
              "description": "The ID of the advertiser we need to delete.",
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "advertiserId"
          ],
          "httpMethod": "DELETE",
          "flatPath": "v1/advertisers/{advertisersId}",
          "path": "v1/advertisers/{+advertiserId}",
          "id": "displayvideo.advertisers.delete",
          "description": "Deletes an advertiser. Deleting an advertiser will delete all of its child resources, for example, campaigns, insertion orders and line items. A deleted advertiser cannot be recovered.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ]
        },
        "bulkEditAdvertiserAssignedTargetingOptions": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "httpMethod": "POST",
          "path": "v1/advertisers/{+advertiserId}:bulkEditAdvertiserAssignedTargetingOptions",
          "flatPath": "v1/advertisers/{advertisersId}:bulkEditAdvertiserAssignedTargetingOptions",
          "parameterOrder": [
            "advertiserId"
          ],
          "response": {
            "$ref": "BulkEditAdvertiserAssignedTargetingOptionsResponse"
          },
          "id": "displayvideo.advertisers.bulkEditAdvertiserAssignedTargetingOptions",
          "parameters": {
            "advertiserId": {
              "format": "int64",
              "required": true,
              "description": "Required. The ID of the advertiser.",
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string"
            }
          },
          "request": {
            "$ref": "BulkEditAdvertiserAssignedTargetingOptionsRequest"
          },
          "description": "Bulk edits targeting options under a single advertiser. The operation will delete the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.create_requests ."
        },
        "create": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "path": "v1/advertisers",
          "flatPath": "v1/advertisers",
          "id": "displayvideo.advertisers.create",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "response": {
            "$ref": "Advertiser"
          },
          "description": "Creates a new advertiser. Returns the newly created advertiser if successful. This method can take up to 180 seconds to complete.",
          "parameters": {},
          "request": {
            "$ref": "Advertiser"
          }
        },
        "list": {
          "flatPath": "v1/advertisers",
          "httpMethod": "GET",
          "parameters": {
            "partnerId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Required. The ID of the partner that the fetched advertisers should all belong to. The system only supports listing advertisers for one partner at a time."
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`."
            },
            "filter": {
              "description": "Allows filtering by advertiser properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `entityStatus` Examples: * All active advertisers under a partner: `entityStatus=\"ENTITY_STATUS_ACTIVE\"` The length of this field should be no more than 500 characters.",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertisers` method. If not specified, the first page of results will be returned.",
              "location": "query"
            }
          },
          "path": "v1/advertisers",
          "parameterOrder": [],
          "description": "Lists advertisers that are accessible to the current user. The order is defined by the order_by parameter. A single partner_id is required. Cross-partner listing is not supported.",
          "response": {
            "$ref": "ListAdvertisersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.advertisers.list"
        },
        "get": {
          "parameterOrder": [
            "advertiserId"
          ],
          "flatPath": "v1/advertisers/{advertisersId}",
          "id": "displayvideo.advertisers.get",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameters": {
            "advertiserId": {
              "description": "Required. The ID of the advertiser to fetch.",
              "required": true,
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "description": "Gets an advertiser.",
          "response": {
            "$ref": "Advertiser"
          },
          "path": "v1/advertisers/{+advertiserId}"
        },
        "bulkListAdvertiserAssignedTargetingOptions": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "path": "v1/advertisers/{+advertiserId}:bulkListAdvertiserAssignedTargetingOptions",
          "response": {
            "$ref": "BulkListAdvertiserAssignedTargetingOptionsResponse"
          },
          "flatPath": "v1/advertisers/{advertisersId}:bulkListAdvertiserAssignedTargetingOptions",
          "description": "Lists assigned targeting options of an advertiser across targeting types.",
          "parameters": {
            "advertiserId": {
              "format": "int64",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "Required. The ID of the advertiser the line item belongs to.",
              "type": "string"
            },
            "filter": {
              "type": "string",
              "description": "Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`.. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` Examples: * targetingType with value TARGETING_TYPE_CHANNEL `targetingType=\"TARGETING_TYPE_CHANNEL\"` The length of this field should be no more than 500 characters.",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingType desc`."
            },
            "pageToken": {
              "location": "query",
              "description": "A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
              "type": "integer"
            }
          },
          "id": "displayvideo.advertisers.bulkListAdvertiserAssignedTargetingOptions",
          "parameterOrder": [
            "advertiserId"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "partners": {
      "resources": {
        "channels": {
          "resources": {
            "sites": {
              "methods": {
                "list": {
                  "id": "displayvideo.partners.channels.sites.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "response": {
                    "$ref": "ListSitesResponse"
                  },
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains \"google\": `urlOrAppId : \"google\"`"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `urlOrAppId desc`.",
                      "location": "query"
                    },
                    "partnerId": {
                      "format": "int64",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "description": "The ID of the partner that owns the parent channel."
                    },
                    "advertiserId": {
                      "format": "int64",
                      "type": "string",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                    },
                    "channelId": {
                      "pattern": "^[^/]+$",
                      "location": "path",
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "description": "Required. The ID of the parent channel to which the requested sites belong."
                    }
                  },
                  "path": "v1/partners/{+partnerId}/channels/{+channelId}/sites",
                  "httpMethod": "GET",
                  "description": "Lists sites in a channel.",
                  "flatPath": "v1/partners/{partnersId}/channels/{channelsId}/sites"
                },
                "create": {
                  "response": {
                    "$ref": "Site"
                  },
                  "id": "displayvideo.partners.channels.sites.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "parameters": {
                    "advertiserId": {
                      "format": "int64",
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "type": "string",
                      "location": "query"
                    },
                    "partnerId": {
                      "description": "The ID of the partner that owns the parent channel.",
                      "format": "int64",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "channelId": {
                      "required": true,
                      "format": "int64",
                      "type": "string",
                      "description": "Required. The ID of the parent channel in which the site will be created.",
                      "pattern": "^[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/partners/{partnerId}/channels/{+channelId}/sites",
                  "flatPath": "v1/partners/{partnerId}/channels/{channelsId}/sites",
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "request": {
                    "$ref": "Site"
                  },
                  "description": "Creates a site in a channel."
                },
                "bulkEdit": {
                  "path": "v1/partners/{partnerId}/channels/{+channelId}/sites:bulkEdit",
                  "flatPath": "v1/partners/{partnerId}/channels/{channelsId}/sites:bulkEdit",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "description": "Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.",
                  "request": {
                    "$ref": "BulkEditSitesRequest"
                  },
                  "parameterOrder": [
                    "partnerId",
                    "channelId"
                  ],
                  "response": {
                    "$ref": "BulkEditSitesResponse"
                  },
                  "httpMethod": "POST",
                  "id": "displayvideo.partners.channels.sites.bulkEdit",
                  "parameters": {
                    "partnerId": {
                      "type": "string",
                      "description": "The ID of the partner that owns the parent channel.",
                      "location": "path",
                      "required": true,
                      "format": "int64"
                    },
                    "channelId": {
                      "format": "int64",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the parent channel to which the sites belong."
                    }
                  }
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/partners/{partnerId}/channels/{+channelId}/sites/{+urlOrAppId}",
                  "flatPath": "v1/partners/{partnerId}/channels/{channelsId}/sites/{sitesId}",
                  "parameterOrder": [
                    "partnerId",
                    "channelId",
                    "urlOrAppId"
                  ],
                  "description": "Deletes a site from a channel.",
                  "scopes": [
                    "https://www.googleapis.com/auth/display-video"
                  ],
                  "httpMethod": "DELETE",
                  "id": "displayvideo.partners.channels.sites.delete",
                  "parameters": {
                    "urlOrAppId": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The URL or app ID of the site to delete.",
                      "pattern": "^[^/]+$",
                      "type": "string"
                    },
                    "partnerId": {
                      "type": "string",
                      "format": "int64",
                      "required": true,
                      "description": "The ID of the partner that owns the parent channel.",
                      "location": "path"
                    },
                    "advertiserId": {
                      "description": "The ID of the advertiser that owns the parent channel.",
                      "location": "query",
                      "type": "string",
                      "format": "int64"
                    },
                    "channelId": {
                      "format": "int64",
                      "required": true,
                      "pattern": "^[^/]+$",
                      "description": "Required. The ID of the parent channel to which the site belongs.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "patch": {
              "description": "Updates a channel. Returns the updated channel if successful.",
              "flatPath": "v1/partners/{partnersId}/channels/{channelId}",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. The mask to control which fields to update.",
                  "type": "string"
                },
                "partnerId": {
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "The ID of the partner that owns the created channel.",
                  "format": "int64"
                },
                "advertiserId": {
                  "location": "query",
                  "format": "int64",
                  "type": "string",
                  "description": "The ID of the advertiser that owns the created channel."
                },
                "channelId": {
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The unique ID of the channel. Assigned by the system."
                }
              },
              "parameterOrder": [
                "partnerId",
                "channelId"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "response": {
                "$ref": "Channel"
              },
              "request": {
                "$ref": "Channel"
              },
              "id": "displayvideo.partners.channels.patch",
              "path": "v1/partners/{+partnerId}/channels/{channelId}"
            },
            "list": {
              "flatPath": "v1/partners/{partnersId}/channels",
              "description": "Lists channels for a partner or advertiser.",
              "parameters": {
                "orderBy": {
                  "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `displayName desc`.",
                  "type": "string",
                  "location": "query"
                },
                "partnerId": {
                  "pattern": "^[^/]+$",
                  "required": true,
                  "format": "int64",
                  "location": "path",
                  "type": "string",
                  "description": "The ID of the partner that owns the channels."
                },
                "advertiserId": {
                  "location": "query",
                  "description": "The ID of the advertiser that owns the channels.",
                  "type": "string",
                  "format": "int64"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
                },
                "filter": {
                  "description": "Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains \"google\": `displayName : \"google\"`. The length of this field should be no more than 500 characters.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListChannelsResponse"
              },
              "path": "v1/partners/{+partnerId}/channels",
              "id": "displayvideo.partners.channels.list",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "partnerId"
              ]
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "request": {
                "$ref": "Channel"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "path": "v1/partners/{+partnerId}/channels",
              "flatPath": "v1/partners/{partnersId}/channels",
              "description": "Creates a new channel. Returns the newly created channel if successful.",
              "response": {
                "$ref": "Channel"
              },
              "id": "displayvideo.partners.channels.create",
              "httpMethod": "POST",
              "parameters": {
                "advertiserId": {
                  "location": "query",
                  "format": "int64",
                  "description": "The ID of the advertiser that owns the created channel.",
                  "type": "string"
                },
                "partnerId": {
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "description": "The ID of the partner that owns the created channel."
                }
              }
            },
            "get": {
              "response": {
                "$ref": "Channel"
              },
              "description": "Gets a channel for a partner or advertiser.",
              "parameters": {
                "partnerId": {
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the partner that owns the fetched channel.",
                  "location": "path",
                  "pattern": "^[^/]+$"
                },
                "channelId": {
                  "type": "string",
                  "format": "int64",
                  "pattern": "^[^/]+$",
                  "description": "Required. The ID of the channel to fetch.",
                  "required": true,
                  "location": "path"
                },
                "advertiserId": {
                  "description": "The ID of the advertiser that owns the fetched channel.",
                  "location": "query",
                  "format": "int64",
                  "type": "string"
                }
              },
              "id": "displayvideo.partners.channels.get",
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/partners/{partnersId}/channels/{channelsId}",
              "parameterOrder": [
                "partnerId",
                "channelId"
              ],
              "path": "v1/partners/{+partnerId}/channels/{+channelId}",
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "sdfdownloadtasks": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/display-video",
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "pattern": "^sdfdownloadtasks/operations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the latest state of an asynchronous SDF download task operation. Clients should poll this method at intervals of 30 seconds.",
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1/sdfdownloadtasks/operations/{operationsId}",
              "id": "displayvideo.sdfdownloadtasks.operations.get",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "create": {
          "id": "displayvideo.sdfdownloadtasks.create",
          "request": {
            "$ref": "CreateSdfDownloadTaskRequest"
          },
          "flatPath": "v1/sdfdownloadtasks",
          "description": "Creates an SDF Download Task. Returns an Operation. An SDF Download Task is a long-running, asynchronous operation. The metadata type of this operation is SdfDownloadTaskMetadata. If the request is successful, the response type of the operation is SdfDownloadTask. The response will not include the download files, which must be retrieved with media.download. The state of operation can be retrieved with sdfdownloadtask.operations.get. Any errors can be found in the error.message. Note that error.details is expected to be empty.",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {},
          "path": "v1/sdfdownloadtasks",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "parameterOrder": []
        }
      }
    },
    "targetingTypes": {
      "resources": {
        "targetingOptions": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "v1/targetingTypes/{targetingTypesId}/targetingOptions",
              "response": {
                "$ref": "ListTargetingOptionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "parameters": {
                "filter": {
                  "description": "Allows filtering by targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `OR` logical operators. * A restriction has the form of `{field} {operator} {value}`. * The operator must be \"=\" (equal sign). * Supported fields: - `targetingOptionId` The length of this field should be no more than 500 characters.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
                  "location": "query",
                  "format": "int32"
                },
                "advertiserId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The Advertiser this request is being made in the context of.",
                  "format": "int64"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListTargetingOptions` method. If not specified, the first page of results will be returned.",
                  "location": "query",
                  "type": "string"
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Field by which to sort the list. Acceptable values are: * `targetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `targetingOptionId desc`."
                },
                "targetingType": {
                  "description": "Required. The type of targeting option to be listed.",
                  "enum": [
                    "TARGETING_TYPE_UNSPECIFIED",
                    "TARGETING_TYPE_CHANNEL",
                    "TARGETING_TYPE_APP_CATEGORY",
                    "TARGETING_TYPE_APP",
                    "TARGETING_TYPE_URL",
                    "TARGETING_TYPE_DAY_AND_TIME",
                    "TARGETING_TYPE_AGE_RANGE",
                    "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                    "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                    "TARGETING_TYPE_GENDER",
                    "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                    "TARGETING_TYPE_USER_REWARDED_CONTENT",
                    "TARGETING_TYPE_PARENTAL_STATUS",
                    "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                    "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                    "TARGETING_TYPE_DEVICE_TYPE",
                    "TARGETING_TYPE_AUDIENCE_GROUP",
                    "TARGETING_TYPE_BROWSER",
                    "TARGETING_TYPE_HOUSEHOLD_INCOME",
                    "TARGETING_TYPE_ON_SCREEN_POSITION",
                    "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                    "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                    "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                    "TARGETING_TYPE_ENVIRONMENT",
                    "TARGETING_TYPE_CARRIER_AND_ISP",
                    "TARGETING_TYPE_OPERATING_SYSTEM",
                    "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                    "TARGETING_TYPE_KEYWORD",
                    "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                    "TARGETING_TYPE_VIEWABILITY",
                    "TARGETING_TYPE_CATEGORY",
                    "TARGETING_TYPE_INVENTORY_SOURCE",
                    "TARGETING_TYPE_LANGUAGE",
                    "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                    "TARGETING_TYPE_GEO_REGION",
                    "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                    "TARGETING_TYPE_EXCHANGE",
                    "TARGETING_TYPE_SUB_EXCHANGE"
                  ],
                  "type": "string",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "enumDescriptions": [
                    "Default value when type is not specified or is unknown in this version.",
                    "Target a channel (a custom group of related websites or apps).",
                    "Target an app category (for example, education or puzzle games).",
                    "Target a specific app (for example, Angry Birds).",
                    "Target a specific url (for example, quora.com).",
                    "Target ads during a chosen time period on a specific day.",
                    "Target ads to a specific age range (for example, 18-24).",
                    "Target ads to the specified regions on a regional location list.",
                    "Target ads to the specified points of interest on a proximity location list.",
                    "Target ads to a specific gender (for example, female or male).",
                    "Target a specific video player size for video ads.",
                    "Target user rewarded content for video ads.",
                    "Target ads to a specific parental status (for example, parent or not a parent).",
                    "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                    "Target ads in a specific content outstream position.",
                    "Target ads to a specific device type (for example, tablet or connected TV).",
                    "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                    "Target ads to specific web browsers (for example, Chrome).",
                    "Target ads to a specific household income range (for example, top 10%).",
                    "Target ads in a specific on screen position.",
                    "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                    "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                    "Filter website content by sensitive categories (for example, adult).",
                    "Target ads to a specific environment (for example, web or app).",
                    "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                    "Target ads to a specific operating system (for example, macOS).",
                    "Target ads to a specific device make or model (for example, Roku or Samsung).",
                    "Target ads to a specific keyword (for example, dog or retriever).",
                    "Target ads to a specific negative keyword list.",
                    "Target ads to a specific viewability (for example, 80% viewable).",
                    "Target ads to a specific content category (for example, arts & entertainment).",
                    "Purchase impressions from specific deals and auction packages.",
                    "Target ads to a specific language (for example, English or Japanese).",
                    "Target ads to ads.txt authorized sellers.",
                    "Target ads to a specific regional location (for example, a city or state).",
                    "Purchase impressions from a group of deals and auction packages.",
                    "Purchase impressions from specific exchanges.",
                    "Purchase impressions from specific sub-exchanges."
                  ],
                  "location": "path"
                }
              },
              "description": "Lists targeting options of a given type.",
              "id": "displayvideo.targetingTypes.targetingOptions.list",
              "path": "v1/targetingTypes/{+targetingType}/targetingOptions",
              "parameterOrder": [
                "targetingType"
              ]
            },
            "get": {
              "response": {
                "$ref": "TargetingOption"
              },
              "parameters": {
                "advertiserId": {
                  "format": "int64",
                  "type": "string",
                  "location": "query",
                  "description": "Required. The Advertiser this request is being made in the context of."
                },
                "targetingOptionId": {
                  "description": "Required. The ID of the of targeting option to retrieve.",
                  "pattern": "^[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "targetingType": {
                  "location": "path",
                  "enumDescriptions": [
                    "Default value when type is not specified or is unknown in this version.",
                    "Target a channel (a custom group of related websites or apps).",
                    "Target an app category (for example, education or puzzle games).",
                    "Target a specific app (for example, Angry Birds).",
                    "Target a specific url (for example, quora.com).",
                    "Target ads during a chosen time period on a specific day.",
                    "Target ads to a specific age range (for example, 18-24).",
                    "Target ads to the specified regions on a regional location list.",
                    "Target ads to the specified points of interest on a proximity location list.",
                    "Target ads to a specific gender (for example, female or male).",
                    "Target a specific video player size for video ads.",
                    "Target user rewarded content for video ads.",
                    "Target ads to a specific parental status (for example, parent or not a parent).",
                    "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
                    "Target ads in a specific content outstream position.",
                    "Target ads to a specific device type (for example, tablet or connected TV).",
                    "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
                    "Target ads to specific web browsers (for example, Chrome).",
                    "Target ads to a specific household income range (for example, top 10%).",
                    "Target ads in a specific on screen position.",
                    "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
                    "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
                    "Filter website content by sensitive categories (for example, adult).",
                    "Target ads to a specific environment (for example, web or app).",
                    "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
                    "Target ads to a specific operating system (for example, macOS).",
                    "Target ads to a specific device make or model (for example, Roku or Samsung).",
                    "Target ads to a specific keyword (for example, dog or retriever).",
                    "Target ads to a specific negative keyword list.",
                    "Target ads to a specific viewability (for example, 80% viewable).",
                    "Target ads to a specific content category (for example, arts & entertainment).",
                    "Purchase impressions from specific deals and auction packages.",
                    "Target ads to a specific language (for example, English or Japanese).",
                    "Target ads to ads.txt authorized sellers.",
                    "Target ads to a specific regional location (for example, a city or state).",
                    "Purchase impressions from a group of deals and auction packages.",
                    "Purchase impressions from specific exchanges.",
                    "Purchase impressions from specific sub-exchanges."
                  ],
                  "required": true,
                  "pattern": "^[^/]+$",
                  "enum": [
                    "TARGETING_TYPE_UNSPECIFIED",
                    "TARGETING_TYPE_CHANNEL",
                    "TARGETING_TYPE_APP_CATEGORY",
                    "TARGETING_TYPE_APP",
                    "TARGETING_TYPE_URL",
                    "TARGETING_TYPE_DAY_AND_TIME",
                    "TARGETING_TYPE_AGE_RANGE",
                    "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
                    "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
                    "TARGETING_TYPE_GENDER",
                    "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
                    "TARGETING_TYPE_USER_REWARDED_CONTENT",
                    "TARGETING_TYPE_PARENTAL_STATUS",
                    "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
                    "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
                    "TARGETING_TYPE_DEVICE_TYPE",
                    "TARGETING_TYPE_AUDIENCE_GROUP",
                    "TARGETING_TYPE_BROWSER",
                    "TARGETING_TYPE_HOUSEHOLD_INCOME",
                    "TARGETING_TYPE_ON_SCREEN_POSITION",
                    "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
                    "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
                    "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
                    "TARGETING_TYPE_ENVIRONMENT",
                    "TARGETING_TYPE_CARRIER_AND_ISP",
                    "TARGETING_TYPE_OPERATING_SYSTEM",
                    "TARGETING_TYPE_DEVICE_MAKE_MODEL",
                    "TARGETING_TYPE_KEYWORD",
                    "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
                    "TARGETING_TYPE_VIEWABILITY",
                    "TARGETING_TYPE_CATEGORY",
                    "TARGETING_TYPE_INVENTORY_SOURCE",
                    "TARGETING_TYPE_LANGUAGE",
                    "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
                    "TARGETING_TYPE_GEO_REGION",
                    "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
                    "TARGETING_TYPE_EXCHANGE",
                    "TARGETING_TYPE_SUB_EXCHANGE"
                  ],
                  "type": "string",
                  "description": "Required. The type of targeting option to retrieve."
                }
              },
              "path": "v1/targetingTypes/{+targetingType}/targetingOptions/{+targetingOptionId}",
              "parameterOrder": [
                "targetingType",
                "targetingOptionId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/display-video"
              ],
              "flatPath": "v1/targetingTypes/{targetingTypesId}/targetingOptions/{targetingOptionsId}",
              "description": "Gets a single targeting option.",
              "httpMethod": "GET",
              "id": "displayvideo.targetingTypes.targetingOptions.get"
            }
          }
        }
      }
    },
    "inventorySources": {
      "methods": {
        "get": {
          "parameterOrder": [
            "inventorySourceId"
          ],
          "httpMethod": "GET",
          "id": "displayvideo.inventorySources.get",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v1/inventorySources/{inventorySourcesId}",
          "parameters": {
            "inventorySourceId": {
              "format": "int64",
              "location": "path",
              "description": "Required. The ID of the inventory source to fetch.",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            },
            "partnerId": {
              "location": "query",
              "format": "int64",
              "description": "Required. The ID of the DV360 partner to which the fetched inventory source is permissioned.",
              "type": "string"
            }
          },
          "description": "Gets an inventory source.",
          "response": {
            "$ref": "InventorySource"
          },
          "path": "v1/inventorySources/{+inventorySourceId}"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "id": "displayvideo.inventorySources.list",
          "parameters": {
            "filter": {
              "location": "query",
              "description": "Allows filtering by inventory source properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `status.entityStatus` - `commitment` - `deliveryMethod` - `rateDetails.rateType` - `exchange` Examples: * All active inventory sources: `status.entityStatus=\"ENTITY_STATUS_ACTIVE\"` * Inventory sources belonging to Google Ad Manager or Rubicon exchanges: `exchange=\"EXCHANGE_GOOGLE_AD_MANAGER\" OR exchange=\"EXCHANGE_RUBICON\"` The length of this field should be no more than 500 characters.",
              "type": "string"
            },
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.",
              "type": "string",
              "location": "query"
            },
            "partnerId": {
              "location": "query",
              "description": "The ID of the partner that has access to the inventory source.",
              "format": "int64",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`.",
              "format": "int32"
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "The ID of the advertiser that has access to the inventory source."
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`."
            }
          },
          "parameterOrder": [],
          "flatPath": "v1/inventorySources",
          "path": "v1/inventorySources",
          "response": {
            "$ref": "ListInventorySourcesResponse"
          },
          "description": "Lists inventory sources that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, inventory sources with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.",
          "httpMethod": "GET"
        }
      }
    },
    "googleAudiences": {
      "methods": {
        "list": {
          "parameters": {
            "pageSize": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified."
            },
            "orderBy": {
              "location": "query",
              "description": "Field by which to sort the list. Acceptable values are: * `googleAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.",
              "type": "string"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Allows filtering by Google audience fields. Supported syntax: * Filter expressions for Google audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All Google audiences for which the display name contains \"Google\": `displayName : \"Google\"`. The length of this field should be no more than 500 characters."
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched Google audiences.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "pageToken": {
              "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListGoogleAudiences` method. If not specified, the first page of results will be returned.",
              "type": "string",
              "location": "query"
            },
            "partnerId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the partner that has access to the fetched Google audiences."
            }
          },
          "httpMethod": "GET",
          "id": "displayvideo.googleAudiences.list",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v1/googleAudiences",
          "response": {
            "$ref": "ListGoogleAudiencesResponse"
          },
          "path": "v1/googleAudiences",
          "description": "Lists Google audiences. The order is defined by the order_by parameter."
        },
        "get": {
          "response": {
            "$ref": "GoogleAudience"
          },
          "description": "Gets a Google audience.",
          "scopes": [
            "https://www.googleapis.com/auth/display-video"
          ],
          "flatPath": "v1/googleAudiences/{googleAudiencesId}",
          "path": "v1/googleAudiences/{+googleAudienceId}",
          "parameters": {
            "partnerId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the partner that has access to the fetched Google audience."
            },
            "advertiserId": {
              "description": "The ID of the advertiser that has access to the fetched Google audience.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "googleAudienceId": {
              "description": "Required. The ID of the Google audience to fetch.",
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "googleAudienceId"
          ],
          "httpMethod": "GET",
          "id": "displayvideo.googleAudiences.get"
        }
      }
    }
  },
  "baseUrl": "https://displayvideo.googleapis.com/",
  "rootUrl": "https://displayvideo.googleapis.com/",
  "revision": "20200720",
  "schemas": {
    "ListLineItemAssignedTargetingOptionsResponse": {
      "type": "object",
      "id": "ListLineItemAssignedTargetingOptionsResponse",
      "description": "Response message for ListLineItemAssignedTargetingOptions.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListLineItemAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "type": "array"
        }
      }
    },
    "AdvertiserGeneralConfig": {
      "type": "object",
      "description": "General settings of an advertiser.",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "Output only. The standard TZ database name of the advertiser's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones For CM hybrid advertisers, the time zone is the same as that of the associated CM account; for third-party only advertisers, the time zone is the same as that of the parent partner."
        },
        "domainUrl": {
          "description": "Required. The domain URL of the advertiser's primary website. The system will send this information to publishers that require website URL to associate a campaign with an advertiser. Provide a URL with no path or query string, beginning with `http:` or `https:`. For example, http://www.example.com",
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "Required. Immutable. Advertiser's currency in ISO 4217 format. Accepted codes and the currencies they represent are: Currency Code : Currency Name * `ARS` : Argentine Peso * `AUD` : Australian Dollar * `BRL` : Brazilian Real * `CAD` : Canadian Dollar * `CHF` : Swiss Franc * `CLP` : Chilean Peso * `CNY` : Chinese Yuan * `COP` : Colombian Peso * `CZK` : Czech Koruna * `DKK` : Danish Krone * `EGP` : Egyption Pound * `EUR` : Euro * `GBP` : British Pound * `HKD` : Hong Kong Dollar * `HUF` : Hungarian Forint * `IDR` : Indonesian Rupiah * `ILS` : Israeli Shekel * `INR` : Indian Rupee * `JPY` : Japanese Yen * `KRW` : South Korean Won * `MXN` : Mexican Pesos * `MYR` : Malaysian Ringgit * `NGN` : Nigerian Naira * `NOK` : Norwegian Krone * `NZD` : New Zealand Dollar * `PEN` : Peruvian Nuevo Sol * `PLN` : Polish Zloty * `RON` : New Romanian Leu * `RUB` : Russian Ruble * `SEK` : Swedish Krona * `TRY` : Turkish Lira * `TWD` : New Taiwan Dollar * `USD` : US Dollar * `ZAR` : South African Rand"
        }
      },
      "id": "AdvertiserGeneralConfig"
    },
    "IdFilter": {
      "description": "A filtering option that filters entities by their entity IDs.",
      "type": "object",
      "properties": {
        "insertionOrderIds": {
          "type": "array",
          "description": "Insertion Orders to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "adGroupIds": {
          "description": "YouTube Ad Groups to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "lineItemIds": {
          "description": "Line Items to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "mediaProductIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Media Products to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
          "type": "array"
        },
        "adGroupAdIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "YouTube Ads to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest."
        },
        "campaignIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Campaigns to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest."
        }
      },
      "id": "IdFilter"
    },
    "CounterEvent": {
      "description": "Counter event of the creative.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the counter event."
        },
        "reportingName": {
          "type": "string",
          "description": "Required. The name used to identify this counter event in reports."
        }
      },
      "id": "CounterEvent",
      "type": "object"
    },
    "DoubleVerifyVideoViewability": {
      "type": "object",
      "id": "DoubleVerifyVideoViewability",
      "properties": {
        "videoIab": {
          "enum": [
            "VIDEO_IAB_UNSPECIFIED",
            "IAB_VIEWABILITY_80_PERCENT_HIGHER",
            "IAB_VIEWABILITY_75_PERCENT_HIGHER",
            "IAB_VIEWABILITY_70_PERCENT_HIGHER",
            "IAB_VIEWABILITY_65_PERCENT_HIHGER",
            "IAB_VIEWABILITY_60_PERCENT_HIGHER",
            "IAB_VIEWABILITY_55_PERCENT_HIHGER",
            "IAB_VIEWABILITY_50_PERCENT_HIGHER",
            "IAB_VIEWABILITY_40_PERCENT_HIHGER",
            "IAB_VIEWABILITY_30_PERCENT_HIHGER"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video IAB viewable rate options.",
            "Target web and app inventory to maximize IAB viewable rate 80% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 75% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 70% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 65% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 60% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 55% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 50% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 40% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 30% or higher."
          ],
          "description": "Target web inventory to maximize IAB viewable rate.",
          "type": "string"
        },
        "playerImpressionRate": {
          "type": "string",
          "enum": [
            "PLAYER_SIZE_400X300_UNSPECIFIED",
            "PLAYER_SIZE_400X300_95",
            "PLAYER_SIZE_400X300_70",
            "PLAYER_SIZE_400X300_25",
            "PLAYER_SIZE_400X300_5"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any impressions options.",
            "Sites with 95%+ of impressions.",
            "Sites with 70%+ of impressions.",
            "Sites with 25%+ of impressions.",
            "Sites with 5%+ of impressions."
          ],
          "description": "Target inventory to maximize impressions with 400x300 or greater player size."
        },
        "videoViewableRate": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video viewable rate options.",
            "Target web inventory to maximize fully viewable rate 40% or higher.",
            "Target web inventory to maximize fully viewable rate 35% or higher.",
            "Target web inventory to maximize fully viewable rate 30% or higher.",
            "Target web inventory to maximize fully viewable rate 25% or higher.",
            "Target web inventory to maximize fully viewable rate 20% or higher.",
            "Target web inventory to maximize fully viewable rate 10% or higher."
          ],
          "description": "Target web inventory to maximize fully viewable rate.",
          "enum": [
            "VIDEO_VIEWABLE_RATE_UNSPECIFIED",
            "VIEWED_PERFORMANCE_40_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_35_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_30_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_25_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_20_PERCENT_HIGHER",
            "VIEWED_PERFORMANCE_10_PERCENT_HIGHER"
          ],
          "type": "string"
        }
      },
      "description": "Details of DoubleVerify video viewability settings."
    },
    "AppAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the app.",
          "type": "string"
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        },
        "appId": {
          "type": "string",
          "description": "Required. The ID of the app. Android's Play store app uses bundle ID, for example `com.google.android.gm`. Apple's App store app ID uses 9 digit string, for example `422689480`."
        }
      },
      "description": "Details for assigned app targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP`.",
      "id": "AppAssignedTargetingOptionDetails"
    },
    "ExchangeReviewStatus": {
      "description": "Exchange review status for the creative.",
      "id": "ExchangeReviewStatus",
      "properties": {
        "exchange": {
          "type": "string",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE"
          ],
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX",
            "Open8",
            "Triton.",
            "TripleLift",
            "Taboola",
            "InMobi.",
            "Smaato",
            "Aja.",
            "Nexstar Digital.",
            "Waze."
          ],
          "description": "The exchange reviewing the creative."
        },
        "status": {
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ],
          "description": "Status of the exchange review.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BulkEditAdvertiserAssignedTargetingOptionsResponse": {
      "type": "object",
      "properties": {
        "createdAssignedTargetingOptions": {
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "The list of assigned targeting options that have been successfully created. This list will be absent if empty.",
          "type": "array"
        }
      },
      "id": "BulkEditAdvertiserAssignedTargetingOptionsResponse"
    },
    "CustomListTargetingSetting": {
      "properties": {
        "customListId": {
          "description": "Required. Custom id of custom list targeting setting. This id is custom_list_id.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Details of custom list targeting setting.",
      "id": "CustomListTargetingSetting"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "id": "Money",
      "type": "object",
      "description": "Represents an amount of money with its currency type."
    },
    "CmHybridConfig": {
      "type": "object",
      "properties": {
        "cmFloodlightLinkingAuthorized": {
          "description": "Required. Immutable. By setting this field to `true`, you, on behalf of your company, authorize the sharing of information from the given Floodlight configuration to this Display & Video 360 advertiser.",
          "type": "boolean"
        },
        "cmFloodlightConfigId": {
          "type": "string",
          "format": "int64",
          "description": "Required. Immutable. ID of the CM Floodlight configuration linked with the DV360 advertiser."
        },
        "cmAccountId": {
          "format": "int64",
          "description": "Required. Immutable. Account ID of the CM Floodlight configuration linked with the DV360 advertiser.",
          "type": "string"
        },
        "dv360ToCmDataSharingEnabled": {
          "description": "Whether or not to include DV360 data in CM data transfer reports.",
          "type": "boolean"
        },
        "dv360ToCmCostReportingEnabled": {
          "description": "Whether or not to report DV360 cost to CM.",
          "type": "boolean"
        },
        "cmSyncableSiteIds": {
          "description": "A list of CM sites whose placements will be synced to DV360 as creatives. If absent or empty in CreateAdvertiser method, the system will automatically create a CM site. Removing sites from this list may cause DV360 creatives synced from CM to be deleted. At least one site must be specified.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "CmHybridConfig",
      "description": "Settings for advertisers that use both Campaign Manager (CM) and third-party ad servers."
    },
    "AuthorizedSellerStatusAssignedTargetingOptionDetails": {
      "id": "AuthorizedSellerStatusAssignedTargetingOptionDetails",
      "description": "Represents an assigned authorized seller status. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.",
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`."
        },
        "authorizedSellerStatus": {
          "type": "string",
          "enum": [
            "AUTHORIZED_SELLER_STATUS_UNSPECIFIED",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
          ],
          "enumDescriptions": [
            "Default value when authorized seller status is not specified in this version. This enum is a placeholder for default value and does not represent a real authorized seller status option.",
            "Only authorized sellers that directly own the inventory being monetized, as indicated by a DIRECT declaration in the ads.txt file.",
            "All authorized sellers, including publishers that have not posted an ads.txt file. Display & Video 360 automatically disallows unauthorized sellers."
          ],
          "description": "Output only. The authorized seller status to target."
        }
      }
    },
    "ConversionCountingConfig": {
      "description": "Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting.",
      "id": "ConversionCountingConfig",
      "type": "object",
      "properties": {
        "floodlightActivityConfigs": {
          "description": "The Floodlight activity configs used to track conversions. The number of conversions counted is the sum of all of the conversions counted by all of the Floodlight activity IDs specified in this field.",
          "type": "array",
          "items": {
            "$ref": "TrackingFloodlightActivityConfig"
          }
        },
        "postViewCountPercentageMillis": {
          "description": "The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a value of 50000.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "PerformanceGoalBidStrategy": {
      "properties": {
        "performanceGoalAmountMicros": {
          "description": "Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser's currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser's currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00 and lower bound is 0.01. Example: If set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value.",
          "type": "string",
          "format": "int64"
        },
        "performanceGoalType": {
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Cost per action.",
            "Cost per click.",
            "Viewable CPM.",
            "Completed inview and audible views.",
            "Inview time over 10 secs views.",
            "Viewable impressions."
          ],
          "enum": [
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
          ],
          "description": "Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."
        },
        "maxAverageCpmBidAmountMicros": {
          "description": "The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000 represents 1.5 standard units of the currency.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "PerformanceGoalBidStrategy",
      "type": "object",
      "description": "A strategy that automatically adjusts the bid to meet or beat a specified performance goal."
    },
    "InventorySource": {
      "type": "object",
      "properties": {
        "creativeConfigs": {
          "description": "The creative requirements of the inventory source. Not applicable for auction packages.",
          "items": {
            "$ref": "CreativeConfig"
          },
          "type": "array"
        },
        "status": {
          "$ref": "InventorySourceStatus",
          "description": "The status settings of the inventory source."
        },
        "inventorySourceId": {
          "type": "string",
          "description": "Output only. The unique ID of the inventory source. Assigned by the system.",
          "format": "int64"
        },
        "publisherName": {
          "description": "The publisher/seller name of the inventory source.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the inventory source was last updated. Assigned by the system."
        },
        "displayName": {
          "description": "The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "dealId": {
          "description": "The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.",
          "type": "string"
        },
        "rateDetails": {
          "$ref": "RateDetails",
          "description": "Required. The rate details of the inventory source."
        },
        "deliveryMethod": {
          "enumDescriptions": [
            "The delivery method is not specified or is unknown in this version.",
            "The delivery method is programmatic.",
            "The delivery method is tag."
          ],
          "type": "string",
          "enum": [
            "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED",
            "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC",
            "INVENTORY_SOURCE_DELIVERY_METHOD_TAG"
          ],
          "description": "The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the inventory source."
        },
        "timeRange": {
          "$ref": "TimeRange",
          "description": "The time range when this inventory source starts and stops serving."
        },
        "inventorySourceType": {
          "enum": [
            "INVENTORY_SOURCE_TYPE_UNSPECIFIED",
            "INVENTORY_SOURCE_TYPE_PRIVATE",
            "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE"
          ],
          "enumDescriptions": [
            "The inventory source type is not specified or is unknown in this version.",
            "Private inventory source.",
            "Auction package."
          ],
          "description": "Denotes the type of the inventory source.",
          "type": "string"
        },
        "commitment": {
          "enum": [
            "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED",
            "INVENTORY_SOURCE_COMMITMENT_GUARANTEED",
            "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED"
          ],
          "enumDescriptions": [
            "The commitment is not specified or is unknown in this version.",
            "The commitment is guaranteed delivery.",
            "The commitment is non-guaranteed delivery."
          ],
          "type": "string",
          "description": "Whether the inventory source has a guaranteed or non-guaranteed delivery."
        },
        "exchange": {
          "type": "string",
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX",
            "Open8",
            "Triton.",
            "TripleLift",
            "Taboola",
            "InMobi.",
            "Smaato",
            "Aja.",
            "Nexstar Digital.",
            "Waze."
          ],
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE"
          ],
          "description": "The exchange to which the inventory source belongs."
        }
      },
      "description": "An inventory source.",
      "id": "InventorySource"
    },
    "InventorySourceDisplayCreativeConfig": {
      "type": "object",
      "description": "The configuration for display creatives.",
      "properties": {
        "creativeSize": {
          "description": "The size requirements for display creatives that can be assigned to the inventory source.",
          "$ref": "Dimensions"
        }
      },
      "id": "InventorySourceDisplayCreativeConfig"
    },
    "DeviceMakeModelAssignedTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the device make and model.",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
          "type": "string"
        }
      },
      "description": "Assigned device make and model targeting option details. This will be populated in the device_make_model_details field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
      "id": "DeviceMakeModelAssignedTargetingOptionDetails",
      "type": "object"
    },
    "DeviceTypeAssignedTargetingOptionDetails": {
      "properties": {
        "deviceType": {
          "enum": [
            "DEVICE_TYPE_UNSPECIFIED",
            "DEVICE_TYPE_COMPUTER",
            "DEVICE_TYPE_CONNECTED_TV",
            "DEVICE_TYPE_SMART_PHONE",
            "DEVICE_TYPE_TABLET"
          ],
          "type": "string",
          "description": "Output only. The display name of the device type.",
          "enumDescriptions": [
            "Default value when device type is not specified in this version. This enum is a placeholder for default value and does not represent a real device type option.",
            "The device type is computer.",
            "The device type is connected TV.",
            "The device type is smart phone..",
            "The device type is tablet."
          ]
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. ID of the device type."
        }
      },
      "description": "Targeting details for device type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.",
      "id": "DeviceTypeAssignedTargetingOptionDetails",
      "type": "object"
    },
    "AdvertiserSdfConfig": {
      "id": "AdvertiserSdfConfig",
      "description": "Structured Data Files (SDF) settings of an advertiser.",
      "properties": {
        "overridePartnerSdfConfig": {
          "type": "boolean",
          "description": "Whether or not this advertiser overrides the SDF configuration of its parent partner. By default, an advertiser inherits the SDF configuration from the parent partner. To override the partner configuration, set this field to `true` and provide the new configuration in sdfConfig."
        },
        "sdfConfig": {
          "description": "The SDF configuration for the advertiser. * Required when overridePartnerSdfConfig is `true`. * Output only when overridePartnerSdfConfig is `false`.",
          "$ref": "SdfConfig"
        }
      },
      "type": "object"
    },
    "SdfConfig": {
      "type": "object",
      "description": "Structured Data File (SDF) related settings.",
      "properties": {
        "adminEmail": {
          "description": "An administrator email address to which the SDF processing status reports will be sent.",
          "type": "string"
        },
        "version": {
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2;"
          ],
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2"
          ],
          "type": "string",
          "description": "Required. The version of SDF being used."
        }
      },
      "id": "SdfConfig"
    },
    "DoubleVerifyBrandSafetyCategories": {
      "id": "DoubleVerifyBrandSafetyCategories",
      "description": "Settings for brand safety controls.",
      "type": "object",
      "properties": {
        "avoidedHighSeverityCategories": {
          "items": {
            "type": "string",
            "enum": [
              "HIGHER_SEVERITY_UNSPECIFIED",
              "ADULT_CONTENT_PORNOGRAPHY",
              "COPYRIGHT_INFRINGEMENT",
              "SUBSTANCE_ABUSE",
              "GRAPHIC_VIOLENCE_WEAPONS",
              "HATE_PROFANITY",
              "CRIMINAL_SKILLS",
              "NUISANCE_INCENTIVIZED_MALWARE_CLUTTER"
            ],
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any high severity categories.",
              "Adult Content: Pornography, Mature Topics & Nudity.",
              "Copyright Infringement.",
              "Drugs/Alcohol/Controlled Substances: Substance Abuse.",
              "Extreme Graphic/Explicit Violence/Weapons.",
              "Hate/Profanity.",
              "Illegal Activities: Criminal Skills.",
              "Incentivized/Malware/Clutter."
            ]
          },
          "type": "array",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any high severity categories.",
            "Adult Content: Pornography, Mature Topics & Nudity.",
            "Copyright Infringement.",
            "Drugs/Alcohol/Controlled Substances: Substance Abuse.",
            "Extreme Graphic/Explicit Violence/Weapons.",
            "Hate/Profanity.",
            "Illegal Activities: Criminal Skills.",
            "Incentivized/Malware/Clutter."
          ],
          "description": "Brand safety high severity avoidance categories."
        },
        "avoidedMediumSeverityCategories": {
          "type": "array",
          "description": "Brand safety medium severity avoidance categories.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any medium severity categories.",
            "Ad Servers.",
            "Adult Content: Swimsuit.",
            "Controversial Subjects: Alternative Lifestyles.",
            "Controversial Subjects: Celebrity Gossip.",
            "Controversial Subjects: Gambling.",
            "Controversial Subjects: Occult.",
            "Controversial Subjects: Sex Education.",
            "Disaster: Aviation.",
            "Disaster: Man-made.",
            "Disaster: Natural.",
            "Disaster: Terrorist Events.",
            "Disaster: Vehicle.",
            "Drugs/Alcohol/Controlled Substances: Alcohol.",
            "Drugs/Alcohol/Controlled Substances: Smoking.",
            "Negative News: Financial.",
            "Non-Std Content: Non-English.",
            "Non-Std Content: Parking Page.",
            "Unmoderated UGC: Forums, Images & Video.",
            "Controversial Subjects: Inflammatory Politics and News.",
            "Negative News: Pharmaceutical."
          ],
          "items": {
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any medium severity categories.",
              "Ad Servers.",
              "Adult Content: Swimsuit.",
              "Controversial Subjects: Alternative Lifestyles.",
              "Controversial Subjects: Celebrity Gossip.",
              "Controversial Subjects: Gambling.",
              "Controversial Subjects: Occult.",
              "Controversial Subjects: Sex Education.",
              "Disaster: Aviation.",
              "Disaster: Man-made.",
              "Disaster: Natural.",
              "Disaster: Terrorist Events.",
              "Disaster: Vehicle.",
              "Drugs/Alcohol/Controlled Substances: Alcohol.",
              "Drugs/Alcohol/Controlled Substances: Smoking.",
              "Negative News: Financial.",
              "Non-Std Content: Non-English.",
              "Non-Std Content: Parking Page.",
              "Unmoderated UGC: Forums, Images & Video.",
              "Controversial Subjects: Inflammatory Politics and News.",
              "Negative News: Pharmaceutical."
            ],
            "enum": [
              "MEDIUM_SEVERITY_UNSPECIFIED",
              "AD_SERVERS",
              "ADULT_CONTENT_SWIMSUIT",
              "ALTERNATIVE_LIFESTYLES",
              "CELEBRITY_GOSSIP",
              "GAMBLING",
              "OCCULT",
              "SEX_EDUCATION",
              "DISASTER_AVIATION",
              "DISASTER_MAN_MADE",
              "DISASTER_NATURAL",
              "DISASTER_TERRORIST_EVENTS",
              "DISASTER_VEHICLE",
              "ALCOHOL",
              "SMOKING",
              "NEGATIVE_NEWS_FINANCIAL",
              "NON_ENGLISH",
              "PARKING_PAGE",
              "UNMODERATED_UGC",
              "INFLAMMATORY_POLITICS_AND_NEWS",
              "NEGATIVE_NEWS_PHARMACEUTICAL"
            ],
            "type": "string"
          }
        },
        "avoidUnknownBrandSafetyCategory": {
          "description": "Unknown or unrateable.",
          "type": "boolean"
        }
      }
    },
    "DigitalContentLabelAssignedTargetingOptionDetails": {
      "id": "DigitalContentLabelAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "contentRatingTier": {
          "enum": [
            "CONTENT_RATING_TIER_UNSPECIFIED",
            "CONTENT_RATING_TIER_UNRATED",
            "CONTENT_RATING_TIER_GENERAL",
            "CONTENT_RATING_TIER_PARENTAL_GUIDANCE",
            "CONTENT_RATING_TIER_TEENS",
            "CONTENT_RATING_TIER_MATURE"
          ],
          "description": "Output only. The display name of the digital content label rating tier.",
          "enumDescriptions": [
            "Content label is not specified in this version. This enum is a place holder for a default value and does not represent a real content rating.",
            "Content that has not been labeled.",
            "Content suitable for general audiences.",
            "Content suitable for most audiences with parental guidance.",
            "Content suitable for teen and older audiences.",
            "Content suitable only for mature audiences."
          ],
          "type": "string"
        },
        "excludedTargetingOptionId": {
          "description": "Required. ID of the digital content label to be EXCLUDED.",
          "type": "string"
        }
      },
      "description": "Targeting details for digital content label. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`."
    },
    "EnvironmentAssignedTargetingOptionDetails": {
      "id": "EnvironmentAssignedTargetingOptionDetails",
      "description": "Assigned environment targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.",
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "enumDescriptions": [
            "Default value when environment is not specified in this version. This enum is a placeholder for default value and does not represent a real environment option.",
            "Target inventory displayed in browsers. This includes inventory that was designed for the device it was viewed on, such as mobile websites viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be deleted prior to the deletion of this targeting option.",
            "Target inventory displayed in browsers. This includes inventory that was not designed for the device but viewed on it, such as websites optimized for desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of this targeting option.",
            "Target inventory displayed in apps."
          ],
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "ENVIRONMENT_WEB_OPTIMIZED",
            "ENVIRONMENT_WEB_NOT_OPTIMIZED",
            "ENVIRONMENT_APP"
          ],
          "description": "Output only. The serving environment."
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_ENVIRONMENT` (e.g., \"508010\" for targeting the `ENVIRONMENT_WEB_OPTIMIZED` option)."
        }
      }
    },
    "ParentalStatusTargetingOptionDetails": {
      "properties": {
        "parentalStatus": {
          "type": "string",
          "description": "Output only. The parental status of an audience.",
          "enum": [
            "PARENTAL_STATUS_UNSPECIFIED",
            "PARENTAL_STATUS_PARENT",
            "PARENTAL_STATUS_NOT_A_PARENT",
            "PARENTAL_STATUS_UNKNOWN"
          ],
          "enumDescriptions": [
            "Default value when parental status is not specified in this version. This enum is a place holder for default value and does not represent a real parental status option.",
            "The audience is a parent.",
            "The audience is not a parent.",
            "The parental status of the audience is unknown."
          ]
        }
      },
      "type": "object",
      "id": "ParentalStatusTargetingOptionDetails",
      "description": "Represents a targetable parental status. This will be populated in the parental_status_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`."
    },
    "Advertiser": {
      "id": "Advertiser",
      "properties": {
        "adServerConfig": {
          "$ref": "AdvertiserAdServerConfig",
          "description": "Required. Immutable. Ad server related settings of the advertiser."
        },
        "advertiserId": {
          "format": "int64",
          "description": "Output only. The unique ID of the advertiser. Assigned by the system.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "generalConfig": {
          "$ref": "AdvertiserGeneralConfig",
          "description": "Required. General settings of the advertiser."
        },
        "dataAccessConfig": {
          "$ref": "AdvertiserDataAccessConfig",
          "description": "Settings that control how advertiser data may be accessed."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the advertiser was last updated. Assigned by the system.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the advertiser."
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30 days from when it was first scheduled for deletion.",
          "type": "string",
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ]
        },
        "partnerId": {
          "description": "Required. Immutable. The unique ID of the partner that the advertiser belongs to.",
          "format": "int64",
          "type": "string"
        },
        "servingConfig": {
          "description": "Targeting settings related to ad serving of the advertiser.",
          "$ref": "AdvertiserTargetingConfig"
        },
        "creativeConfig": {
          "description": "Required. Creative related settings of the advertiser.",
          "$ref": "AdvertiserCreativeConfig"
        },
        "integrationDetails": {
          "description": "Integration details of the advertiser. Only integrationCode is currently applicable to advertiser. Other fields of IntegrationDetails are not supported and will be ignored if provided.",
          "$ref": "IntegrationDetails"
        }
      },
      "type": "object",
      "description": "A single advertiser in Display & Video 360 (DV360)."
    },
    "ContentInstreamPositionTargetingOptionDetails": {
      "description": "Represents a targetable content instream position, which could be used by video and audio ads. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
      "properties": {
        "contentInstreamPosition": {
          "type": "string",
          "enumDescriptions": [
            "Content instream position is not specified in this version. This enum is a place holder for a default value and does not represent a real in stream ad position.",
            "Ads that play before streaming content.",
            "Ads that play between the beginning and end of streaming content.",
            "Ads that play at the end of streaming content."
          ],
          "enum": [
            "CONTENT_INSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_INSTREAM_POSITION_PRE_ROLL",
            "CONTENT_INSTREAM_POSITION_MID_ROLL",
            "CONTENT_INSTREAM_POSITION_POST_ROLL"
          ],
          "description": "Output only. The content instream position."
        }
      },
      "type": "object",
      "id": "ContentInstreamPositionTargetingOptionDetails"
    },
    "LookbackWindow": {
      "id": "LookbackWindow",
      "type": "object",
      "properties": {
        "impressionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Lookback window, in days, from the last time a given user viewed one of your ads."
        },
        "clickDays": {
          "type": "integer",
          "description": "Lookback window, in days, from the last time a given user clicked on one of your ads.",
          "format": "int32"
        }
      },
      "description": "Specifies how many days into the past to look when determining whether to record a conversion."
    },
    "MaximizeSpendBidStrategy": {
      "type": "object",
      "id": "MaximizeSpendBidStrategy",
      "description": "A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.",
      "properties": {
        "maxAverageCpmBidAmountMicros": {
          "type": "string",
          "format": "int64",
          "description": "The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency."
        },
        "performanceGoalType": {
          "enum": [
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",
            "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
          ],
          "type": "string",
          "description": "Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Cost per action.",
            "Cost per click.",
            "Viewable CPM.",
            "Completed inview and audible views.",
            "Inview time over 10 secs views.",
            "Viewable impressions."
          ]
        }
      }
    },
    "FirstAndThirdPartyAudienceGroup": {
      "id": "FirstAndThirdPartyAudienceGroup",
      "properties": {
        "settings": {
          "description": "Required. All first and third party audience targeting settings in first and third party audience group. Repeated settings with same id are not allowed.",
          "type": "array",
          "items": {
            "$ref": "FirstAndThirdPartyAudienceTargetingSetting"
          }
        }
      },
      "type": "object",
      "description": "Details of first and third party audience group. All first and third party audience targeting settings are logically ‘OR’ of each other."
    },
    "TimeRange": {
      "description": "A time range.",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Required. The upper bound of a time range, inclusive."
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Required. The lower bound of a time range, inclusive.",
          "type": "string"
        }
      },
      "id": "TimeRange",
      "type": "object"
    },
    "BrowserAssignedTargetingOptionDetails": {
      "description": "Details for assigned browser targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_BROWSER`.",
      "type": "object",
      "id": "BrowserAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BROWSER`.",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted. All assigned browser targeting options on the same line item must have the same value for this field."
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the browser."
        }
      }
    },
    "ProximityLocationListAssignedTargetingOptionDetails": {
      "type": "object",
      "description": "Targeting details for proximity location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.",
      "properties": {
        "proximityRadiusRange": {
          "enumDescriptions": [
            "The targeted radius range is not specified or is unknown. Default value when radius range is not specified in this version. This enum is a placeholder for default value and does not represent a real radius range option.",
            "The targeted radius range is small.",
            "The targeted radius range is medium.",
            "The targeted radius range is large."
          ],
          "enum": [
            "PROXIMITY_RADIUS_RANGE_UNSPECIFIED",
            "PROXIMITY_RADIUS_RANGE_SMALL",
            "PROXIMITY_RADIUS_RANGE_MEDIUM",
            "PROXIMITY_RADIUS_RANGE_LARGE"
          ],
          "description": "Required. Radius range for proximity location list. This represents the size of the area around a chosen location that will be targeted. `All` proximity location targeting under a single line item must have the same radius range value. Set this value to match any existing targeting. If updated, this field will change the radius range for all proximity targeting under the line item.",
          "type": "string"
        },
        "proximityLocationListId": {
          "format": "int64",
          "type": "string",
          "description": "Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`."
        }
      },
      "id": "ProximityLocationListAssignedTargetingOptionDetails"
    },
    "CombinedAudienceTargetingSetting": {
      "id": "CombinedAudienceTargetingSetting",
      "description": "Details of combined audience targeting setting.",
      "type": "object",
      "properties": {
        "combinedAudienceId": {
          "format": "int64",
          "description": "Required. Combined audience id of combined audience targeting setting. This id is combined_audience_id.",
          "type": "string"
        }
      }
    },
    "CreateAssetResponse": {
      "type": "object",
      "id": "CreateAssetResponse",
      "description": "A response message for CreateAsset.",
      "properties": {
        "asset": {
          "description": "The uploaded asset, if successful.",
          "$ref": "Asset"
        }
      }
    },
    "BulkEditAssignedInventorySourcesResponse": {
      "properties": {
        "assignedInventorySources": {
          "description": "The list of assigned inventory sources that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedInventorySource"
          },
          "type": "array"
        }
      },
      "description": "Response message for AssignedInventorySourceService.BulkEdit.",
      "type": "object",
      "id": "BulkEditAssignedInventorySourcesResponse"
    },
    "ListAdvertisersResponse": {
      "type": "object",
      "id": "ListAdvertisersResponse",
      "properties": {
        "advertisers": {
          "items": {
            "$ref": "Advertiser"
          },
          "description": "The list of advertisers. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAdvertisers` method to retrieve the next page of results."
        }
      }
    },
    "ListNegativeKeywordListsResponse": {
      "id": "ListNegativeKeywordListsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywordLists` method to retrieve the next page of results.",
          "type": "string"
        },
        "negativeKeywordLists": {
          "type": "array",
          "description": "The list of negative keyword lists. This list will be absent if empty.",
          "items": {
            "$ref": "NegativeKeywordList"
          }
        }
      },
      "description": "Response message for NegativeKeywordListService.ListNegativeKeywordLists.",
      "type": "object"
    },
    "SubExchangeAssignedTargetingOptionDetails": {
      "description": "Details for assigned sub-exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.",
      "id": "SubExchangeAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_SUB_EXCHANGE`.",
          "type": "string"
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "The ID of the partner that owns the channel.",
          "type": "string",
          "format": "int64"
        },
        "channelId": {
          "type": "string",
          "description": "Output only. The unique ID of the channel. Assigned by the system.",
          "format": "int64"
        },
        "name": {
          "description": "Output only. The resource name of the channel.",
          "type": "string"
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser that owns the channel."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the channel. Must be UTF-8 encoded with a maximum length of 240 bytes."
        }
      },
      "description": "A single channel. Channels are custom groups of related websites and apps.",
      "id": "Channel"
    },
    "CreativeConfig": {
      "description": "Creative requirements configuration for the inventory source.",
      "properties": {
        "displayCreativeConfig": {
          "description": "The configuration for display creatives. Applicable when creative_type is `CREATIVE_TYPE_STANDARD`.",
          "$ref": "InventorySourceDisplayCreativeConfig"
        },
        "creativeType": {
          "enum": [
            "CREATIVE_TYPE_UNSPECIFIED",
            "CREATIVE_TYPE_STANDARD",
            "CREATIVE_TYPE_EXPANDABLE",
            "CREATIVE_TYPE_VIDEO",
            "CREATIVE_TYPE_NATIVE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_SITE_SQUARE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL",
            "CREATIVE_TYPE_LIGHTBOX",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE",
            "CREATIVE_TYPE_AUDIO",
            "CREATIVE_TYPE_PUBLISHER_HOSTED",
            "CREATIVE_TYPE_NATIVE_VIDEO",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
          ],
          "description": "The type of creative that can be assigned to the inventory source.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Standard display creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Expandable creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`",
            "Video creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Native creative rendered by publishers with assets from advertiser. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile creative (banner). Create and update methods are **not** supported for this creative type.",
            "Square native creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Interstitial creative including both display and video. Create and update methods are **not** supported for this creative type.",
            "Responsive and expandable Lightbox creative. Create and update methods are **not** supported for this creative type.",
            "Native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Square native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Audio creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Publisher hosted creative. Create and update methods are **not** supported for this creative type.",
            "Native video creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile video creative. Create and update methods are **not** supported for this creative type."
          ],
          "type": "string"
        },
        "videoCreativeConfig": {
          "$ref": "InventorySourceVideoCreativeConfig",
          "description": "The configuration for video creatives. Applicable when creative_type is `CREATIVE_TYPE_VIDEO`."
        }
      },
      "type": "object",
      "id": "CreativeConfig"
    },
    "BulkEditAssignedInventorySourcesRequest": {
      "id": "BulkEditAssignedInventorySourcesRequest",
      "description": "Request message for AssignedInventorySourceService.BulkEdit.",
      "properties": {
        "partnerId": {
          "description": "The ID of the partner that owns the inventory source group. Only this partner has write access to these assigned inventory sources.",
          "format": "int64",
          "type": "string"
        },
        "deletedAssignedInventorySources": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "The IDs of the assigned inventory sources to delete in bulk, specified as a list of assigned_inventory_source_ids."
        },
        "advertiserId": {
          "format": "int64",
          "description": "The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to these assigned inventory sources.",
          "type": "string"
        },
        "createdAssignedInventorySources": {
          "type": "array",
          "items": {
            "$ref": "AssignedInventorySource"
          },
          "description": "The assigned inventory sources to create in bulk, specified as a list of AssignedInventorySources."
        }
      },
      "type": "object"
    },
    "BulkEditLineItemAssignedTargetingOptionsResponse": {
      "id": "BulkEditLineItemAssignedTargetingOptionsResponse",
      "type": "object",
      "properties": {
        "createdAssignedTargetingOptions": {
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "type": "array",
          "description": "The list of assigned targeting options that have been successfully created. This list will be absent if empty."
        }
      }
    },
    "ParentEntityFilter": {
      "description": "A filtering option that filters on selected file types belonging to a chosen set of filter entities.",
      "id": "ParentEntityFilter",
      "properties": {
        "filterIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The IDs of the specified filter type. This is used to filter entities to fetch. If filter type is not `FILTER_TYPE_NONE`, at least one ID must be specified."
        },
        "fileType": {
          "enumDescriptions": [
            "Default value when type is unspecified or is unknown in this version.",
            "Campaign.",
            "Media Product.",
            "Insertion Order.",
            "Line Item.",
            "YouTube Ad Group.",
            "YouTube Ad."
          ],
          "type": "array",
          "description": "Required. File types that will be returned.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default value when type is unspecified or is unknown in this version.",
              "Campaign.",
              "Media Product.",
              "Insertion Order.",
              "Line Item.",
              "YouTube Ad Group.",
              "YouTube Ad."
            ],
            "enum": [
              "FILE_TYPE_UNSPECIFIED",
              "FILE_TYPE_CAMPAIGN",
              "FILE_TYPE_MEDIA_PRODUCT",
              "FILE_TYPE_INSERTION_ORDER",
              "FILE_TYPE_LINE_ITEM",
              "FILE_TYPE_AD_GROUP",
              "FILE_TYPE_AD"
            ]
          }
        },
        "filterType": {
          "description": "Required. Filter type used to filter fetched entities.",
          "enum": [
            "FILTER_TYPE_UNSPECIFIED",
            "FILTER_TYPE_NONE",
            "FILTER_TYPE_ADVERTISER_ID",
            "FILTER_TYPE_CAMPAIGN_ID",
            "FILTER_TYPE_MEDIA_PRODUCT_ID",
            "FILTER_TYPE_INSERTION_ORDER_ID",
            "FILTER_TYPE_LINE_ITEM_ID"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when type is unspecified or is unknown in this version.",
            "If selected, no filter will be applied to the download. Can only be used if an Advertiser is specified in CreateSdfDownloadTaskRequest.",
            "Advertiser ID. If selected, all filter IDs must be Advertiser IDs that belong to the Partner specified in CreateSdfDownloadTaskRequest.",
            "Campaign ID. If selected, all filter IDs must be Campaign IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest.",
            "Media Product ID. If selected, all filter IDs must be Media Product IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_MEDIA_PRODUCT`.",
            "Insertion Order ID. If selected, all filter IDs must be Insertion Order IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_INSERTION_ORDER`, `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`.",
            "Line Item ID. If selected, all filter IDs must be Line Item IDs that belong to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can only be used for downloading `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`."
          ]
        }
      },
      "type": "object"
    },
    "ParentalStatusAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_PARENTAL_STATUS`.",
          "type": "string"
        },
        "parentalStatus": {
          "enumDescriptions": [
            "Default value when parental status is not specified in this version. This enum is a place holder for default value and does not represent a real parental status option.",
            "The audience is a parent.",
            "The audience is not a parent.",
            "The parental status of the audience is unknown."
          ],
          "type": "string",
          "description": "Output only. The parental status of the audience.",
          "enum": [
            "PARENTAL_STATUS_UNSPECIFIED",
            "PARENTAL_STATUS_PARENT",
            "PARENTAL_STATUS_NOT_A_PARENT",
            "PARENTAL_STATUS_UNKNOWN"
          ]
        }
      },
      "id": "ParentalStatusAssignedTargetingOptionDetails",
      "description": "Details for assigned parental status targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARTGETING_TYPE_PARENTAL_STATUS`."
    },
    "CampaignGoal": {
      "id": "CampaignGoal",
      "type": "object",
      "description": "Settings that control the goal of a campaign.",
      "properties": {
        "performanceGoal": {
          "description": "Required. The performance goal of the campaign. Acceptable values for performance_goal_type are: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_OTHER`",
          "$ref": "PerformanceGoal"
        },
        "campaignGoalType": {
          "enumDescriptions": [
            "Goal value is not specified or unknown in this version.",
            "Drive app installs or engagements.",
            "Raise awareness of a brand or product.",
            "Drive offline or in-store sales.",
            "Drive online action or visits."
          ],
          "description": "Required. The type of the campaign goal.",
          "enum": [
            "CAMPAIGN_GOAL_TYPE_UNSPECIFIED",
            "CAMPAIGN_GOAL_TYPE_APP_INSTALL",
            "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS",
            "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION",
            "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION"
          ],
          "type": "string"
        }
      }
    },
    "GoogleAudienceTargetingSetting": {
      "description": "Details of Google audience targeting setting.",
      "id": "GoogleAudienceTargetingSetting",
      "properties": {
        "googleAudienceId": {
          "description": "Required. Google audience id of the Google audience targeting setting. This id is google_audience_id.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "LineItemBudget": {
      "type": "object",
      "id": "LineItemBudget",
      "description": "Settings that control how budget is allocated.",
      "properties": {
        "budgetAllocationType": {
          "description": "Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is only applicable when automatic budget allocation is enabled for the parent insertion order.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Automatic budget allocation is enabled for the line item.",
            "A fixed max budget amount is allocated for the line item.",
            "No budget limit is applied to the line item."
          ],
          "type": "string",
          "enum": [
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED",
            "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED"
          ]
        },
        "budgetUnit": {
          "enum": [
            "BUDGET_UNIT_UNSPECIFIED",
            "BUDGET_UNIT_CURRENCY",
            "BUDGET_UNIT_IMPRESSIONS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Budgeting in currency amounts.",
            "Budgeting in impression amounts."
          ],
          "description": "Output only. The budget unit specifies whether the budget is currency based or impression based. This value is inherited from the parent insertion order."
        },
        "maxAmount": {
          "description": "The maximum budget amount the line item will spend. Must be greater than 0. When budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will be ignored by the system.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SdfDownloadTaskMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The SDF version used to execute this download task.",
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2;"
          ],
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2"
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time when the operation was created.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time when execution was completed.",
          "type": "string"
        }
      },
      "description": "Type for the metadata returned by [SdfDownloadTaskService.CreateSdfDownloadTask].",
      "id": "SdfDownloadTaskMetadata"
    },
    "SensitiveCategoryAssignedTargetingOptionDetails": {
      "description": "Targeting details for sensitive category. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.",
      "type": "object",
      "id": "SensitiveCategoryAssignedTargetingOptionDetails",
      "properties": {
        "sensitiveCategory": {
          "type": "string",
          "enum": [
            "SENSITIVE_CATEGORY_UNSPECIFIED",
            "SENSITIVE_CATEGORY_ADULT",
            "SENSITIVE_CATEGORY_DEROGATORY",
            "SENSITIVE_CATEGORY_DOWNLOADS_SHARING",
            "SENSITIVE_CATEGORY_WEAPONS",
            "SENSITIVE_CATEGORY_GAMBLING",
            "SENSITIVE_CATEGORY_VIOLENCE",
            "SENSITIVE_CATEGORY_SUGGESTIVE",
            "SENSITIVE_CATEGORY_PROFANITY",
            "SENSITIVE_CATEGORY_ALCOHOL",
            "SENSITIVE_CATEGORY_DRUGS",
            "SENSITIVE_CATEGORY_TOBACCO",
            "SENSITIVE_CATEGORY_POLITICS",
            "SENSITIVE_CATEGORY_RELIGION",
            "SENSITIVE_CATEGORY_TRAGEDY",
            "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS",
            "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES",
            "SENSITIVE_CATEGORY_SHOCKING"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and doesn't specify a DV360 sensitive category.",
            "Adult or pornographic text, image, or video content.",
            "Content that may be construed as biased against individuals, groups, or organizations based on criteria such as race, religion, disability, sex, age, veteran status, sexual orientation, gender identity, or political affiliation. May also indicate discussion of such content, for instance, in an academic or journalistic context.",
            "Content related to audio, video, or software downloads.",
            "Contains content related to personal weapons, including knives, guns, small firearms, and ammunition. Selecting either \"weapons\" or \"sensitive social issues\" will result in selecting both.",
            "Contains content related to betting or wagering in a real-world or online setting.",
            "Content which may be considered graphically violent, gory, gruesome, or shocking, such as street fighting videos, accident photos, descriptions of torture, etc.",
            "Adult content, as well as suggestive content that's not explicitly pornographic. This category includes all pages categorized as adult.",
            "Prominent use of words considered indecent, such as curse words and sexual slang. Pages with only very occasional usage, such as news sites that might include such words in a quotation, are not included.",
            "Contains content related to alcoholic beverages, alcohol brands, recipes, etc.",
            "Contains content related to the recreational use of legal or illegal drugs, as well as to drug paraphernalia or cultivation.",
            "Contains content related to tobacco and tobacco accessories, including lighters, humidors, ashtrays, etc.",
            "Political news and media, including discussions of social, governmental, and public policy.",
            "Content related to religious thought or beliefs.",
            "Content related to death, disasters, accidents, war, etc.",
            "Content related to motor vehicle, aviation or other transportation accidents.",
            "Issues that evoke strong, opposing views and spark debate. These include issues that are controversial in most countries and markets (such as abortion), as well as those that are controversial in specific countries and markets (such as immigration reform in the United States).",
            "Content which may be considered shocking or disturbing, such as violent news stories, stunts, or toilet humor."
          ],
          "description": "Output only. An enum for the DV360 Sensitive category content classifier."
        },
        "excludedTargetingOptionId": {
          "description": "Required. ID of the sensitive category to be EXCLUDED.",
          "type": "string"
        }
      }
    },
    "AssignedInventorySource": {
      "type": "object",
      "id": "AssignedInventorySource",
      "properties": {
        "inventorySourceId": {
          "description": "Required. The ID of the inventory source entity being targeted.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the assigned inventory source."
        },
        "assignedInventorySourceId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the assigned inventory source. The ID is only unique within a given inventory source group. It may be reused in other contexts."
        }
      },
      "description": "An assignment between a targetable inventory source and an inventory source group."
    },
    "CategoryAssignedTargetingOptionDetails": {
      "id": "CategoryAssignedTargetingOptionDetails",
      "description": "Assigned category targeting option details. This will be populated in the category_details field when targeting_type is `TARGETING_TYPE_CATEGORY`.",
      "type": "object",
      "properties": {
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the category."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CATEGORY`.",
          "type": "string"
        }
      }
    },
    "DateRange": {
      "type": "object",
      "id": "DateRange",
      "properties": {
        "startDate": {
          "$ref": "Date",
          "description": "The lower bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`."
        },
        "endDate": {
          "description": "The upper bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`.",
          "$ref": "Date"
        }
      },
      "description": "A date range."
    },
    "IntegrationDetails": {
      "description": "Integration details of an entry.",
      "properties": {
        "integrationCode": {
          "type": "string",
          "description": "An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters."
        },
        "details": {
          "description": "Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "IntegrationDetails"
    },
    "ListAdvertiserAssignedTargetingOptionsResponse": {
      "description": "Response message for ListAdvertiserAssignedTargetingOptions.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      },
      "type": "object",
      "id": "ListAdvertiserAssignedTargetingOptionsResponse"
    },
    "AdvertiserTargetingConfig": {
      "properties": {
        "exemptTvFromViewabilityTargeting": {
          "description": "Whether or not connected TV devices are exempt from viewability targeting for all video line items under the advertiser.",
          "type": "boolean"
        }
      },
      "id": "AdvertiserTargetingConfig",
      "description": "Targeting settings related to ad serving of an advertiser.",
      "type": "object"
    },
    "VideoPlayerSizeTargetingOptionDetails": {
      "id": "VideoPlayerSizeTargetingOptionDetails",
      "description": "Represents a targetable video player size. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.",
      "properties": {
        "videoPlayerSize": {
          "enumDescriptions": [
            "Video player size is not specified in this version. This enum is a place holder for a default value and does not represent a real video player size.",
            "The dimensions of the video player are less than 400×300 (desktop), or up to 20% of screen covered (mobile).",
            "The dimensions of the video player are between 400x300 and 1280x720 pixels (desktop), or 20% to 90% of the screen covered (mobile).",
            "The dimensions of the video player are 1280×720 or greater (desktop), or over 90% of the screen covered (mobile).",
            "The dimensions of the video player are unknown."
          ],
          "enum": [
            "VIDEO_PLAYER_SIZE_UNSPECIFIED",
            "VIDEO_PLAYER_SIZE_SMALL",
            "VIDEO_PLAYER_SIZE_LARGE",
            "VIDEO_PLAYER_SIZE_HD",
            "VIDEO_PLAYER_SIZE_UNKNOWN"
          ],
          "description": "Output only. The video player size.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InsertionOrderBudget": {
      "type": "object",
      "properties": {
        "automationType": {
          "type": "string",
          "enum": [
            "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED",
            "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET",
            "INSERTION_ORDER_AUTOMATION_TYPE_NONE",
            "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
          ],
          "description": "The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.",
          "enumDescriptions": [
            "Insertion order automation option is not specified or is unknown in this version.",
            "Automatic budget allocation. Allow the system to automatically shift budget to owning line items to optimize performance defined by performance_goal. No automation on bid settings.",
            "No automation of bid or budget on insertion order level. Bid and budget must be manually configured at the line item level.",
            "Allow the system to automatically adjust bids and shift budget to owning line items to optimize performance defined by performance_goal."
          ]
        },
        "budgetUnit": {
          "enum": [
            "BUDGET_UNIT_UNSPECIFIED",
            "BUDGET_UNIT_CURRENCY",
            "BUDGET_UNIT_IMPRESSIONS"
          ],
          "description": "Required. Immutable. The budget unit specifies whether the budget is currency based or impression based.",
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Budgeting in currency amounts.",
            "Budgeting in impression amounts."
          ]
        },
        "budgetSegments": {
          "type": "array",
          "items": {
            "$ref": "InsertionOrderBudgetSegment"
          },
          "description": "Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running."
        }
      },
      "description": "Settings that control how insertion order budget is allocated.",
      "id": "InsertionOrderBudget"
    },
    "Adloox": {
      "type": "object",
      "properties": {
        "excludedAdlooxCategories": {
          "type": "array",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any Adloox option.",
            "Adult content (hard).",
            "Adult content (soft).",
            "Illegal content.",
            "Borderline content.",
            "Discriminatory content.",
            "Violent content & weapons.",
            "Low viewability domains.",
            "Fraud."
          ],
          "description": "Adloox's brand safety settings.",
          "items": {
            "enum": [
              "ADLOOX_UNSPECIFIED",
              "ADULT_CONTENT_HARD",
              "ADULT_CONTENT_SOFT",
              "ILLEGAL_CONTENT",
              "BORDERLINE_CONTENT",
              "DISCRIMINATORY_CONTENT",
              "VIOLENT_CONTENT_WEAPONS",
              "LOW_VIEWABILITY_DOMAINS",
              "FRAUD"
            ],
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any Adloox option.",
              "Adult content (hard).",
              "Adult content (soft).",
              "Illegal content.",
              "Borderline content.",
              "Discriminatory content.",
              "Violent content & weapons.",
              "Low viewability domains.",
              "Fraud."
            ],
            "type": "string"
          }
        }
      },
      "description": "Details of Adloox settings.",
      "id": "Adloox"
    },
    "AuthorizedSellerStatusTargetingOptionDetails": {
      "properties": {
        "authorizedSellerStatus": {
          "description": "Output only. The authorized seller status.",
          "enumDescriptions": [
            "Default value when authorized seller status is not specified in this version. This enum is a placeholder for default value and does not represent a real authorized seller status option.",
            "Only authorized sellers that directly own the inventory being monetized, as indicated by a DIRECT declaration in the ads.txt file.",
            "All authorized sellers, including publishers that have not posted an ads.txt file. Display & Video 360 automatically disallows unauthorized sellers."
          ],
          "type": "string",
          "enum": [
            "AUTHORIZED_SELLER_STATUS_UNSPECIFIED",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY",
            "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
          ]
        }
      },
      "description": "Represents a targetable authorized seller status. This will be populated in the authorized_seller_status_details field when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.",
      "id": "AuthorizedSellerStatusTargetingOptionDetails",
      "type": "object"
    },
    "DeviceMakeModelTargetingOptionDetails": {
      "description": "Represents a targetable device make and model. This will be populated in the device_make_model_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.",
      "id": "DeviceMakeModelTargetingOptionDetails",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the device make and model.",
          "type": "string"
        }
      }
    },
    "BulkListAdvertiserAssignedTargetingOptionsResponse": {
      "type": "object",
      "id": "BulkListAdvertiserAssignedTargetingOptionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        },
        "assignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        }
      }
    },
    "BulkListLineItemAssignedTargetingOptionsResponse": {
      "properties": {
        "assignedTargetingOptions": {
          "type": "array",
          "description": "The list of assigned targeting options. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedTargetingOption"
          }
        },
        "nextPageToken": {
          "description": "A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListLineItemAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "BulkListLineItemAssignedTargetingOptionsResponse"
    },
    "InventorySourceStatus": {
      "description": "The status related settings of the inventory source.",
      "properties": {
        "sellerStatus": {
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Output only. The status set by the seller for the inventory source. Only applicable for inventory sources synced directly from the publishers. Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.",
          "type": "string"
        },
        "configStatus": {
          "type": "string",
          "enum": [
            "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED",
            "INVENTORY_SOURCE_CONFIG_STATUS_PENDING",
            "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED"
          ],
          "description": "Output only. The configuration status of the inventory source. Only applicable for guaranteed inventory sources. Acceptable values are `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve.",
          "enumDescriptions": [
            "The approval status is not specified or is unknown in this version.",
            "The beginning state of a guaranteed inventory source. The inventory source in this state needs to be configured.",
            "The state after the buyer configures a guaranteed inventory source."
          ]
        },
        "sellerPauseReason": {
          "type": "string",
          "description": "Output only. The seller-provided reason for pausing this inventory source. Only applicable for inventory sources synced directly from the publishers and when seller_status is set to `ENTITY_STATUS_PAUSED`."
        },
        "entityStatus": {
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Whether or not the inventory source is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.",
          "type": "string"
        },
        "entityPauseReason": {
          "description": "The user-provided reason for pausing this inventory source. Must not exceed 100 characters. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.",
          "type": "string"
        }
      },
      "id": "InventorySourceStatus",
      "type": "object"
    },
    "AdvertiserCreativeConfig": {
      "description": "Creatives related settings of an advertiser.",
      "id": "AdvertiserCreativeConfig",
      "properties": {
        "videoCreativeDataSharingAuthorized": {
          "description": "By setting this field to `true`, you, on behalf of your company, authorize Google to use video creatives associated with this Display & Video 360 advertiser to provide reporting and features related to the advertiser's television campaigns. Applicable only when the advertiser has a CM hybrid ad server configuration.",
          "type": "boolean"
        },
        "dynamicCreativeEnabled": {
          "description": "Whether or not the advertiser is enabled for dynamic creatives.",
          "type": "boolean"
        },
        "iasClientId": {
          "type": "string",
          "description": "An ID for configuring campaign monitoring provided by Integral Ad Service (IAS). The DV360 system will append an IAS \"Campaign Monitor\" tag containing this ID to the creative tag.",
          "format": "int64"
        },
        "obaComplianceDisabled": {
          "description": "Whether or not to use DV360's Online Behavioral Advertising (OBA) compliance. Warning: Changing OBA settings may cause the audit status of your creatives to be reset by some ad exchanges, making them ineligible to serve until they are re-approved.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CombinedAudience": {
      "id": "CombinedAudience",
      "description": "Describes a combined audience resource.",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the combined audience.",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name of the combined audience. .",
          "type": "string"
        },
        "combinedAudienceId": {
          "description": "Output only. The unique ID of the combined audience. Assigned by the system.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FirstAndThirdPartyAudience": {
      "description": "Describes a first or third party audience list used for targeting. First party audiences are created via usage of client data. Third party audiences are provided by Third Party data providers and can only be licensed to customers.",
      "properties": {
        "displayDesktopAudienceSize": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The estimated desktop audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request."
        },
        "gmailAudienceSize": {
          "format": "int64",
          "description": "Output only. The estimated audience size for Gmail network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "type": "string"
        },
        "displayAudienceSize": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The estimated audience size for the Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request."
        },
        "description": {
          "description": "The user-provided description of the audience. Only applicable to first party audiences.",
          "type": "string"
        },
        "displayMobileWebAudienceSize": {
          "description": "Output only. The estimated mobile web audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "format": "int64",
          "type": "string"
        },
        "audienceSource": {
          "enumDescriptions": [
            "Default value when audience source is not specified or is unknown.",
            "Originated from Display & Video 360.",
            "Originated from Campaign Manager.",
            "Originated from Google Ad Manager.",
            "Originated from Search Ads 360.",
            "Originated from Youtube.",
            "Originated from Ads Data Hub."
          ],
          "enum": [
            "AUDIENCE_SOURCE_UNSPECIFIED",
            "DISPLAY_VIDEO_360",
            "CAMPAIGN_MANAGER",
            "AD_MANAGER",
            "SEARCH_ADS_360",
            "YOUTUBE",
            "ADS_DATA_HUB"
          ],
          "type": "string",
          "description": "Output only. The source of the audience."
        },
        "youtubeAudienceSize": {
          "type": "string",
          "description": "Output only. The estimated audience size for YouTube network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "format": "int64"
        },
        "membershipDurationDays": {
          "format": "int64",
          "description": "The duration in days that an entry remains in the audience after the qualifying event. Only applicable to first party audiences.",
          "type": "string"
        },
        "firstAndThirdPartyAudienceType": {
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Audience that is created via usage of client data.",
            "Audience that is provided by Third Party data providers."
          ],
          "enum": [
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_UNSPECIFIED",
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_FIRST_PARTY",
            "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_THIRD_PARTY"
          ],
          "description": "Output only. Whether the audience is a first or third party audience.",
          "type": "string"
        },
        "audienceType": {
          "enum": [
            "AUDIENCE_TYPE_UNSPECIFIED",
            "CUSTOMER_MATCH_CONTACT_INFO",
            "CUSTOMER_MATCH_DEVICE_ID",
            "CUSTOMER_MATCH_USER_ID",
            "ACTIVITY_BASED",
            "FREQUENCY_CAP",
            "TAG_BASED",
            "YOUTUBE_USERS",
            "LICENSED"
          ],
          "type": "string",
          "description": "Output only. The type of the audience.",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Audience was generated through matching customers to known contact information.",
            "Audience was generated through matching customers to known Mobile device IDs.",
            "Audience was generated through matching customers to known User IDs.",
            "Audience was created based on campaign activity.",
            "Audience was created based on excluding the number of impressions they were served.",
            "Audience was created based on custom variables attached to pixel.",
            "Audience was created based on past interactions with videos, YouTube ads, or YouTube channel.",
            "Subtype of third party audience type."
          ]
        },
        "displayMobileAppAudienceSize": {
          "format": "int64",
          "description": "Output only. The estimated mobile app audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.",
          "type": "string"
        },
        "firstAndThirdPartyAudienceId": {
          "type": "string",
          "description": "Output only. The unique ID of the first and third party audience. Assigned by the system.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the first and third party audience."
        },
        "activeDisplayAudienceSize": {
          "type": "string",
          "description": "Output only. The estimated audience size for the Display network in the past month. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.",
          "format": "int64"
        },
        "displayName": {
          "description": "The display name of the first and third party audience.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "FirstAndThirdPartyAudience"
    },
    "PerformanceGoal": {
      "id": "PerformanceGoal",
      "description": "Settings that control the performance goal of a campaign or insertion order.",
      "properties": {
        "performanceGoalPercentageMicros": {
          "description": "The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` For example, 70000 represents 7% (decimal 0.07).",
          "format": "int64",
          "type": "string"
        },
        "performanceGoalAmountMicros": {
          "description": "The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` For example 1500000 represents 1.5 standard units of the currency.",
          "type": "string",
          "format": "int64"
        },
        "performanceGoalString": {
          "description": "A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.",
          "type": "string"
        },
        "performanceGoalType": {
          "enum": [
            "PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
            "PERFORMANCE_GOAL_TYPE_CPM",
            "PERFORMANCE_GOAL_TYPE_CPC",
            "PERFORMANCE_GOAL_TYPE_CPA",
            "PERFORMANCE_GOAL_TYPE_VIEWABILITY",
            "PERFORMANCE_GOAL_TYPE_CPIAVC",
            "PERFORMANCE_GOAL_TYPE_CPE",
            "PERFORMANCE_GOAL_TYPE_OTHER"
          ],
          "description": "Required. The type of the performance goal.",
          "type": "string",
          "enumDescriptions": [
            "Performance goal type is not specified or is unknown in this version.",
            "The performance goal is set in CPM (cost per mille).",
            "The performance goal is set in CPC (cost per click).",
            "The performance goal is set in CPA (cost per action).",
            "The performance goal is set in Viewability percentage.",
            "The performance goal is set as CPIAVC (cost per impression audible and visible at completion).",
            "The performance goal is set in CPE (cost per engagement).",
            "The performance goal is set to Other."
          ]
        }
      },
      "type": "object"
    },
    "Creative": {
      "type": "object",
      "description": "A single Creative.",
      "id": "Creative",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the creative was last updated. Assigned by the system.",
          "type": "string"
        },
        "lineItemIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Output only. The IDs of the line items this creative is associated with. To associate a creative to a line item, use LineItem.creative_ids instead."
        },
        "reviewStatus": {
          "description": "Output only. The current status of the creative review process.",
          "$ref": "ReviewStatusInfo"
        },
        "exitEvents": {
          "items": {
            "$ref": "ExitEvent"
          },
          "description": "Required. Exit events for this creative. An exit (also known as a click tag) is any area in your creative that someone can click or tap to open an advertiser's landing page. Every creative must include at least one exit. You can add an exit to your creative in any of the following ways: * Use Google Web Designer's tap area. * Define a JavaScript variable called \"clickTag\". * Use the Enabler (Enabler.exit()) to track exits in rich media formats.",
          "type": "array"
        },
        "thirdPartyTag": {
          "type": "string",
          "description": "Optional. The original third-party tag used for the creative. Required and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "requirePingForAttribution": {
          "description": "Optional. Indicates that the creative will wait for a return ping for attribution. Only valid when using a Campaign Manager tracking ad with a third-party ad server parameter and the ${DC_DBM_TOKEN} macro. Optional and only valid for third-party tag creatives or third-party VAST tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "type": "boolean"
        },
        "creativeAttributes": {
          "items": {
            "enum": [
              "CREATIVE_ATTRIBUTE_UNSPECIFIED",
              "CREATIVE_ATTRIBUTE_VAST",
              "CREATIVE_ATTRIBUTE_VPAID_LINEAR",
              "CREATIVE_ATTRIBUTE_VPAID_NON_LINEAR"
            ],
            "type": "string",
            "enumDescriptions": [
              "The creative attribute is not specified or is unknown in this version.",
              "The creative is a VAST creative.",
              "The creative is a linear VPAID creative.",
              "The creative is a non-linear VPAID creative."
            ]
          },
          "type": "array",
          "enumDescriptions": [
            "The creative attribute is not specified or is unknown in this version.",
            "The creative is a VAST creative.",
            "The creative is a linear VPAID creative.",
            "The creative is a non-linear VPAID creative."
          ],
          "description": "Output only. A list of attributes of the creative that is generated by the system."
        },
        "thirdPartyUrls": {
          "type": "array",
          "items": {
            "$ref": "ThirdPartyUrl"
          },
          "description": "Tracking URLs from third parties to track interactions with a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`"
        },
        "additionalDimensions": {
          "type": "array",
          "description": "Additional dimensions. Applicable when creative_type is one of: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED` If this field is specified, width_pixels and height_pixels are both required and must be greater than or equal to 0.",
          "items": {
            "$ref": "Dimensions"
          }
        },
        "requireMraid": {
          "type": "boolean",
          "description": "Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad Interface Definitions system). Set this if the creative relies on mobile gestures for interactivity, such as swiping or tapping. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "notes": {
          "type": "string",
          "description": "User notes for this creative. Must be UTF-8 encoded with a length of no more than 20,000 characters."
        },
        "requireHtml5": {
          "description": "Optional. Indicates that the creative relies on HTML5 to render properly. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`",
          "type": "boolean"
        },
        "obaIcon": {
          "description": "Specifies the OBA icon for a video creative. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "$ref": "ObaIcon"
        },
        "vastTagUrl": {
          "type": "string",
          "description": "Optional. The URL of the VAST tag for a third-party VAST tag creative. Required and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "appendedTag": {
          "description": "Third-party HTML tracking tag to be appended to the creative tag.",
          "type": "string"
        },
        "iasCampaignMonitoring": {
          "type": "boolean",
          "description": "Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled. To enable this for the creative, make sure the Advertiser.creative_config.ias_client_id has been set to your IAS client ID."
        },
        "dynamic": {
          "type": "boolean",
          "description": "Output only. Indicates whether the creative is dynamic."
        },
        "skippable": {
          "description": "Whether the user can choose to skip a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the creative. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "universalAdId": {
          "description": "Optional. An optional creative identifier provided by a registry that is unique across all platforms. Universal Ad ID is part of the VAST 4.0 standard. It can be modified after the creative is created. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "$ref": "UniversalAdId"
        },
        "companionCreativeIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The IDs of companion creatives for a video creative. You can assign existing display creatives (with image or HTML5 assets) to serve surrounding the publisher's video player. Companions display around the video player while the video is playing and remain after the video has completed. Creatives contain additional dimensions can not be companion creatives. This field is only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`"
        },
        "cmPlacementId": {
          "type": "string",
          "description": "Output only. The unique ID of the Campaign Manager placement associated with the creative. This field is only applicable for creatives that are synced from Campaign Manager.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the creative."
        },
        "integrationCode": {
          "type": "string",
          "description": "ID information used to link this creative to an external system. Must be UTF-8 encoded with a length of no more than 10,000 characters."
        },
        "transcodes": {
          "items": {
            "$ref": "Transcode"
          },
          "description": "Output only. Audio/Video transcodes. Display & Video 360 transcodes the main asset into a number of alternative versions that use different file formats or have different properties (resolution, audio bit rate, and video bit rate), each designed for specific video players or bandwidths. These transcodes give a publisher's system more options to choose from for each impression on your video and ensures that the appropriate file serves based on the viewer’s connection and screen size. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`",
          "type": "array"
        },
        "entityStatus": {
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Required. Controls whether or not the creative can serve. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` * `ENTITY_STATUS_PAUSED`"
        },
        "jsTrackerUrl": {
          "description": "JavaScript measurement URL from supported third-party verification providers (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
          "type": "string"
        },
        "advertiserId": {
          "type": "string",
          "description": "Output only. The unique ID of the advertiser the creative belongs to.",
          "format": "int64"
        },
        "cmTrackingAd": {
          "description": "The Campaign Manager tracking ad associated with the creative. Optional for the following creative_type when created by an advertiser that uses both Campaign Manager and third-party ad serving: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` Output only for other cases.",
          "$ref": "CmTrackingAd"
        },
        "trackerUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Tracking URLs for analytics providers or third-party ad technology vendors. The URLs must start with https (except on inventory that doesn't require SSL compliance). If using macros in your URL, use only macros supported by Display & Video 360. Standard URLs only, no IMG or SCRIPT tags. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`"
        },
        "hostingSource": {
          "type": "string",
          "description": "Required. Indicates where the creative is hosted.",
          "enum": [
            "HOSTING_SOURCE_UNSPECIFIED",
            "HOSTING_SOURCE_CM",
            "HOSTING_SOURCE_THIRD_PARTY",
            "HOSTING_SOURCE_HOSTED",
            "HOSTING_SOURCE_RICH_MEDIA"
          ],
          "enumDescriptions": [
            "Hosting source is not specified or is unknown in this version.",
            "A creative synced from Campaign Manager. Create and update methods are **not** supported for this hosting type.",
            "A creative hosted by a third-party ad server (3PAS). Create and update methods are supported for this hosting type if the creative_type is one of the following: * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`",
            "A creative created in DV360 and hosted by Campaign Manager. Create and update methods are supported for this hosting type if the creative_type is one of the following: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`",
            "A rich media creative created in Studio and hosted by Campaign Manager. Create and update methods are **not** supported for this hosting type."
          ]
        },
        "skipOffset": {
          "$ref": "AudioVideoOffset",
          "description": "Amount of time to play the video before the skip button appears. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "timerEvents": {
          "items": {
            "$ref": "TimerEvent"
          },
          "type": "array",
          "description": "Timer custom events for a rich media creative. Timers track the time during which a user views and interacts with a specified part of a rich media creative. A creative can have multiple timer events, each timed independently. Leave it empty or unset for creatives containing image assets only."
        },
        "html5Video": {
          "description": "Output only. Indicates the third-party VAST tag creative requires HTML5 Video support. Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`",
          "type": "boolean"
        },
        "creativeType": {
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Standard display creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Expandable creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`",
            "Video creative. Create and update methods are supported for this creative type if the hosting_source is one of the following: * `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`",
            "Native creative rendered by publishers with assets from advertiser. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile creative (banner). Create and update methods are **not** supported for this creative type.",
            "Square native creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Interstitial creative including both display and video. Create and update methods are **not** supported for this creative type.",
            "Responsive and expandable Lightbox creative. Create and update methods are **not** supported for this creative type.",
            "Native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Square native app install creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Audio creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Publisher hosted creative. Create and update methods are **not** supported for this creative type.",
            "Native video creative. Create and update methods are supported for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`",
            "Templated app install mobile video creative. Create and update methods are **not** supported for this creative type."
          ],
          "description": "Required. Immutable. The type of the creative.",
          "enum": [
            "CREATIVE_TYPE_UNSPECIFIED",
            "CREATIVE_TYPE_STANDARD",
            "CREATIVE_TYPE_EXPANDABLE",
            "CREATIVE_TYPE_VIDEO",
            "CREATIVE_TYPE_NATIVE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_SITE_SQUARE",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL",
            "CREATIVE_TYPE_LIGHTBOX",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL",
            "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE",
            "CREATIVE_TYPE_AUDIO",
            "CREATIVE_TYPE_PUBLISHER_HOSTED",
            "CREATIVE_TYPE_NATIVE_VIDEO",
            "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
          ]
        },
        "assets": {
          "items": {
            "$ref": "AssetAssociation"
          },
          "type": "array",
          "description": "Required. Assets associated to this creative. Assets can be associated to the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` * `ASSET_ROLE_MAIN` * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`"
        },
        "progressOffset": {
          "$ref": "AudioVideoOffset",
          "description": "Amount of time to play the video before counting a view. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        },
        "expandOnHover": {
          "description": "Optional. Indicates the creative will automatically expand on hover. Optional and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`",
          "type": "boolean"
        },
        "counterEvents": {
          "items": {
            "$ref": "CounterEvent"
          },
          "type": "array",
          "description": "Counter events for a rich media creative. Counters track the number of times that a user interacts with any part of a rich media creative in a specified way (mouse-overs, mouse-outs, clicks, taps, data loading, keyboard entries, etc.). Any event that can be captured in the creative can be recorded as a counter. Leave it empty or unset for creatives containing image assets only."
        },
        "expandingDirection": {
          "enum": [
            "EXPANDING_DIRECTION_UNSPECIFIED",
            "EXPANDING_DIRECTION_NONE",
            "EXPANDING_DIRECTION_UP",
            "EXPANDING_DIRECTION_DOWN",
            "EXPANDING_DIRECTION_LEFT",
            "EXPANDING_DIRECTION_RIGHT",
            "EXPANDING_DIRECTION_UP_AND_LEFT",
            "EXPANDING_DIRECTION_UP_AND_RIGHT",
            "EXPANDING_DIRECTION_DOWN_AND_LEFT",
            "EXPANDING_DIRECTION_DOWN_AND_RIGHT",
            "EXPANDING_DIRECTION_UP_OR_DOWN",
            "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
            "EXPANDING_DIRECTION_ANY_DIAGONAL"
          ],
          "enumDescriptions": [
            "The expanding direction is not specified.",
            "Does not expand in any direction.",
            "Expands up.",
            "Expands down.",
            "Expands left.",
            "Expands right.",
            "Expands up and to the left side.",
            "Expands up and to the right side.",
            "Expands down and to the left side.",
            "Expands down and to the right side.",
            "Expands either up or down.",
            "Expands to either the left or the right side.",
            "Can expand in any diagonal direction."
          ],
          "type": "string",
          "description": "Optional. Specifies the expanding direction of the creative. Required and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`"
        },
        "creativeId": {
          "format": "int64",
          "description": "Output only. The unique ID of the creative. Assigned by the system.",
          "type": "string"
        },
        "mediaDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Output only. Media duration of the creative. Applicable when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_PUBLISHER_HOSTED`"
        },
        "dimensions": {
          "$ref": "Dimensions",
          "description": "Required. Primary dimensions of the creative. Applicable to all creative types. The value of width_pixels and height_pixels defaults to `0` when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO`"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the creative was created. Assigned by the system.",
          "format": "google-datetime"
        },
        "vpaid": {
          "type": "boolean",
          "description": "Output only. Indicates the third-party VAST tag creative requires VPAID (Digital Video Player-Ad Interface). Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`"
        }
      }
    },
    "GoogleAudienceGroup": {
      "description": "Details of Google audience group. All Google audience targeting settings are logically ‘OR’ of each other.",
      "properties": {
        "settings": {
          "type": "array",
          "description": "Required. All Google audience targeting settings in Google audience group. Repeated settings with same id will be ignored.",
          "items": {
            "$ref": "GoogleAudienceTargetingSetting"
          }
        }
      },
      "type": "object",
      "id": "GoogleAudienceGroup"
    },
    "BiddingStrategy": {
      "description": "Settings that control the bid strategy. Bid strategy determines the bid price.",
      "properties": {
        "maximizeSpendAutoBid": {
          "description": "A strategy that automatically adjusts the bid to optimize to your performance goal while spending the full budget. At insertion order level, the markup_type of line items cannot be set to `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`. In addition, when performance_goal_type is one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED` , the line_item_type of the insertion order line items must be either: * `LINE_ITEM_TYPE_DISPLAY_DEFAULT` * `LINE_ITEM_TYPE_VIDEO_DEFAULT` , and when performance_goal_type is either: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN` the line_item_type of the insertion order line items must be `LINE_ITEM_TYPE_VIDEO_DEFAULT`.",
          "$ref": "MaximizeSpendBidStrategy"
        },
        "performanceGoalAutoBid": {
          "$ref": "PerformanceGoalBidStrategy",
          "description": "A strategy that automatically adjusts the bid to meet or beat a specified performance goal. It is to be used only for a line item entity."
        },
        "fixedBid": {
          "description": "A strategy that uses a fixed bid price.",
          "$ref": "FixedBidStrategy"
        }
      },
      "id": "BiddingStrategy",
      "type": "object"
    },
    "DoubleVerifyFraudInvalidTraffic": {
      "type": "object",
      "properties": {
        "avoidInsufficientOption": {
          "description": "Insufficient Historical Fraud & IVT Stats.",
          "type": "boolean"
        },
        "avoidedFraudOption": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any fraud and invalid traffic options.",
            "100% Fraud & IVT.",
            "50% or Higher Fraud & IVT.",
            "25% or Higher Fraud & IVT.",
            "10% or Higher Fraud & IVT.",
            "8% or Higher Fraud & IVT.",
            "6% or Higher Fraud & IVT.",
            "4% or Higher Fraud & IVT.",
            "2% or Higher Fraud & IVT."
          ],
          "description": "Avoid Sites and Apps with historical Fraud & IVT.",
          "type": "string",
          "enum": [
            "FRAUD_UNSPECIFIED",
            "AD_IMPRESSION_FRAUD_100",
            "AD_IMPRESSION_FRAUD_50",
            "AD_IMPRESSION_FRAUD_25",
            "AD_IMPRESSION_FRAUD_10",
            "AD_IMPRESSION_FRAUD_8",
            "AD_IMPRESSION_FRAUD_6",
            "AD_IMPRESSION_FRAUD_4",
            "AD_IMPRESSION_FRAUD_2"
          ]
        }
      },
      "id": "DoubleVerifyFraudInvalidTraffic",
      "description": "DoubleVerify Fraud & Invalid Traffic settings."
    },
    "CarrierAndIspTargetingOptionDetails": {
      "type": "object",
      "id": "CarrierAndIspTargetingOptionDetails",
      "description": "Represents a targetable carrier or ISP. This will be populated in the carrier_and_isp_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the carrier or ISP.",
          "type": "string"
        },
        "type": {
          "description": "Output only. The type indicating if it's carrier or ISP.",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Indicates this targeting resource refers to an ISP.",
            "Indicates this targeting resource refers to a mobile carrier."
          ],
          "enum": [
            "CARRIER_AND_ISP_TYPE_UNSPECIFIED",
            "CARRIER_AND_ISP_TYPE_ISP",
            "CARRIER_AND_ISP_TYPE_CARRIER"
          ],
          "type": "string"
        }
      }
    },
    "AssetAssociation": {
      "type": "object",
      "properties": {
        "role": {
          "enum": [
            "ASSET_ROLE_UNSPECIFIED",
            "ASSET_ROLE_MAIN",
            "ASSET_ROLE_BACKUP",
            "ASSET_ROLE_POLITE_LOAD",
            "ASSET_ROLE_HEADLINE",
            "ASSET_ROLE_LONG_HEADLINE",
            "ASSET_ROLE_BODY",
            "ASSET_ROLE_LONG_BODY",
            "ASSET_ROLE_CAPTION_URL",
            "ASSET_ROLE_CALL_TO_ACTION",
            "ASSET_ROLE_ADVERTISER_NAME",
            "ASSET_ROLE_PRICE",
            "ASSET_ROLE_ANDROID_APP_ID",
            "ASSET_ROLE_IOS_APP_ID",
            "ASSET_ROLE_RATING",
            "ASSET_ROLE_ICON",
            "ASSET_ROLE_COVER_IMAGE"
          ],
          "description": "The role of this asset for the creative.",
          "type": "string",
          "enumDescriptions": [
            "Asset role is not specified or is unknown in this version.",
            "The asset is the main asset of the creative.",
            "The asset is a backup asset of the creative.",
            "The asset is a polite load asset of the creative.",
            "Headline of a native creative. The content must be UTF-8 encoded with a length of no more than 25 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Long headline of a native creative. The content must be UTF-8 encoded with a length of no more than 50 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Body text of a native creative. The content must be UTF-8 encoded with a length of no more than 90 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "Long body text of a native creative. The content must be UTF-8 encoded with a length of no more than 150 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "A short, friendly version of the landing page URL to show in the creative. This URL gives people an idea of where they'll arrive after they click on the creative. The content must be UTF-8 encoded with a length of no more than 30 characters. For example, if the landing page URL is 'http://www.example.com/page', the caption URL can be 'example.com'. The protocol (http://) is optional, but the URL can't contain spaces or special characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The text to use on the call-to-action button of a native creative. The content must be UTF-8 encoded with a length of no more than 15 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The text that identifies the advertiser or brand name. The content must be UTF-8 encoded with a length of no more than 25 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`",
            "The purchase price of your app in the Google play store or iOS app store (for example, $5.99). Note that this value is not automatically synced with the actual value listed in the store. It will always be the one provided when save the creative. The content must be UTF-8 encoded with a length of no more than 15 characters. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The ID of an Android app in the Google play store. You can find this ID in the App’s Google Play Store URL after ‘id’. For example, in https://play.google.com/store/apps/details?id=com.company.appname the identifier is com.company.appname. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The ID of an iOS app in the Apple app store. This ID number can be found in the Apple App Store URL as the string of numbers directly after \"id\". For example, in https://apps.apple.com/us/app/gmail-email-by-google/id422689480 the ID is 422689480. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The rating of an app in the Google play store or iOS app store. Note that this value is not automatically synced with the actual rating in the store. It will always be the one provided when save the creative. This role is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The icon of a creative. This role is only supported and required in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`",
            "The cover image of a native video creative. This role is only supported and required in following creative_type: * `CREATIVE_TYPE_VIDEO`"
          ]
        },
        "asset": {
          "$ref": "Asset",
          "description": "The associated asset."
        }
      },
      "description": "Asset association for the creative.",
      "id": "AssetAssociation"
    },
    "AppCategoryAssignedTargetingOptionDetails": {
      "description": "Details for assigned app category targeting option. This will be populated in the app_category_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
      "id": "AppCategoryAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the app category."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
          "type": "string"
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        }
      }
    },
    "ListInventorySourcesResponse": {
      "id": "ListInventorySourcesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySources` method to retrieve the next page of results."
        },
        "inventorySources": {
          "description": "The list of inventory sources. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "InventorySource"
          }
        }
      },
      "type": "object"
    },
    "OnScreenPositionAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
          "type": "string"
        },
        "onScreenPosition": {
          "enumDescriptions": [
            "On screen position is not specified in this version. This enum is a place holder for a default value and does not represent a real on screen position.",
            "The ad position is unknown on the screen.",
            "The ad is located above the fold.",
            "The ad is located below the fold."
          ],
          "type": "string",
          "description": "Output only. The on screen position.",
          "enum": [
            "ON_SCREEN_POSITION_UNSPECIFIED",
            "ON_SCREEN_POSITION_UNKNOWN",
            "ON_SCREEN_POSITION_ABOVE_THE_FOLD",
            "ON_SCREEN_POSITION_BELOW_THE_FOLD"
          ]
        }
      },
      "description": "On screen position targeting option details. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
      "id": "OnScreenPositionAssignedTargetingOptionDetails"
    },
    "IntegralAdScience": {
      "description": "Details of Integral Ad Science settings.",
      "type": "object",
      "properties": {
        "excludedAdFraudRisk": {
          "enum": [
            "SUSPICIOUS_ACTIVITY_UNSPECIFIED",
            "SUSPICIOUS_ACTIVITY_HR",
            "SUSPICIOUS_ACTIVITY_HMR"
          ],
          "type": "string",
          "description": "Ad Fraud settings.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any ad fraud prevention options.",
            "Ad Fraud - Exclude High Risk.",
            "Ad Fraud - Exclude High and Moderate Risk."
          ]
        },
        "excludeUnrateable": {
          "description": "Brand Safety - **Unrateable**.",
          "type": "boolean"
        },
        "excludedOffensiveLanguageRisk": {
          "enum": [
            "OFFENSIVE_LANGUAGE_UNSPECIFIED",
            "OFFENSIVE_LANGUAGE_HR",
            "OFFENSIVE_LANGUAGE_HMR"
          ],
          "description": "Brand Safety - **Offensive language**.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any language options.",
            "Offensive Language - Exclude High Risk.",
            "Offensive Language - Exclude High and Moderate Risk."
          ],
          "type": "string"
        },
        "traqScoreOption": {
          "type": "string",
          "enum": [
            "TRAQ_UNSPECIFIED",
            "TRAQ_250",
            "TRAQ_500",
            "TRAQ_600",
            "TRAQ_700",
            "TRAQ_750",
            "TRAQ_875",
            "TRAQ_1000"
          ],
          "description": "True advertising quality (applicable to Display line items only).",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any true advertising quality scores.",
            "TRAQ score 250-1000.",
            "TRAQ score 500-1000.",
            "TRAQ score 600-1000.",
            "TRAQ score 700-1000.",
            "TRAQ score 750-1000.",
            "TRAQ score 875-1000.",
            "TRAQ score 1000."
          ]
        },
        "excludedViolenceRisk": {
          "enum": [
            "VIOLENCE_UNSPECIFIED",
            "VIOLENCE_HR",
            "VIOLENCE_HMR"
          ],
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any violence options.",
            "Violence - Exclude High Risk.",
            "Violence - Exclude High and Moderate Risk."
          ],
          "description": "Brand Safety - **Violence**.",
          "type": "string"
        },
        "excludedIllegalDownloadsRisk": {
          "description": "Brand Safety - **Illegal downloads**.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any illegal downloads options.",
            "Illegal Downloads - Exclude High Risk.",
            "Illegal Downloads - Exclude High and Moderate Risk."
          ],
          "type": "string",
          "enum": [
            "ILLEGAL_DOWNLOADS_UNSPECIFIED",
            "ILLEGAL_DOWNLOADS_HR",
            "ILLEGAL_DOWNLOADS_HMR"
          ]
        },
        "excludedDrugsRisk": {
          "enum": [
            "DRUGS_UNSPECIFIED",
            "DRUGS_HR",
            "DRUGS_HMR"
          ],
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any drugs options.",
            "Drugs - Exclude High Risk.",
            "Drugs - Exclude High and Moderate Risk."
          ],
          "description": "Brand Safety - **Drugs**."
        },
        "displayViewability": {
          "type": "string",
          "description": "Display Viewability section (applicable to display line items only).",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any display viewability options.",
            "Target 40% Viewability or Higher.",
            "Target 50% Viewability or Higher.",
            "Target 60% Viewability or Higher.",
            "Target 70% Viewability or Higher."
          ],
          "enum": [
            "PERFORMANCE_VIEWABILITY_UNSPECIFIED",
            "PERFORMANCE_VIEWABILITY_40",
            "PERFORMANCE_VIEWABILITY_50",
            "PERFORMANCE_VIEWABILITY_60",
            "PERFORMANCE_VIEWABILITY_70"
          ]
        },
        "excludedAlcoholRisk": {
          "description": "Brand Safety - **Alcohol**.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any alcohol options.",
            "Alcohol - Exclude High Risk.",
            "Alcohol - Exclude High and Moderate Risk."
          ],
          "enum": [
            "ALCOHOL_UNSPECIFIED",
            "ALCOHOL_HR",
            "ALCOHOL_HMR"
          ],
          "type": "string"
        },
        "excludedAdultRisk": {
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any adult options.",
            "Adult - Exclude High Risk.",
            "Adult - Exclude High and Moderate Risk."
          ],
          "description": "Brand Safety - **Adult content**.",
          "enum": [
            "ADULT_UNSPECIFIED",
            "ADULT_HR",
            "ADULT_HMR"
          ]
        },
        "excludedHateSpeechRisk": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any hate speech options.",
            "Hate Speech - Exclude High Risk.",
            "Hate Speech - Exclude High and Moderate Risk."
          ],
          "enum": [
            "HATE_SPEECH_UNSPECIFIED",
            "HATE_SPEECH_HR",
            "HATE_SPEECH_HMR"
          ],
          "type": "string",
          "description": "Brand Safety - **Hate speech**."
        },
        "excludedGamblingRisk": {
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any gambling options.",
            "Gambling - Exclude High Risk.",
            "Gambling - Exclude High and Moderate Risk."
          ],
          "description": "Brand Safety - **Gambling**.",
          "enum": [
            "GAMBLING_UNSPECIFIED",
            "GAMBLING_HR",
            "GAMBLING_HMR"
          ]
        },
        "videoViewability": {
          "enum": [
            "VIDEO_VIEWABILITY_UNSPECIFIED",
            "VIDEO_VIEWABILITY_40",
            "VIDEO_VIEWABILITY_50",
            "VIDEO_VIEWABILITY_60",
            "VIDEO_VIEWABILITY_70"
          ],
          "description": "Video Viewability Section (applicable to video line items only).",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any video viewability options.",
            "40%+ in view (IAB video viewability standard).",
            "50%+ in view (IAB video viewability standard).",
            "60%+ in view (IAB video viewability standard).",
            "70%+ in view (IAB video viewability standard)."
          ],
          "type": "string"
        }
      },
      "id": "IntegralAdScience"
    },
    "BulkEditAdvertiserAssignedTargetingOptionsRequest": {
      "type": "object",
      "description": "Request message for BulkEditAdvertiserAssignedTargetingOptions.",
      "id": "BulkEditAdvertiserAssignedTargetingOptionsRequest",
      "properties": {
        "deleteRequests": {
          "items": {
            "$ref": "DeleteAssignedTargetingOptionsRequest"
          },
          "type": "array",
          "description": "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`."
        },
        "createRequests": {
          "type": "array",
          "description": "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`.",
          "items": {
            "$ref": "CreateAssignedTargetingOptionsRequest"
          }
        }
      }
    },
    "LanguageTargetingOptionDetails": {
      "description": "Represents a targetable language. This will be populated in the language_details field when targeting_type is `TARGETING_TYPE_LANGUAGE`.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the language (e.g., \"French\")."
        }
      },
      "type": "object",
      "id": "LanguageTargetingOptionDetails"
    },
    "ListNegativeKeywordsResponse": {
      "type": "object",
      "description": "Response message for NegativeKeywordService.ListNegativeKeywords.",
      "properties": {
        "negativeKeywords": {
          "type": "array",
          "description": "The list of negative keywords. This list will be absent if empty.",
          "items": {
            "$ref": "NegativeKeyword"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywords` method to retrieve the next page of results."
        }
      },
      "id": "ListNegativeKeywordsResponse"
    },
    "Site": {
      "description": "A single site. Sites are apps or websites belonging to a channel.",
      "type": "object",
      "id": "Site",
      "properties": {
        "urlOrAppId": {
          "type": "string",
          "description": "Required. The URL or app ID of the site. Must be UTF-8 encoded with a maximum length of 240 bytes."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the site."
        }
      }
    },
    "GenderAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GENDER`.",
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "GENDER_UNSPECIFIED",
            "GENDER_MALE",
            "GENDER_FEMALE",
            "GENDER_UNKNOWN"
          ],
          "enumDescriptions": [
            "Default value when gender is not specified in this version. This enum is a place holder for default value and does not represent a real gender option.",
            "The audience gender is male.",
            "The audience gender is female.",
            "The audience gender is unknown."
          ],
          "description": "Output only. The gender of the audience."
        }
      },
      "description": "Details for assigned gender targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARTGETING_TYPE_GENDER`.",
      "id": "GenderAssignedTargetingOptionDetails"
    },
    "PartnerCost": {
      "description": "Settings that control a partner cost. A partner cost is any type of expense involved in running a campaign, other than the costs of purchasing impressions (which is called the media cost) and using third-party audience segment data (data fee). Some examples of partner costs include the fees for using DV360, a third-party ad server, or a third-party ad serving verification service.",
      "type": "object",
      "id": "PartnerCost",
      "properties": {
        "invoiceType": {
          "type": "string",
          "description": "The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types.",
          "enum": [
            "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED",
            "PARTNER_COST_INVOICE_TYPE_DV360",
            "PARTNER_COST_INVOICE_TYPE_PARTNER"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Partner cost is billed through DV360.",
            "Partner cost is billed by the partner."
          ]
        },
        "feePercentageMillis": {
          "type": "string",
          "format": "int64",
          "description": "The media fee percentage in millis (1/1000 of a percent). Applicable when the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal to 0. For example: 100 represents 0.1%."
        },
        "feeType": {
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "The partner cost is a fixed CPM fee. Not applicable when the partner cost cost_type is one of: * `PARTNER_COST_TYPE_MEDIA_COST_DATA` * `PARTNER_COST_TYPE_DV360_FEE`.",
            "The partner cost is a percentage surcharge based on the media cost. Not applicable when the partner cost_type is one of: * `PARTNER_COST_TYPE_SHOP_LOCAL` * `PARTNER_COST_TYPE_TRUST_METRICS` * `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO` * `PARTNER_COST_TYPE_MOAT_VIDEO`."
          ],
          "type": "string",
          "description": "Required. The fee type for this partner cost.",
          "enum": [
            "PARTNER_COST_FEE_TYPE_UNSPECIFIED",
            "PARTNER_COST_FEE_TYPE_CPM_FEE",
            "PARTNER_COST_FEE_TYPE_MEDIA_FEE"
          ]
        },
        "feeAmount": {
          "description": "The CPM fee amount in micros of advertiser's currency. Applicable when the fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0. For example, for 1.5 standard unit of the advertiser's currency, set this field to 1500000.",
          "type": "string",
          "format": "int64"
        },
        "costType": {
          "description": "Required. The type of the partner cost.",
          "enum": [
            "PARTNER_COST_TYPE_UNSPECIFIED",
            "PARTNER_COST_TYPE_ADLOOX",
            "PARTNER_COST_TYPE_ADLOOX_PREBID",
            "PARTNER_COST_TYPE_ADSAFE",
            "PARTNER_COST_TYPE_ADXPOSE",
            "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE",
            "PARTNER_COST_TYPE_AGENCY_TRADING_DESK",
            "PARTNER_COST_TYPE_DV360_FEE",
            "PARTNER_COST_TYPE_COMSCORE_VCE",
            "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM",
            "PARTNER_COST_TYPE_DEFAULT",
            "PARTNER_COST_TYPE_DOUBLE_VERIFY",
            "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID",
            "PARTNER_COST_TYPE_EVIDON",
            "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO",
            "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID",
            "PARTNER_COST_TYPE_MEDIA_COST_DATA",
            "PARTNER_COST_TYPE_MOAT_VIDEO",
            "PARTNER_COST_TYPE_NIELSEN_DAR",
            "PARTNER_COST_TYPE_SHOP_LOCAL",
            "PARTNER_COST_TYPE_TERACENT",
            "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER",
            "PARTNER_COST_TYPE_TRUST_METRICS",
            "PARTNER_COST_TYPE_VIZU",
            "PARTNER_COST_TYPE_ADLINGO_FEE",
            "PARTNER_COST_TYPE_CUSTOM_FEE_1",
            "PARTNER_COST_TYPE_CUSTOM_FEE_2",
            "PARTNER_COST_TYPE_CUSTOM_FEE_3",
            "PARTNER_COST_TYPE_CUSTOM_FEE_4",
            "PARTNER_COST_TYPE_CUSTOM_FEE_5"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The cost is charged for using Adloox.",
            "The cost is charged for using Adloox Pre-Bid.",
            "The cost is charged for using AdSafe.",
            "The cost is charged for using AdExpose.",
            "The cost is charged for using Aggregate Knowledge.",
            "The cost is charged for using an Agency Trading Desk.",
            "The cost is charged for using DV360.",
            "The cost is charged for using comScore vCE.",
            "The cost is charged for using a Data Management Platform.",
            "The default cost type.",
            "The cost is charged for using DoubleVerify.",
            "The cost is charged for using DoubleVerify Pre-Bid.",
            "The cost is charged for using Evidon.",
            "The cost is charged for using Integral Ad Science Video.",
            "The cost is charged for using Integral Ad Science Pre-Bid.",
            "The cost is charged for using media cost data.",
            "The cost is charged for using MOAT Video.",
            "The cost is charged for using Nielsen Digital Ad Ratings.",
            "The cost is charged for using ShopLocal.",
            "The cost is charged for using Teracent.",
            "The cost is charged for using a third-party ad server.",
            "The cost is charged for using TrustMetrics.",
            "The cost is charged for using Vizu.",
            "The cost is charged for using AdLingo.",
            "The cost is charged as custom fee 1.",
            "The cost is charged as custom fee 2.",
            "The cost is charged as custom fee 3.",
            "The cost is charged as custom fee 4.",
            "The cost is charged as custom fee 5."
          ]
        }
      }
    },
    "InsertionOrderBudgetSegment": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The budget segment description. It can be used to enter Purchase Order information for each budget segment and have that information printed on the invoices. Must be UTF-8 encoded with a length of no more than 80 characters.",
          "type": "string"
        },
        "campaignBudgetId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the campaign budget linked to this insertion order budget segment."
        },
        "budgetAmountMicros": {
          "description": "Required. The budget amount the insertion order will spend for the given date_range. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.",
          "type": "string",
          "format": "int64"
        },
        "dateRange": {
          "description": "Required. The start and end date settings of the budget segment. They are resolved relative to the parent advertiser's time zone. * When creating a new budget segment, both `start_date` and `end_date` must be in the future. * An existing budget segment with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.",
          "$ref": "DateRange"
        }
      },
      "id": "InsertionOrderBudgetSegment",
      "description": "Settings that control the budget of a single budget segment."
    },
    "Pacing": {
      "type": "object",
      "description": "Settings that control the rate at which a budget is spent.",
      "properties": {
        "dailyMaxImpressions": {
          "format": "int64",
          "description": "Maximum number of impressions to serve every day. Applicable when the budget is impression based. Must be greater than 0.",
          "type": "string"
        },
        "pacingPeriod": {
          "type": "string",
          "enum": [
            "PACING_PERIOD_UNSPECIFIED",
            "PACING_PERIOD_DAILY",
            "PACING_PERIOD_FLIGHT"
          ],
          "enumDescriptions": [
            "Period value is not specified or is unknown in this version.",
            "The pacing setting will be applied on daily basis.",
            "The pacing setting will be applied to the whole flight duration."
          ],
          "description": "Required. The time period in which the pacing budget will be spent. When automatic budget allocation is enabled at the insertion order via auto_budget_allocation, this field is output only and defaults to `PACING_PERIOD_FLIGHT`."
        },
        "dailyMaxMicros": {
          "type": "string",
          "description": "Maximum currency amount to spend every day in micros of advertiser's currency. Applicable when the budget is currency based. Must be greater than 0. For example, for 1.5 standard unit of the currency, set this field to 1500000. The value assigned will be rounded to whole billable units for the relevant currency by the following rules: any positive value less than a single billable unit will be rounded up to one billable unit and any value larger than a single billable unit will be rounded down to the nearest billable value. For example, if the currency's billable unit is 0.01, and this field is set to 10257770, it will round down to 10250000, a value of 10.25. If set to 505, it will round up to 10000, a value of 0.01.",
          "format": "int64"
        },
        "pacingType": {
          "description": "Required. The type of pacing that defines how the budget amount will be spent across the pacing_period.",
          "type": "string",
          "enum": [
            "PACING_TYPE_UNSPECIFIED",
            "PACING_TYPE_AHEAD",
            "PACING_TYPE_ASAP",
            "PACING_TYPE_EVEN"
          ],
          "enumDescriptions": [
            "Pacing mode value is not specified or is unknown in this version.",
            "Only applicable to `PACING_PERIOD_FLIGHT` pacing period. Ahead pacing attempts to spend faster than evenly, to make sure the entire budget is spent by the end of the flight.",
            "Spend all of pacing budget amount as quick as possible.",
            "Spend a consistent budget amount every period of time."
          ]
        }
      },
      "id": "Pacing"
    },
    "NegativeKeywordList": {
      "id": "NegativeKeywordList",
      "properties": {
        "advertiserId": {
          "type": "string",
          "description": "Output only. The unique ID of the advertiser the negative keyword list belongs to.",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the negative keyword list. Must be UTF-8 encoded with a maximum size of 255 bytes."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the negative keyword list."
        },
        "negativeKeywordListId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the negative keyword list. Assigned by the system."
        }
      },
      "description": "A list of negative keywords used for targeting.",
      "type": "object"
    },
    "ContentOutstreamPositionTargetingOptionDetails": {
      "type": "object",
      "id": "ContentOutstreamPositionTargetingOptionDetails",
      "description": "Represents a targetable content outstream position, which could be used by display and video ads. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
      "properties": {
        "contentOutstreamPosition": {
          "enum": [
            "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_OUTSTREAM_POSITION_UNKNOWN",
            "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE",
            "CONTENT_OUTSTREAM_POSITION_IN_BANNER",
            "CONTENT_OUTSTREAM_POSITION_IN_FEED",
            "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
          ],
          "enumDescriptions": [
            "Content outstream position is not specified in this version. This enum is a place holder for a default value and does not represent a real content outstream position.",
            "The ad position is unknown in the content outstream.",
            "Ads that appear between the paragraphs of your pages.",
            "Ads that display on the top and the sides of a page.",
            "Ads that appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Ads shown before or between content loads."
          ],
          "description": "Output only. The content outstream position.",
          "type": "string"
        }
      }
    },
    "ListInventorySourceGroupsResponse": {
      "description": "Response message for InventorySourceGroupService.ListInventorySourceGroups.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySourceGroups` method to retrieve the next page of results.",
          "type": "string"
        },
        "inventorySourceGroups": {
          "type": "array",
          "description": "The list of inventory source groups. This list will be absent if empty.",
          "items": {
            "$ref": "InventorySourceGroup"
          }
        }
      },
      "id": "ListInventorySourceGroupsResponse"
    },
    "FixedBidStrategy": {
      "type": "object",
      "description": "A strategy that uses a fixed bidding price.",
      "properties": {
        "bidAmountMicros": {
          "format": "int64",
          "description": "The fixed bid amount, in micros of the advertiser's currency. For insertion order entity, bid_amount_micros should be set as 0. For line item entity, bid_amount_micros must be greater than or equal to billable unit of the given currency and smaller than or equal to the upper limit 1000000000. For example, 1500000 represents 1.5 standard units of the currency.",
          "type": "string"
        }
      },
      "id": "FixedBidStrategy"
    },
    "NegativeKeywordListAssignedTargetingOptionDetails": {
      "description": "Targeting details for negative keyword list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`.",
      "id": "NegativeKeywordListAssignedTargetingOptionDetails",
      "type": "object",
      "properties": {
        "negativeKeywordListId": {
          "description": "Required. ID of the negative keyword list. Should refer to the negative_keyword_list_id field of a NegativeKeywordList resource.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "UserRewardedContentTargetingOptionDetails": {
      "type": "object",
      "id": "UserRewardedContentTargetingOptionDetails",
      "properties": {
        "userRewardedContent": {
          "type": "string",
          "enum": [
            "USER_REWARDED_CONTENT_UNSPECIFIED",
            "USER_REWARDED_CONTENT_USER_REWARDED",
            "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
          ],
          "description": "Output only. User rewarded content status for video ads.",
          "enumDescriptions": [
            "User rewarded content is not specified or is unknown in this version.",
            "Represents ads where the user will see a reward after viewing.",
            "Represents all other ads besides user-rewarded."
          ]
        }
      },
      "description": "Represents a targetable user rewarded content status for video ads only. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`."
    },
    "ListCombinedAudiencesResponse": {
      "properties": {
        "combinedAudiences": {
          "items": {
            "$ref": "CombinedAudience"
          },
          "description": "The list of combined audiences. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCombinedAudiences` method to retrieve the next page of results."
        }
      },
      "type": "object",
      "id": "ListCombinedAudiencesResponse"
    },
    "AssignedTargetingOption": {
      "properties": {
        "assignedTargetingOptionId": {
          "description": "Output only. The unique ID of the assigned targeting option. The ID is only unique within a given line item and targeting type. It may be reused in other contexts.",
          "type": "string"
        },
        "browserDetails": {
          "$ref": "BrowserAssignedTargetingOptionDetails",
          "description": "Browser details. This field will be populated when the TargetingType is `TARGETING_TYPE_BROWSER`."
        },
        "videoPlayerSizeDetails": {
          "$ref": "VideoPlayerSizeAssignedTargetingOptionDetails",
          "description": "Video player size details. This field will be populated when the TargetingType is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`."
        },
        "operatingSystemDetails": {
          "$ref": "OperatingSystemAssignedTargetingOptionDetails",
          "description": "Operating system details. This field will be populated when the TargetingType is `TARGETING_TYPE_OPERATING_SYSTEM`."
        },
        "subExchangeDetails": {
          "description": "Sub-exchange details. This field will be populated when the TargetingType is `TARGETING_TYPE_SUB_EXCHANGE`.",
          "$ref": "SubExchangeAssignedTargetingOptionDetails"
        },
        "deviceMakeModelDetails": {
          "$ref": "DeviceMakeModelAssignedTargetingOptionDetails",
          "description": "Device make and model details. This field will be populated when the TargetingType is `TARGETING_TYPE_DEVICE_MAKE_MODEL`."
        },
        "environmentDetails": {
          "$ref": "EnvironmentAssignedTargetingOptionDetails",
          "description": "Environment details. This field will be populated when the TargetingType is `TARGETING_TYPE_ENVIRONMENT`."
        },
        "ageRangeDetails": {
          "$ref": "AgeRangeAssignedTargetingOptionDetails",
          "description": "Age range details. This field will be populated when the TargetingType is `TARGETING_TYPE_AGE_RANGE`."
        },
        "viewabilityDetails": {
          "$ref": "ViewabilityAssignedTargetingOptionDetails",
          "description": "Viewability details. This field will be populated when the TargetingType is `TARGETING_TYPE_VIEWABILITY`. You can only target one viewability option per line item."
        },
        "parentalStatusDetails": {
          "description": "Parental status details. This field will be populated when the TargetingType is `TARGETING_TYPE_PARENTAL_STATUS`.",
          "$ref": "ParentalStatusAssignedTargetingOptionDetails"
        },
        "inventorySourceGroupDetails": {
          "description": "Inventory source group details. This field will be populated when the TargetingType is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.",
          "$ref": "InventorySourceGroupAssignedTargetingOptionDetails"
        },
        "geoRegionDetails": {
          "description": "Geographic region details. This field will be populated when the TargetingType is `TARGETING_TYPE_GEO_REGION`.",
          "$ref": "GeoRegionAssignedTargetingOptionDetails"
        },
        "regionalLocationListDetails": {
          "description": "Regional location list details. This field will be populated when the TargetingType is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.",
          "$ref": "RegionalLocationListAssignedTargetingOptionDetails"
        },
        "name": {
          "description": "Output only. The resource name for this assigned targeting option.",
          "type": "string"
        },
        "carrierAndIspDetails": {
          "description": "Carrier and ISP details. This field will be populated when the TargetingType is `TARGETING_TYPE_CARRIER_AND_ISP`.",
          "$ref": "CarrierAndIspAssignedTargetingOptionDetails"
        },
        "inventorySourceDetails": {
          "$ref": "InventorySourceAssignedTargetingOptionDetails",
          "description": "Inventory source details. This field will be populated when the TargetingType is `TARGETING_TYPE_INVENTORY_SOURCE`."
        },
        "thirdPartyVerifierDetails": {
          "$ref": "ThirdPartyVerifierAssignedTargetingOptionDetails",
          "description": "Third party verification details. This field will be populated when the TargetingType is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`."
        },
        "householdIncomeDetails": {
          "$ref": "HouseholdIncomeAssignedTargetingOptionDetails",
          "description": "Household income details. This field will be populated when the TargetingType is `TARGETING_TYPE_HOUSEHOLD_INCOME`."
        },
        "negativeKeywordListDetails": {
          "$ref": "NegativeKeywordListAssignedTargetingOptionDetails",
          "description": "Keyword details. This field will be populated when the TargetingType is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`. A maximum of 4 negative keyword lists can be assigned to a line item."
        },
        "sensitiveCategoryExclusionDetails": {
          "$ref": "SensitiveCategoryAssignedTargetingOptionDetails",
          "description": "Sensitive category details. This field will be populated when the TargetingType is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`. Sensitive categories are targeting exclusions. Advertiser level sensitive category exclusions, if set, are always applied in serving (even though they aren't visible in line item settings). Line item settings can exclude sensitive categories in addition to advertiser exclusions, but can't override them."
        },
        "dayAndTimeDetails": {
          "$ref": "DayAndTimeAssignedTargetingOptionDetails",
          "description": "Day and time details. This field will be populated when the TargetingType is `TARGETING_TYPE_DAY_AND_TIME`."
        },
        "appCategoryDetails": {
          "description": "App category details. This field will be populated when the TargetingType is `TARGETING_TYPE_APP_CATEGORY`.",
          "$ref": "AppCategoryAssignedTargetingOptionDetails"
        },
        "audienceGroupDetails": {
          "$ref": "AudienceGroupAssignedTargetingOptionDetails",
          "description": "Audience targeting details. This field will be populated when the TargetingType is `TARGETING_TYPE_AUDIENCE_GROUP`. You can only target one audience group option per line item."
        },
        "contentOutstreamPositionDetails": {
          "description": "Content outstream position details. This field will be populated when the TargetingType is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
          "$ref": "ContentOutstreamPositionAssignedTargetingOptionDetails"
        },
        "proximityLocationListDetails": {
          "$ref": "ProximityLocationListAssignedTargetingOptionDetails",
          "description": "Proximity location list details. This field will be populated when the TargetingType is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`."
        },
        "urlDetails": {
          "description": "URL details. This field will be populated when the TargetingType is `TARGETING_TYPE_URL`.",
          "$ref": "UrlAssignedTargetingOptionDetails"
        },
        "channelDetails": {
          "description": "Channel details. This field will be populated when the TargetingType is `TARGETING_TYPE_CHANNEL`.",
          "$ref": "ChannelAssignedTargetingOptionDetails"
        },
        "userRewardedContentDetails": {
          "description": "User rewarded content details. This field will be populated when the TargetingType is `TARGETING_TYPE_USER_REWARDED_CONTENT`.",
          "$ref": "UserRewardedContentAssignedTargetingOptionDetails"
        },
        "genderDetails": {
          "$ref": "GenderAssignedTargetingOptionDetails",
          "description": "Gender details. This field will be populated when the TargetingType is `TARGETING_TYPE_GENDER`."
        },
        "onScreenPositionDetails": {
          "$ref": "OnScreenPositionAssignedTargetingOptionDetails",
          "description": "On screen position details. This field will be populated when the TargetingType is `TARGETING_TYPE_ON_SCREEN_POSITION`."
        },
        "categoryDetails": {
          "$ref": "CategoryAssignedTargetingOptionDetails",
          "description": "Category details. This field will be populated when the TargetingType is `TARGETING_TYPE_CATEGORY`. Targeting a category will also target its subcategories. If a category is excluded from targeting and a subcategory is included, the exclusion will take precedence."
        },
        "languageDetails": {
          "description": "Language details. This field will be populated when the TargetingType is `TARGETING_TYPE_LANGUAGE`.",
          "$ref": "LanguageAssignedTargetingOptionDetails"
        },
        "targetingType": {
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE"
          ],
          "description": "Output only. Identifies the type of this assigned targeting option.",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges."
          ],
          "type": "string"
        },
        "deviceTypeDetails": {
          "description": "Device Type details. This field will be populated when the TargetingType is `TARGETING_TYPE_DEVICE_TYPE`.",
          "$ref": "DeviceTypeAssignedTargetingOptionDetails"
        },
        "authorizedSellerStatusDetails": {
          "$ref": "AuthorizedSellerStatusAssignedTargetingOptionDetails",
          "description": "Authorized seller status details. This field will be populated when the TargetingType is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`. You can only target one authorized seller status option per line item. If a line item doesn't have an authorized seller status option, all authorized sellers indicated as DIRECT or RESELLER in the ads.txt file are targeted by default."
        },
        "exchangeDetails": {
          "description": "Exchange details. This field will be populated when the TargetingType is `TARGETING_TYPE_EXCHANGE`.",
          "$ref": "ExchangeAssignedTargetingOptionDetails"
        },
        "inheritance": {
          "type": "string",
          "enum": [
            "INHERITANCE_UNSPECIFIED",
            "NOT_INHERITED",
            "INHERITED_FROM_PARTNER",
            "INHERITED_FROM_ADVERTISER"
          ],
          "enumDescriptions": [
            "The inheritance is unspecified or unknown.",
            "The assigned targeting option is not inherited from higher level entity.",
            "The assigned targeting option is inherited from partner targeting settings.",
            "The assigned targeting option is inherited from advertiser targeting settings."
          ],
          "description": "Output only. The inheritance status of the assigned targeting option."
        },
        "contentInstreamPositionDetails": {
          "description": "Content instream position details. This field will be populated when the TargetingType is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
          "$ref": "ContentInstreamPositionAssignedTargetingOptionDetails"
        },
        "digitalContentLabelExclusionDetails": {
          "$ref": "DigitalContentLabelAssignedTargetingOptionDetails",
          "description": "Digital content label details. This field will be populated when the TargetingType is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`. Digital content labels are targeting exclusions. Advertiser level digital content label exclusions, if set, are always applied in serving (even though they aren't visible in line item settings). Line item settings can exclude content labels in addition to advertiser exclusions, but can't override them. A line item won't serve if all the digital content labels are excluded."
        },
        "appDetails": {
          "description": "App details. This field will be populated when the TargetingType is `TARGETING_TYPE_APP`.",
          "$ref": "AppAssignedTargetingOptionDetails"
        },
        "keywordDetails": {
          "description": "Keyword details. This field will be populated when the TargetingType is `TARGETING_TYPE_KEYWORD`. A maximum of 5000 direct negative keywords can be assigned to a line item. No limit on number of positive keywords that can be assigned.",
          "$ref": "KeywordAssignedTargetingOptionDetails"
        }
      },
      "id": "AssignedTargetingOption",
      "description": "A single assigned targeting option, which defines the state of a targeting option for an entity with targeting settings.",
      "type": "object"
    },
    "BulkEditNegativeKeywordsRequest": {
      "properties": {
        "createdNegativeKeywords": {
          "description": "The negative keywords to create in batch, specified as a list of NegativeKeywords.",
          "items": {
            "$ref": "NegativeKeyword"
          },
          "type": "array"
        },
        "deletedNegativeKeywords": {
          "description": "The negative keywords to delete in batch, specified as a list of keyword_values.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Request message for NegativeKeywordService.BulkEditNegativeKeywords.",
      "id": "BulkEditNegativeKeywordsRequest"
    },
    "ReviewStatusInfo": {
      "type": "object",
      "id": "ReviewStatusInfo",
      "description": "Review statuses for the creative.",
      "properties": {
        "approvalStatus": {
          "description": "Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status.",
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is still under review and not servable.",
            "The creative has passed creative & landing page review and is servable, but is awaiting additional content & policy review.",
            "Both creative & landing page review and content & policy review are approved. The creative is servable.",
            "There is an issue with the creative that must be fixed before it can serve."
          ],
          "enum": [
            "APPROVAL_STATUS_UNSPECIFIED",
            "APPROVAL_STATUS_PENDING_NOT_SERVABLE",
            "APPROVAL_STATUS_PENDING_SERVABLE",
            "APPROVAL_STATUS_APPROVED_SERVABLE",
            "APPROVAL_STATUS_REJECTED_NOT_SERVABLE"
          ]
        },
        "creativeAndLandingPageReviewStatus": {
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ],
          "type": "string",
          "description": "Creative and landing page review status for the creative.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ]
        },
        "contentAndPolicyReviewStatus": {
          "description": "Content and policy review status for the creative.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ],
          "type": "string",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ]
        },
        "publisherReviewStatuses": {
          "description": "Publisher review statuses for the creative.",
          "type": "array",
          "items": {
            "$ref": "PublisherReviewStatus"
          }
        },
        "exchangeReviewStatuses": {
          "items": {
            "$ref": "ExchangeReviewStatus"
          },
          "description": "Exchange review statuses for the creative.",
          "type": "array"
        }
      }
    },
    "ListCampaignsResponse": {
      "id": "ListCampaignsResponse",
      "type": "object",
      "properties": {
        "campaigns": {
          "items": {
            "$ref": "Campaign"
          },
          "type": "array",
          "description": "The list of campaigns. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCampaigns` method to retrieve the next page of results."
        }
      }
    },
    "AgeRangeTargetingOptionDetails": {
      "description": "Represents a targetable age range. This will be populated in the age_range_details field when targeting_type is `TARGETING_TYPE_AGE_RANGE`.",
      "type": "object",
      "properties": {
        "ageRange": {
          "description": "Output only. The age range of an audience.",
          "type": "string",
          "enum": [
            "AGE_RANGE_UNSPECIFIED",
            "AGE_RANGE_18_24",
            "AGE_RANGE_25_34",
            "AGE_RANGE_35_44",
            "AGE_RANGE_45_54",
            "AGE_RANGE_55_64",
            "AGE_RANGE_65_PLUS",
            "AGE_RANGE_UNKNOWN"
          ],
          "enumDescriptions": [
            "Default value when age range is not specified in this version. This enum is a placeholder for default value and does not represent a real age range option.",
            "The age range of the audience is 18 to 24.",
            "The age range of the audience is 25 to 34.",
            "The age range of the audience is 35 to 44.",
            "The age range of the audience is 45 to 54.",
            "The age range of the audience is 55 to 64.",
            "The age range of the audience is 65 and up.",
            "The age range of the audience is unknown."
          ]
        }
      },
      "id": "AgeRangeTargetingOptionDetails"
    },
    "InventorySourceGroupAssignedTargetingOptionDetails": {
      "properties": {
        "inventorySourceGroupId": {
          "type": "string",
          "format": "int64",
          "description": "Required. ID of the inventory source group. Should refer to the inventory_source_group_id field of an InventorySourceGroup resource."
        }
      },
      "id": "InventorySourceGroupAssignedTargetingOptionDetails",
      "description": "Targeting details for inventory source group. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.",
      "type": "object"
    },
    "AudienceGroupAssignedTargetingOptionDetails": {
      "description": "Assigned audience group targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. The relation between each group is UNION, except for excluded_first_and_third_party_audience_group and excluded_google_audience_group, of which COMPLEMENT is UNION'ed with other groups.",
      "type": "object",
      "properties": {
        "includedCustomListGroup": {
          "$ref": "CustomListGroup",
          "description": "The custom list ids of the included custom list group. Contains custom list ids only."
        },
        "includedFirstAndThirdPartyAudienceGroups": {
          "items": {
            "$ref": "FirstAndThirdPartyAudienceGroup"
          },
          "description": "The first and third party audience ids and recencies of included first and third party audience groups. Each first and third party audience group contains first and third party audience ids only. The relation between each first and third party audience group is INTERSECTION, and the result is UNION'ed with other audience groups. Repeated groups with same settings will be ignored.",
          "type": "array"
        },
        "includedGoogleAudienceGroup": {
          "description": "The Google audience ids of the included Google audience group. Contains Google audience ids only.",
          "$ref": "GoogleAudienceGroup"
        },
        "includedCombinedAudienceGroup": {
          "description": "The combined audience ids of the included combined audience group. Contains combined audience ids only.",
          "$ref": "CombinedAudienceGroup"
        },
        "excludedFirstAndThirdPartyAudienceGroup": {
          "description": "The first and third party audience ids and recencies of the excluded first and third party audience group. Used for negative targeting. Its COMPLEMENT is used to UNION other audience groups.",
          "$ref": "FirstAndThirdPartyAudienceGroup"
        },
        "excludedGoogleAudienceGroup": {
          "$ref": "GoogleAudienceGroup",
          "description": "The Google audience ids of the excluded Google audience group. Used for negative targeting. It's COMPLEMENT is used to UNION other audience groups. Only contains Affinity, In-market and Installed-apps type Google audiences. All items are logically ‘OR’ of each other."
        }
      },
      "id": "AudienceGroupAssignedTargetingOptionDetails"
    },
    "NegativeKeyword": {
      "description": "A negatively targeted keyword that belongs to a negative keyword list.",
      "id": "NegativeKeyword",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the negative keyword.",
          "type": "string"
        },
        "keywordValue": {
          "type": "string",
          "description": "Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored."
        }
      },
      "type": "object"
    },
    "GenderTargetingOptionDetails": {
      "id": "GenderTargetingOptionDetails",
      "properties": {
        "gender": {
          "enum": [
            "GENDER_UNSPECIFIED",
            "GENDER_MALE",
            "GENDER_FEMALE",
            "GENDER_UNKNOWN"
          ],
          "enumDescriptions": [
            "Default value when gender is not specified in this version. This enum is a place holder for default value and does not represent a real gender option.",
            "The audience gender is male.",
            "The audience gender is female.",
            "The audience gender is unknown."
          ],
          "description": "Output only. The gender of an audience.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a targetable gender. This will be populated in the gender_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_GENDER`."
    },
    "BrowserTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the browser."
        }
      },
      "id": "BrowserTargetingOptionDetails",
      "description": "Represents a targetable browser. This will be populated in the browser_details field when targeting_type is `TARGETING_TYPE_BROWSER`."
    },
    "InventorySourceGroup": {
      "id": "InventorySourceGroup",
      "properties": {
        "inventorySourceGroupId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the inventory source group. Assigned by the system."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the inventory source group."
        }
      },
      "type": "object",
      "description": "A collection of targetable inventory sources."
    },
    "HouseholdIncomeAssignedTargetingOptionDetails": {
      "id": "HouseholdIncomeAssignedTargetingOptionDetails",
      "description": "Details for assigned household income targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_HOUSEHOLD_INCOME`.",
          "type": "string"
        },
        "householdIncome": {
          "enum": [
            "HOUSEHOLD_INCOME_UNSPECIFIED",
            "HOUSEHOLD_INCOME_UNKNOWN",
            "HOUSEHOLD_INCOME_LOWER_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT",
            "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT",
            "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT",
            "HOUSEHOLD_INCOME_TOP_10_PERCENT"
          ],
          "enumDescriptions": [
            "Default value when household income is not specified in this version. This enum is a placeholder for default value and does not represent a real household income option.",
            "The household income of the audience is unknown.",
            "The audience is in the lower 50% of U.S. household incomes.",
            "The audience is in the top 41-50% of U.S. household incomes.",
            "The audience is in the top 31-40% of U.S. household incomes.",
            "The audience is in the top 21-30% of U.S. household incomes.",
            "The audience is in the top 11-20% of U.S. household incomes.",
            "The audience is in the top 10% of U.S. household incomes."
          ],
          "type": "string",
          "description": "Output only. The household income of the audience."
        }
      },
      "type": "object"
    },
    "ListTargetingOptionsResponse": {
      "id": "ListTargetingOptionsResponse",
      "type": "object",
      "description": "Response message for ListTargetingOptions.",
      "properties": {
        "targetingOptions": {
          "items": {
            "$ref": "TargetingOption"
          },
          "description": "The list of targeting options. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListTargetingOptions` method to retrieve the next page of results."
        }
      }
    },
    "LocationList": {
      "id": "LocationList",
      "properties": {
        "locationType": {
          "enum": [
            "TARGETING_LOCATION_TYPE_UNSPECIFIED",
            "TARGETING_LOCATION_TYPE_PROXIMITY",
            "TARGETING_LOCATION_TYPE_REGIONAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "The type for proximity geo location.",
            "The type for regional geo location."
          ],
          "description": "Required. Immutable. The type of location. All locations in the list will share this type."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the location list."
        },
        "locationListId": {
          "format": "int64",
          "description": "Output only. The unique ID of the location list. Assigned by the system.",
          "type": "string"
        },
        "advertiserId": {
          "type": "string",
          "description": "Required. Immutable. The unique ID of the advertiser the location list belongs to.",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the location list. Must be UTF-8 encoded with a maximum size of 240 bytes."
        }
      },
      "type": "object",
      "description": "A list of locations used for targeting."
    },
    "GeoRegionAssignedTargetingOptionDetails": {
      "description": "Details for assigned geographic region targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GEO_REGION`.",
      "properties": {
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        },
        "displayName": {
          "description": "Output only. The display name of the geographic region (e.g., \"Ontario, Canada\").",
          "type": "string"
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GEO_REGION`.",
          "type": "string"
        },
        "geoRegionType": {
          "enum": [
            "GEO_REGION_TYPE_UNKNOWN",
            "GEO_REGION_TYPE_OTHER",
            "GEO_REGION_TYPE_COUNTRY",
            "GEO_REGION_TYPE_REGION",
            "GEO_REGION_TYPE_TERRITORY",
            "GEO_REGION_TYPE_PROVINCE",
            "GEO_REGION_TYPE_STATE",
            "GEO_REGION_TYPE_PREFECTURE",
            "GEO_REGION_TYPE_GOVERNORATE",
            "GEO_REGION_TYPE_CANTON",
            "GEO_REGION_TYPE_UNION_TERRITORY",
            "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY",
            "GEO_REGION_TYPE_DMA_REGION",
            "GEO_REGION_TYPE_METRO",
            "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT",
            "GEO_REGION_TYPE_COUNTY",
            "GEO_REGION_TYPE_MUNICIPALITY",
            "GEO_REGION_TYPE_CITY",
            "GEO_REGION_TYPE_POSTAL_CODE",
            "GEO_REGION_TYPE_DEPARTMENT",
            "GEO_REGION_TYPE_AIRPORT",
            "GEO_REGION_TYPE_TV_REGION",
            "GEO_REGION_TYPE_OKRUG",
            "GEO_REGION_TYPE_BOROUGH",
            "GEO_REGION_TYPE_CITY_REGION",
            "GEO_REGION_TYPE_ARRONDISSEMENT",
            "GEO_REGION_TYPE_NEIGHBORHOOD",
            "GEO_REGION_TYPE_UNIVERSITY",
            "GEO_REGION_TYPE_DISTRICT"
          ],
          "enumDescriptions": [
            "The geographic region type is unknown.",
            "The geographic region type is other.",
            "The geographic region is a country.",
            "The geographic region type is region.",
            "The geographic region is a territory.",
            "The geographic region is a province.",
            "The geographic region is a state.",
            "The geographic region is a prefecture.",
            "The geographic region is a governorate.",
            "The geographic region is a canton.",
            "The geographic region is a union territory.",
            "The geographic region is an autonomous community.",
            "The geographic region is a designated market area (DMA) region.",
            "The geographic region type is metro.",
            "The geographic region is a congressional district.",
            "The geographic region is a county.",
            "The geographic region is a municipality.",
            "The geographic region is a city.",
            "The geographic region targeting type is postal code.",
            "The geographic region targeting type is department.",
            "The geographic region is an airport.",
            "The geographic region is a TV region.",
            "The geographic region is an okrug.",
            "The geographic region is a borough.",
            "The geographic region is a city region.",
            "The geographic region is an arrondissement.",
            "The geographic region is a neighborhood.",
            "The geographic region is a university.",
            "The geographic region is a district."
          ],
          "description": "Output only. The type of geographic region targeting.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GeoRegionAssignedTargetingOptionDetails"
    },
    "KeywordAssignedTargetingOptionDetails": {
      "properties": {
        "keyword": {
          "type": "string",
          "description": "Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10."
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Details for assigned keyword targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_KEYWORD`.",
      "id": "KeywordAssignedTargetingOptionDetails"
    },
    "Dimensions": {
      "type": "object",
      "description": "Dimensions.",
      "properties": {
        "widthPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The width in pixels."
        },
        "heightPixels": {
          "format": "int32",
          "description": "The height in pixels.",
          "type": "integer"
        }
      },
      "id": "Dimensions"
    },
    "BulkEditLineItemAssignedTargetingOptionsRequest": {
      "description": "Request message for BulkEditLineItemAssignedTargetingOptions.",
      "type": "object",
      "properties": {
        "deleteRequests": {
          "items": {
            "$ref": "DeleteAssignedTargetingOptionsRequest"
          },
          "type": "array",
          "description": "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`."
        },
        "createRequests": {
          "description": "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`.",
          "type": "array",
          "items": {
            "$ref": "CreateAssignedTargetingOptionsRequest"
          }
        }
      },
      "id": "BulkEditLineItemAssignedTargetingOptionsRequest"
    },
    "SdfDownloadTask": {
      "description": "Type for the response returned by [SdfDownloadTaskService.CreateSdfDownloadTask].",
      "id": "SdfDownloadTask",
      "properties": {
        "resourceName": {
          "description": "A resource name to be used in media.download to Download the prepared files. Resource names have the format `download/sdfdownloadtasks/media/{media_id}`. `media_id` will be made available by the long running operation service once the task status is done.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BulkEditNegativeKeywordsResponse": {
      "description": "Response message for NegativeKeywordService.BulkEditNegativeKeywords.",
      "properties": {
        "negativeKeywords": {
          "description": "The list of negative keywords that have been successfully created. This list will be absent if empty.",
          "items": {
            "$ref": "NegativeKeyword"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BulkEditNegativeKeywordsResponse"
    },
    "Asset": {
      "id": "Asset",
      "type": "object",
      "description": "A single asset.",
      "properties": {
        "content": {
          "description": "The asset content. For uploaded assets, the content is the serving path.",
          "type": "string"
        },
        "mediaId": {
          "type": "string",
          "format": "int64",
          "description": "Media ID of the uploaded asset. This is a unique identifier for the asset. This ID can be passed to other API calls, e.g. CreateCreative to associate the asset with a creative."
        }
      }
    },
    "ViewabilityTargetingOptionDetails": {
      "description": "Represents a targetable viewability. This will be populated in the viewability_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.",
      "type": "object",
      "id": "ViewabilityTargetingOptionDetails",
      "properties": {
        "viewability": {
          "description": "Output only. The predicted viewability percentage.",
          "enum": [
            "VIEWABILITY_UNSPECIFIED",
            "VIEWABILITY_10_PERCENT_OR_MORE",
            "VIEWABILITY_20_PERCENT_OR_MORE",
            "VIEWABILITY_30_PERCENT_OR_MORE",
            "VIEWABILITY_40_PERCENT_OR_MORE",
            "VIEWABILITY_50_PERCENT_OR_MORE",
            "VIEWABILITY_60_PERCENT_OR_MORE",
            "VIEWABILITY_70_PERCENT_OR_MORE",
            "VIEWABILITY_80_PERCENT_OR_MORE",
            "VIEWABILITY_90_PERCENT_OR_MORE"
          ],
          "enumDescriptions": [
            "Default value when viewability is not specified in this version. This enum is a placeholder for default value and does not represent a real viewability option.",
            "Bid only on impressions that are at least 10% likely to be viewable.",
            "Bid only on impressions that are at least 20% likely to be viewable.",
            "Bid only on impressions that are at least 30% likely to be viewable.",
            "Bid only on impressions that are at least 40% likely to be viewable.",
            "Bid only on impressions that are at least 50% likely to be viewable.",
            "Bid only on impressions that are at least 60% likely to be viewable.",
            "Bid only on impressions that are at least 70% likely to be viewable.",
            "Bid only on impressions that are at least 80% likely to be viewable.",
            "Bid only on impressions that are at least 90% likely to be viewable."
          ],
          "type": "string"
        }
      }
    },
    "TimerEvent": {
      "type": "object",
      "id": "TimerEvent",
      "description": "Timer event of the creative.",
      "properties": {
        "reportingName": {
          "type": "string",
          "description": "Required. The name used to identify this timer event in reports."
        },
        "name": {
          "description": "Required. The name of the timer event.",
          "type": "string"
        }
      }
    },
    "Date": {
      "type": "object",
      "id": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. This can represent: * A full date, with non-zero year, month and day values * A month and day value, with a zero year, e.g. an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, e.g. a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "properties": {
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day."
        },
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      }
    },
    "AudioVideoOffset": {
      "id": "AudioVideoOffset",
      "properties": {
        "percentage": {
          "format": "int64",
          "type": "string",
          "description": "The offset in percentage of the audio or video duration."
        },
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "The offset in seconds from the start of the audio or video."
        }
      },
      "type": "object",
      "description": "The length an audio or a video has been played."
    },
    "ListInsertionOrdersResponse": {
      "properties": {
        "insertionOrders": {
          "type": "array",
          "items": {
            "$ref": "InsertionOrder"
          },
          "description": "The list of insertion orders. This list will be absent if empty."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInsertionOrders` method to retrieve the next page of results."
        }
      },
      "type": "object",
      "id": "ListInsertionOrdersResponse"
    },
    "GeoRegionTargetingOptionDetails": {
      "description": "Represents a targetable geographic region. This will be populated in the geo_region_details field when targeting_type is `TARGETING_TYPE_GEO_REGION`.",
      "properties": {
        "geoRegionType": {
          "enum": [
            "GEO_REGION_TYPE_UNKNOWN",
            "GEO_REGION_TYPE_OTHER",
            "GEO_REGION_TYPE_COUNTRY",
            "GEO_REGION_TYPE_REGION",
            "GEO_REGION_TYPE_TERRITORY",
            "GEO_REGION_TYPE_PROVINCE",
            "GEO_REGION_TYPE_STATE",
            "GEO_REGION_TYPE_PREFECTURE",
            "GEO_REGION_TYPE_GOVERNORATE",
            "GEO_REGION_TYPE_CANTON",
            "GEO_REGION_TYPE_UNION_TERRITORY",
            "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY",
            "GEO_REGION_TYPE_DMA_REGION",
            "GEO_REGION_TYPE_METRO",
            "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT",
            "GEO_REGION_TYPE_COUNTY",
            "GEO_REGION_TYPE_MUNICIPALITY",
            "GEO_REGION_TYPE_CITY",
            "GEO_REGION_TYPE_POSTAL_CODE",
            "GEO_REGION_TYPE_DEPARTMENT",
            "GEO_REGION_TYPE_AIRPORT",
            "GEO_REGION_TYPE_TV_REGION",
            "GEO_REGION_TYPE_OKRUG",
            "GEO_REGION_TYPE_BOROUGH",
            "GEO_REGION_TYPE_CITY_REGION",
            "GEO_REGION_TYPE_ARRONDISSEMENT",
            "GEO_REGION_TYPE_NEIGHBORHOOD",
            "GEO_REGION_TYPE_UNIVERSITY",
            "GEO_REGION_TYPE_DISTRICT"
          ],
          "type": "string",
          "enumDescriptions": [
            "The geographic region type is unknown.",
            "The geographic region type is other.",
            "The geographic region is a country.",
            "The geographic region type is region.",
            "The geographic region is a territory.",
            "The geographic region is a province.",
            "The geographic region is a state.",
            "The geographic region is a prefecture.",
            "The geographic region is a governorate.",
            "The geographic region is a canton.",
            "The geographic region is a union territory.",
            "The geographic region is an autonomous community.",
            "The geographic region is a designated market area (DMA) region.",
            "The geographic region type is metro.",
            "The geographic region is a congressional district.",
            "The geographic region is a county.",
            "The geographic region is a municipality.",
            "The geographic region is a city.",
            "The geographic region targeting type is postal code.",
            "The geographic region targeting type is department.",
            "The geographic region is an airport.",
            "The geographic region is a TV region.",
            "The geographic region is an okrug.",
            "The geographic region is a borough.",
            "The geographic region is a city region.",
            "The geographic region is an arrondissement.",
            "The geographic region is a neighborhood.",
            "The geographic region is a university.",
            "The geographic region is a district."
          ],
          "description": "Output only. The type of geographic region targeting."
        },
        "displayName": {
          "description": "Output only. The display name of the geographic region (e.g., \"Ontario, Canada\").",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GeoRegionTargetingOptionDetails"
    },
    "TrackingFloodlightActivityConfig": {
      "description": "Settings that control the behavior of a single Floodlight activity config.",
      "type": "object",
      "id": "TrackingFloodlightActivityConfig",
      "properties": {
        "postViewLookbackWindowDays": {
          "format": "int32",
          "description": "Required. The number of days after an ad has been viewed in which a conversion may be counted. Must be between 0 and 90 inclusive.",
          "type": "integer"
        },
        "floodlightActivityId": {
          "format": "int64",
          "type": "string",
          "description": "Required. The ID of the Floodlight activity."
        },
        "postClickLookbackWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The number of days after an ad has been clicked in which a conversion may be counted. Must be between 0 and 90 inclusive."
        }
      }
    },
    "ExchangeAssignedTargetingOptionDetails": {
      "id": "ExchangeAssignedTargetingOptionDetails",
      "description": "Details for assigned exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`.",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_EXCHANGE`."
        }
      },
      "type": "object"
    },
    "UrlAssignedTargetingOptionDetails": {
      "type": "object",
      "id": "UrlAssignedTargetingOptionDetails",
      "properties": {
        "url": {
          "description": "Required. The URL, for example `example.com`. DV360 supports two levels of subdirectory targeting, for example `www.example.com/one-subdirectory-level/second-level`, and five levels of subdomain targeting, for example `five.four.three.two.one.example.com`.",
          "type": "string"
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        }
      },
      "description": "Details for assigned URL targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_URL`."
    },
    "EnvironmentTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "enumDescriptions": [
            "Default value when environment is not specified in this version. This enum is a placeholder for default value and does not represent a real environment option.",
            "Target inventory displayed in browsers. This includes inventory that was designed for the device it was viewed on, such as mobile websites viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be deleted prior to the deletion of this targeting option.",
            "Target inventory displayed in browsers. This includes inventory that was not designed for the device but viewed on it, such as websites optimized for desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of this targeting option.",
            "Target inventory displayed in apps."
          ],
          "description": "Output only. The serving environment.",
          "enum": [
            "ENVIRONMENT_UNSPECIFIED",
            "ENVIRONMENT_WEB_OPTIMIZED",
            "ENVIRONMENT_WEB_NOT_OPTIMIZED",
            "ENVIRONMENT_APP"
          ]
        }
      },
      "description": "Represents a targetable environment. This will be populated in the environment_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.",
      "id": "EnvironmentTargetingOptionDetails"
    },
    "AppCategoryTargetingOptionDetails": {
      "id": "AppCategoryTargetingOptionDetails",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The name of the app collection."
        }
      },
      "description": "Represents a targetable collection of apps. A collection lets you target dynamic groups of related apps that are maintained by the platform, for example `All Apps/Google Play/Games`. This will be populated in the app_category_details field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.",
      "type": "object"
    },
    "CustomListGroup": {
      "properties": {
        "settings": {
          "type": "array",
          "description": "Required. All custom list targeting settings in custom list group. Repeated settings with same id will be ignored.",
          "items": {
            "$ref": "CustomListTargetingSetting"
          }
        }
      },
      "id": "CustomListGroup",
      "type": "object",
      "description": "Details of custom list group. All custom list targeting settings are logically ‘OR’ of each other."
    },
    "BulkEditSitesResponse": {
      "properties": {
        "sites": {
          "items": {
            "$ref": "Site"
          },
          "type": "array",
          "description": "The list of sites that have been successfully created. This list will be absent if empty."
        }
      },
      "id": "BulkEditSitesResponse",
      "description": "Response message for SiteService.BulkEditSites.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ExchangeTargetingOptionDetails": {
      "id": "ExchangeTargetingOptionDetails",
      "properties": {
        "exchange": {
          "description": "Output only. The type of exchange.",
          "enum": [
            "EXCHANGE_UNSPECIFIED",
            "EXCHANGE_GOOGLE_AD_MANAGER",
            "EXCHANGE_APPNEXUS",
            "EXCHANGE_BRIGHTROLL",
            "EXCHANGE_ADFORM",
            "EXCHANGE_ADMETA",
            "EXCHANGE_ADMIXER",
            "EXCHANGE_ADSMOGO",
            "EXCHANGE_ADSWIZZ",
            "EXCHANGE_BIDSWITCH",
            "EXCHANGE_BRIGHTROLL_DISPLAY",
            "EXCHANGE_CADREON",
            "EXCHANGE_DAILYMOTION",
            "EXCHANGE_FIVE",
            "EXCHANGE_FLUCT",
            "EXCHANGE_FREEWHEEL",
            "EXCHANGE_GENIEE",
            "EXCHANGE_GUMGUM",
            "EXCHANGE_IMOBILE",
            "EXCHANGE_IBILLBOARD",
            "EXCHANGE_IMPROVE_DIGITAL",
            "EXCHANGE_INDEX",
            "EXCHANGE_KARGO",
            "EXCHANGE_MICROAD",
            "EXCHANGE_MOPUB",
            "EXCHANGE_NEND",
            "EXCHANGE_ONE_BY_AOL_DISPLAY",
            "EXCHANGE_ONE_BY_AOL_MOBILE",
            "EXCHANGE_ONE_BY_AOL_VIDEO",
            "EXCHANGE_OOYALA",
            "EXCHANGE_OPENX",
            "EXCHANGE_PERMODO",
            "EXCHANGE_PLATFORMONE",
            "EXCHANGE_PLATFORMID",
            "EXCHANGE_PUBMATIC",
            "EXCHANGE_PULSEPOINT",
            "EXCHANGE_REVENUEMAX",
            "EXCHANGE_RUBICON",
            "EXCHANGE_SMARTCLIP",
            "EXCHANGE_SMARTRTB",
            "EXCHANGE_SMARTSTREAMTV",
            "EXCHANGE_SOVRN",
            "EXCHANGE_SPOTXCHANGE",
            "EXCHANGE_STROER",
            "EXCHANGE_TEADSTV",
            "EXCHANGE_TELARIA",
            "EXCHANGE_TVN",
            "EXCHANGE_UNITED",
            "EXCHANGE_YIELDLAB",
            "EXCHANGE_YIELDMO",
            "EXCHANGE_UNRULYX",
            "EXCHANGE_OPEN8",
            "EXCHANGE_TRITON",
            "EXCHANGE_TRIPLELIFT",
            "EXCHANGE_TABOOLA",
            "EXCHANGE_INMOBI",
            "EXCHANGE_SMAATO",
            "EXCHANGE_AJA",
            "EXCHANGE_NEXSTAR_DIGITAL",
            "EXCHANGE_WAZE"
          ],
          "enumDescriptions": [
            "Exchange is not specified or is unknown in this version.",
            "Google Ad Manager.",
            "AppNexus.",
            "BrightRoll Exchange for Video from Yahoo!.",
            "Adform.",
            "Admeta.",
            "Admixer.",
            "AdsMogo.",
            "AdsWizz.",
            "BidSwitch.",
            "BrightRoll Exchange for Display from Yahoo!.",
            "Cadreon.",
            "Dailymotion.",
            "Five.",
            "Fluct.",
            "FreeWheel SSP.",
            "Geniee.",
            "GumGum.",
            "i-mobile.",
            "iBILLBOARD.",
            "Improve Digital.",
            "Index Exchange.",
            "Kargo.",
            "MicroAd.",
            "MoPub.",
            "Nend.",
            "ONE by AOL: Display Market Place.",
            "ONE by AOL: Mobile.",
            "ONE by AOL: Video.",
            "Ooyala.",
            "OpenX.",
            "Permodo.",
            "Platform One.",
            "PlatformId.",
            "PubMatic.",
            "PulsePoint.",
            "RevenueMax.",
            "Rubicon.",
            "SmartClip.",
            "SmartRTB+.",
            "SmartstreamTv.",
            "Sovrn.",
            "SpotXchange.",
            "Ströer SSP.",
            "TeadsTv.",
            "Telaria.",
            "TVN.",
            "United.",
            "Yieldlab.",
            "Yieldmo.",
            "UnrulyX",
            "Open8",
            "Triton.",
            "TripleLift",
            "Taboola",
            "InMobi.",
            "Smaato",
            "Aja.",
            "Nexstar Digital.",
            "Waze."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a targetable exchange. This will be populated in the exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`."
    },
    "HouseholdIncomeTargetingOptionDetails": {
      "properties": {
        "householdIncome": {
          "type": "string",
          "enumDescriptions": [
            "Default value when household income is not specified in this version. This enum is a placeholder for default value and does not represent a real household income option.",
            "The household income of the audience is unknown.",
            "The audience is in the lower 50% of U.S. household incomes.",
            "The audience is in the top 41-50% of U.S. household incomes.",
            "The audience is in the top 31-40% of U.S. household incomes.",
            "The audience is in the top 21-30% of U.S. household incomes.",
            "The audience is in the top 11-20% of U.S. household incomes.",
            "The audience is in the top 10% of U.S. household incomes."
          ],
          "enum": [
            "HOUSEHOLD_INCOME_UNSPECIFIED",
            "HOUSEHOLD_INCOME_UNKNOWN",
            "HOUSEHOLD_INCOME_LOWER_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT",
            "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT",
            "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT",
            "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT",
            "HOUSEHOLD_INCOME_TOP_10_PERCENT"
          ],
          "description": "Output only. The household income of an audience."
        }
      },
      "id": "HouseholdIncomeTargetingOptionDetails",
      "type": "object",
      "description": "Represents a targetable household income. This will be populated in the household_income_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`."
    },
    "ListFirstAndThirdPartyAudiencesResponse": {
      "type": "object",
      "id": "ListFirstAndThirdPartyAudiencesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListFirstAndThirdPartyAudiences` method to retrieve the next page of results.",
          "type": "string"
        },
        "firstAndThirdPartyAudiences": {
          "items": {
            "$ref": "FirstAndThirdPartyAudience"
          },
          "type": "array",
          "description": "The list of first and third party audiences. Audience size properties will not be included. This list will be absent if empty."
        }
      }
    },
    "UserRewardedContentAssignedTargetingOptionDetails": {
      "properties": {
        "userRewardedContent": {
          "description": "Output only. User rewarded content status for video ads.",
          "type": "string",
          "enumDescriptions": [
            "User rewarded content is not specified or is unknown in this version.",
            "Represents ads where the user will see a reward after viewing.",
            "Represents all other ads besides user-rewarded."
          ],
          "enum": [
            "USER_REWARDED_CONTENT_UNSPECIFIED",
            "USER_REWARDED_CONTENT_USER_REWARDED",
            "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
          ]
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.",
          "type": "string"
        }
      },
      "description": "User rewarded content targeting option details. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.",
      "id": "UserRewardedContentAssignedTargetingOptionDetails",
      "type": "object"
    },
    "ListAssignedInventorySourcesResponse": {
      "description": "Response message for AssignedInventorySourceService.ListAssignedInventorySources.",
      "id": "ListAssignedInventorySourcesResponse",
      "type": "object",
      "properties": {
        "assignedInventorySources": {
          "type": "array",
          "description": "The list of assigned inventory sources. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedInventorySource"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedInventorySources` method to retrieve the next page of results."
        }
      }
    },
    "FrequencyCap": {
      "properties": {
        "timeUnitCount": {
          "type": "integer",
          "description": "The number of time_unit the frequency cap will last. Applicable when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59",
          "format": "int32"
        },
        "unlimited": {
          "type": "boolean",
          "description": "Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable."
        },
        "timeUnit": {
          "description": "The time unit in which the frequency cap will be applied. Applicable when unlimited is `false`.",
          "enum": [
            "TIME_UNIT_UNSPECIFIED",
            "TIME_UNIT_LIFETIME",
            "TIME_UNIT_MONTHS",
            "TIME_UNIT_WEEKS",
            "TIME_UNIT_DAYS",
            "TIME_UNIT_HOURS",
            "TIME_UNIT_MINUTES"
          ],
          "type": "string",
          "enumDescriptions": [
            "Time unit value is not specified or is unknown in this version.",
            "The frequency cap will be applied to the whole life time of the line item.",
            "The frequency cap will be applied to a number of months.",
            "The frequency cap will be applied to a number of weeks.",
            "The frequency cap will be applied to a number of days.",
            "The frequency cap will be applied to a number of hours.",
            "The frequency cap will be applied to a number of minutes."
          ]
        },
        "maxImpressions": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of times a user may be shown with the same ad during this period. Must be greater than 0. Applicable when unlimited is `false`."
        }
      },
      "id": "FrequencyCap",
      "description": "Settings that control the number of times a user may be shown with the same ad during a given time period.",
      "type": "object"
    },
    "SensitiveCategoryTargetingOptionDetails": {
      "description": "Represents a targetable sensitive category. This will be populated in the sensitive_category_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.",
      "type": "object",
      "id": "SensitiveCategoryTargetingOptionDetails",
      "properties": {
        "sensitiveCategory": {
          "enumDescriptions": [
            "This enum is only a placeholder and doesn't specify a DV360 sensitive category.",
            "Adult or pornographic text, image, or video content.",
            "Content that may be construed as biased against individuals, groups, or organizations based on criteria such as race, religion, disability, sex, age, veteran status, sexual orientation, gender identity, or political affiliation. May also indicate discussion of such content, for instance, in an academic or journalistic context.",
            "Content related to audio, video, or software downloads.",
            "Contains content related to personal weapons, including knives, guns, small firearms, and ammunition. Selecting either \"weapons\" or \"sensitive social issues\" will result in selecting both.",
            "Contains content related to betting or wagering in a real-world or online setting.",
            "Content which may be considered graphically violent, gory, gruesome, or shocking, such as street fighting videos, accident photos, descriptions of torture, etc.",
            "Adult content, as well as suggestive content that's not explicitly pornographic. This category includes all pages categorized as adult.",
            "Prominent use of words considered indecent, such as curse words and sexual slang. Pages with only very occasional usage, such as news sites that might include such words in a quotation, are not included.",
            "Contains content related to alcoholic beverages, alcohol brands, recipes, etc.",
            "Contains content related to the recreational use of legal or illegal drugs, as well as to drug paraphernalia or cultivation.",
            "Contains content related to tobacco and tobacco accessories, including lighters, humidors, ashtrays, etc.",
            "Political news and media, including discussions of social, governmental, and public policy.",
            "Content related to religious thought or beliefs.",
            "Content related to death, disasters, accidents, war, etc.",
            "Content related to motor vehicle, aviation or other transportation accidents.",
            "Issues that evoke strong, opposing views and spark debate. These include issues that are controversial in most countries and markets (such as abortion), as well as those that are controversial in specific countries and markets (such as immigration reform in the United States).",
            "Content which may be considered shocking or disturbing, such as violent news stories, stunts, or toilet humor."
          ],
          "enum": [
            "SENSITIVE_CATEGORY_UNSPECIFIED",
            "SENSITIVE_CATEGORY_ADULT",
            "SENSITIVE_CATEGORY_DEROGATORY",
            "SENSITIVE_CATEGORY_DOWNLOADS_SHARING",
            "SENSITIVE_CATEGORY_WEAPONS",
            "SENSITIVE_CATEGORY_GAMBLING",
            "SENSITIVE_CATEGORY_VIOLENCE",
            "SENSITIVE_CATEGORY_SUGGESTIVE",
            "SENSITIVE_CATEGORY_PROFANITY",
            "SENSITIVE_CATEGORY_ALCOHOL",
            "SENSITIVE_CATEGORY_DRUGS",
            "SENSITIVE_CATEGORY_TOBACCO",
            "SENSITIVE_CATEGORY_POLITICS",
            "SENSITIVE_CATEGORY_RELIGION",
            "SENSITIVE_CATEGORY_TRAGEDY",
            "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS",
            "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES",
            "SENSITIVE_CATEGORY_SHOCKING"
          ],
          "type": "string",
          "description": "Output only. An enum for the DV360 Sensitive category content classifier."
        }
      }
    },
    "PartnerRevenueModel": {
      "type": "object",
      "description": "Settings that control how partner revenue is calculated.",
      "id": "PartnerRevenueModel",
      "properties": {
        "markupAmount": {
          "format": "int64",
          "description": "Required. The markup amount of the partner revenue model. Must be greater than or equal to 0. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`, this field represents the CPM markup in micros of advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP`, this field represents the media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001). * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP`, this field represents the total media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001).",
          "type": "string"
        },
        "markupType": {
          "description": "Required. The markup type of the partner revenue model.",
          "type": "string",
          "enum": [
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP",
            "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP"
          ],
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Calculate the partner revenue based on a fixed CPM.",
            "Calculate the partner revenue based on a percentage surcharge of its media cost.",
            "Calculate the partner revenue based on a percentage surcharge of its total media cost, which includes all partner costs and data costs."
          ]
        }
      }
    },
    "CustomList": {
      "description": "Describes a custom list entity, such as a custom affinity or custom intent audience list.",
      "id": "CustomList",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the custom list.",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. The display name of the custom list. .",
          "type": "string"
        },
        "customListId": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the custom list. Assigned by the system."
        }
      }
    },
    "CarrierAndIspAssignedTargetingOptionDetails": {
      "id": "CarrierAndIspAssignedTargetingOptionDetails",
      "properties": {
        "negative": {
          "description": "Indicates if this option is being negatively targeted. All assigned carrier and ISP targeting options on the same line item must have the same value for this field.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the carrier or ISP."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_CARRIER_AND_ISP`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details for assigned carrier and ISP targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`."
    },
    "AgeRangeAssignedTargetingOptionDetails": {
      "id": "AgeRangeAssignedTargetingOptionDetails",
      "properties": {
        "ageRange": {
          "type": "string",
          "enumDescriptions": [
            "Default value when age range is not specified in this version. This enum is a placeholder for default value and does not represent a real age range option.",
            "The age range of the audience is 18 to 24.",
            "The age range of the audience is 25 to 34.",
            "The age range of the audience is 35 to 44.",
            "The age range of the audience is 45 to 54.",
            "The age range of the audience is 55 to 64.",
            "The age range of the audience is 65 and up.",
            "The age range of the audience is unknown."
          ],
          "enum": [
            "AGE_RANGE_UNSPECIFIED",
            "AGE_RANGE_18_24",
            "AGE_RANGE_25_34",
            "AGE_RANGE_35_44",
            "AGE_RANGE_45_54",
            "AGE_RANGE_55_64",
            "AGE_RANGE_65_PLUS",
            "AGE_RANGE_UNKNOWN"
          ],
          "description": "Output only. The age range of an audience. We only support targeting a continuous age range of an audience. Thus, the age range represented in this field can be 1) targeted solely, or, 2) part of a larger continuous age range. The reach of a continuous age range targeting can be expanded by also targeting an audience of an unknown age."
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AGE_RANGE`."
        }
      },
      "type": "object",
      "description": "Represents a targetable age range. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AGE_RANGE`."
    },
    "DigitalContentLabelTargetingOptionDetails": {
      "id": "DigitalContentLabelTargetingOptionDetails",
      "properties": {
        "contentRatingTier": {
          "description": "Output only. An enum for the content label brand safety tiers.",
          "enumDescriptions": [
            "Content label is not specified in this version. This enum is a place holder for a default value and does not represent a real content rating.",
            "Content that has not been labeled.",
            "Content suitable for general audiences.",
            "Content suitable for most audiences with parental guidance.",
            "Content suitable for teen and older audiences.",
            "Content suitable only for mature audiences."
          ],
          "type": "string",
          "enum": [
            "CONTENT_RATING_TIER_UNSPECIFIED",
            "CONTENT_RATING_TIER_UNRATED",
            "CONTENT_RATING_TIER_GENERAL",
            "CONTENT_RATING_TIER_PARENTAL_GUIDANCE",
            "CONTENT_RATING_TIER_TEENS",
            "CONTENT_RATING_TIER_MATURE"
          ]
        }
      },
      "type": "object",
      "description": "Represents a targetable digital content label rating tier. This will be populated in the digital_content_label_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`."
    },
    "ThirdPartyUrl": {
      "id": "ThirdPartyUrl",
      "properties": {
        "url": {
          "description": "Tracking URL used to track the interaction. Provide a URL with optional path or query string, beginning with `https:`. For example, https://www.example.com/path",
          "type": "string"
        },
        "type": {
          "enum": [
            "THIRD_PARTY_URL_TYPE_UNSPECIFIED",
            "THIRD_PARTY_URL_TYPE_IMPRESSION",
            "THIRD_PARTY_URL_TYPE_CLICK_TRACKING",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_START",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FIRST_QUARTILE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MIDPOINT",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_THIRD_QUARTILE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_COMPLETE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MUTE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PAUSE",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_REWIND",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FULLSCREEN",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_STOP",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_CUSTOM",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_SKIP",
            "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PROGRESS"
          ],
          "enumDescriptions": [
            "The type of third-party URL is unspecified or is unknown in this version.",
            "Used to count impressions of the creative after the audio or video buffering is complete.",
            "Used to track user clicks on the audio or video.",
            "Used to track the number of times a user starts the audio or video.",
            "Used to track the number of times the audio or video plays to 25% of its length.",
            "Used to track the number of times the audio or video plays to 50% of its length.",
            "Used to track the number of times the audio or video plays to 75% of its length.",
            "Used to track the number of times the audio or video plays to the end.",
            "Used to track the number of times a user mutes the audio or video.",
            "Used to track the number of times a user pauses the audio or video.",
            "Used to track the number of times a user replays the audio or video.",
            "Used to track the number of times a user expands the player to full-screen size.",
            "Used to track the number of times a user stops the audio or video.",
            "Used to track the number of times a user performs a custom click, such as clicking on a video hot spot.",
            "Used to track the number of times the audio or video was skipped.",
            "Used to track the number of times the audio or video plays to an offset determined by the progress_offset."
          ],
          "description": "The type of interaction needs to be tracked by the tracking URL",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Tracking URLs from third parties to track interactions with an audio or a video creative."
    },
    "RegionalLocationListAssignedTargetingOptionDetails": {
      "id": "RegionalLocationListAssignedTargetingOptionDetails",
      "description": "Targeting details for regional location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.",
      "properties": {
        "regionalLocationListId": {
          "type": "string",
          "format": "int64",
          "description": "Required. ID of the regional location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_REGIONAL`."
        },
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted."
        }
      },
      "type": "object"
    },
    "AdvertiserAdServerConfig": {
      "properties": {
        "thirdPartyOnlyConfig": {
          "description": "The configuration for advertisers that use third-party ad servers only.",
          "$ref": "ThirdPartyOnlyConfig"
        },
        "cmHybridConfig": {
          "description": "The configuration for advertisers that use both Campaign Manager (CM) and third-party ad servers.",
          "$ref": "CmHybridConfig"
        }
      },
      "id": "AdvertiserAdServerConfig",
      "description": "Ad server related settings of an advertiser.",
      "type": "object"
    },
    "CreateAssignedTargetingOptionsRequest": {
      "type": "object",
      "description": "A request listing which assigned targeting options of a given targeting type should be created and added.",
      "properties": {
        "assignedTargetingOptions": {
          "type": "array",
          "items": {
            "$ref": "AssignedTargetingOption"
          },
          "description": "Required. The assigned targeting options to create and add."
        },
        "targetingType": {
          "description": "Required. Identifies the type of this assigned targeting option.",
          "type": "string",
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE"
          ],
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges."
          ]
        }
      },
      "id": "CreateAssignedTargetingOptionsRequest"
    },
    "ContentInstreamPositionAssignedTargetingOptionDetails": {
      "id": "ContentInstreamPositionAssignedTargetingOptionDetails",
      "properties": {
        "contentInstreamPosition": {
          "enum": [
            "CONTENT_INSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_INSTREAM_POSITION_PRE_ROLL",
            "CONTENT_INSTREAM_POSITION_MID_ROLL",
            "CONTENT_INSTREAM_POSITION_POST_ROLL"
          ],
          "description": "Output only. The content instream position for video or audio ads.",
          "type": "string",
          "enumDescriptions": [
            "Content instream position is not specified in this version. This enum is a place holder for a default value and does not represent a real in stream ad position.",
            "Ads that play before streaming content.",
            "Ads that play between the beginning and end of streaming content.",
            "Ads that play at the end of streaming content."
          ]
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
          "type": "string"
        }
      },
      "description": "Assigned content instream position targeting option details. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.",
      "type": "object"
    },
    "InventorySourceAssignedTargetingOptionDetails": {
      "id": "InventorySourceAssignedTargetingOptionDetails",
      "properties": {
        "inventorySourceId": {
          "description": "Required. ID of the inventory source. Should refer to the inventory_source_id field of an InventorySource resource.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Targeting details for inventory source. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`."
    },
    "ListChannelsResponse": {
      "id": "ListChannelsResponse",
      "properties": {
        "channels": {
          "description": "The list of channels. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "Channel"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListChannels` method to retrieve the next page of results."
        }
      },
      "type": "object"
    },
    "BulkEditAssignedLocationsRequest": {
      "description": "Request message for AssignedLocationService.BulkEditAssignedLocations.",
      "type": "object",
      "id": "BulkEditAssignedLocationsRequest",
      "properties": {
        "createdAssignedLocations": {
          "items": {
            "$ref": "AssignedLocation"
          },
          "type": "array",
          "description": "The assigned locations to create in bulk, specified as a list of AssignedLocations."
        },
        "deletedAssignedLocations": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The IDs of the assigned locations to delete in bulk, specified as a list of assigned_location_ids."
        }
      }
    },
    "ExitEvent": {
      "description": "Exit event of the creative.",
      "id": "ExitEvent",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Required. The click through URL of the exit event. This is required when type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`"
        },
        "name": {
          "description": "The name of the click tag of the exit event. The name must be unique within one creative. Leave it empty or unset for creatives containing image assets only.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Exit event type is not specified or is unknown in this version.",
            "The exit event is the default one.",
            "The exit event is a backup exit event. There could be multiple backup exit events in a creative."
          ],
          "type": "string",
          "enum": [
            "EXIT_EVENT_TYPE_UNSPECIFIED",
            "EXIT_EVENT_TYPE_DEFAULT",
            "EXIT_EVENT_TYPE_BACKUP"
          ],
          "description": "Required. The type of the exit event."
        },
        "reportingName": {
          "type": "string",
          "description": "The name used to identify this event in reports. Leave it empty or unset for creatives containing image assets only."
        }
      }
    },
    "OperatingSystemAssignedTargetingOptionDetails": {
      "description": "Assigned operating system targeting option details. This will be populated in the operating_system_details field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.",
      "type": "object",
      "id": "OperatingSystemAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting option ID populated in targeting_option_id field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`."
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Output only. The display name of the operating system.",
          "type": "string"
        }
      }
    },
    "ListSitesResponse": {
      "type": "object",
      "id": "ListSitesResponse",
      "properties": {
        "sites": {
          "items": {
            "$ref": "Site"
          },
          "description": "The list of sites. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListSites` method to retrieve the next page of results."
        }
      },
      "description": "Response message for SiteService.ListSites."
    },
    "UniversalAdId": {
      "id": "UniversalAdId",
      "properties": {
        "registry": {
          "type": "string",
          "enum": [
            "UNIVERSAL_AD_REGISTRY_UNSPECIFIED",
            "UNIVERSAL_AD_REGISTRY_OTHER",
            "UNIVERSAL_AD_REGISTRY_AD_ID",
            "UNIVERSAL_AD_REGISTRY_CLEARCAST",
            "UNIVERSAL_AD_REGISTRY_DV360",
            "UNIVERSAL_AD_REGISTRY_CM"
          ],
          "enumDescriptions": [
            "The Universal Ad registry is unspecified or is unknown in this version.",
            "Use a custom provider to provide the Universal Ad ID.",
            "Use Ad-ID to provide the Universal Ad ID.",
            "Use clearcast.co.uk to provide the Universal Ad ID.",
            "Use Display & Video 360 to provide the Universal Ad ID.",
            "Use Campaign Manager to provide the Universal Ad ID."
          ],
          "description": "The registry provides unique creative identifiers."
        },
        "id": {
          "description": "The unique creative identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A creative identifier provided by a registry that is unique across all platforms. This is part of the VAST 4.0 standard."
    },
    "CreateSdfDownloadTaskRequest": {
      "id": "CreateSdfDownloadTaskRequest",
      "type": "object",
      "description": "Request message for [SdfDownloadTaskService.CreateSdfDownloadTask].",
      "properties": {
        "advertiserId": {
          "format": "int64",
          "description": "The ID of the advertiser to download SDF for.",
          "type": "string"
        },
        "parentEntityFilter": {
          "$ref": "ParentEntityFilter",
          "description": "Filters on selected file types. The entities in each file are filtered by a chosen set of filter entities. The filter entities must be the same type as, or a parent type of, the selected file types."
        },
        "inventorySourceFilter": {
          "$ref": "InventorySourceFilter",
          "description": "Filters on Inventory Sources by their IDs."
        },
        "idFilter": {
          "description": "Filters on entities by their entity IDs.",
          "$ref": "IdFilter"
        },
        "version": {
          "type": "string",
          "enumDescriptions": [
            "SDF version value is not specified or is unknown in this version.",
            "SDF version 3.1",
            "SDF version 4",
            "SDF version 4.1",
            "SDF version 4.2",
            "SDF version 5.",
            "SDF version 5.1",
            "SDF version 5.2;"
          ],
          "description": "Required. The SDF version of the downloaded file. If set to `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the advertiser or partner identified by `root_id`. An advertiser inherits its SDF version from its partner unless configured otherwise.",
          "enum": [
            "SDF_VERSION_UNSPECIFIED",
            "SDF_VERSION_3_1",
            "SDF_VERSION_4",
            "SDF_VERSION_4_1",
            "SDF_VERSION_4_2",
            "SDF_VERSION_5",
            "SDF_VERSION_5_1",
            "SDF_VERSION_5_2"
          ]
        },
        "partnerId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the partner to download SDF for."
        }
      }
    },
    "AssignedLocation": {
      "properties": {
        "assignedLocationId": {
          "type": "string",
          "description": "Output only. The unique ID of the assigned location. The ID is only unique within a location list. It may be reused in other contexts.",
          "format": "int64"
        },
        "targetingOptionId": {
          "description": "Required. The ID of the targeting option assigned to the location list. Must be of type TARGETING_TYPE_GEO_REGION.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the assigned location."
        }
      },
      "description": "An assignment between a location list and a relevant targeting option. Currently, geo region targeting options are the only supported option for assignment.",
      "type": "object",
      "id": "AssignedLocation"
    },
    "DeviceTypeTargetingOptionDetails": {
      "description": "Represents a targetable device type. This will be populated in the device_type_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.",
      "type": "object",
      "properties": {
        "deviceType": {
          "enumDescriptions": [
            "Default value when device type is not specified in this version. This enum is a placeholder for default value and does not represent a real device type option.",
            "The device type is computer.",
            "The device type is connected TV.",
            "The device type is smart phone..",
            "The device type is tablet."
          ],
          "type": "string",
          "enum": [
            "DEVICE_TYPE_UNSPECIFIED",
            "DEVICE_TYPE_COMPUTER",
            "DEVICE_TYPE_CONNECTED_TV",
            "DEVICE_TYPE_SMART_PHONE",
            "DEVICE_TYPE_TABLET"
          ],
          "description": "Output only. The device type that is used to be targeted."
        }
      },
      "id": "DeviceTypeTargetingOptionDetails"
    },
    "ListCustomListsResponse": {
      "type": "object",
      "id": "ListCustomListsResponse",
      "properties": {
        "customLists": {
          "items": {
            "$ref": "CustomList"
          },
          "description": "The list of custom lists. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomLists` method to retrieve the next page of results."
        }
      }
    },
    "ContentOutstreamPositionAssignedTargetingOptionDetails": {
      "id": "ContentOutstreamPositionAssignedTargetingOptionDetails",
      "description": "Assigned content outstream position targeting option details. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
      "type": "object",
      "properties": {
        "contentOutstreamPosition": {
          "enumDescriptions": [
            "Content outstream position is not specified in this version. This enum is a place holder for a default value and does not represent a real content outstream position.",
            "The ad position is unknown in the content outstream.",
            "Ads that appear between the paragraphs of your pages.",
            "Ads that display on the top and the sides of a page.",
            "Ads that appear in a scrollable stream of content. A feed is typically editorial (e.g. a list of articles or news) or listings (e.g. a list of products or services).",
            "Ads shown before or between content loads."
          ],
          "type": "string",
          "enum": [
            "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED",
            "CONTENT_OUTSTREAM_POSITION_UNKNOWN",
            "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE",
            "CONTENT_OUTSTREAM_POSITION_IN_BANNER",
            "CONTENT_OUTSTREAM_POSITION_IN_FEED",
            "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
          ],
          "description": "Output only. The content outstream position."
        },
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.",
          "type": "string"
        }
      }
    },
    "VideoPlayerSizeAssignedTargetingOptionDetails": {
      "id": "VideoPlayerSizeAssignedTargetingOptionDetails",
      "properties": {
        "targetingOptionId": {
          "description": "Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.",
          "type": "string"
        },
        "videoPlayerSize": {
          "type": "string",
          "enum": [
            "VIDEO_PLAYER_SIZE_UNSPECIFIED",
            "VIDEO_PLAYER_SIZE_SMALL",
            "VIDEO_PLAYER_SIZE_LARGE",
            "VIDEO_PLAYER_SIZE_HD",
            "VIDEO_PLAYER_SIZE_UNKNOWN"
          ],
          "enumDescriptions": [
            "Video player size is not specified in this version. This enum is a place holder for a default value and does not represent a real video player size.",
            "The dimensions of the video player are less than 400×300 (desktop), or up to 20% of screen covered (mobile).",
            "The dimensions of the video player are between 400x300 and 1280x720 pixels (desktop), or 20% to 90% of the screen covered (mobile).",
            "The dimensions of the video player are 1280×720 or greater (desktop), or over 90% of the screen covered (mobile).",
            "The dimensions of the video player are unknown."
          ],
          "description": "Output only. The video player size."
        }
      },
      "type": "object",
      "description": "Video player size targeting option details. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`. Explicitly targeting all options is not supported. Remove all video player size targeting options to achieve this effect."
    },
    "LineItem": {
      "id": "LineItem",
      "properties": {
        "campaignId": {
          "description": "Output only. The unique ID of the campaign that the line item belongs to.",
          "format": "int64",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "Output only. The unique ID of the line item. Assigned by the system.",
          "format": "int64"
        },
        "creativeIds": {
          "type": "array",
          "description": "The IDs of the creatives associated with the line item.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "bidStrategy": {
          "description": "Required. The bidding strategy of the line item.",
          "$ref": "BiddingStrategy"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the line item was last updated. Assigned by the system.",
          "format": "google-datetime"
        },
        "inventorySourceIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "The IDs of the private inventory sources assigned to the line item."
        },
        "displayName": {
          "description": "Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        },
        "pacing": {
          "$ref": "Pacing",
          "description": "Required. The budget spending speed setting of the line item."
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The unique ID of the advertiser the line item belongs to."
        },
        "insertionOrderId": {
          "description": "Required. Immutable. The unique ID of the insertion order that the line item belongs to.",
          "format": "int64",
          "type": "string"
        },
        "flight": {
          "$ref": "LineItemFlight",
          "description": "Required. The start and end time of the line item's flight."
        },
        "budget": {
          "description": "Required. The budget allocation setting of the line item.",
          "$ref": "LineItemBudget"
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "type": "string",
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "description": "Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`."
        },
        "name": {
          "description": "Output only. The resource name of the line item.",
          "type": "string"
        },
        "partnerRevenueModel": {
          "$ref": "PartnerRevenueModel",
          "description": "Required. The partner revenue model setting of the line item."
        },
        "lineItemType": {
          "description": "Required. Immutable. The type of the line item.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "Image, HTML5, native, or rich media ads.",
            "Display ads that drive installs of an app.",
            "Video ads sold on a CPM basis for a variety of environments.",
            "Video ads that drive installs of an app.",
            "Display ads served on mobile app inventory.",
            "Video ads served on mobile app inventory."
          ],
          "type": "string",
          "enum": [
            "LINE_ITEM_TYPE_UNSPECIFIED",
            "LINE_ITEM_TYPE_DISPLAY_DEFAULT",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_VIDEO_DEFAULT",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL",
            "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY",
            "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY"
          ]
        },
        "integrationDetails": {
          "$ref": "IntegrationDetails",
          "description": "Integration details of the line item."
        },
        "conversionCounting": {
          "description": "The conversion tracking setting of the line item.",
          "$ref": "ConversionCountingConfig"
        },
        "partnerCosts": {
          "type": "array",
          "items": {
            "$ref": "PartnerCost"
          },
          "description": "The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order."
        },
        "frequencyCap": {
          "$ref": "FrequencyCap",
          "description": "Required. The frequency capping setting of the line item."
        }
      },
      "type": "object",
      "description": "A single line item."
    },
    "FirstAndThirdPartyAudienceTargetingSetting": {
      "properties": {
        "firstAndThirdPartyAudienceId": {
          "type": "string",
          "description": "Required. First and third party audience id of the first and third party audience targeting setting. This id is first_and_third_party_audience_id.",
          "format": "int64"
        },
        "recency": {
          "description": "The recency of the first and third party audience targeting setting. Only applicable to first party audiences, otherwise will be ignored. For more info, refer to https://support.google.com/displayvideo/answer/2949947#recency When unspecified, no recency limit will be used.",
          "enum": [
            "RECENCY_NO_LIMIT",
            "RECENCY_1_MINUTE",
            "RECENCY_5_MINUTES",
            "RECENCY_10_MINUTES",
            "RECENCY_15_MINUTES",
            "RECENCY_30_MINUTES",
            "RECENCY_1_HOUR",
            "RECENCY_2_HOURS",
            "RECENCY_3_HOURS",
            "RECENCY_6_HOURS",
            "RECENCY_12_HOURS",
            "RECENCY_1_DAY",
            "RECENCY_2_DAYS",
            "RECENCY_3_DAYS",
            "RECENCY_5_DAYS",
            "RECENCY_7_DAYS",
            "RECENCY_10_DAYS",
            "RECENCY_14_DAYS",
            "RECENCY_15_DAYS",
            "RECENCY_21_DAYS",
            "RECENCY_28_DAYS",
            "RECENCY_30_DAYS",
            "RECENCY_40_DAYS",
            "RECENCY_60_DAYS",
            "RECENCY_90_DAYS",
            "RECENCY_120_DAYS",
            "RECENCY_180_DAYS",
            "RECENCY_270_DAYS",
            "RECENCY_365_DAYS"
          ],
          "enumDescriptions": [
            "No limit of recency.",
            "Recency is 1 minute.",
            "Recency is 5 minutes.",
            "Recency is 10 minutes.",
            "Recency is 15 minutes.",
            "Recency is 30 minutes.",
            "Recency is 1 hour.",
            "Recency is 2 hours.",
            "Recency is 3 hours.",
            "Recency is 6 hours.",
            "Recency is 12 hours.",
            "Recency is 1 day.",
            "Recency is 2 days.",
            "Recency is 3 days.",
            "Recency is 5 days.",
            "Recency is 7 days.",
            "Recency is 10 days.",
            "Recency is 14 days.",
            "Recency is 15 days.",
            "Recency is 21 days.",
            "Recency is 28 days.",
            "Recency is 30 days.",
            "Recency is 40 days.",
            "Recency is 60 days.",
            "Recency is 90 days.",
            "Recency is 120 days.",
            "Recency is 180 days.",
            "Recency is 270 days.",
            "Recency is 365 days."
          ],
          "type": "string"
        }
      },
      "description": "Details of first and third party audience targeting setting.",
      "id": "FirstAndThirdPartyAudienceTargetingSetting",
      "type": "object"
    },
    "ListCreativesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCreativesRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.",
          "type": "string"
        },
        "creatives": {
          "items": {
            "$ref": "Creative"
          },
          "type": "array",
          "description": "The list of creatives. This list will be absent if empty."
        }
      },
      "id": "ListCreativesResponse"
    },
    "CmTrackingAd": {
      "description": "A Campaign Manager tracking ad.",
      "id": "CmTrackingAd",
      "properties": {
        "cmAdId": {
          "format": "int64",
          "description": "The ad ID of the campaign manager tracking Ad.",
          "type": "string"
        },
        "cmCreativeId": {
          "type": "string",
          "description": "The creative ID of the campaign manager tracking Ad.",
          "format": "int64"
        },
        "cmPlacementId": {
          "description": "The placement ID of the campaign manager tracking Ad.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperatingSystemTargetingOptionDetails": {
      "description": "Represents a targetable operating system. This will be populated in the operating_system_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the operating system.",
          "type": "string"
        }
      },
      "id": "OperatingSystemTargetingOptionDetails"
    },
    "LanguageAssignedTargetingOptionDetails": {
      "id": "LanguageAssignedTargetingOptionDetails",
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the language (e.g., \"French\").",
          "type": "string"
        },
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_LANGUAGE`."
        },
        "negative": {
          "description": "Indicates if this option is being negatively targeted. All assigned language targeting options on the same line item must have the same value for this field.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Details for assigned language targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_LANGUAGE`."
    },
    "ThirdPartyOnlyConfig": {
      "type": "object",
      "id": "ThirdPartyOnlyConfig",
      "properties": {
        "pixelOrderIdReportingEnabled": {
          "description": "Whether or not order ID reporting for pixels is enabled. This value cannot be changed once set to `true`.",
          "type": "boolean"
        }
      },
      "description": "Settings for advertisers that use third-party ad servers only."
    },
    "DoubleVerify": {
      "description": "Details of DoubleVerify settings.",
      "id": "DoubleVerify",
      "type": "object",
      "properties": {
        "videoViewability": {
          "$ref": "DoubleVerifyVideoViewability",
          "description": "Video viewability settings (applicable to video line items only)."
        },
        "fraudInvalidTraffic": {
          "description": "Avoid Sites and Apps with historical Fraud & IVT Rates.",
          "$ref": "DoubleVerifyFraudInvalidTraffic"
        },
        "brandSafetyCategories": {
          "description": "DV Brand Safety Controls.",
          "$ref": "DoubleVerifyBrandSafetyCategories"
        },
        "displayViewability": {
          "$ref": "DoubleVerifyDisplayViewability",
          "description": "Display viewability settings (applicable to display line items only)."
        },
        "appStarRating": {
          "description": "Avoid bidding on apps with the star ratings.",
          "$ref": "DoubleVerifyAppStarRating"
        },
        "avoidedAgeRatings": {
          "type": "array",
          "description": "Avoid bidding on apps with the age rating.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This enum is only a placeholder and it doesn't specify any age rating options.",
              "Apps with unknown age rating.",
              "Apps rated for Everyone (4+).",
              "Apps rated for Everyone (9+).",
              "Apps rated for Teens (12+).",
              "Apps rated for Mature (17+).",
              "Apps rated for Adults Only (18+)."
            ],
            "enum": [
              "AGE_RATING_UNSPECIFIED",
              "APP_AGE_RATE_UNKNOWN",
              "APP_AGE_RATE_4_PLUS",
              "APP_AGE_RATE_9_PLUS",
              "APP_AGE_RATE_12_PLUS",
              "APP_AGE_RATE_17_PLUS",
              "APP_AGE_RATE_18_PLUS"
            ]
          },
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any age rating options.",
            "Apps with unknown age rating.",
            "Apps rated for Everyone (4+).",
            "Apps rated for Everyone (9+).",
            "Apps rated for Teens (12+).",
            "Apps rated for Mature (17+).",
            "Apps rated for Adults Only (18+)."
          ]
        }
      }
    },
    "CampaignFlight": {
      "type": "object",
      "properties": {
        "plannedDates": {
          "$ref": "DateRange",
          "description": "Required. The dates that the campaign is expected to run. They are resolved relative to the parent advertiser's time zone. * The dates specified here will not affect serving. They are used to generate alerts and warnings. For example, if the flight date of any child insertion order is outside the range of these dates, the user interface will show a warning. * `start_date` is required and must be the current date or later. * `end_date` is optional. If specified, it must be the `start_date` or later. * Any specified date must be before the year 2037."
        },
        "plannedSpendAmountMicros": {
          "description": "The amount the campaign is expected to spend for its given planned_dates. This will not limit serving, but will be used for tracking spend in the DV360 UI. The amount is in micros. Must be greater than or equal to 0. For example, 500000000 represents 500 standard units of the currency.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "CampaignFlight",
      "description": "Settings that track the planned spend and duration of a campaign."
    },
    "TargetingOption": {
      "type": "object",
      "description": "Represents a single targeting option, which is a targetable concept in DV360.",
      "id": "TargetingOption",
      "properties": {
        "browserDetails": {
          "$ref": "BrowserTargetingOptionDetails",
          "description": "Browser details."
        },
        "appCategoryDetails": {
          "description": "App category details.",
          "$ref": "AppCategoryTargetingOptionDetails"
        },
        "userRewardedContentDetails": {
          "$ref": "UserRewardedContentTargetingOptionDetails",
          "description": "User rewarded content details."
        },
        "targetingOptionId": {
          "description": "Output only. A unique identifier for this targeting option. The tuple {`targeting_type`, `targeting_option_id`} will be unique.",
          "type": "string"
        },
        "environmentDetails": {
          "$ref": "EnvironmentTargetingOptionDetails",
          "description": "Environment details."
        },
        "digitalContentLabelDetails": {
          "$ref": "DigitalContentLabelTargetingOptionDetails",
          "description": "Digital content label details."
        },
        "deviceMakeModelDetails": {
          "$ref": "DeviceMakeModelTargetingOptionDetails",
          "description": "Device make and model resource details."
        },
        "contentOutstreamPositionDetails": {
          "description": "Content outstream position details.",
          "$ref": "ContentOutstreamPositionTargetingOptionDetails"
        },
        "categoryDetails": {
          "$ref": "CategoryTargetingOptionDetails",
          "description": "Category resource details."
        },
        "targetingType": {
          "description": "Output only. The type of this targeting option.",
          "type": "string",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges."
          ],
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE"
          ]
        },
        "householdIncomeDetails": {
          "$ref": "HouseholdIncomeTargetingOptionDetails",
          "description": "Household income details."
        },
        "ageRangeDetails": {
          "$ref": "AgeRangeTargetingOptionDetails",
          "description": "Age range details."
        },
        "onScreenPositionDetails": {
          "$ref": "OnScreenPositionTargetingOptionDetails",
          "description": "On screen position details."
        },
        "contentInstreamPositionDetails": {
          "description": "Content instream position details.",
          "$ref": "ContentInstreamPositionTargetingOptionDetails"
        },
        "videoPlayerSizeDetails": {
          "$ref": "VideoPlayerSizeTargetingOptionDetails",
          "description": "Video player size details."
        },
        "viewabilityDetails": {
          "$ref": "ViewabilityTargetingOptionDetails",
          "description": "Viewability resource details."
        },
        "carrierAndIspDetails": {
          "description": "Carrier and ISP details.",
          "$ref": "CarrierAndIspTargetingOptionDetails"
        },
        "sensitiveCategoryDetails": {
          "description": "Sensitive Category details.",
          "$ref": "SensitiveCategoryTargetingOptionDetails"
        },
        "subExchangeDetails": {
          "$ref": "SubExchangeTargetingOptionDetails",
          "description": "Sub-exchange details."
        },
        "deviceTypeDetails": {
          "description": "Device type details.",
          "$ref": "DeviceTypeTargetingOptionDetails"
        },
        "operatingSystemDetails": {
          "$ref": "OperatingSystemTargetingOptionDetails",
          "description": "Operating system resources details."
        },
        "authorizedSellerStatusDetails": {
          "description": "Authorized seller status resource details.",
          "$ref": "AuthorizedSellerStatusTargetingOptionDetails"
        },
        "genderDetails": {
          "$ref": "GenderTargetingOptionDetails",
          "description": "Gender details."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for this targeting option."
        },
        "parentalStatusDetails": {
          "$ref": "ParentalStatusTargetingOptionDetails",
          "description": "Parental status details."
        },
        "languageDetails": {
          "description": "Language resource details.",
          "$ref": "LanguageTargetingOptionDetails"
        },
        "exchangeDetails": {
          "description": "Exchange details.",
          "$ref": "ExchangeTargetingOptionDetails"
        },
        "geoRegionDetails": {
          "$ref": "GeoRegionTargetingOptionDetails",
          "description": "Geographic region resource details."
        }
      }
    },
    "DayAndTimeAssignedTargetingOptionDetails": {
      "id": "DayAndTimeAssignedTargetingOptionDetails",
      "description": "Representation of a segment of time defined on a specific day of the week and with a start and end time. The time represented by `start_hour` must be before the time represented by `end_hour`.",
      "properties": {
        "startHour": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1 hour before end of day)."
        },
        "endHour": {
          "format": "int32",
          "description": "Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of day) and 24 (end of day).",
          "type": "integer"
        },
        "timeZoneResolution": {
          "enumDescriptions": [
            "Time zone resolution is either unspecific or unknown.",
            "Times are resolved in the time zone of the user that saw the ad.",
            "Times are resolved in the time zone of the advertiser that served the ad."
          ],
          "description": "Required. The mechanism used to determine which timezone to use for this day and time targeting setting.",
          "enum": [
            "TIME_ZONE_RESOLUTION_UNSPECIFIED",
            "TIME_ZONE_RESOLUTION_END_USER",
            "TIME_ZONE_RESOLUTION_ADVERTISER"
          ],
          "type": "string"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "description": "Required. The day of the week for this day and time targeting setting."
        }
      },
      "type": "object"
    },
    "LineItemFlight": {
      "type": "object",
      "id": "LineItemFlight",
      "properties": {
        "flightDateType": {
          "description": "Required. The type of the line item's flight dates.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The line item's flight dates are inherited from its parent insertion order.",
            "The line item uses its own custom flight dates."
          ],
          "enum": [
            "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED",
            "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED",
            "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM"
          ],
          "type": "string"
        },
        "dateRange": {
          "description": "The flight start and end dates of the line item. They are resolved relative to the parent advertiser's time zone. * Required when flight_date_type is `LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM`. Output only otherwise. * When creating a new flight, both `start_date` and `end_date` must be in the future. * An existing flight with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.",
          "$ref": "DateRange"
        }
      },
      "description": "Settings that control the active duration of a line item."
    },
    "GoogleBytestreamMedia": {
      "properties": {
        "resourceName": {
          "description": "Name of the media resource.",
          "type": "string"
        }
      },
      "description": "Media resource.",
      "id": "GoogleBytestreamMedia",
      "type": "object"
    },
    "DoubleVerifyAppStarRating": {
      "properties": {
        "avoidInsufficientStarRating": {
          "type": "boolean",
          "description": "Avoid bidding on apps with insufficient star ratings."
        },
        "avoidedStarRating": {
          "enum": [
            "APP_STAR_RATE_UNSPECIFIED",
            "APP_STAR_RATE_1_POINT_5_LESS",
            "APP_STAR_RATE_2_LESS",
            "APP_STAR_RATE_2_POINT_5_LESS",
            "APP_STAR_RATE_3_LESS",
            "APP_STAR_RATE_3_POINT_5_LESS",
            "APP_STAR_RATE_4_LESS",
            "APP_STAR_RATE_4_POINT_5_LESS"
          ],
          "type": "string",
          "description": "Avoid bidding on apps with the star ratings.",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any app star rating options.",
            "Official Apps with rating \u003c 1.5 Stars.",
            "Official Apps with rating \u003c 2 Stars.",
            "Official Apps with rating \u003c 2.5 Stars.",
            "Official Apps with rating \u003c 3 Stars.",
            "Official Apps with rating \u003c 3.5 Stars.",
            "Official Apps with rating \u003c 4 Stars.",
            "Official Apps with rating \u003c 4.5 Stars."
          ]
        }
      },
      "type": "object",
      "id": "DoubleVerifyAppStarRating",
      "description": "Details of DoubleVerify star ratings settings."
    },
    "ListGoogleAudiencesResponse": {
      "id": "ListGoogleAudiencesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListGoogleAudiences` method to retrieve the next page of results."
        },
        "googleAudiences": {
          "type": "array",
          "description": "The list of Google audiences. This list will be absent if empty.",
          "items": {
            "$ref": "GoogleAudience"
          }
        }
      },
      "type": "object"
    },
    "ViewabilityAssignedTargetingOptionDetails": {
      "id": "ViewabilityAssignedTargetingOptionDetails",
      "description": "Assigned viewability targeting option details. This will be populated in the viewability_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.",
      "properties": {
        "targetingOptionId": {
          "type": "string",
          "description": "Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_VIEWABILITY` (e.g., \"509010\" for targeting the `VIEWABILITY_10_PERCENT_OR_MORE` option)."
        },
        "viewability": {
          "enum": [
            "VIEWABILITY_UNSPECIFIED",
            "VIEWABILITY_10_PERCENT_OR_MORE",
            "VIEWABILITY_20_PERCENT_OR_MORE",
            "VIEWABILITY_30_PERCENT_OR_MORE",
            "VIEWABILITY_40_PERCENT_OR_MORE",
            "VIEWABILITY_50_PERCENT_OR_MORE",
            "VIEWABILITY_60_PERCENT_OR_MORE",
            "VIEWABILITY_70_PERCENT_OR_MORE",
            "VIEWABILITY_80_PERCENT_OR_MORE",
            "VIEWABILITY_90_PERCENT_OR_MORE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when viewability is not specified in this version. This enum is a placeholder for default value and does not represent a real viewability option.",
            "Bid only on impressions that are at least 10% likely to be viewable.",
            "Bid only on impressions that are at least 20% likely to be viewable.",
            "Bid only on impressions that are at least 30% likely to be viewable.",
            "Bid only on impressions that are at least 40% likely to be viewable.",
            "Bid only on impressions that are at least 50% likely to be viewable.",
            "Bid only on impressions that are at least 60% likely to be viewable.",
            "Bid only on impressions that are at least 70% likely to be viewable.",
            "Bid only on impressions that are at least 80% likely to be viewable.",
            "Bid only on impressions that are at least 90% likely to be viewable."
          ],
          "description": "Output only. The predicted viewability percentage."
        }
      },
      "type": "object"
    },
    "InsertionOrder": {
      "id": "InsertionOrder",
      "properties": {
        "insertionOrderId": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the insertion order. Assigned by the system."
        },
        "bidStrategy": {
          "description": "Optional. The bidding strategy of the insertion order. By default, fixed_bid is set.",
          "$ref": "BiddingStrategy"
        },
        "campaignId": {
          "type": "string",
          "description": "Required. Immutable. The unique ID of the campaign that the insertion order belongs to.",
          "format": "int64"
        },
        "budget": {
          "description": "Required. The budget allocation settings of the insertion order.",
          "$ref": "InsertionOrderBudget"
        },
        "name": {
          "description": "Output only. The resource name of the insertion order.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "integrationDetails": {
          "description": "Additional integration details of the insertion order.",
          "$ref": "IntegrationDetails"
        },
        "pacing": {
          "$ref": "Pacing",
          "description": "Required. The budget spending speed setting of the insertion order."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the insertion order was last updated. Assigned by the system.",
          "format": "google-datetime",
          "type": "string"
        },
        "frequencyCap": {
          "description": "Required. The frequency capping setting of the insertion order.",
          "$ref": "FrequencyCap"
        },
        "performanceGoal": {
          "description": "Required. Performance goal of the insertion order.",
          "$ref": "PerformanceGoal"
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the advertiser the insertion order belongs to."
        },
        "partnerCosts": {
          "description": "The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.",
          "type": "array",
          "items": {
            "$ref": "PartnerCost"
          }
        },
        "entityStatus": {
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.",
          "type": "string",
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ]
        }
      },
      "description": "A single insertion order.",
      "type": "object"
    },
    "SubExchangeTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "description": "Output only. The display name of the sub-exchange.",
          "type": "string"
        }
      },
      "id": "SubExchangeTargetingOptionDetails",
      "description": "Represents a targetable sub-exchange. This will be populated in the sub_exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "GoogleAudience": {
      "description": "Describes a Google audience resource. Includes Google audience lists.",
      "id": "GoogleAudience",
      "type": "object",
      "properties": {
        "googleAudienceType": {
          "enumDescriptions": [
            "Default value when type is not specified or is unknown.",
            "Affinity type Google audience.",
            "In-Market type Google audience.",
            "Installed-apps type Google audience.",
            "New-mobile-devices type Google audience."
          ],
          "description": "Output only. The type of Google audience. .",
          "enum": [
            "GOOGLE_AUDIENCE_TYPE_UNSPECIFIED",
            "GOOGLE_AUDIENCE_TYPE_AFFINITY",
            "GOOGLE_AUDIENCE_TYPE_IN_MARKET",
            "GOOGLE_AUDIENCE_TYPE_INSTALLED_APPS",
            "GOOGLE_AUDIENCE_TYPE_NEW_MOBILE_DEVICES"
          ],
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the Google audience. ."
        },
        "name": {
          "description": "Output only. The resource name of the google audience.",
          "type": "string"
        },
        "googleAudienceId": {
          "description": "Output only. The unique ID of the Google audience. Assigned by the system.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListAssignedLocationsResponse": {
      "id": "ListAssignedLocationsResponse",
      "properties": {
        "assignedLocations": {
          "type": "array",
          "description": "The list of assigned locations. This list will be absent if empty.",
          "items": {
            "$ref": "AssignedLocation"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedLocations` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "description": "Response message for AssignedLocationService.ListAssignedLocations.",
      "type": "object"
    },
    "ActiveViewVideoViewabilityMetricConfig": {
      "id": "ActiveViewVideoViewabilityMetricConfig",
      "description": "Configuration for custom Active View video viewability metrics.",
      "properties": {
        "minimumVolume": {
          "type": "string",
          "enum": [
            "VIDEO_VOLUME_PERCENT_UNSPECIFIED",
            "VIDEO_VOLUME_PERCENT_0",
            "VIDEO_VOLUME_PERCENT_10"
          ],
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "0% volume.",
            "10% volume."
          ],
          "description": "Required. The minimum percentage of the video ad's volume required in order for an impression to be recorded."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the custom metric."
        },
        "minimumQuartile": {
          "description": "The minimum visible video duration required, based on the video quartiles, in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).",
          "enum": [
            "VIDEO_DURATION_QUARTILE_UNSPECIFIED",
            "VIDEO_DURATION_QUARTILE_NONE",
            "VIDEO_DURATION_QUARTILE_FIRST",
            "VIDEO_DURATION_QUARTILE_SECOND",
            "VIDEO_DURATION_QUARTILE_THIRD",
            "VIDEO_DURATION_QUARTILE_FOURTH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "No quartile value.",
            "First quartile.",
            "Second quartile (midpoint).",
            "Third quartile.",
            "Fourth quartile (completion)."
          ]
        },
        "minimumViewability": {
          "enum": [
            "VIEWABILITY_PERCENT_UNSPECIFIED",
            "VIEWABILITY_PERCENT_0",
            "VIEWABILITY_PERCENT_25",
            "VIEWABILITY_PERCENT_50",
            "VIEWABILITY_PERCENT_75",
            "VIEWABILITY_PERCENT_100"
          ],
          "description": "Required. The minimum percentage of the video ad's pixels visible on the screen in order for an impression to be recorded.",
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "0% viewable.",
            "25% viewable.",
            "50% viewable.",
            "75% viewable.",
            "100% viewable."
          ],
          "type": "string"
        },
        "minimumDuration": {
          "type": "string",
          "enumDescriptions": [
            "Value is not specified or is unknown in this version.",
            "No duration value.",
            "0 seconds.",
            "1 second.",
            "2 seconds.",
            "3 seconds.",
            "4 seconds.",
            "5 seconds.",
            "6 seconds.",
            "7 seconds.",
            "8 seconds.",
            "9 seconds.",
            "10 seconds.",
            "11 seconds.",
            "12 seconds.",
            "13 seconds.",
            "14 seconds.",
            "15 seconds.",
            "30 seconds.",
            "45 seconds.",
            "60 seconds."
          ],
          "description": "The minimum visible video duration required (in seconds) in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).",
          "enum": [
            "VIDEO_DURATION_UNSPECIFIED",
            "VIDEO_DURATION_SECONDS_NONE",
            "VIDEO_DURATION_SECONDS_0",
            "VIDEO_DURATION_SECONDS_1",
            "VIDEO_DURATION_SECONDS_2",
            "VIDEO_DURATION_SECONDS_3",
            "VIDEO_DURATION_SECONDS_4",
            "VIDEO_DURATION_SECONDS_5",
            "VIDEO_DURATION_SECONDS_6",
            "VIDEO_DURATION_SECONDS_7",
            "VIDEO_DURATION_SECONDS_8",
            "VIDEO_DURATION_SECONDS_9",
            "VIDEO_DURATION_SECONDS_10",
            "VIDEO_DURATION_SECONDS_11",
            "VIDEO_DURATION_SECONDS_12",
            "VIDEO_DURATION_SECONDS_13",
            "VIDEO_DURATION_SECONDS_14",
            "VIDEO_DURATION_SECONDS_15",
            "VIDEO_DURATION_SECONDS_30",
            "VIDEO_DURATION_SECONDS_45",
            "VIDEO_DURATION_SECONDS_60"
          ]
        }
      },
      "type": "object"
    },
    "ChannelAssignedTargetingOptionDetails": {
      "type": "object",
      "id": "ChannelAssignedTargetingOptionDetails",
      "description": "Details for assigned channel targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CHANNEL`.",
      "properties": {
        "negative": {
          "type": "boolean",
          "description": "Indicates if this option is being negatively targeted. For advertiser level assigned targeting option, this field must be true."
        },
        "channelId": {
          "type": "string",
          "format": "int64",
          "description": "Required. ID of the channel. Should refer to the channel ID field on a [Partner-owned channel](partners.channels#Channel.FIELDS.channel_id) or [advertiser-owned channel](advertisers.channels#Channel.FIELDS.channel_id) resource."
        }
      }
    },
    "AdvertiserDataAccessConfig": {
      "id": "AdvertiserDataAccessConfig",
      "properties": {
        "sdfConfig": {
          "description": "Structured Data Files (SDF) settings for the advertiser. If not specified, the SDF settings of the parent partner are used.",
          "$ref": "AdvertiserSdfConfig"
        }
      },
      "type": "object",
      "description": "Settings that control how advertiser related data may be accessed."
    },
    "Transcode": {
      "type": "object",
      "id": "Transcode",
      "description": "Represents information about the transcoded audio or video file.",
      "properties": {
        "transcoded": {
          "type": "boolean",
          "description": "Indicates if the transcoding was successful."
        },
        "audioBitRateKbps": {
          "format": "int64",
          "description": "The bit rate for the audio stream of the transcoded video, or the bit rate for the transcoded audio, in kilobits per second.",
          "type": "string"
        },
        "frameRate": {
          "format": "float",
          "description": "The frame rate of the transcoded video, in frames per second.",
          "type": "number"
        },
        "audioSampleRateHz": {
          "type": "string",
          "description": "The sample rate for the audio stream of the transcoded video, or the sample rate for the transcoded audio, in hertz.",
          "format": "int64"
        },
        "bitRateKbps": {
          "type": "string",
          "description": "The transcoding bit rate of the transcoded video, in kilobits per second.",
          "format": "int64"
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of the transcoded file."
        },
        "fileSizeBytes": {
          "format": "int64",
          "description": "The size of the transcoded file, in bytes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the transcoded file.",
          "type": "string"
        },
        "dimensions": {
          "$ref": "Dimensions",
          "description": "The dimensions of the transcoded video."
        }
      }
    },
    "DoubleVerifyDisplayViewability": {
      "type": "object",
      "description": "Details of DoubleVerify display viewability settings.",
      "properties": {
        "iab": {
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any IAB viewed rate options.",
            "Target web and app inventory to maximize IAB viewable rate 80% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 75% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 70% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 65% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 60% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 55% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 50% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 40% or higher.",
            "Target web and app inventory to maximize IAB viewable rate 30% or higher."
          ],
          "description": "Target web and app inventory to maximize IAB viewable rate.",
          "enum": [
            "IAB_VIEWED_RATE_UNSPECIFIED",
            "IAB_VIEWED_RATE_80_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_75_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_70_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_65_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_60_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_55_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_50_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_40_PERCENT_HIGHER",
            "IAB_VIEWED_RATE_30_PERCENT_HIGHER"
          ],
          "type": "string"
        },
        "viewableDuring": {
          "enum": [
            "AVERAGE_VIEW_DURATION_UNSPECIFIED",
            "AVERAGE_VIEW_DURATION_5_SEC",
            "AVERAGE_VIEW_DURATION_10_SEC",
            "AVERAGE_VIEW_DURATION_15_SEC"
          ],
          "description": "Target web and app inventory to maximize 100% viewable duration.",
          "type": "string",
          "enumDescriptions": [
            "This enum is only a placeholder and it doesn't specify any average view duration options.",
            "Target web and app inventory to maximize 100% viewable duration 5 seconds or more.",
            "Target web and app inventory to maximize 100% viewable duration 10 seconds or more.",
            "Target web and app inventory to maximize 100% viewable duration 15 seconds or more."
          ]
        }
      },
      "id": "DoubleVerifyDisplayViewability"
    },
    "FloodlightGroup": {
      "type": "object",
      "properties": {
        "activeViewConfig": {
          "description": "The Active View video viewability metric configuration for the Floodlight group.",
          "$ref": "ActiveViewVideoViewabilityMetricConfig"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the Floodlight group."
        },
        "floodlightGroupId": {
          "description": "Output only. The unique ID of the Floodlight group. Assigned by the system.",
          "type": "string",
          "format": "int64"
        },
        "customVariables": {
          "type": "object",
          "description": "User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to create reporting data that is tailored to your unique business needs. Custom Floodlight variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass to them. You can use them to track virtually any type of data that you collect about your customers, such as the genre of movie that a customer purchases, the country to which the item is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could be used or recognized as personally identifiable information (PII). Example: `custom_variables { fields { \"U1\": value { number_value: 123.4 }, \"U2\": value { string_value: \"MyVariable2\" }, \"U3\": value { string_value: \"MyVariable3\" } } }` Acceptable values for keys are \"U1\" through \"U100\", inclusive. String values must be less than 64 characters long, and cannot contain the following characters: `\"\u003c\u003e`.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "lookbackWindow": {
          "description": "Required. The lookback window for the Floodlight group. Both click_days and impression_days are required. Acceptable values for both are `0` to `90`, inclusive.",
          "$ref": "LookbackWindow"
        },
        "displayName": {
          "description": "Required. The display name of the Floodlight group.",
          "type": "string"
        },
        "webTagType": {
          "type": "string",
          "enum": [
            "WEB_TAG_TYPE_UNSPECIFIED",
            "WEB_TAG_TYPE_NONE",
            "WEB_TAG_TYPE_IMAGE",
            "WEB_TAG_TYPE_DYNAMIC"
          ],
          "description": "Required. The web tag type enabled for the Floodlight group.",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "No tag type.",
            "Image tag.",
            "Dynamic tag."
          ]
        }
      },
      "description": "A single Floodlight group.",
      "id": "FloodlightGroup"
    },
    "CombinedAudienceGroup": {
      "description": "Details of combined audience group. All combined audience targeting settings are logically ‘OR’ of each other.",
      "id": "CombinedAudienceGroup",
      "properties": {
        "settings": {
          "items": {
            "$ref": "CombinedAudienceTargetingSetting"
          },
          "description": "Required. All combined audience targeting settings in combined audience group. Repeated settings with same id will be ignored. The number of combined audience settings should be no more than five, error will be thrown otherwise.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListLocationListsResponse": {
      "properties": {
        "locationLists": {
          "type": "array",
          "description": "The list of location lists. This list will be absent if empty.",
          "items": {
            "$ref": "LocationList"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLocationLists` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListLocationListsResponse"
    },
    "InventorySourceFilter": {
      "description": "A filtering option for filtering on Inventory Source entities.",
      "type": "object",
      "properties": {
        "inventorySourceIds": {
          "type": "array",
          "description": "Inventory Sources to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Leave empty to download all Inventory Sources for the selected Advertiser or Partner.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "id": "InventorySourceFilter"
    },
    "ObaIcon": {
      "description": "OBA Icon for a Creative",
      "properties": {
        "resourceMimeType": {
          "type": "string",
          "description": "The MIME type of the OBA icon resource."
        },
        "clickTrackingUrl": {
          "type": "string",
          "description": "Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
        },
        "viewTrackingUrl": {
          "type": "string",
          "description": "Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
        },
        "position": {
          "enum": [
            "OBA_ICON_POSITION_UNSPECIFIED",
            "OBA_ICON_POSITION_UPPER_RIGHT",
            "OBA_ICON_POSITION_UPPER_LEFT",
            "OBA_ICON_POSITION_LOWER_RIGHT",
            "OBA_ICON_POSITION_LOWER_LEFT"
          ],
          "description": "The position of the OBA icon on the creative.",
          "enumDescriptions": [
            "The OBA icon position is not specified.",
            "At the upper right side of the creative.",
            "At the upper left side of the creative.",
            "At the lower right side of the creative.",
            "At the lower left side of the creative."
          ],
          "type": "string"
        },
        "program": {
          "description": "The program of the OBA icon. For example: “AdChoices”.",
          "type": "string"
        },
        "landingPageUrl": {
          "description": "Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com",
          "type": "string"
        },
        "dimensions": {
          "$ref": "Dimensions",
          "description": "The dimensions of the OBA icon."
        },
        "resourceUrl": {
          "description": "The URL of the OBA icon resource.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ObaIcon"
    },
    "Campaign": {
      "properties": {
        "advertiserId": {
          "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
          "format": "int64",
          "type": "string"
        },
        "campaignFlight": {
          "description": "Required. The planned spend and duration of the campaign.",
          "$ref": "CampaignFlight"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes."
        },
        "name": {
          "description": "Output only. The resource name of the campaign.",
          "type": "string"
        },
        "campaignId": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The unique ID of the campaign. Assigned by the system."
        },
        "frequencyCap": {
          "description": "Required. The frequency cap setting of the campaign.",
          "$ref": "FrequencyCap"
        },
        "campaignGoal": {
          "$ref": "CampaignGoal",
          "description": "Required. The goal of the campaign."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the campaign was last updated. Assigned by the system.",
          "type": "string",
          "format": "google-datetime"
        },
        "entityStatus": {
          "enum": [
            "ENTITY_STATUS_UNSPECIFIED",
            "ENTITY_STATUS_ACTIVE",
            "ENTITY_STATUS_ARCHIVED",
            "ENTITY_STATUS_DRAFT",
            "ENTITY_STATUS_PAUSED",
            "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value when status is not specified or is unknown in this version.",
            "The entity is enabled to bid and spend budget.",
            "The entity is archived. Bidding and budget spending are disabled. An entity can be deleted after archived. Deleted entities cannot be retrieved.",
            "The entity is under draft. Bidding and budget spending are disabled.",
            "Bidding and budget spending are paused for the entity.",
            "The entity is scheduled for deletion."
          ],
          "description": "Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed."
        }
      },
      "description": "A single campaign.",
      "id": "Campaign",
      "type": "object"
    },
    "CategoryTargetingOptionDetails": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of the category."
        }
      },
      "type": "object",
      "id": "CategoryTargetingOptionDetails",
      "description": "Represents a targetable category. This will be populated in the category_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CATEGORY`."
    },
    "DeleteAssignedTargetingOptionsRequest": {
      "id": "DeleteAssignedTargetingOptionsRequest",
      "type": "object",
      "description": "A request listing which assigned targeting options of a given targeting type should be deleted.",
      "properties": {
        "targetingType": {
          "description": "Required. Identifies the type of this assigned targeting option.",
          "enumDescriptions": [
            "Default value when type is not specified or is unknown in this version.",
            "Target a channel (a custom group of related websites or apps).",
            "Target an app category (for example, education or puzzle games).",
            "Target a specific app (for example, Angry Birds).",
            "Target a specific url (for example, quora.com).",
            "Target ads during a chosen time period on a specific day.",
            "Target ads to a specific age range (for example, 18-24).",
            "Target ads to the specified regions on a regional location list.",
            "Target ads to the specified points of interest on a proximity location list.",
            "Target ads to a specific gender (for example, female or male).",
            "Target a specific video player size for video ads.",
            "Target user rewarded content for video ads.",
            "Target ads to a specific parental status (for example, parent or not a parent).",
            "Target video or audio ads in a specific content instream position (for example, pre-roll, mid-roll, or post-roll).",
            "Target ads in a specific content outstream position.",
            "Target ads to a specific device type (for example, tablet or connected TV).",
            "Target ads to an audience or groups of audiences. Singleton field, at most one can exist on a single Lineitem at a time.",
            "Target ads to specific web browsers (for example, Chrome).",
            "Target ads to a specific household income range (for example, top 10%).",
            "Target ads in a specific on screen position.",
            "Filter web sites through third party verification (for example, IAS or DoubleVerify).",
            "Filter web sites by specific digital content label ratings (for example, DL-MA: suitable only for mature audiences).",
            "Filter website content by sensitive categories (for example, adult).",
            "Target ads to a specific environment (for example, web or app).",
            "Target ads to a specific network carrier or internet service provider (ISP) (for example, Comcast or Orange).",
            "Target ads to a specific operating system (for example, macOS).",
            "Target ads to a specific device make or model (for example, Roku or Samsung).",
            "Target ads to a specific keyword (for example, dog or retriever).",
            "Target ads to a specific negative keyword list.",
            "Target ads to a specific viewability (for example, 80% viewable).",
            "Target ads to a specific content category (for example, arts & entertainment).",
            "Purchase impressions from specific deals and auction packages.",
            "Target ads to a specific language (for example, English or Japanese).",
            "Target ads to ads.txt authorized sellers.",
            "Target ads to a specific regional location (for example, a city or state).",
            "Purchase impressions from a group of deals and auction packages.",
            "Purchase impressions from specific exchanges.",
            "Purchase impressions from specific sub-exchanges."
          ],
          "type": "string",
          "enum": [
            "TARGETING_TYPE_UNSPECIFIED",
            "TARGETING_TYPE_CHANNEL",
            "TARGETING_TYPE_APP_CATEGORY",
            "TARGETING_TYPE_APP",
            "TARGETING_TYPE_URL",
            "TARGETING_TYPE_DAY_AND_TIME",
            "TARGETING_TYPE_AGE_RANGE",
            "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
            "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
            "TARGETING_TYPE_GENDER",
            "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
            "TARGETING_TYPE_USER_REWARDED_CONTENT",
            "TARGETING_TYPE_PARENTAL_STATUS",
            "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
            "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
            "TARGETING_TYPE_DEVICE_TYPE",
            "TARGETING_TYPE_AUDIENCE_GROUP",
            "TARGETING_TYPE_BROWSER",
            "TARGETING_TYPE_HOUSEHOLD_INCOME",
            "TARGETING_TYPE_ON_SCREEN_POSITION",
            "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
            "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
            "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
            "TARGETING_TYPE_ENVIRONMENT",
            "TARGETING_TYPE_CARRIER_AND_ISP",
            "TARGETING_TYPE_OPERATING_SYSTEM",
            "TARGETING_TYPE_DEVICE_MAKE_MODEL",
            "TARGETING_TYPE_KEYWORD",
            "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
            "TARGETING_TYPE_VIEWABILITY",
            "TARGETING_TYPE_CATEGORY",
            "TARGETING_TYPE_INVENTORY_SOURCE",
            "TARGETING_TYPE_LANGUAGE",
            "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
            "TARGETING_TYPE_GEO_REGION",
            "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
            "TARGETING_TYPE_EXCHANGE",
            "TARGETING_TYPE_SUB_EXCHANGE"
          ]
        },
        "assignedTargetingOptionIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. The assigned targeting option IDs to delete.",
          "type": "array"
        }
      }
    },
    "PublisherReviewStatus": {
      "properties": {
        "publisherName": {
          "type": "string",
          "description": "The publisher reviewing the creative."
        },
        "status": {
          "description": "Status of the publisher review.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "REVIEW_STATUS_APPROVED",
            "REVIEW_STATUS_REJECTED",
            "REVIEW_STATUS_PENDING"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type value is not specified or is unknown in this version.",
            "The creative is approved.",
            "The creative is rejected.",
            "The creative is pending review."
          ]
        }
      },
      "id": "PublisherReviewStatus",
      "type": "object",
      "description": "Publisher review status for the creative."
    },
    "ThirdPartyVerifierAssignedTargetingOptionDetails": {
      "type": "object",
      "properties": {
        "adloox": {
          "description": "Third party brand verifier -- Adloox.",
          "$ref": "Adloox"
        },
        "doubleVerify": {
          "$ref": "DoubleVerify",
          "description": "Third party brand verifier -- DoubleVerify."
        },
        "integralAdScience": {
          "$ref": "IntegralAdScience",
          "description": "Third party brand verifier -- Integral Ad Science."
        }
      },
      "id": "ThirdPartyVerifierAssignedTargetingOptionDetails",
      "description": "Assigned third party verifier targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`."
    },
    "RateDetails": {
      "description": "The rate related settings of the inventory source.",
      "id": "RateDetails",
      "properties": {
        "unitsPurchased": {
          "format": "int64",
          "description": "Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.",
          "type": "string"
        },
        "rate": {
          "description": "The rate for the inventory source.",
          "$ref": "Money"
        },
        "inventorySourceRateType": {
          "enum": [
            "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED",
            "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED",
            "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR",
            "INVENTORY_SOURCE_RATE_TYPE_CPD",
            "INVENTORY_SOURCE_RATE_TYPE_FLAT"
          ],
          "type": "string",
          "description": "The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.",
          "enumDescriptions": [
            "The rate type is not specified or is unknown in this version.",
            "The rate type is CPM (Fixed).",
            "The rate type is CPM (Floor).",
            "The rate type is Cost per Day.",
            "The rate type is Flat."
          ]
        },
        "minimumSpend": {
          "description": "Output only. The amount that the buyer has committed to spending on the inventory source up front. Only applicable for guaranteed inventory sources.",
          "$ref": "Money"
        }
      },
      "type": "object"
    },
    "OnScreenPositionTargetingOptionDetails": {
      "id": "OnScreenPositionTargetingOptionDetails",
      "properties": {
        "onScreenPosition": {
          "enumDescriptions": [
            "On screen position is not specified in this version. This enum is a place holder for a default value and does not represent a real on screen position.",
            "The ad position is unknown on the screen.",
            "The ad is located above the fold.",
            "The ad is located below the fold."
          ],
          "description": "Output only. The on screen position.",
          "type": "string",
          "enum": [
            "ON_SCREEN_POSITION_UNSPECIFIED",
            "ON_SCREEN_POSITION_UNKNOWN",
            "ON_SCREEN_POSITION_ABOVE_THE_FOLD",
            "ON_SCREEN_POSITION_BELOW_THE_FOLD"
          ]
        }
      },
      "description": "Represents a targetable on screen position, which could be used by display and video ads. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.",
      "type": "object"
    },
    "BulkEditSitesRequest": {
      "properties": {
        "deletedSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The sites to delete in batch, specified as a list of site url_or_app_ids."
        },
        "createdSites": {
          "items": {
            "$ref": "Site"
          },
          "description": "The sites to create in batch, specified as a list of Sites.",
          "type": "array"
        },
        "partnerId": {
          "description": "The ID of the partner that owns the parent channel.",
          "type": "string",
          "format": "int64"
        },
        "advertiserId": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the advertiser that owns the parent channel."
        }
      },
      "description": "Request message for SiteService.BulkEditSites.",
      "type": "object",
      "id": "BulkEditSitesRequest"
    },
    "ListLineItemsResponse": {
      "properties": {
        "lineItems": {
          "items": {
            "$ref": "LineItem"
          },
          "description": "The list of line items. This list will be absent if empty.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLineItems` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "ListLineItemsResponse",
      "type": "object"
    },
    "BulkEditAssignedLocationsResponse": {
      "id": "BulkEditAssignedLocationsResponse",
      "description": "Response message for AssignedLocationService.BulkEditAssignedLocations.",
      "type": "object",
      "properties": {
        "assignedLocations": {
          "description": "The list of assigned locations that have been successfully created. This list will be absent if empty.",
          "type": "array",
          "items": {
            "$ref": "AssignedLocation"
          }
        }
      }
    },
    "InventorySourceVideoCreativeConfig": {
      "description": "The configuration for video creatives.",
      "id": "InventorySourceVideoCreativeConfig",
      "type": "object",
      "properties": {
        "duration": {
          "format": "google-duration",
          "description": "The duration requirements for the video creatives that can be assigned to the inventory source.",
          "type": "string"
        }
      }
    },
    "CreateAssetRequest": {
      "description": "A request message for CreateAsset.",
      "properties": {
        "filename": {
          "description": "Required. The filename of the asset, including the file extension. The filename must be UTF-8 encoded with a maximum size of 240 bytes.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CreateAssetRequest"
    }
  },
  "id": "displayvideo:v1",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "version_module": true,
  "version": "v1",
  "canonicalName": "Display Video",
  "documentationLink": "https://developers.google.com/display-video/",
  "protocol": "rest",
  "description": "Display & Video 360 API allows users to manage and create campaigns and reports.",
  "basePath": "",
  "mtlsRootUrl": "https://displayvideo.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true
}
