{
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "TaskLists": {
      "id": "TaskLists",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "items": {
          "items": {
            "$ref": "TaskList"
          },
          "type": "array",
          "description": "Collection of task lists."
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#taskLists\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token that can be used to request the next page of this result."
        }
      },
      "type": "object"
    },
    "TaskList": {
      "id": "TaskList",
      "type": "object",
      "properties": {
        "updated": {
          "description": "Last modification time of the task list (as a RFC 3339 timestamp).",
          "type": "string"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#taskList\".",
          "type": "string"
        },
        "selfLink": {
          "description": "URL pointing to this task list. Used to retrieve, update, or delete this task list.",
          "type": "string"
        },
        "id": {
          "description": "Task list identifier.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of the task list."
        }
      }
    },
    "Tasks": {
      "properties": {
        "items": {
          "description": "Collection of tasks.",
          "type": "array",
          "items": {
            "$ref": "Task"
          }
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token used to access the next page of this result."
        },
        "kind": {
          "type": "string",
          "description": "Type of the resource. This is always \"tasks#tasks\"."
        }
      },
      "id": "Tasks",
      "type": "object"
    },
    "Task": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the \"move\" method to move the task under a different parent or to the top level."
        },
        "notes": {
          "description": "Notes describing the task. Optional.",
          "type": "string"
        },
        "status": {
          "description": "Status of the task. This is either \"needsAction\" or \"completed\".",
          "type": "string"
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#task\".",
          "type": "string"
        },
        "position": {
          "description": "String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the \"move\" method to move the task to another position.",
          "type": "string"
        },
        "links": {
          "description": "Collection of links. This collection is read-only.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "description": "The URL."
              },
              "type": {
                "description": "Type of the link, e.g. \"email\".",
                "type": "string"
              },
              "description": {
                "type": "string",
                "description": "The description. In HTML speak: Everything between \u003ca\u003e and \u003c/a\u003e."
              }
            }
          }
        },
        "completed": {
          "description": "Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the task (as a RFC 3339 timestamp)."
        },
        "due": {
          "type": "string",
          "description": "Due date of the task (as a RFC 3339 timestamp). Optional. The due date only records date information; the time portion of the timestamp is discarded when setting the due date. It isn't possible to read or write the time that a task is due via the API."
        },
        "title": {
          "description": "Title of the task.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Flag indicating whether the task has been deleted. The default is False."
        },
        "hidden": {
          "description": "Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.",
          "type": "boolean"
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "selfLink": {
          "description": "URL pointing to this task. Used to retrieve, update, or delete this task.",
          "type": "string"
        },
        "id": {
          "description": "Task identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Task"
    }
  },
  "baseUrl": "https://www.googleapis.com/",
  "title": "Tasks API",
  "documentationLink": "",
  "description": "The Google Tasks API lets you manage your tasks and task lists.",
  "id": "tasks:v1",
  "servicePath": "",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tasks": {
          "description": "Create, edit, organize, and delete all your tasks"
        },
        "https://www.googleapis.com/auth/tasks.readonly": {
          "description": "View your tasks"
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "version": "v1",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "revision": "20200811",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch/tasks/v1",
  "basePath": "",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "name": "tasks",
  "canonicalName": "Tasks",
  "rootUrl": "https://www.googleapis.com/",
  "kind": "discovery#restDescription",
  "resources": {
    "tasklists": {
      "methods": {
        "insert": {
          "id": "tasks.tasklists.insert",
          "flatPath": "tasks/v1/users/@me/lists",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "description": "Creates a new task list and adds it to the authenticated user's task lists.",
          "path": "tasks/v1/users/@me/lists",
          "response": {
            "$ref": "TaskList"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "parameters": {},
          "request": {
            "$ref": "TaskList"
          }
        },
        "update": {
          "response": {
            "$ref": "TaskList"
          },
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "description": "Updates the authenticated user's specified task list.",
          "request": {
            "$ref": "TaskList"
          },
          "httpMethod": "PUT",
          "id": "tasks.tasklists.update",
          "parameterOrder": [
            "tasklist"
          ],
          "path": "tasks/v1/users/@me/lists/{tasklist}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "httpMethod": "DELETE",
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Deletes the authenticated user's specified task list.",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "parameterOrder": [
            "tasklist"
          ],
          "id": "tasks.tasklists.delete"
        },
        "get": {
          "description": "Returns the authenticated user's specified task list.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "id": "tasks.tasklists.get",
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "response": {
            "$ref": "TaskList"
          },
          "parameterOrder": [
            "tasklist"
          ],
          "httpMethod": "GET",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "location": "path",
              "description": "Task list identifier.",
              "required": true,
              "type": "string"
            }
          }
        },
        "list": {
          "description": "Returns all the authenticated user's task lists.",
          "flatPath": "tasks/v1/users/@me/lists",
          "httpMethod": "GET",
          "id": "tasks.tasklists.list",
          "parameters": {
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Maximum number of task lists returned on one page. Optional. The default is 20 (max allowed: 100)."
            },
            "pageToken": {
              "description": "Token specifying the result page to return. Optional.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "path": "tasks/v1/users/@me/lists",
          "response": {
            "$ref": "TaskLists"
          },
          "parameterOrder": []
        },
        "patch": {
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "description": "Updates the authenticated user's specified task list. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "request": {
            "$ref": "TaskList"
          },
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "required": true,
              "location": "path",
              "description": "Task list identifier.",
              "type": "string"
            }
          },
          "httpMethod": "PATCH",
          "id": "tasks.tasklists.patch",
          "parameterOrder": [
            "tasklist"
          ],
          "response": {
            "$ref": "TaskList"
          }
        }
      }
    },
    "tasks": {
      "methods": {
        "move": {
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "parameters": {
            "previous": {
              "description": "New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.",
              "type": "string",
              "location": "query"
            },
            "task": {
              "required": true,
              "description": "Task identifier.",
              "type": "string",
              "location": "path"
            },
            "tasklist": {
              "required": true,
              "location": "path",
              "description": "Task list identifier.",
              "type": "string"
            },
            "parent": {
              "location": "query",
              "type": "string",
              "description": "New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "response": {
            "$ref": "Task"
          },
          "id": "tasks.tasks.move",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "description": "Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.",
          "httpMethod": "POST"
        },
        "get": {
          "httpMethod": "GET",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "description": "Returns the specified task.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "response": {
            "$ref": "Task"
          },
          "parameters": {
            "tasklist": {
              "location": "path",
              "type": "string",
              "description": "Task list identifier.",
              "required": true
            },
            "task": {
              "type": "string",
              "location": "path",
              "description": "Task identifier.",
              "required": true
            }
          },
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "id": "tasks.tasks.get",
          "parameterOrder": [
            "tasklist",
            "task"
          ]
        },
        "update": {
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "description": "Updates the specified task.",
          "request": {
            "$ref": "Task"
          },
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "tasklist": {
              "location": "path",
              "required": true,
              "description": "Task list identifier.",
              "type": "string"
            },
            "task": {
              "description": "Task identifier.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Task"
          },
          "id": "tasks.tasks.update",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}"
        },
        "insert": {
          "parameters": {
            "previous": {
              "description": "Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.",
              "location": "query",
              "type": "string"
            },
            "tasklist": {
              "type": "string",
              "description": "Task list identifier.",
              "location": "path",
              "required": true
            },
            "parent": {
              "type": "string",
              "description": "Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "tasklist"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Task"
          },
          "request": {
            "$ref": "Task"
          },
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "id": "tasks.tasks.insert",
          "description": "Creates a new task on the specified task list.",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks"
        },
        "clear": {
          "flatPath": "tasks/v1/lists/{tasklist}/clear",
          "id": "tasks.tasks.clear",
          "parameterOrder": [
            "tasklist"
          ],
          "httpMethod": "POST",
          "path": "tasks/v1/lists/{tasklist}/clear",
          "parameters": {
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "type": "string",
              "location": "path"
            }
          },
          "description": "Clears all completed tasks from the specified task list. The affected tasks will be marked as 'hidden' and no longer be returned by default when retrieving all tasks for a task list.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ]
        },
        "patch": {
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "response": {
            "$ref": "Task"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "task": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Task identifier."
            },
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "tasks.tasks.patch",
          "httpMethod": "PATCH",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "description": "Updates the specified task. This method supports patch semantics.",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "request": {
            "$ref": "Task"
          }
        },
        "delete": {
          "id": "tasks.tasks.delete",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "description": "Deletes the specified task from the task list.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "httpMethod": "DELETE",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameters": {
            "task": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Task identifier."
            },
            "tasklist": {
              "description": "Task list identifier.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}"
        },
        "list": {
          "flatPath": "tasks/v1/lists/{tasklist}/tasks",
          "parameters": {
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "type": "string",
              "location": "path"
            },
            "showCompleted": {
              "type": "boolean",
              "description": "Flag indicating whether completed tasks are returned in the result. Optional. The default is True.",
              "location": "query"
            },
            "updatedMin": {
              "description": "Lower bound for a task's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "description": "Token specifying the result page to return. Optional.",
              "location": "query",
              "type": "string"
            },
            "completedMax": {
              "location": "query",
              "description": "Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.",
              "type": "string"
            },
            "dueMin": {
              "location": "query",
              "description": "Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.",
              "type": "string"
            },
            "showDeleted": {
              "description": "Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.",
              "type": "boolean",
              "location": "query"
            },
            "completedMin": {
              "location": "query",
              "type": "string",
              "description": "Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date."
            },
            "showHidden": {
              "location": "query",
              "type": "boolean",
              "description": "Flag indicating whether hidden tasks are returned in the result. Optional. The default is False."
            },
            "dueMax": {
              "location": "query",
              "type": "string",
              "description": "Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date."
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of task lists returned on one page. Optional. The default is 20 (max allowed: 100).",
              "location": "query",
              "type": "integer"
            }
          },
          "description": "Returns all tasks in the specified task list.",
          "parameterOrder": [
            "tasklist"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "id": "tasks.tasks.list",
          "response": {
            "$ref": "Tasks"
          },
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "httpMethod": "GET"
        }
      }
    }
  }
}
