{
  "name": "datacatalog",
  "basePath": "",
  "batchPath": "batch",
  "rootUrl": "https://datacatalog.googleapis.com/",
  "baseUrl": "https://datacatalog.googleapis.com/",
  "ownerDomain": "google.com",
  "description": "A fully managed and highly scalable data discovery and metadata management service.\n",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version_module": true,
  "id": "datacatalog:v1beta1",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "tagTemplates": {
              "resources": {
                "fields": {
                  "resources": {
                    "enumValues": {
                      "methods": {
                        "rename": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}/enumValues/{enumValuesId}:rename",
                          "request": {
                            "$ref": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest"
                          },
                          "id": "datacatalog.projects.locations.tagTemplates.fields.enumValues.rename",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. The name of the enum field value. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}",
                              "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+/enumValues/[^/]+$",
                              "location": "path",
                              "required": true
                            }
                          },
                          "description": "Renames an enum value in a tag template. The enum values have to be unique\nwithin one enum field. Thus, an enum value cannot be renamed with a name\nused in any other enum value within the same enum field.",
                          "response": {
                            "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                          },
                          "httpMethod": "POST",
                          "path": "v1beta1/{+name}:rename",
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "patch": {
                      "description": "Updates a field in a tag template. This method cannot be used to update the\nfield type. Users should enable the Data Catalog API in the project\nidentified by the `name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                      },
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                      },
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "id": "datacatalog.projects.locations.tagTemplates.fields.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Optional. The field mask specifies the parts of the template to be updated.\nAllowed fields:\n\n  * `display_name`\n  * `type.enum_type`\n  * `is_required`\n\nIf `update_mask` is not set or empty, all of the allowed fields above will\nbe updated.\n\nWhen updating an enum type, the provided values will be merged with the\nexisting values. Therefore, enum values can only be added, existing enum\nvalues cannot be deleted nor renamed. Updating a template field from\noptional to required is NOT allowed."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the tag template field. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}"
                        }
                      }
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields",
                      "path": "v1beta1/{+parent}/fields",
                      "id": "datacatalog.projects.locations.tagTemplates.fields.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a field in a tag template. The user should enable the Data Catalog\nAPI in the project identified by the `parent` parameter (see\n[Data Catalog Resource\nProject](https://cloud.google.com/data-catalog/docs/concepts/resource-project)\nfor more information).",
                      "parameters": {
                        "tagTemplateFieldId": {
                          "description": "Required. The ID of the tag template field to create.\nField ids can contain letters (both uppercase and lowercase), numbers\n(0-9), underscores (_) and dashes (-). Field IDs must be at least 1\ncharacter long and at most 128 characters long. Field IDs must also be\nunique within their template.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the project and the template location\n[region](https://cloud.google.com/data-catalog/docs/concepts/regions).\n\nExample:\n\n* projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the tag template field to delete. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$"
                        },
                        "force": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Required. Currently, this field must always be set to `true`.\nThis confirms the deletion of this field from any tags using this field.\n`force = false` will be supported in the future."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}",
                      "id": "datacatalog.projects.locations.tagTemplates.fields.delete",
                      "httpMethod": "DELETE",
                      "path": "v1beta1/{+name}",
                      "description": "Deletes a field in a tag template and all uses of that field.\nUsers should enable the Data Catalog API in the project identified by\nthe `name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "rename": {
                      "id": "datacatalog.projects.locations.tagTemplates.fields.rename",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
                      },
                      "description": "Renames a field in a tag template. The user should enable the Data Catalog\nAPI in the project identified by the `name` parameter (see [Data Catalog\nResource\nProject](https://cloud.google.com/data-catalog/docs/concepts/resource-project)\nfor more information).",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}:rename",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the tag template. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$"
                        }
                      },
                      "path": "v1beta1/{+name}:rename"
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "parameters": {
                    "tagTemplateId": {
                      "location": "query",
                      "description": "Required. The id of the tag template to create.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The name of the project and the template location\n[region](https://cloud.google.com/data-catalog/docs/concepts/regions.\n\nExample:\n\n* projects/{project_id}/locations/us-central1"
                    }
                  },
                  "id": "datacatalog.projects.locations.tagTemplates.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/tagTemplates",
                  "description": "Creates a tag template. The user should enable the Data Catalog API in\nthe project identified by the `parent` parameter (see [Data Catalog\nResource\nProject](https://cloud.google.com/data-catalog/docs/concepts/resource-project)\nfor more information).",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates",
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate"
                  },
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "id": "datacatalog.projects.locations.tagTemplates.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns the caller's permissions on a resource.\nIf the resource does not exist, an empty set of permissions is returned\n(We don't return a `NOT_FOUND` error).\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nA caller is not required to have Google IAM permission to make this\nrequest."
                },
                "get": {
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the tag template. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}",
                  "id": "datacatalog.projects.locations.tagTemplates.get",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate"
                  },
                  "description": "Gets a tag template.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a tag template and all tags using the template.\nUsers should enable the Data Catalog API in the project identified by\nthe `name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datacatalog.projects.locations.tagTemplates.delete",
                  "path": "v1beta1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the tag template to delete. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Required. Currently, this field must always be set to `true`.\nThis confirms the deletion of any possible tags using this template.\n`force = false` will be supported in the future."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:getIamPolicy",
                  "id": "datacatalog.projects.locations.tagTemplates.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. A `NOT_FOUND` error\nis returned if the resource does not exist. An empty policy is returned\nif the resource exists but does not have a policy set on it.\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nCallers must have following Google IAM permission\n  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag\n    templates.\n  - `datacatalog.entries.getIamPolicy` to get policies on entries.\n  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "path": "v1beta1/{+resource}:getIamPolicy"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$"
                    }
                  },
                  "id": "datacatalog.projects.locations.tagTemplates.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy for a resource. Replaces any existing\npolicy.\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nCallers must have following Google IAM permission\n  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag\n    templates.\n  - `datacatalog.entries.setIamPolicy` to set policies on entries.\n  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "patch": {
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}",
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1TagTemplate"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datacatalog.projects.locations.tagTemplates.patch",
                  "httpMethod": "PATCH",
                  "description": "Updates a tag template. This method cannot be used to update the fields of\na template. The tag template fields are represented as separate resources\nand should be updated using their own create/update/delete methods.\nUsers should enable the Data Catalog API in the project identified by\nthe `tag_template.name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The field mask specifies the parts of the template to overwrite.\n\nAllowed fields:\n\n  * `display_name`\n\nIf absent or empty, all of the allowed fields above will be updated.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$",
                      "description": "The resource name of the tag template in URL format. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}\n\nNote that this TagTemplate and its child resources may not actually be\nstored in the location in this name.",
                      "required": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "taxonomies": {
              "resources": {
                "policyTags": {
                  "methods": {
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the policy tag to be deleted. All of its descendant\npolicy tags will also be deleted.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a policy tag. Also deletes all of its descendant policy tags.",
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.delete",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                          "description": "Required. Resource name of the taxonomy that the policy tag will belong to.",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "description": "Creates a policy tag in the specified taxonomy.",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
                      },
                      "path": "v1beta1/{+parent}/policyTags",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.create",
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
                      }
                    },
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:getIamPolicy",
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "description": "Gets the IAM policy for a taxonomy or a policy tag.",
                      "path": "v1beta1/{+resource}:getIamPolicy"
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return. Must be a value between 1 and 1000.\nIf not set, defaults to 50."
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                          "description": "Required. Resource name of the taxonomy to list the policy tags of."
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous List request, if any. If\nnot set, defaults to an empty string.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Lists all policy tags in a taxonomy.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse"
                      },
                      "path": "v1beta1/{+parent}/policyTags"
                    },
                    "testIamPermissions": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "description": "Returns the permissions that a caller has on the specified taxonomy or\npolicy tag.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions"
                    },
                    "patch": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
                      },
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The update mask applies to the resource. Only display_name, description and\nparent_policy_tag can be updated and thus can be listed in the mask. If\nupdate_mask is not provided, all allowed fields (i.e. display_name,\ndescription and parent) will be updated. For more information including the\n`FieldMask` definition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\nIf not set, defaults to all of the fields that are allowed to update.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Output only. Resource name of this policy tag, whose format is:\n\"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "httpMethod": "PATCH",
                      "description": "Updates a policy tag.",
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
                      }
                    },
                    "get": {
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.get",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "type": "string",
                          "description": "Required. Resource name of the requested policy tag.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a policy tag.",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
                      },
                      "httpMethod": "GET",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}"
                    },
                    "setIamPolicy": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "description": "Sets the IAM policy for a taxonomy or a policy tag.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "datacatalog.projects.locations.taxonomies.setIamPolicy",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Sets the IAM policy for a taxonomy or a policy tag.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "description": "Updates a taxonomy.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. Resource name of this taxonomy, whose format is:\n\"projects/{project_number}/locations/{location_id}/taxonomies/{id}\"."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\nIf not set, defaults to all of the fields that are allowed to update.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
                  },
                  "id": "datacatalog.projects.locations.taxonomies.patch",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "export": {
                  "id": "datacatalog.projects.locations.taxonomies.export",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:export",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/taxonomies:export",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "serializedTaxonomies": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Export taxonomies as serialized taxonomies."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Resource name of the project that taxonomies to be exported\nwill share.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "taxonomies": {
                      "type": "string",
                      "repeated": true,
                      "location": "query",
                      "description": "Required. Resource names of the taxonomies to be exported."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Exports all taxonomies and their policy tags in a project.\n\nThis method generates SerializedTaxonomy protos with nested policy tags\nthat can be used as an input for future ImportTaxonomies calls."
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datacatalog.projects.locations.taxonomies.getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the IAM policy for a taxonomy or a policy tag.",
                  "path": "v1beta1/{+resource}:getIamPolicy"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "datacatalog.projects.locations.taxonomies.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Resource name of the taxonomy to be deleted. All policy tags in\nthis taxonomy will also be deleted."
                    }
                  },
                  "description": "Deletes a taxonomy. This operation will also delete all\npolicy tags in this taxonomy along with their associated policies.",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE"
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
                  },
                  "id": "datacatalog.projects.locations.taxonomies.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Resource name of the requested taxonomy."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET",
                  "description": "Gets a taxonomy.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}"
                },
                "import": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Imports all taxonomies and their policy tags to a project as new\ntaxonomies.\n\nThis method provides a bulk taxonomy / policy tag creation using nested\nproto structure.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Resource name of project that the imported taxonomies will belong to.",
                      "type": "string"
                    }
                  },
                  "path": "v1beta1/{+parent}/taxonomies:import",
                  "id": "datacatalog.projects.locations.taxonomies.import",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:import",
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "path": "v1beta1/{+parent}/taxonomies",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return. Must be a value between 1 and 1000.\nIf not set, defaults to 50.",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Resource name of the project to list the taxonomies of."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request, if any. If\nnot set, defaults to an empty string.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse"
                  },
                  "id": "datacatalog.projects.locations.taxonomies.list",
                  "description": "Lists all taxonomies in a project in a particular location that the caller\nhas permission to view.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Resource name of the project that the taxonomy will belong to.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies",
                  "path": "v1beta1/{+parent}/taxonomies",
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
                  },
                  "description": "Creates a taxonomy in the specified project.",
                  "id": "datacatalog.projects.locations.taxonomies.create",
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "description": "Returns the permissions that a caller has on the specified taxonomy or\npolicy tag.",
                  "id": "datacatalog.projects.locations.taxonomies.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                }
              }
            },
            "entryGroups": {
              "resources": {
                "tags": {
                  "methods": {
                    "delete": {
                      "description": "Deletes a tag.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the tag to delete. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "datacatalog.projects.locations.entryGroups.tags.delete",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags/{tagsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "id": "datacatalog.projects.locations.entryGroups.tags.create",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                          "description": "Required. The name of the resource to attach this tag to. Tags can be attached to\nEntries. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n\nNote that this Tag and its child resources may not actually be stored in\nthe location in this name.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a tag on an Entry.\nNote: The project identified by the `parent` parameter for the\n[tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)\nand the\n[tag\ntemplate](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)\nused to create the tag must be from the same organization.",
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                      },
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags",
                      "path": "v1beta1/{+parent}/tags"
                    },
                    "list": {
                      "path": "v1beta1/{+parent}/tags",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Token that specifies which page is requested. If empty, the first page is\nreturned.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "The maximum number of tags to return. Default is 10. Max limit is 1000.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "description": "Required. The name of the Data Catalog resource to list the tags of. The resource\ncould be an Entry or an\nEntryGroup.\n\nExamples:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the tags on an Entry.",
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1ListTagsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "datacatalog.projects.locations.entryGroups.tags.list"
                    },
                    "patch": {
                      "path": "v1beta1/{+name}",
                      "description": "Updates an existing tag.",
                      "httpMethod": "PATCH",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags/{tagsId}",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "The resource name of the tag in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}\n\nwhere `tag_id` is a system-generated identifier.\nNote that this Tag may not actually be stored in the location in this name.",
                          "required": true
                        },
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "The fields to update on the Tag. If absent or empty, all modifiable fields\nare updated. Currently the only modifiable field is the field `fields`.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datacatalog.projects.locations.entryGroups.tags.patch",
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "entries": {
                  "resources": {
                    "tags": {
                      "methods": {
                        "create": {
                          "id": "datacatalog.projects.locations.entryGroups.entries.tags.create",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta1/{+parent}/tags",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the resource to attach this tag to. Tags can be attached to\nEntries. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n\nNote that this Tag and its child resources may not actually be stored in\nthe location in this name.",
                              "location": "path"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                          },
                          "response": {
                            "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                          },
                          "description": "Creates a tag on an Entry.\nNote: The project identified by the `parent` parameter for the\n[tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)\nand the\n[tag\ntemplate](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)\nused to create the tag must be from the same organization.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags"
                        },
                        "patch": {
                          "response": {
                            "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                          },
                          "path": "v1beta1/{+name}",
                          "description": "Updates an existing tag.",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "datacatalog.projects.locations.entryGroups.entries.tags.patch",
                          "request": {
                            "$ref": "GoogleCloudDatacatalogV1beta1Tag"
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "description": "The resource name of the tag in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}\n\nwhere `tag_id` is a system-generated identifier.\nNote that this Tag may not actually be stored in the location in this name."
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "location": "query",
                              "description": "The fields to update on the Tag. If absent or empty, all modifiable fields\nare updated. Currently the only modifiable field is the field `fields`.",
                              "type": "string"
                            }
                          },
                          "httpMethod": "PATCH",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags/{tagsId}"
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the tag to delete. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "datacatalog.projects.locations.entryGroups.entries.tags.delete",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags/{tagsId}",
                          "response": {
                            "$ref": "Empty"
                          },
                          "description": "Deletes a tag.",
                          "httpMethod": "DELETE"
                        },
                        "list": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags",
                          "response": {
                            "$ref": "GoogleCloudDatacatalogV1beta1ListTagsResponse"
                          },
                          "id": "datacatalog.projects.locations.entryGroups.entries.tags.list",
                          "parameters": {
                            "parent": {
                              "description": "Required. The name of the Data Catalog resource to list the tags of. The resource\ncould be an Entry or an\nEntryGroup.\n\nExamples:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                              "required": true,
                              "type": "string"
                            },
                            "pageToken": {
                              "description": "Token that specifies which page is requested. If empty, the first page is\nreturned.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of tags to return. Default is 10. Max limit is 1000.",
                              "type": "integer",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1beta1/{+parent}/tags",
                          "httpMethod": "GET",
                          "description": "Lists the tags on an Entry.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists entries.",
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries",
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1ListEntriesResponse"
                      },
                      "path": "v1beta1/{+parent}/entries",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "readMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "The fields to return for each Entry. If not set or empty, all\nfields are returned.\nFor example, setting read_mask to contain only one path \"name\" will cause\nListEntries to return a list of Entries with only \"name\" field.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The name of the entry group that contains the entries, which can\nbe provided in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Token that specifies which page is requested. If empty, the first page is\nreturned.",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return. Default is 10. Max limit is 1000.\nThrows an invalid argument for `page_size \u003e 1000`."
                        }
                      },
                      "id": "datacatalog.projects.locations.entryGroups.entries.list"
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}",
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "description": "Updates an existing entry.\nUsers should enable the Data Catalog API in the project identified by\nthe `entry.name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "description": "The fields to update on the entry. If absent or empty, all modifiable\nfields are updated.\n\nThe following fields are modifiable:\n* For entries with type `DATA_STREAM`:\n   * `schema`\n* For entries with type `FILESET`\n   * `schema`\n   * `display_name`\n   * `description`\n   * `gcs_fileset_spec`\n   * `gcs_fileset_spec.file_patterns`\n* For entries with `user_specified_type`\n   * `schema`\n   * `display_name`\n   * `description`\n   * user_specified_type\n   * user_specified_system\n   * linked_resource\n   * source_system_timestamps",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                          "required": true,
                          "description": "The Data Catalog resource name of the entry in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n\nNote that this Entry and its child resources may not actually be stored in\nthe location in this name.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "datacatalog.projects.locations.entryGroups.entries.patch"
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns the caller's permissions on a resource.\nIf the resource does not exist, an empty set of permissions is returned\n(We don't return a `NOT_FOUND` error).\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nA caller is not required to have Google IAM permission to make this\nrequest.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "id": "datacatalog.projects.locations.entryGroups.entries.testIamPermissions",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "path": "v1beta1/{+resource}:testIamPermissions"
                    },
                    "get": {
                      "description": "Gets an entry.",
                      "id": "datacatalog.projects.locations.entryGroups.entries.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the entry. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}"
                    },
                    "create": {
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "description": "Creates an entry. Only entries of 'FILESET' type or user-specified type can\nbe created.\n\nUsers should enable the Data Catalog API in the project identified by\nthe `parent` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).\n\nA maximum of 100,000 entries may be created per entry group.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries",
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "path": "v1beta1/{+parent}/entries",
                      "httpMethod": "POST",
                      "id": "datacatalog.projects.locations.entryGroups.entries.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The name of the entry group this entry is in. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n\nNote that this Entry and its child resources may not actually be stored in\nthe location in this name.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                          "required": true
                        },
                        "entryId": {
                          "description": "Required. The id of the entry to create.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}",
                      "description": "Deletes an existing entry. Only entries created through\nCreateEntry\nmethod can be deleted.\nUsers should enable the Data Catalog API in the project identified by\nthe `name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                          "description": "Required. The name of the entry. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}"
                        }
                      },
                      "httpMethod": "DELETE",
                      "id": "datacatalog.projects.locations.entryGroups.entries.delete"
                    },
                    "getIamPolicy": {
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "description": "Gets the access control policy for a resource. A `NOT_FOUND` error\nis returned if the resource does not exist. An empty policy is returned\nif the resource exists but does not have a policy set on it.\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nCallers must have following Google IAM permission\n  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag\n    templates.\n  - `datacatalog.entries.getIamPolicy` to get policies on entries.\n  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.",
                      "httpMethod": "POST",
                      "id": "datacatalog.projects.locations.entryGroups.entries.getIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:getIamPolicy"
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "description": "A maximum of 10,000 entry groups may be created per organization across all\nlocations.\n\nUsers should enable the Data Catalog API in the project identified by\nthe `parent` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                  "id": "datacatalog.projects.locations.entryGroups.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the project this entry group is in. Example:\n\n* projects/{project_id}/locations/{location}\n\nNote that this EntryGroup and its child resources may not actually be\nstored in the location in this name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "entryGroupId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The id of the entry group to create.\nThe id must begin with a letter or underscore, contain only English\nletters, numbers and underscores, and be at most 64 characters."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
                  },
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+parent}/entryGroups",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups"
                },
                "delete": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}",
                  "description": "Deletes an EntryGroup. Only entry groups that do not contain entries can be\ndeleted. Users should enable the Data Catalog API in the project\nidentified by the `name` parameter (see [Data Catalog Resource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                  "id": "datacatalog.projects.locations.entryGroups.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the entry group. For example,\n`projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "force": {
                      "description": "Optional. If true, deletes all entries in the entry group.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1beta1/{+name}"
                },
                "list": {
                  "description": "Lists entry groups.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the location that contains the entry groups, which can be\nprovided in URL format. Example:\n\n* projects/{project_id}/locations/{location}",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "Optional. Token that specifies which page is requested. If empty, the first page is\nreturned.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of items to return. Default is 10. Max limit is 1000.\nThrows an invalid argument for `page_size \u003e 1000`.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse"
                  },
                  "id": "datacatalog.projects.locations.entryGroups.list",
                  "path": "v1beta1/{+parent}/entryGroups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The fields to update on the entry group. If absent or empty, all modifiable\nfields are updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "The resource name of the entry group in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n\nNote that this EntryGroup and its child resources may not actually be\nstored in the location in this name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
                  },
                  "httpMethod": "PATCH",
                  "description": "Updates an EntryGroup. The user should enable the Data Catalog API in the\nproject identified by the `entry_group.name` parameter (see [Data Catalog\nResource Project]\n(https://cloud.google.com/data-catalog/docs/concepts/resource-project) for\nmore information).",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}",
                  "id": "datacatalog.projects.locations.entryGroups.patch"
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "datacatalog.projects.locations.entryGroups.setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                    }
                  },
                  "description": "Sets the access control policy for a resource. Replaces any existing\npolicy.\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nCallers must have following Google IAM permission\n  - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag\n    templates.\n  - `datacatalog.entries.setIamPolicy` to set policies on entries.\n  - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups."
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datacatalog.projects.locations.entryGroups.get",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the entry group. For example,\n`projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`."
                    },
                    "readMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The fields to return. If not set or empty, all fields are returned.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
                  },
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET",
                  "description": "Gets an EntryGroup."
                },
                "testIamPermissions": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "description": "Returns the caller's permissions on a resource.\nIf the resource does not exist, an empty set of permissions is returned\n(We don't return a `NOT_FOUND` error).\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nA caller is not required to have Google IAM permission to make this\nrequest.",
                  "id": "datacatalog.projects.locations.entryGroups.testIamPermissions"
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Gets the access control policy for a resource. A `NOT_FOUND` error\nis returned if the resource does not exist. An empty policy is returned\nif the resource exists but does not have a policy set on it.\n\nSupported resources are:\n  - Tag templates.\n  - Entries.\n  - Entry groups.\nNote, this method cannot be used to manage policies for BigQuery, Pub/Sub\nand any external Google Cloud Platform resources synced to Data Catalog.\n\nCallers must have following Google IAM permission\n  - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag\n    templates.\n  - `datacatalog.entries.getIamPolicy` to get policies on entries.\n  - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "id": "datacatalog.projects.locations.entryGroups.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "entries": {
      "methods": {
        "lookup": {
          "path": "v1beta1/entries:lookup",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "datacatalog.entries.lookup",
          "description": "Get an entry by target resource name. This method allows clients to use\nthe resource name from the source Google Cloud Platform service to get the\nData Catalog Entry.",
          "flatPath": "v1beta1/entries:lookup",
          "response": {
            "$ref": "GoogleCloudDatacatalogV1beta1Entry"
          },
          "httpMethod": "GET",
          "parameters": {
            "linkedResource": {
              "description": "The full name of the Google Cloud Platform resource the Data Catalog\nentry represents. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name.\nFull names are case-sensitive.\n\nExamples:\n\n * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId\n * //pubsub.googleapis.com/projects/projectId/topics/topicId",
              "type": "string",
              "location": "query"
            },
            "sqlResource": {
              "description": "The SQL name of the entry. SQL names are case-sensitive.\n\nExamples:\n\n  * `pubsub.project_id.topic_id`\n  * ``pubsub.project_id.`topic.id.with.dots` ``\n  * `bigquery.table.project_id.dataset_id.table_id`\n  * `bigquery.dataset.project_id.dataset_id`\n  * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id`\n\n`*_id`s shoud satisfy the standard SQL rules for identifiers.\nhttps://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": []
        }
      }
    },
    "catalog": {
      "methods": {
        "search": {
          "parameters": {},
          "id": "datacatalog.catalog.search",
          "path": "v1beta1/catalog:search",
          "response": {
            "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogResponse"
          },
          "flatPath": "v1beta1/catalog:search",
          "request": {
            "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": "Searches Data Catalog for multiple resources like entries, tags that\nmatch a query.\n\nThis is a custom method\n(https://cloud.google.com/apis/design/custom_methods) and does not return\nthe complete resource, only the resource identifier and high level\nfields. Clients can subsequentally call `Get` methods.\n\nNote that Data Catalog search queries do not guarantee full recall. Query\nresults that match your query may not be returned, even in subsequent\nresult pages. Also note that results returned (and not returned) can vary\nacross repeated search queries.\n\nSee [Data Catalog Search\nSyntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)\nfor more information.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse": {
      "description": "Response message for\nImportTaxonomies.",
      "id": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse",
      "properties": {
        "taxonomies": {
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
          },
          "type": "array",
          "description": "Taxonomies that were imported."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1SearchCatalogResult": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1SearchCatalogResult",
      "properties": {
        "relativeResourceName": {
          "type": "string",
          "description": "The relative resource name of the resource in URL format.\nExamples:\n\n * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}`\n * `projects/{project_id}/tagTemplates/{tag_template_id}`"
        },
        "searchResultType": {
          "description": "Type of the search result. This field can be used to determine which Get\nmethod to call to fetch the full resource.",
          "enum": [
            "SEARCH_RESULT_TYPE_UNSPECIFIED",
            "ENTRY",
            "TAG_TEMPLATE",
            "ENTRY_GROUP"
          ],
          "enumDescriptions": [
            "Default unknown type.",
            "An Entry.",
            "A TagTemplate.",
            "An EntryGroup."
          ],
          "type": "string"
        },
        "searchResultSubtype": {
          "type": "string",
          "description": "Sub-type of the search result. This is a dot-delimited description of the\nresource's full type, and is the same as the value callers would provide in\nthe \"type\" search facet.  Examples: `entry.table`, `entry.dataStream`,\n`tagTemplate`."
        },
        "linkedResource": {
          "description": "The full name of the cloud resource the entry belongs to. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name.\nExample:\n\n * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`",
          "type": "string"
        }
      },
      "description": "A result that appears in the response of a search request. Each result\ncaptures details of one entry that matches the search."
    },
    "GoogleCloudDatacatalogV1beta1SystemTimestamps": {
      "id": "GoogleCloudDatacatalogV1beta1SystemTimestamps",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the resource within the given system.",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "Output only. The expiration time of the resource within the given system.\nCurrently only apllicable to BigQuery resources.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last-modified time of the resource within the given system.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Timestamps about this resource according to a particular system."
    },
    "Expr": {
      "id": "Expr",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1SerializedTaxonomy": {
      "id": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy",
      "description": "Message capturing a taxonomy and its policy tag hierarchy as a nested proto.\nUsed for taxonomy import/export and mutation.",
      "properties": {
        "policyTags": {
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag"
          },
          "description": "Top level policy tags associated with the taxonomy if any.",
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8."
        },
        "description": {
          "type": "string",
          "description": "Description of the serialized taxonomy. The length of the\ndescription is limited to 2000 bytes when encoded in UTF-8. If not set,\ndefaults to an empty description."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest": {
      "properties": {
        "newTagTemplateFieldId": {
          "type": "string",
          "description": "Required. The new ID of this tag template field. For example, `my_new_field`."
        }
      },
      "type": "object",
      "description": "Request message for\nRenameTagTemplateField.",
      "id": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest"
    },
    "GoogleCloudDatacatalogV1beta1TagTemplate": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name for this template. Defaults to an empty string.",
          "type": "string"
        },
        "fields": {
          "additionalProperties": {
            "$ref": "GoogleCloudDatacatalogV1beta1TagTemplateField"
          },
          "description": "Required. Map of tag template field IDs to the settings for the field.\nThis map is an exhaustive list of the allowed fields. This map must contain\nat least one field and at most 500 fields.\n\nThe keys to this map are tag template field IDs. Field IDs can contain\nletters (both uppercase and lowercase), numbers (0-9) and underscores (_).\nField IDs must be at least 1 character long and at most\n64 characters long. Field IDs must start with a letter or underscore.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the tag template in URL format. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}\n\nNote that this TagTemplate and its child resources may not actually be\nstored in the location in this name."
        }
      },
      "description": "A tag template defines a tag, which can have one or more typed fields.\nThe template is used to create and attach the tag to GCP resources.\n[Tag template\nroles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles)\nprovide permissions to create, edit, and use the template. See, for example,\nthe [TagTemplate\nUser](https://cloud.google.com/data-catalog/docs/how-to/template-user) role,\nwhich includes permission to use the tag template to tag resources.",
      "id": "GoogleCloudDatacatalogV1beta1TagTemplate"
    },
    "GoogleCloudDatacatalogV1beta1Schema": {
      "id": "GoogleCloudDatacatalogV1beta1Schema",
      "description": "Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema"
          },
          "description": "Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be\nspecified."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1GcsFileSpec": {
      "id": "GoogleCloudDatacatalogV1beta1GcsFileSpec",
      "description": "Specifications of a single file in Cloud Storage.",
      "type": "object",
      "properties": {
        "sizeBytes": {
          "format": "int64",
          "description": "Output only. The size of the file, in bytes.",
          "type": "string"
        },
        "filePath": {
          "type": "string",
          "description": "Required. The full file path. Example: `gs://bucket_name/a/b.txt`."
        },
        "gcsTimestamps": {
          "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps",
          "description": "Output only. Timestamps about the Cloud Storage file."
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1ViewSpec": {
      "id": "GoogleCloudDatacatalogV1beta1ViewSpec",
      "properties": {
        "viewQuery": {
          "type": "string",
          "description": "Output only. The query that defines the table view."
        }
      },
      "type": "object",
      "description": "Table view specification."
    },
    "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse": {
      "properties": {
        "taxonomies": {
          "type": "array",
          "description": "Taxonomies that the project contains.",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1Taxonomy"
          }
        },
        "nextPageToken": {
          "description": "Token used to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "description": "Response message for\nListTaxonomies.",
      "id": "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse",
      "type": "object"
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "description": "Associates `members` with a `role`."
    },
    "GoogleCloudDatacatalogV1beta1SearchCatalogRequest": {
      "properties": {
        "pageSize": {
          "description": "Number of results in the search page. If \u003c=0 then defaults to 10. Max limit\nfor page_size is 1000. Throws an invalid argument for page_size \u003e 1000.",
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string",
          "description": "Optional. Pagination token returned in an earlier\nSearchCatalogResponse.next_page_token, which\nindicates that this is a continuation of a prior\nSearchCatalogRequest\ncall, and that the system should return the next page of data. If empty,\nthe first page is returned."
        },
        "scope": {
          "description": "Required. The scope of this search request. A `scope` that has empty\n`include_org_ids`, `include_project_ids` AND false\n`include_gcp_public_datasets` is considered invalid. Data Catalog will\nreturn an error in such a case.",
          "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope"
        },
        "orderBy": {
          "type": "string",
          "description": "Specifies the ordering of results, currently supported case-sensitive\nchoices are:\n\n  * `relevance`, only supports descending\n  * `last_modified_timestamp [asc|desc]`, defaults to descending if not\n    specified\n\nIf not specified, defaults to `relevance` descending."
        },
        "query": {
          "description": "Required. The query string in search query syntax. The query must be non-empty.\n\nQuery strings can be simple as \"x\" or more qualified as:\n\n* name:x\n* column:x\n* description:y\n\nNote: Query tokens need to have a minimum of 3 characters for substring\nmatching to work correctly. See [Data Catalog Search\nSyntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)\nfor more information.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1SearchCatalogRequest",
      "description": "Request message for\nSearchCatalog."
    },
    "GoogleCloudDatacatalogV1beta1ListTagsResponse": {
      "id": "GoogleCloudDatacatalogV1beta1ListTagsResponse",
      "description": "Response message for\nListTags.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tag details.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1Tag"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results. It is set to empty if no items\nremain in results.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1SerializedPolicyTag": {
      "description": "Message representing one policy tag when exported as a nested proto.",
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag",
      "properties": {
        "childPolicyTags": {
          "description": "Children of the policy tag if any.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1SerializedPolicyTag"
          }
        },
        "description": {
          "description": "Description of the serialized policy tag. The length of the\ndescription is limited to 2000 bytes when encoded in UTF-8. If not set,\ndefaults to an empty description.",
          "type": "string"
        },
        "policyTag": {
          "description": "Resource name of the policy tag.\n\nThis field will be ignored when calling ImportTaxonomies.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "Empty"
    },
    "GoogleCloudDatacatalogV1beta1InlineSource": {
      "description": "Inline source used for taxonomies import.",
      "properties": {
        "taxonomies": {
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy"
          },
          "description": "Required. Taxonomies to be imported.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1InlineSource",
      "type": "object"
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`.",
          "$ref": "GetPolicyOptions"
        }
      },
      "type": "object",
      "description": "Request message for `GetIamPolicy` method."
    },
    "GoogleCloudDatacatalogV1beta1TagFieldEnumValue": {
      "id": "GoogleCloudDatacatalogV1beta1TagFieldEnumValue",
      "description": "Holds an enum value.",
      "properties": {
        "displayName": {
          "description": "The display name of the enum value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1FieldTypeEnumType": {
      "id": "GoogleCloudDatacatalogV1beta1FieldTypeEnumType",
      "type": "object",
      "properties": {
        "allowedValues": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue"
          },
          "description": "The set of allowed values for this enum. This set must not be empty, the\ndisplay names of the values in this set must not be empty and the display\nnames of the values must be case-insensitively unique within this set.\nThe order of items in this list is preserved. This field can be used to\ncreate, remove and reorder enum values. In order to rename enum value use\nRenameTagTemplateFieldEnumValue method. Can have up to 500 allowed\nvalues."
        }
      }
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "GoogleCloudDatacatalogV1beta1FieldType": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1FieldType",
      "properties": {
        "enumType": {
          "description": "Represents an enum type.",
          "$ref": "GoogleCloudDatacatalogV1beta1FieldTypeEnumType"
        },
        "primitiveType": {
          "enum": [
            "PRIMITIVE_TYPE_UNSPECIFIED",
            "DOUBLE",
            "STRING",
            "BOOL",
            "TIMESTAMP"
          ],
          "description": "Represents primitive types - string, bool etc.",
          "enumDescriptions": [
            "This is the default invalid value for a type.",
            "A double precision number.",
            "An UTF-8 string.",
            "A boolean value.",
            "A timestamp."
          ],
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method."
    },
    "GoogleCloudDatacatalogV1beta1ListEntriesResponse": {
      "type": "object",
      "description": "Response message for\nListEntries.",
      "properties": {
        "entries": {
          "description": "Entry details.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1Entry"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results. It is set to empty if no items\nremain in results.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1ListEntriesResponse"
    },
    "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec": {
      "properties": {
        "tablePrefix": {
          "type": "string",
          "description": "Output only. The table name prefix of the shards. The name of any given shard is\n`[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the\n`table_prefix` is `MyTable`."
        },
        "dataset": {
          "description": "Output only. The Data Catalog resource name of the dataset entry the current table\nbelongs to, for example,\n`projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.",
          "type": "string"
        },
        "shardCount": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Total number of shards."
        }
      },
      "description": "Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`.\nContext:\nhttps://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding",
      "id": "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec",
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1TagTemplateField": {
      "type": "object",
      "description": "The template for an individual field within a tag template.",
      "id": "GoogleCloudDatacatalogV1beta1TagTemplateField",
      "properties": {
        "isRequired": {
          "type": "boolean",
          "description": "Whether this is a required field. Defaults to false."
        },
        "order": {
          "type": "integer",
          "description": "The order of this field with respect to other fields in this tag\ntemplate.  A higher value indicates a more important field. The value can\nbe negative. Multiple fields can have the same order, and field orders\nwithin a tag do not have to be sequential.",
          "format": "int32"
        },
        "name": {
          "description": "Output only. The resource name of the tag template field in URL format. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}\n\nNote that this TagTemplateField may not actually be stored in the location\nin this name.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The display name for this field. Defaults to an empty string."
        },
        "type": {
          "description": "Required. The type of value this tag field can contain.",
          "$ref": "GoogleCloudDatacatalogV1beta1FieldType"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1EntryGroup": {
      "description": "EntryGroup Metadata. \nAn EntryGroup resource represents a logical grouping of zero or more\nData Catalog Entry resources.",
      "id": "GoogleCloudDatacatalogV1beta1EntryGroup",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "A short name to identify the entry group, for example,\n\"analytics data - jan 2011\". Default value is an empty string."
        },
        "dataCatalogTimestamps": {
          "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps",
          "description": "Output only. Timestamps about this EntryGroup. Default value is empty timestamps."
        },
        "description": {
          "type": "string",
          "description": "Entry group description, which can consist of several sentences or\nparagraphs that describe entry group contents. Default value is an empty\nstring."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the entry group in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}\n\nNote that this EntryGroup and its child resources may not actually be\nstored in the location in this name."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest": {
      "type": "object",
      "properties": {
        "newEnumValueDisplayName": {
          "type": "string",
          "description": "Required. The new display name of the enum value. For example, `my_new_enum_value`."
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest",
      "description": "Request message for\nRenameTagTemplateFieldEnumValue."
    },
    "GoogleCloudDatacatalogV1beta1PolicyTag": {
      "id": "GoogleCloudDatacatalogV1beta1PolicyTag",
      "type": "object",
      "description": "Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined\nin a hierarchy. For example, consider the following hierarchy:\nGeolocation -&gt; (LatLong, City, ZipCode). PolicyTag \"Geolocation\"\ncontains three child policy tags: \"LatLong\", \"City\", and \"ZipCode\".",
      "properties": {
        "parentPolicyTag": {
          "type": "string",
          "description": "Resource name of this policy tag's parent policy tag (e.g. for the\n\"LatLong\" policy tag in the example above, this field contains the\nresource name of the \"Geolocation\" policy tag). If empty, it means this\npolicy tag is a top level policy tag (e.g. this field is empty for the\n\"Geolocation\" policy tag in the example above). If not set, defaults to an\nempty string."
        },
        "displayName": {
          "description": "Required. User defined name of this policy tag. It must: be unique within the parent\ntaxonomy; contain only unicode letters, numbers, underscores, dashes and\nspaces; not start or end with spaces; and be at most 200 bytes long when\nencoded in UTF-8.",
          "type": "string"
        },
        "childPolicyTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Resource names of child policy tags of this policy tag."
        },
        "description": {
          "description": "Description of this policy tag. It must: contain only unicode characters,\ntabs, newlines, carriage returns and page breaks; and be at most 2000 bytes\nlong when encoded in UTF-8. If not set, defaults to an empty description.\nIf not set, defaults to an empty description.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of this policy tag, whose format is:\n\"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1TagField": {
      "type": "object",
      "properties": {
        "order": {
          "description": "Output only. The order of this field with respect to other fields in this tag. It can be\nset in Tag. For\nexample, a higher value can indicate a more important field. The value can\nbe negative. Multiple fields can have the same order, and field orders\nwithin a tag do not have to be sequential.",
          "type": "integer",
          "format": "int32"
        },
        "boolValue": {
          "type": "boolean",
          "description": "Holds the value for a tag field with boolean type."
        },
        "doubleValue": {
          "description": "Holds the value for a tag field with double type.",
          "format": "double",
          "type": "number"
        },
        "stringValue": {
          "type": "string",
          "description": "Holds the value for a tag field with string type."
        },
        "timestampValue": {
          "type": "string",
          "format": "google-datetime",
          "description": "Holds the value for a tag field with timestamp type."
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The display name of this field."
        },
        "enumValue": {
          "description": "Holds the value for a tag field with enum type. This value must be\none of the allowed values in the definition of this enum.",
          "$ref": "GoogleCloudDatacatalogV1beta1TagFieldEnumValue"
        }
      },
      "description": "Contains the value and supporting information for a field within\na Tag.",
      "id": "GoogleCloudDatacatalogV1beta1TagField"
    },
    "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue": {
      "id": "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the enum value. Must not be an empty string."
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1Taxonomy": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1Taxonomy",
      "properties": {
        "displayName": {
          "description": "Required. User defined name of this taxonomy. It must: contain only unicode letters,\nnumbers, underscores, dashes and spaces; not start or end with spaces; and\nbe at most 200 bytes long when encoded in UTF-8.",
          "type": "string"
        },
        "activatedPolicyTypes": {
          "items": {
            "type": "string",
            "enum": [
              "POLICY_TYPE_UNSPECIFIED",
              "FINE_GRAINED_ACCESS_CONTROL"
            ]
          },
          "description": "Optional. A list of policy types that are activated for this taxonomy. If not set,\ndefaults to an empty list.",
          "enumDescriptions": [
            "Unspecified policy type.",
            "Fine grained access control policy, which enables access control on\ntagged resources."
          ],
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of this taxonomy. It must: contain only unicode characters,\ntabs, newlines, carriage returns and page breaks; and be at most 2000 bytes\nlong when encoded in UTF-8. If not set, defaults to an empty description."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of this taxonomy, whose format is:\n\"projects/{project_number}/locations/{location_id}/taxonomies/{id}\"."
        }
      },
      "description": "A taxonomy is a collection of policy tags that classify data along a common\naxis. For instance a data *sensitivity* taxonomy could contain policy tags\ndenoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could\ncontain policy tags to distinguish user data, employee data, partner data,\npublic data."
    },
    "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse": {
      "type": "object",
      "description": "Response message for\nExportTaxonomies.",
      "properties": {
        "taxonomies": {
          "description": "List of taxonomies and policy tags in a tree structure.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1SerializedTaxonomy"
          }
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "GoogleCloudDatacatalogV1beta1Tag": {
      "id": "GoogleCloudDatacatalogV1beta1Tag",
      "description": "Tags are used to attach custom metadata to Data Catalog resources. Tags\nconform to the specifications within their tag template.\n\nSee [Data Catalog\nIAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information\non the permissions needed to create or view tags.",
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudDatacatalogV1beta1TagField"
          },
          "description": "Required. This maps the ID of a tag field to the value of and additional information\nabout that field. Valid field IDs are defined by the tag's template. A tag\nmust have at least 1 field and at most 500 fields."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the tag in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}\n\nwhere `tag_id` is a system-generated identifier.\nNote that this Tag may not actually be stored in the location in this name."
        },
        "template": {
          "type": "string",
          "description": "Required. The resource name of the tag template that this tag uses. Example:\n\n* projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}\n\nThis field cannot be modified after creation."
        },
        "templateDisplayName": {
          "type": "string",
          "description": "Output only. The display name of the tag template."
        },
        "column": {
          "type": "string",
          "description": "Resources like Entry can have schemas associated with them. This scope\nallows users to attach tags to an individual column based on that schema.\n\nFor attaching a tag to a nested column, use `.` to separate the column\nnames. Example:\n\n* `outer_column.inner_column`"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1TableSpec": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1TableSpec",
      "properties": {
        "groupedEntry": {
          "type": "string",
          "description": "Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`,\n`grouped_entry` is the Data Catalog resource name of the date sharded\ngrouped entry, for example,\n`projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.\nOtherwise, `grouped_entry` is empty."
        }
      },
      "description": "Normal BigQuery table spec."
    },
    "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope": {
      "properties": {
        "includeProjectIds": {
          "items": {
            "type": "string"
          },
          "description": "The list of project IDs to search within. To learn more about the\ndistinction between project names/IDs/numbers, go to\nhttps://cloud.google.com/docs/overview/#projects.",
          "type": "array"
        },
        "restrictedLocations": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The list of locations to search within.\n1. If empty, search will be performed in all locations;\n2. If any of the locations are NOT in the valid locations list, error\nwill be returned;\n3. Otherwise, search only the given locations for matching results.\nTypical usage is to leave this field empty. When a location is\nunreachable as returned in the `SearchCatalogResponse.unreachable` field,\nusers can repeat the search request with this parameter set to get\nadditional information on the error.\n\nValid locations:\n * asia-east1\n * asia-east2\n * asia-northeast1\n * asia-northeast2\n * asia-northeast3\n * asia-south1\n * asia-southeast1\n * australia-southeast1\n * eu\n * europe-north1\n * europe-west1\n * europe-west2\n * europe-west3\n * europe-west4\n * europe-west6\n * global\n * northamerica-northeast1\n * southamerica-east1\n * us\n * us-central1\n * us-east1\n * us-east4\n * us-west1\n * us-west2",
          "type": "array"
        },
        "includeGcpPublicDatasets": {
          "description": "If `true`, include Google Cloud Platform (GCP) public datasets in the\nsearch results. Info on GCP public datasets is available at\nhttps://cloud.google.com/public-datasets/. By default, GCP public\ndatasets are excluded.",
          "type": "boolean"
        },
        "includeOrgIds": {
          "type": "array",
          "description": "The list of organization IDs to search within. To find your organization\nID, follow instructions in\nhttps://cloud.google.com/resource-manager/docs/creating-managing-organization.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope",
      "description": "The criteria that select the subspace used for query matching."
    },
    "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest": {
      "id": "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest",
      "properties": {
        "inlineSource": {
          "$ref": "GoogleCloudDatacatalogV1beta1InlineSource",
          "description": "Inline source used for taxonomies to be imported."
        }
      },
      "type": "object",
      "description": "Request message for\nImportTaxonomies."
    },
    "GetPolicyOptions": {
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "id": "GetPolicyOptions",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1GcsFilesetSpec": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec",
      "properties": {
        "filePatterns": {
          "items": {
            "type": "string"
          },
          "description": "Required. Patterns to identify a set of files in Google Cloud Storage.\nSee [Cloud Storage\ndocumentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)\nfor more information. Note that bucket wildcards are currently not\nsupported.\n\nExamples of valid file_patterns:\n\n * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir`\n                             directory.\n * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir`\n                              spanning all subdirectories.\n * `gs://bucket_name/file*`: matches files prefixed by `file` in\n                             `bucket_name`\n * `gs://bucket_name/??.txt`: matches files with two characters followed by\n                              `.txt` in `bucket_name`\n * `gs://bucket_name/[aeiou].txt`: matches files that contain a single\n                                   vowel character followed by `.txt` in\n                                   `bucket_name`\n * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...\n                                 or `m` followed by `.txt` in `bucket_name`\n * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match\n                             `a/*/b` pattern, such as `a/c/b`, `a/d/b`\n * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`\n\nYou can combine wildcards to provide more powerful matches, for example:\n\n * `gs://bucket_name/[a-m]??.j*g`",
          "type": "array"
        },
        "sampleGcsFileSpecs": {
          "description": "Output only. Sample files contained in this fileset, not all files contained in this\nfileset are represented here.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1GcsFileSpec"
          }
        }
      },
      "description": "Describes a Cloud Storage fileset entry."
    },
    "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse": {
      "description": "Response message for\nListEntryGroups.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results. It is set to empty if no items\nremain in results.",
          "type": "string"
        },
        "entryGroups": {
          "description": "EntryGroup details.",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1EntryGroup"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse",
      "type": "object"
    },
    "GoogleCloudDatacatalogV1beta1Entry": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display information such as title and description. A short name to identify\nthe entry, for example, \"Analytics Data - Jan 2011\". Default value is an\nempty string.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The Data Catalog resource name of the entry in URL format. Example:\n\n* projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}\n\nNote that this Entry and its child resources may not actually be stored in\nthe location in this name."
        },
        "linkedResource": {
          "type": "string",
          "description": "The resource this metadata entry refers to.\n\nFor Google Cloud Platform resources, `linked_resource` is the [full name of\nthe\nresource](https://cloud.google.com/apis/design/resource_names#full_resource_name).\nFor example, the `linked_resource` for a table resource from BigQuery is:\n\n* //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId\n\nOutput only when Entry is of type in the EntryType enum. For entries with\nuser_specified_type, this field is optional and defaults to an empty\nstring."
        },
        "type": {
          "description": "The type of the entry.\nOnly used for Entries with types in the EntryType enum.",
          "enumDescriptions": [
            "Default unknown type.",
            "Output only. The type of entry that has a GoogleSQL schema, including\nlogical views.",
            "Output only. The type of models.\nhttps://cloud.google.com/bigquery-ml/docs/bigqueryml-intro",
            "Output only. An entry type which is used for streaming entries. Example:\nPub/Sub topic.",
            "An entry type which is a set of files or objects. Example:\nCloud Storage fileset."
          ],
          "type": "string",
          "enum": [
            "ENTRY_TYPE_UNSPECIFIED",
            "TABLE",
            "MODEL",
            "DATA_STREAM",
            "FILESET"
          ]
        },
        "sourceSystemTimestamps": {
          "description": "Output only. Timestamps about the underlying resource, not about this Data Catalog\nentry. Output only when Entry is of type in the EntryType enum. For entries\nwith user_specified_type, this field is optional and defaults to an empty\ntimestamp.",
          "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps"
        },
        "schema": {
          "$ref": "GoogleCloudDatacatalogV1beta1Schema",
          "description": "Schema of the entry. An entry might not have any schema attached to it."
        },
        "userSpecifiedType": {
          "type": "string",
          "description": "Entry type if it does not fit any of the input-allowed values listed in\n`EntryType` enum above. When creating an entry, users should check the\nenum values first, if nothing matches the entry to be created, then\nprovide a custom value, for example \"my_special_type\".\n`user_specified_type` strings must begin with a letter or underscore and\ncan only contain letters, numbers, and underscores; are case insensitive;\nmust be at least 1 character and at most 64 characters long.\n\nCurrently, only FILESET enum value is allowed. All other entries created\nthrough Data Catalog must use `user_specified_type`."
        },
        "userSpecifiedSystem": {
          "description": "This field indicates the entry's source system that Data Catalog does not\nintegrate with. `user_specified_system` strings must begin with a letter\nor underscore and can only contain letters, numbers, and underscores; are\ncase insensitive; must be at least 1 character and at most 64 characters\nlong.",
          "type": "string"
        },
        "integratedSystem": {
          "enumDescriptions": [
            "Default unknown system.",
            "BigQuery.",
            "Cloud Pub/Sub."
          ],
          "enum": [
            "INTEGRATED_SYSTEM_UNSPECIFIED",
            "BIGQUERY",
            "CLOUD_PUBSUB"
          ],
          "type": "string",
          "description": "Output only. This field indicates the entry's source system that Data Catalog\nintegrates with, such as BigQuery or Pub/Sub."
        },
        "description": {
          "description": "Entry description, which can consist of several sentences or paragraphs\nthat describe entry contents. Default value is an empty string.",
          "type": "string"
        },
        "gcsFilesetSpec": {
          "description": "Specification that applies to a Cloud Storage fileset. This is only valid\non entries of type FILESET.",
          "$ref": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec"
        },
        "bigqueryTableSpec": {
          "$ref": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec",
          "description": "Specification that applies to a BigQuery table. This is only valid on\nentries of type `TABLE`."
        },
        "bigqueryDateShardedSpec": {
          "description": "Specification for a group of BigQuery tables with name pattern\n`[prefix]YYYYMMDD`. Context:\nhttps://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.",
          "$ref": "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec"
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1Entry",
      "description": "Entry Metadata. \nA Data Catalog Entry resource represents another resource in Google\nCloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or\noutside of Google Cloud Platform. Clients can use the `linked_resource` field\nin the Entry resource to refer to the original resource ID of the source\nsystem.\n\nAn Entry resource contains resource details, such as its schema. An Entry can\nalso be used to attach flexible metadata, such as a\nTag."
    },
    "GoogleCloudDatacatalogV1beta1SearchCatalogResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used to retrieve the next page of results."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable locations. Search result does not include data from those\nlocations. Users can get additional information on the error by repeating\nthe search request with a more restrictive parameter -- setting the value\nfor `SearchDataCatalogRequest.scope.include_locations`.",
          "type": "array"
        },
        "results": {
          "description": "Search results.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1SearchCatalogResult"
          }
        }
      },
      "description": "Response message for\nSearchCatalog.",
      "id": "GoogleCloudDatacatalogV1beta1SearchCatalogResponse"
    },
    "GoogleCloudDatacatalogV1beta1ColumnSchema": {
      "type": "object",
      "description": "Representation of a column within a schema. Columns could be nested inside\nother columns.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. Type of the column."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the column. Default value is an empty string."
        },
        "column": {
          "description": "Required. Name of the column.",
          "type": "string"
        },
        "mode": {
          "description": "Optional. A column's mode indicates whether the values in this column are required,\nnullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported.\nDefault mode is `NULLABLE`.",
          "type": "string"
        },
        "subcolumns": {
          "description": "Optional. Schema of sub-columns. A column can have zero or more sub-columns.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema"
          }
        }
      },
      "id": "GoogleCloudDatacatalogV1beta1ColumnSchema"
    },
    "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse": {
      "type": "object",
      "description": "Response message for\nListPolicyTags.",
      "id": "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse",
      "properties": {
        "policyTags": {
          "type": "array",
          "description": "The policy tags that are in the requested taxonomy.",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1PolicyTag"
          }
        },
        "nextPageToken": {
          "description": "Token used to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost."
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      },
      "id": "Policy"
    },
    "GoogleCloudDatacatalogV1beta1BigQueryTableSpec": {
      "type": "object",
      "id": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec",
      "properties": {
        "viewSpec": {
          "description": "Table view specification. This field should only be populated if\n`table_source_type` is `BIGQUERY_VIEW`.",
          "$ref": "GoogleCloudDatacatalogV1beta1ViewSpec"
        },
        "tableSourceType": {
          "description": "Output only. The table source type.",
          "enumDescriptions": [
            "Default unknown type.",
            "Table view.",
            "BigQuery native table.",
            "BigQuery materialized view."
          ],
          "type": "string",
          "enum": [
            "TABLE_SOURCE_TYPE_UNSPECIFIED",
            "BIGQUERY_VIEW",
            "BIGQUERY_TABLE",
            "BIGQUERY_MATERIALIZED_VIEW"
          ]
        },
        "tableSpec": {
          "description": "Spec of a BigQuery table. This field should only be populated if\n`table_source_type` is `BIGQUERY_TABLE`.",
          "$ref": "GoogleCloudDatacatalogV1beta1TableSpec"
        }
      },
      "description": "Describes a BigQuery table."
    }
  },
  "version": "v1beta1",
  "servicePath": "",
  "documentationLink": "https://cloud.google.com/data-catalog/docs/",
  "canonicalName": "Data Catalog",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://datacatalog.mtls.googleapis.com/",
  "title": "Google Cloud Data Catalog API",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "ownerName": "Google",
  "revision": "20200618",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
