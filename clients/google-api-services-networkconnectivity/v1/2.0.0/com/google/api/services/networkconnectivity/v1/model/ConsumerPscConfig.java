/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * Allow the producer to specify which consumers can connect to it.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ConsumerPscConfig extends com.google.api.client.json.GenericJson {

  /**
   * This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed
   * from another region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableGlobalAccess;

  /**
   * The resource path of the consumer network where PSC connections are allowed to be created in.
   * Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC.
   * Example: projects/{projectNumOrId}/global/networks/{networkId}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String network;

  /**
   * The consumer project where PSC connections are allowed to be created in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String project;

  /**
   * This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed
   * from another region.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableGlobalAccess() {
    return disableGlobalAccess;
  }

  /**
   * This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed
   * from another region.
   * @param disableGlobalAccess disableGlobalAccess or {@code null} for none
   */
  public ConsumerPscConfig setDisableGlobalAccess(java.lang.Boolean disableGlobalAccess) {
    this.disableGlobalAccess = disableGlobalAccess;
    return this;
  }

  /**
   * The resource path of the consumer network where PSC connections are allowed to be created in.
   * Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC.
   * Example: projects/{projectNumOrId}/global/networks/{networkId}.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * The resource path of the consumer network where PSC connections are allowed to be created in.
   * Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC.
   * Example: projects/{projectNumOrId}/global/networks/{networkId}.
   * @param network network or {@code null} for none
   */
  public ConsumerPscConfig setNetwork(java.lang.String network) {
    this.network = network;
    return this;
  }

  /**
   * The consumer project where PSC connections are allowed to be created in.
   * @return value or {@code null} for none
   */
  public java.lang.String getProject() {
    return project;
  }

  /**
   * The consumer project where PSC connections are allowed to be created in.
   * @param project project or {@code null} for none
   */
  public ConsumerPscConfig setProject(java.lang.String project) {
    this.project = project;
    return this;
  }

  @Override
  public ConsumerPscConfig set(String fieldName, Object value) {
    return (ConsumerPscConfig) super.set(fieldName, value);
  }

  @Override
  public ConsumerPscConfig clone() {
    return (ConsumerPscConfig) super.clone();
  }

}
