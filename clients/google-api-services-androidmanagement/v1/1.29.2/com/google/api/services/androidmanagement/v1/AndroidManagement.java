/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1;

/**
 * Service definition for AndroidManagement (v1).
 *
 * <p>
 * The Android Management API provides remote enterprise management of Android devices and apps.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/android/management" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AndroidManagementRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class AndroidManagement extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Android Management API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://androidmanagement.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public AndroidManagement(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  AndroidManagement(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Enterprises collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
   *   {@code AndroidManagement.Enterprises.List request = androidmanagement.enterprises().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Enterprises enterprises() {
    return new Enterprises();
  }

  /**
   * The "enterprises" collection of methods.
   */
  public class Enterprises {

    /**
     * Creates an enterprise. This is the last step in the enterprise signup flow.
     *
     * Create a request for the method "enterprises.create".
     *
     * This request holds the parameters needed by the androidmanagement server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.androidmanagement.v1.model.Enterprise}
     * @return the request
     */
    public Create create(com.google.api.services.androidmanagement.v1.model.Enterprise content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Enterprise> {

      private static final String REST_PATH = "v1/enterprises";

      /**
       * Creates an enterprise. This is the last step in the enterprise signup flow.
       *
       * Create a request for the method "enterprises.create".
       *
       * This request holds the parameters needed by the the androidmanagement server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.Enterprise}
       * @since 1.13
       */
      protected Create(com.google.api.services.androidmanagement.v1.model.Enterprise content) {
        super(AndroidManagement.this, "POST", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.Enterprise.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** The enterprise token appended to the callback URL. */
      @com.google.api.client.util.Key
      private java.lang.String enterpriseToken;

      /** The enterprise token appended to the callback URL.
       */
      public java.lang.String getEnterpriseToken() {
        return enterpriseToken;
      }

      /** The enterprise token appended to the callback URL. */
      public Create setEnterpriseToken(java.lang.String enterpriseToken) {
        this.enterpriseToken = enterpriseToken;
        return this;
      }

      /** The ID of the Google Cloud Platform project which will own the enterprise. */
      @com.google.api.client.util.Key
      private java.lang.String projectId;

      /** The ID of the Google Cloud Platform project which will own the enterprise.
       */
      public java.lang.String getProjectId() {
        return projectId;
      }

      /** The ID of the Google Cloud Platform project which will own the enterprise. */
      public Create setProjectId(java.lang.String projectId) {
        this.projectId = projectId;
        return this;
      }

      /** The name of the SignupUrl used to sign up for the enterprise. */
      @com.google.api.client.util.Key
      private java.lang.String signupUrlName;

      /** The name of the SignupUrl used to sign up for the enterprise.
       */
      public java.lang.String getSignupUrlName() {
        return signupUrlName;
      }

      /** The name of the SignupUrl used to sign up for the enterprise. */
      public Create setSignupUrlName(java.lang.String signupUrlName) {
        this.signupUrlName = signupUrlName;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Gets an enterprise.
     *
     * Create a request for the method "enterprises.get".
     *
     * This request holds the parameters needed by the androidmanagement server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the enterprise in the form enterprises/{enterpriseId}.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Enterprise> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^enterprises/[^/]+$");

      /**
       * Gets an enterprise.
       *
       * Create a request for the method "enterprises.get".
       *
       * This request holds the parameters needed by the the androidmanagement server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the enterprise in the form enterprises/{enterpriseId}.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Enterprise.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^enterprises/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the enterprise in the form enterprises/{enterpriseId}. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the enterprise in the form enterprises/{enterpriseId}.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the enterprise in the form enterprises/{enterpriseId}. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^enterprises/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates an enterprise.
     *
     * Create a request for the method "enterprises.patch".
     *
     * This request holds the parameters needed by the androidmanagement server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name The name of the enterprise in the form enterprises/{enterpriseId}.
     * @param content the {@link com.google.api.services.androidmanagement.v1.model.Enterprise}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Enterprise content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Enterprise> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^enterprises/[^/]+$");

      /**
       * Updates an enterprise.
       *
       * Create a request for the method "enterprises.patch".
       *
       * This request holds the parameters needed by the the androidmanagement server.  After setting
       * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the enterprise in the form enterprises/{enterpriseId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.Enterprise}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Enterprise content) {
        super(AndroidManagement.this, "PATCH", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.Enterprise.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^enterprises/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the enterprise in the form enterprises/{enterpriseId}. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the enterprise in the form enterprises/{enterpriseId}.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the enterprise in the form enterprises/{enterpriseId}. */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^enterprises/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The field mask indicating the fields to update. If not set, all modifiable fields will be
       * modified.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The field mask indicating the fields to update. If not set, all modifiable fields will be modified.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The field mask indicating the fields to update. If not set, all modifiable fields will be
       * modified.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Applications collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.Applications.List request = androidmanagement.applications().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Applications applications() {
      return new Applications();
    }

    /**
     * The "applications" collection of methods.
     */
    public class Applications {

      /**
       * Gets info about an application.
       *
       * Create a request for the method "applications.get".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the application in the form enterprises/{enterpriseId}/applications/{package_name}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Application> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/applications/[^/]+$");

        /**
         * Gets info about an application.
         *
         * Create a request for the method "applications.get".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the application in the form enterprises/{enterpriseId}/applications/{package_name}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Application.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/applications/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the application in the form
         * enterprises/{enterpriseId}/applications/{package_name}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the application in the form enterprises/{enterpriseId}/applications/{package_name}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the application in the form
         * enterprises/{enterpriseId}/applications/{package_name}.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/applications/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The preferred language for localized application info, as a BCP47 tag (e.g. "en-US",
         * "de"). If not specified the default language of the application will be used.
         */
        @com.google.api.client.util.Key
        private java.lang.String languageCode;

        /** The preferred language for localized application info, as a BCP47 tag (e.g. "en-US", "de"). If not
       specified the default language of the application will be used.
         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        /**
         * The preferred language for localized application info, as a BCP47 tag (e.g. "en-US",
         * "de"). If not specified the default language of the application will be used.
         */
        public Get setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Devices collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.Devices.List request = androidmanagement.devices().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Devices devices() {
      return new Devices();
    }

    /**
     * The "devices" collection of methods.
     */
    public class Devices {

      /**
       * Deletes a device. This operation wipes the device.
       *
       * Create a request for the method "devices.delete".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Deletes a device. This operation wipes the device.
         *
         * Create a request for the method "devices.delete".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AndroidManagement.this, "DELETE", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional flags that control the device wiping behavior. */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> wipeDataFlags;

        /** Optional flags that control the device wiping behavior.
         */
        public java.util.List<java.lang.String> getWipeDataFlags() {
          return wipeDataFlags;
        }

        /** Optional flags that control the device wiping behavior. */
        public Delete setWipeDataFlags(java.util.List<java.lang.String> wipeDataFlags) {
          this.wipeDataFlags = wipeDataFlags;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a device.
       *
       * Create a request for the method "devices.get".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Device> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Gets a device.
         *
         * Create a request for the method "devices.get".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Device.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Issues a command to a device. The Operation resource returned contains a Command in its metadata
       * field. Use the get operation method to get the status of the command.
       *
       * Create a request for the method "devices.issueCommand".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link IssueCommand#execute()} method to invoke the remote
       * operation.
       *
       * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.Command}
       * @return the request
       */
      public IssueCommand issueCommand(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Command content) throws java.io.IOException {
        IssueCommand result = new IssueCommand(name, content);
        initialize(result);
        return result;
      }

      public class IssueCommand extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Operation> {

        private static final String REST_PATH = "v1/{+name}:issueCommand";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Issues a command to a device. The Operation resource returned contains a Command in its
         * metadata field. Use the get operation method to get the status of the command.
         *
         * Create a request for the method "devices.issueCommand".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link IssueCommand#execute()} method to invoke the remote
         * operation. <p> {@link
         * IssueCommand#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.Command}
         * @since 1.13
         */
        protected IssueCommand(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Command content) {
          super(AndroidManagement.this, "POST", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public IssueCommand set$Xgafv(java.lang.String $Xgafv) {
          return (IssueCommand) super.set$Xgafv($Xgafv);
        }

        @Override
        public IssueCommand setAccessToken(java.lang.String accessToken) {
          return (IssueCommand) super.setAccessToken(accessToken);
        }

        @Override
        public IssueCommand setAlt(java.lang.String alt) {
          return (IssueCommand) super.setAlt(alt);
        }

        @Override
        public IssueCommand setCallback(java.lang.String callback) {
          return (IssueCommand) super.setCallback(callback);
        }

        @Override
        public IssueCommand setFields(java.lang.String fields) {
          return (IssueCommand) super.setFields(fields);
        }

        @Override
        public IssueCommand setKey(java.lang.String key) {
          return (IssueCommand) super.setKey(key);
        }

        @Override
        public IssueCommand setOauthToken(java.lang.String oauthToken) {
          return (IssueCommand) super.setOauthToken(oauthToken);
        }

        @Override
        public IssueCommand setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (IssueCommand) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public IssueCommand setQuotaUser(java.lang.String quotaUser) {
          return (IssueCommand) super.setQuotaUser(quotaUser);
        }

        @Override
        public IssueCommand setUploadType(java.lang.String uploadType) {
          return (IssueCommand) super.setUploadType(uploadType);
        }

        @Override
        public IssueCommand setUploadProtocol(java.lang.String uploadProtocol) {
          return (IssueCommand) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        public IssueCommand setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public IssueCommand set(String parameterName, Object value) {
          return (IssueCommand) super.set(parameterName, value);
        }
      }
      /**
       * Lists devices for a given enterprise.
       *
       * Create a request for the method "devices.list".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.ListDevicesResponse> {

        private static final String REST_PATH = "v1/{+parent}/devices";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Lists devices for a given enterprise.
         *
         * Create a request for the method "devices.list".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.ListDevicesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The requested page size. The actual page size may be fixed to a min or max value.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** A token identifying a page of results returned by the server. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying a page of results returned by the server.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** A token identifying a page of results returned by the server. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a device.
       *
       * Create a request for the method "devices.patch".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.Device}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Device content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Device> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+$");

        /**
         * Updates a device.
         *
         * Create a request for the method "devices.patch".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.Device}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Device content) {
          super(AndroidManagement.this, "PATCH", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.Device.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the device in the form enterprises/{enterpriseId}/devices/{deviceId}. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/devices/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The field mask indicating the fields to update. If not set, all modifiable fields will be modified.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
       *   {@code AndroidManagement.Operations.List request = androidmanagement.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * Code.CANCELLED.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the androidmanagement server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * Code.CANCELLED.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the androidmanagement server.  After setting
           * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
           * operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(AndroidManagement.this, "POST", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns google.rpc.Code.UNIMPLEMENTED.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the androidmanagement server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns google.rpc.Code.UNIMPLEMENTED.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the androidmanagement server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(AndroidManagement.this, "DELETE", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the androidmanagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the androidmanagement server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the
         * binding to use different resource name schemes, such as users/operations. To override the
         * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the androidmanagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^enterprises/[^/]+/devices/[^/]+/operations$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override
           * the binding to use different resource name schemes, such as users/operations. To override the
           * binding, API services can add a binding such as "/v1/{name=users}/operations" to their service
           * configuration. For backwards compatibility, the default name includes the operations collection
           * id, however overriding users must ensure the name binding is the parent resource, without the
           * operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the androidmanagement server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^enterprises/[^/]+/devices/[^/]+/operations$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the EnrollmentTokens collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.EnrollmentTokens.List request = androidmanagement.enrollmentTokens().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public EnrollmentTokens enrollmentTokens() {
      return new EnrollmentTokens();
    }

    /**
     * The "enrollmentTokens" collection of methods.
     */
    public class EnrollmentTokens {

      /**
       * Creates an enrollment token for a given enterprise.
       *
       * Create a request for the method "enrollmentTokens.create".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.EnrollmentToken}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.EnrollmentToken content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.EnrollmentToken> {

        private static final String REST_PATH = "v1/{+parent}/enrollmentTokens";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Creates an enrollment token for a given enterprise.
         *
         * Create a request for the method "enrollmentTokens.create".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.EnrollmentToken}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.EnrollmentToken content) {
          super(AndroidManagement.this, "POST", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.EnrollmentToken.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an enrollment token. This operation invalidates the token, preventing its future use.
       *
       * Create a request for the method "enrollmentTokens.delete".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the enrollment token in the form
       *        enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/enrollmentTokens/[^/]+$");

        /**
         * Deletes an enrollment token. This operation invalidates the token, preventing its future use.
         *
         * Create a request for the method "enrollmentTokens.delete".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the enrollment token in the form
       *        enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AndroidManagement.this, "DELETE", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/enrollmentTokens/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the enrollment token in the form
         * enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the enrollment token in the form
       enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the enrollment token in the form
         * enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/enrollmentTokens/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Policies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.Policies.List request = androidmanagement.policies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Policies policies() {
      return new Policies();
    }

    /**
     * The "policies" collection of methods.
     */
    public class Policies {

      /**
       * Deletes a policy. This operation is only permitted if no devices are currently referencing the
       * policy.
       *
       * Create a request for the method "policies.delete".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/policies/[^/]+$");

        /**
         * Deletes a policy. This operation is only permitted if no devices are currently referencing the
         * policy.
         *
         * Create a request for the method "policies.delete".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AndroidManagement.this, "DELETE", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a policy.
       *
       * Create a request for the method "policies.get".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Policy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/policies/[^/]+$");

        /**
         * Gets a policy.
         *
         * Create a request for the method "policies.get".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists policies for a given enterprise.
       *
       * Create a request for the method "policies.list".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.ListPoliciesResponse> {

        private static final String REST_PATH = "v1/{+parent}/policies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Lists policies for a given enterprise.
         *
         * Create a request for the method "policies.list".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.ListPoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The requested page size. The actual page size may be fixed to a min or max value.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** A token identifying a page of results returned by the server. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying a page of results returned by the server.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** A token identifying a page of results returned by the server. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates or creates a policy.
       *
       * Create a request for the method "policies.patch".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.Policy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Policy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Policy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/policies/[^/]+$");

        /**
         * Updates or creates a policy.
         *
         * Create a request for the method "policies.patch".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.Policy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.Policy content) {
          super(AndroidManagement.this, "PATCH", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.Policy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the policy in the form enterprises/{enterpriseId}/policies/{policyId}. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/policies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The field mask indicating the fields to update. If not set, all modifiable fields will be modified.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the WebApps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.WebApps.List request = androidmanagement.webApps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public WebApps webApps() {
      return new WebApps();
    }

    /**
     * The "webApps" collection of methods.
     */
    public class WebApps {

      /**
       * Creates a web app.
       *
       * Create a request for the method "webApps.create".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebApp}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.WebApp content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.WebApp> {

        private static final String REST_PATH = "v1/{+parent}/webApps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Creates a web app.
         *
         * Create a request for the method "webApps.create".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebApp}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.WebApp content) {
          super(AndroidManagement.this, "POST", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.WebApp.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a web app.
       *
       * Create a request for the method "webApps.delete".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/webApps/[^/]+$");

        /**
         * Deletes a web app.
         *
         * Create a request for the method "webApps.delete".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(AndroidManagement.this, "DELETE", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a web app.
       *
       * Create a request for the method "webApps.get".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the web app in the form enterprises/{enterpriseId}/webApp/{packageName}.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.WebApp> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/webApps/[^/]+$");

        /**
         * Gets a web app.
         *
         * Create a request for the method "webApps.get".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the web app in the form enterprises/{enterpriseId}/webApp/{packageName}.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.WebApp.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the web app in the form enterprises/{enterpriseId}/webApp/{packageName}. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the web app in the form enterprises/{enterpriseId}/webApp/{packageName}.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the web app in the form enterprises/{enterpriseId}/webApp/{packageName}. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists web apps for a given enterprise.
       *
       * Create a request for the method "webApps.list".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.ListWebAppsResponse> {

        private static final String REST_PATH = "v1/{+parent}/webApps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Lists web apps for a given enterprise.
         *
         * Create a request for the method "webApps.list".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AndroidManagement.this, "GET", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.ListWebAppsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The requested page size. The actual page size may be fixed to a min or max value.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The requested page size. The actual page size may be fixed to a min or max value. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** A token identifying a page of results returned by the server. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying a page of results returned by the server.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** A token identifying a page of results returned by the server. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a web app.
       *
       * Create a request for the method "webApps.patch".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebApp}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.WebApp content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.WebApp> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+/webApps/[^/]+$");

        /**
         * Updates a web app.
         *
         * Create a request for the method "webApps.patch".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebApp}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.androidmanagement.v1.model.WebApp content) {
          super(AndroidManagement.this, "PATCH", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.WebApp.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the web app in the form enterprises/{enterpriseId}/webApps/{packageName}.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^enterprises/[^/]+/webApps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The field mask indicating the fields to update. If not set, all modifiable fields will be modified.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The field mask indicating the fields to update. If not set, all modifiable fields will be
         * modified.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the WebTokens collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
     *   {@code AndroidManagement.WebTokens.List request = androidmanagement.webTokens().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public WebTokens webTokens() {
      return new WebTokens();
    }

    /**
     * The "webTokens" collection of methods.
     */
    public class WebTokens {

      /**
       * Creates a web token to access an embeddable managed Google Play web UI for a given enterprise.
       *
       * Create a request for the method "webTokens.create".
       *
       * This request holds the parameters needed by the androidmanagement server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
       * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebToken}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.WebToken content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.WebToken> {

        private static final String REST_PATH = "v1/{+parent}/webTokens";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^enterprises/[^/]+$");

        /**
         * Creates a web token to access an embeddable managed Google Play web UI for a given enterprise.
         *
         * Create a request for the method "webTokens.create".
         *
         * This request holds the parameters needed by the the androidmanagement server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the enterprise in the form enterprises/{enterpriseId}.
         * @param content the {@link com.google.api.services.androidmanagement.v1.model.WebToken}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.androidmanagement.v1.model.WebToken content) {
          super(AndroidManagement.this, "POST", REST_PATH, content, com.google.api.services.androidmanagement.v1.model.WebToken.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the enterprise in the form enterprises/{enterpriseId}.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the enterprise in the form enterprises/{enterpriseId}. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^enterprises/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the SignupUrls collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AndroidManagement androidmanagement = new AndroidManagement(...);}
   *   {@code AndroidManagement.SignupUrls.List request = androidmanagement.signupUrls().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public SignupUrls signupUrls() {
    return new SignupUrls();
  }

  /**
   * The "signupUrls" collection of methods.
   */
  public class SignupUrls {

    /**
     * Creates an enterprise signup URL.
     *
     * Create a request for the method "signupUrls.create".
     *
     * This request holds the parameters needed by the androidmanagement server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Create create() throws java.io.IOException {
      Create result = new Create();
      initialize(result);
      return result;
    }

    public class Create extends AndroidManagementRequest<com.google.api.services.androidmanagement.v1.model.SignupUrl> {

      private static final String REST_PATH = "v1/signupUrls";

      /**
       * Creates an enterprise signup URL.
       *
       * Create a request for the method "signupUrls.create".
       *
       * This request holds the parameters needed by the the androidmanagement server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Create() {
        super(AndroidManagement.this, "POST", REST_PATH, null, com.google.api.services.androidmanagement.v1.model.SignupUrl.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The callback URL that the admin will be redirected to after successfully creating an
       * enterprise. Before redirecting there the system will add a query parameter to this URL
       * named enterpriseToken which will contain an opaque token to be used for the create
       * enterprise request. The URL will be parsed then reformatted in order to add the
       * enterpriseToken parameter, so there may be some minor formatting changes.
       */
      @com.google.api.client.util.Key
      private java.lang.String callbackUrl;

      /** The callback URL that the admin will be redirected to after successfully creating an enterprise.
     Before redirecting there the system will add a query parameter to this URL named enterpriseToken
     which will contain an opaque token to be used for the create enterprise request. The URL will be
     parsed then reformatted in order to add the enterpriseToken parameter, so there may be some minor
     formatting changes.
       */
      public java.lang.String getCallbackUrl() {
        return callbackUrl;
      }

      /**
       * The callback URL that the admin will be redirected to after successfully creating an
       * enterprise. Before redirecting there the system will add a query parameter to this URL
       * named enterpriseToken which will contain an opaque token to be used for the create
       * enterprise request. The URL will be parsed then reformatted in order to add the
       * enterpriseToken parameter, so there may be some minor formatting changes.
       */
      public Create setCallbackUrl(java.lang.String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
      }

      /** The ID of the Google Cloud Platform project which will own the enterprise. */
      @com.google.api.client.util.Key
      private java.lang.String projectId;

      /** The ID of the Google Cloud Platform project which will own the enterprise.
       */
      public java.lang.String getProjectId() {
        return projectId;
      }

      /** The ID of the Google Cloud Platform project which will own the enterprise. */
      public Create setProjectId(java.lang.String projectId) {
        this.projectId = projectId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link AndroidManagement}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link AndroidManagement}. */
    @Override
    public AndroidManagement build() {
      return new AndroidManagement(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AndroidManagementRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAndroidManagementRequestInitializer(
        AndroidManagementRequestInitializer androidmanagementRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(androidmanagementRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
