/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Device network info.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NetworkInfo extends com.google.api.client.json.GenericJson {

  /**
   * IMEI number of the GSM device. For example, A1000031212.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imei;

  /**
   * MEID number of the CDMA device. For example, A00000292788E1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String meid;

  /**
   * Alphabetic name of current registered operator. For example, Vodafone.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkOperatorName;

  /**
   * Wi-Fi MAC address of the device. For example, 7c:11:11:11:11:11.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String wifiMacAddress;

  /**
   * IMEI number of the GSM device. For example, A1000031212.
   * @return value or {@code null} for none
   */
  public java.lang.String getImei() {
    return imei;
  }

  /**
   * IMEI number of the GSM device. For example, A1000031212.
   * @param imei imei or {@code null} for none
   */
  public NetworkInfo setImei(java.lang.String imei) {
    this.imei = imei;
    return this;
  }

  /**
   * MEID number of the CDMA device. For example, A00000292788E1.
   * @return value or {@code null} for none
   */
  public java.lang.String getMeid() {
    return meid;
  }

  /**
   * MEID number of the CDMA device. For example, A00000292788E1.
   * @param meid meid or {@code null} for none
   */
  public NetworkInfo setMeid(java.lang.String meid) {
    this.meid = meid;
    return this;
  }

  /**
   * Alphabetic name of current registered operator. For example, Vodafone.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkOperatorName() {
    return networkOperatorName;
  }

  /**
   * Alphabetic name of current registered operator. For example, Vodafone.
   * @param networkOperatorName networkOperatorName or {@code null} for none
   */
  public NetworkInfo setNetworkOperatorName(java.lang.String networkOperatorName) {
    this.networkOperatorName = networkOperatorName;
    return this;
  }

  /**
   * Wi-Fi MAC address of the device. For example, 7c:11:11:11:11:11.
   * @return value or {@code null} for none
   */
  public java.lang.String getWifiMacAddress() {
    return wifiMacAddress;
  }

  /**
   * Wi-Fi MAC address of the device. For example, 7c:11:11:11:11:11.
   * @param wifiMacAddress wifiMacAddress or {@code null} for none
   */
  public NetworkInfo setWifiMacAddress(java.lang.String wifiMacAddress) {
    this.wifiMacAddress = wifiMacAddress;
    return this;
  }

  @Override
  public NetworkInfo set(String fieldName, Object value) {
    return (NetworkInfo) super.set(fieldName, value);
  }

  @Override
  public NetworkInfo clone() {
    return (NetworkInfo) super.clone();
  }

}
