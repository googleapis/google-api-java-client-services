/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.partners.v2.model;

/**
 * Available Offers to be distributed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Partners API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AvailableOffer extends com.google.api.client.json.GenericJson {

  /**
   * The number of codes for this offer that are available for distribution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer available;

  /**
   * Offer info by country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CountryOfferInfo> countryOfferInfos;

  static {
    // hack to force ProGuard to consider CountryOfferInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CountryOfferInfo.class);
  }

  /**
   * Description of the offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * ID of this offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The maximum age of an account [in days] to be eligible.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxAccountAge;

  /**
   * Name of the offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Level of this offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String offerLevel;

  /**
   * Type of offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String offerType;

  /**
   * Customers who qualify for this offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<OfferCustomer> qualifiedCustomer;

  static {
    // hack to force ProGuard to consider OfferCustomer used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(OfferCustomer.class);
  }

  /**
   * Whether or not the list of qualified customers is definitely complete.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean qualifiedCustomersComplete;

  /**
   * Should special text be shown on the offers page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean showSpecialOfferCopy;

  /**
   * Terms of the offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String terms;

  /**
   * The number of codes for this offer that are available for distribution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAvailable() {
    return available;
  }

  /**
   * The number of codes for this offer that are available for distribution.
   * @param available available or {@code null} for none
   */
  public AvailableOffer setAvailable(java.lang.Integer available) {
    this.available = available;
    return this;
  }

  /**
   * Offer info by country.
   * @return value or {@code null} for none
   */
  public java.util.List<CountryOfferInfo> getCountryOfferInfos() {
    return countryOfferInfos;
  }

  /**
   * Offer info by country.
   * @param countryOfferInfos countryOfferInfos or {@code null} for none
   */
  public AvailableOffer setCountryOfferInfos(java.util.List<CountryOfferInfo> countryOfferInfos) {
    this.countryOfferInfos = countryOfferInfos;
    return this;
  }

  /**
   * Description of the offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description of the offer.
   * @param description description or {@code null} for none
   */
  public AvailableOffer setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * ID of this offer.
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * ID of this offer.
   * @param id id or {@code null} for none
   */
  public AvailableOffer setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * The maximum age of an account [in days] to be eligible.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxAccountAge() {
    return maxAccountAge;
  }

  /**
   * The maximum age of an account [in days] to be eligible.
   * @param maxAccountAge maxAccountAge or {@code null} for none
   */
  public AvailableOffer setMaxAccountAge(java.lang.Integer maxAccountAge) {
    this.maxAccountAge = maxAccountAge;
    return this;
  }

  /**
   * Name of the offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the offer.
   * @param name name or {@code null} for none
   */
  public AvailableOffer setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Level of this offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getOfferLevel() {
    return offerLevel;
  }

  /**
   * Level of this offer.
   * @param offerLevel offerLevel or {@code null} for none
   */
  public AvailableOffer setOfferLevel(java.lang.String offerLevel) {
    this.offerLevel = offerLevel;
    return this;
  }

  /**
   * Type of offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getOfferType() {
    return offerType;
  }

  /**
   * Type of offer.
   * @param offerType offerType or {@code null} for none
   */
  public AvailableOffer setOfferType(java.lang.String offerType) {
    this.offerType = offerType;
    return this;
  }

  /**
   * Customers who qualify for this offer.
   * @return value or {@code null} for none
   */
  public java.util.List<OfferCustomer> getQualifiedCustomer() {
    return qualifiedCustomer;
  }

  /**
   * Customers who qualify for this offer.
   * @param qualifiedCustomer qualifiedCustomer or {@code null} for none
   */
  public AvailableOffer setQualifiedCustomer(java.util.List<OfferCustomer> qualifiedCustomer) {
    this.qualifiedCustomer = qualifiedCustomer;
    return this;
  }

  /**
   * Whether or not the list of qualified customers is definitely complete.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getQualifiedCustomersComplete() {
    return qualifiedCustomersComplete;
  }

  /**
   * Whether or not the list of qualified customers is definitely complete.
   * @param qualifiedCustomersComplete qualifiedCustomersComplete or {@code null} for none
   */
  public AvailableOffer setQualifiedCustomersComplete(java.lang.Boolean qualifiedCustomersComplete) {
    this.qualifiedCustomersComplete = qualifiedCustomersComplete;
    return this;
  }

  /**
   * Should special text be shown on the offers page.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShowSpecialOfferCopy() {
    return showSpecialOfferCopy;
  }

  /**
   * Should special text be shown on the offers page.
   * @param showSpecialOfferCopy showSpecialOfferCopy or {@code null} for none
   */
  public AvailableOffer setShowSpecialOfferCopy(java.lang.Boolean showSpecialOfferCopy) {
    this.showSpecialOfferCopy = showSpecialOfferCopy;
    return this;
  }

  /**
   * Terms of the offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getTerms() {
    return terms;
  }

  /**
   * Terms of the offer.
   * @param terms terms or {@code null} for none
   */
  public AvailableOffer setTerms(java.lang.String terms) {
    this.terms = terms;
    return this;
  }

  @Override
  public AvailableOffer set(String fieldName, Object value) {
    return (AvailableOffer) super.set(fieldName, value);
  }

  @Override
  public AvailableOffer clone() {
    return (AvailableOffer) super.clone();
  }

}
