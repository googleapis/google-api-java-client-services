/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute;

/**
 * Service definition for Compute (v1).
 *
 * <p>
 * Creates and runs virtual machines on Google Cloud Platform.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/compute/docs/reference/latest/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ComputeRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Compute extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.27.0 of the Compute Engine API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "compute/v1/projects/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/compute/v1";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Compute(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Compute(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AcceleratorTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.AcceleratorTypes.List request = compute.acceleratorTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AcceleratorTypes acceleratorTypes() {
    return new AcceleratorTypes();
  }

  /**
   * The "acceleratorTypes" collection of methods.
   */
  public class AcceleratorTypes {

    /**
     * Retrieves an aggregated list of accelerator types.
     *
     * Create a request for the method "acceleratorTypes.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.AcceleratorTypeAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/acceleratorTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of accelerator types.
       *
       * Create a request for the method "acceleratorTypes.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AcceleratorTypeAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified accelerator type.
     *
     * Create a request for the method "acceleratorTypes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param acceleratorType Name of the accelerator type to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String acceleratorType) throws java.io.IOException {
      Get result = new Get(project, zone, acceleratorType);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.AcceleratorType> {

      private static final String REST_PATH = "{project}/zones/{zone}/acceleratorTypes/{acceleratorType}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ACCELERATOR_TYPE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified accelerator type.
       *
       * Create a request for the method "acceleratorTypes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param acceleratorType Name of the accelerator type to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String acceleratorType) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AcceleratorType.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.acceleratorType = com.google.api.client.util.Preconditions.checkNotNull(acceleratorType, "Required parameter acceleratorType must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ACCELERATOR_TYPE_PATTERN.matcher(acceleratorType).matches(),
              "Parameter acceleratorType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the accelerator type to return. */
      @com.google.api.client.util.Key
      private java.lang.String acceleratorType;

      /** Name of the accelerator type to return.
       */
      public java.lang.String getAcceleratorType() {
        return acceleratorType;
      }

      /** Name of the accelerator type to return. */
      public Get setAcceleratorType(java.lang.String acceleratorType) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ACCELERATOR_TYPE_PATTERN.matcher(acceleratorType).matches(),
              "Parameter acceleratorType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.acceleratorType = acceleratorType;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of accelerator types available to the specified project.
     *
     * Create a request for the method "acceleratorTypes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.AcceleratorTypeList> {

      private static final String REST_PATH = "{project}/zones/{zone}/acceleratorTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of accelerator types available to the specified project.
       *
       * Create a request for the method "acceleratorTypes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AcceleratorTypeList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Addresses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Addresses.List request = compute.addresses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Addresses addresses() {
    return new Addresses();
  }

  /**
   * The "addresses" collection of methods.
   */
  public class Addresses {

    /**
     * Retrieves an aggregated list of addresses.
     *
     * Create a request for the method "addresses.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.AddressAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/addresses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of addresses.
       *
       * Create a request for the method "addresses.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AddressAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified address resource.
     *
     * Create a request for the method "addresses.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param address Name of the address resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String address) throws java.io.IOException {
      Delete result = new Delete(project, region, address);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/addresses/{address}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ADDRESS_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified address resource.
       *
       * Create a request for the method "addresses.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param address Name of the address resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String address) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the address resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String address;

      /** Name of the address resource to delete.
       */
      public java.lang.String getAddress() {
        return address;
      }

      /** Name of the address resource to delete. */
      public Delete setAddress(java.lang.String address) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = address;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified address resource.
     *
     * Create a request for the method "addresses.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param address Name of the address resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String address) throws java.io.IOException {
      Get result = new Get(project, region, address);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Address> {

      private static final String REST_PATH = "{project}/regions/{region}/addresses/{address}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ADDRESS_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified address resource.
       *
       * Create a request for the method "addresses.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param address Name of the address resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String address) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Address.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the address resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String address;

      /** Name of the address resource to return.
       */
      public java.lang.String getAddress() {
        return address;
      }

      /** Name of the address resource to return. */
      public Get setAddress(java.lang.String address) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = address;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an address resource in the specified project using the data included in the request.
     *
     * Create a request for the method "addresses.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.Address}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Address content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/addresses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates an address resource in the specified project using the data included in the request.
       *
       * Create a request for the method "addresses.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.Address}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Address content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of addresses contained within the specified region.
     *
     * Create a request for the method "addresses.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.AddressList> {

      private static final String REST_PATH = "{project}/regions/{region}/addresses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of addresses contained within the specified region.
       *
       * Create a request for the method "addresses.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AddressList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Autoscalers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Autoscalers.List request = compute.autoscalers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Autoscalers autoscalers() {
    return new Autoscalers();
  }

  /**
   * The "autoscalers" collection of methods.
   */
  public class Autoscalers {

    /**
     * Retrieves an aggregated list of autoscalers.
     *
     * Create a request for the method "autoscalers.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.AutoscalerAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of autoscalers.
       *
       * Create a request for the method "autoscalers.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AutoscalerAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified autoscaler.
     *
     * Create a request for the method "autoscalers.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param autoscaler Name of the autoscaler to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String autoscaler) throws java.io.IOException {
      Delete result = new Delete(project, zone, autoscaler);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers/{autoscaler}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified autoscaler.
       *
       * Create a request for the method "autoscalers.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param autoscaler Name of the autoscaler to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String autoscaler) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = com.google.api.client.util.Preconditions.checkNotNull(autoscaler, "Required parameter autoscaler must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the autoscaler to delete. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to delete.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to delete. */
      public Delete setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified autoscaler resource. Gets a list of available autoscalers by making a
     * list() request.
     *
     * Create a request for the method "autoscalers.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param autoscaler Name of the autoscaler to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String autoscaler) throws java.io.IOException {
      Get result = new Get(project, zone, autoscaler);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Autoscaler> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers/{autoscaler}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified autoscaler resource. Gets a list of available autoscalers by making a
       * list() request.
       *
       * Create a request for the method "autoscalers.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param autoscaler Name of the autoscaler to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String autoscaler) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Autoscaler.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = com.google.api.client.util.Preconditions.checkNotNull(autoscaler, "Required parameter autoscaler must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the autoscaler to return. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to return.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to return. */
      public Get setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an autoscaler in the specified project using the data included in the request.
     *
     * Create a request for the method "autoscalers.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates an autoscaler in the specified project using the data included in the request.
       *
       * Create a request for the method "autoscalers.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Insert setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of autoscalers contained within the specified zone.
     *
     * Create a request for the method "autoscalers.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.AutoscalerList> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of autoscalers contained within the specified zone.
       *
       * Create a request for the method "autoscalers.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AutoscalerList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an autoscaler in the specified project using the data included in the request. This
     * method supports PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "autoscalers.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Patch result = new Patch(project, zone, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates an autoscaler in the specified project using the data included in the request. This
       * method supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "autoscalers.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Patch setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the autoscaler to patch. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to patch.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to patch. */
      public Patch setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates an autoscaler in the specified project using the data included in the request.
     *
     * Create a request for the method "autoscalers.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Update result = new Update(project, zone, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates an autoscaler in the specified project using the data included in the request.
       *
       * Create a request for the method "autoscalers.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Update setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the autoscaler to update. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to update.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to update. */
      public Update setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the BackendBuckets collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.BackendBuckets.List request = compute.backendBuckets().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public BackendBuckets backendBuckets() {
    return new BackendBuckets();
  }

  /**
   * The "backendBuckets" collection of methods.
   */
  public class BackendBuckets {

    /**
     * Adds a key for validating requests with signed URLs for this backend bucket.
     *
     * Create a request for the method "backendBuckets.addSignedUrlKey".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddSignedUrlKey#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SignedUrlKey}
     * @return the request
     */
    public AddSignedUrlKey addSignedUrlKey(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.SignedUrlKey content) throws java.io.IOException {
      AddSignedUrlKey result = new AddSignedUrlKey(project, backendBucket, content);
      initialize(result);
      return result;
    }

    public class AddSignedUrlKey extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}/addSignedUrlKey";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Adds a key for validating requests with signed URLs for this backend bucket.
       *
       * Create a request for the method "backendBuckets.addSignedUrlKey".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddSignedUrlKey#execute()} method to invoke the remote operation.
       * <p> {@link AddSignedUrlKey#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SignedUrlKey}
       * @since 1.13
       */
      protected AddSignedUrlKey(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.SignedUrlKey content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
      }

      @Override
      public AddSignedUrlKey setAlt(java.lang.String alt) {
        return (AddSignedUrlKey) super.setAlt(alt);
      }

      @Override
      public AddSignedUrlKey setFields(java.lang.String fields) {
        return (AddSignedUrlKey) super.setFields(fields);
      }

      @Override
      public AddSignedUrlKey setKey(java.lang.String key) {
        return (AddSignedUrlKey) super.setKey(key);
      }

      @Override
      public AddSignedUrlKey setOauthToken(java.lang.String oauthToken) {
        return (AddSignedUrlKey) super.setOauthToken(oauthToken);
      }

      @Override
      public AddSignedUrlKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddSignedUrlKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddSignedUrlKey setQuotaUser(java.lang.String quotaUser) {
        return (AddSignedUrlKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddSignedUrlKey setUserIp(java.lang.String userIp) {
        return (AddSignedUrlKey) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddSignedUrlKey setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the BackendBucket resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     conform to RFC1035.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /**
       * Name of the BackendBucket resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      public AddSignedUrlKey setBackendBucket(java.lang.String backendBucket) {
        this.backendBucket = backendBucket;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddSignedUrlKey setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddSignedUrlKey set(String parameterName, Object value) {
        return (AddSignedUrlKey) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified BackendBucket resource.
     *
     * Create a request for the method "backendBuckets.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String backendBucket) throws java.io.IOException {
      Delete result = new Delete(project, backendBucket);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_BUCKET_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified BackendBucket resource.
       *
       * Create a request for the method "backendBuckets.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String backendBucket) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendBucket resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to delete.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /** Name of the BackendBucket resource to delete. */
      public Delete setBackendBucket(java.lang.String backendBucket) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendBucket = backendBucket;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a key for validating requests with signed URLs for this backend bucket.
     *
     * Create a request for the method "backendBuckets.deleteSignedUrlKey".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteSignedUrlKey#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
     * @param keyName The name of the Signed URL Key to delete.
     * @return the request
     */
    public DeleteSignedUrlKey deleteSignedUrlKey(java.lang.String project, java.lang.String backendBucket, java.lang.String keyName) throws java.io.IOException {
      DeleteSignedUrlKey result = new DeleteSignedUrlKey(project, backendBucket, keyName);
      initialize(result);
      return result;
    }

    public class DeleteSignedUrlKey extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}/deleteSignedUrlKey";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes a key for validating requests with signed URLs for this backend bucket.
       *
       * Create a request for the method "backendBuckets.deleteSignedUrlKey".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteSignedUrlKey#execute()} method to invoke the remote
       * operation. <p> {@link DeleteSignedUrlKey#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
       * @param keyName The name of the Signed URL Key to delete.
       * @since 1.13
       */
      protected DeleteSignedUrlKey(java.lang.String project, java.lang.String backendBucket, java.lang.String keyName) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
        this.keyName = com.google.api.client.util.Preconditions.checkNotNull(keyName, "Required parameter keyName must be specified.");
      }

      @Override
      public DeleteSignedUrlKey setAlt(java.lang.String alt) {
        return (DeleteSignedUrlKey) super.setAlt(alt);
      }

      @Override
      public DeleteSignedUrlKey setFields(java.lang.String fields) {
        return (DeleteSignedUrlKey) super.setFields(fields);
      }

      @Override
      public DeleteSignedUrlKey setKey(java.lang.String key) {
        return (DeleteSignedUrlKey) super.setKey(key);
      }

      @Override
      public DeleteSignedUrlKey setOauthToken(java.lang.String oauthToken) {
        return (DeleteSignedUrlKey) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteSignedUrlKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteSignedUrlKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteSignedUrlKey setQuotaUser(java.lang.String quotaUser) {
        return (DeleteSignedUrlKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteSignedUrlKey setUserIp(java.lang.String userIp) {
        return (DeleteSignedUrlKey) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteSignedUrlKey setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the BackendBucket resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to which the Signed URL Key should be added. The name should
     conform to RFC1035.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /**
       * Name of the BackendBucket resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      public DeleteSignedUrlKey setBackendBucket(java.lang.String backendBucket) {
        this.backendBucket = backendBucket;
        return this;
      }

      /** The name of the Signed URL Key to delete. */
      @com.google.api.client.util.Key
      private java.lang.String keyName;

      /** The name of the Signed URL Key to delete.
       */
      public java.lang.String getKeyName() {
        return keyName;
      }

      /** The name of the Signed URL Key to delete. */
      public DeleteSignedUrlKey setKeyName(java.lang.String keyName) {
        this.keyName = keyName;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteSignedUrlKey setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteSignedUrlKey set(String parameterName, Object value) {
        return (DeleteSignedUrlKey) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified BackendBucket resource. Gets a list of available backend buckets by making
     * a list() request.
     *
     * Create a request for the method "backendBuckets.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String backendBucket) throws java.io.IOException {
      Get result = new Get(project, backendBucket);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.BackendBucket> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_BUCKET_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified BackendBucket resource. Gets a list of available backend buckets by
       * making a list() request.
       *
       * Create a request for the method "backendBuckets.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String backendBucket) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendBucket.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendBucket resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to return.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /** Name of the BackendBucket resource to return. */
      public Get setBackendBucket(java.lang.String backendBucket) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendBucket = backendBucket;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a BackendBucket resource in the specified project using the data included in the request.
     *
     * Create a request for the method "backendBuckets.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.BackendBucket}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.BackendBucket content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a BackendBucket resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "backendBuckets.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.BackendBucket}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.BackendBucket content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of BackendBucket resources available to the specified project.
     *
     * Create a request for the method "backendBuckets.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.BackendBucketList> {

      private static final String REST_PATH = "{project}/global/backendBuckets";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of BackendBucket resources available to the specified project.
       *
       * Create a request for the method "backendBuckets.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendBucketList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified BackendBucket resource with the data included in the request. This method
     * supports PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "backendBuckets.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to patch.
     * @param content the {@link com.google.api.services.compute.model.BackendBucket}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.BackendBucket content) throws java.io.IOException {
      Patch result = new Patch(project, backendBucket, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_BUCKET_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified BackendBucket resource with the data included in the request. This method
       * supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "backendBuckets.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to patch.
       * @param content the {@link com.google.api.services.compute.model.BackendBucket}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.BackendBucket content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendBucket resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to patch.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /** Name of the BackendBucket resource to patch. */
      public Patch setBackendBucket(java.lang.String backendBucket) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendBucket = backendBucket;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified BackendBucket resource with the data included in the request.
     *
     * Create a request for the method "backendBuckets.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendBucket Name of the BackendBucket resource to update.
     * @param content the {@link com.google.api.services.compute.model.BackendBucket}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.BackendBucket content) throws java.io.IOException {
      Update result = new Update(project, backendBucket, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendBuckets/{backendBucket}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_BUCKET_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified BackendBucket resource with the data included in the request.
       *
       * Create a request for the method "backendBuckets.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendBucket Name of the BackendBucket resource to update.
       * @param content the {@link com.google.api.services.compute.model.BackendBucket}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String backendBucket, com.google.api.services.compute.model.BackendBucket content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendBucket = com.google.api.client.util.Preconditions.checkNotNull(backendBucket, "Required parameter backendBucket must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendBucket resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String backendBucket;

      /** Name of the BackendBucket resource to update.
       */
      public java.lang.String getBackendBucket() {
        return backendBucket;
      }

      /** Name of the BackendBucket resource to update. */
      public Update setBackendBucket(java.lang.String backendBucket) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_BUCKET_PATTERN.matcher(backendBucket).matches(),
              "Parameter backendBucket must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendBucket = backendBucket;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the BackendServices collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.BackendServices.List request = compute.backendServices().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public BackendServices backendServices() {
    return new BackendServices();
  }

  /**
   * The "backendServices" collection of methods.
   */
  public class BackendServices {

    /**
     * Adds a key for validating requests with signed URLs for this backend service.
     *
     * Create a request for the method "backendServices.addSignedUrlKey".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddSignedUrlKey#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SignedUrlKey}
     * @return the request
     */
    public AddSignedUrlKey addSignedUrlKey(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.SignedUrlKey content) throws java.io.IOException {
      AddSignedUrlKey result = new AddSignedUrlKey(project, backendService, content);
      initialize(result);
      return result;
    }

    public class AddSignedUrlKey extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}/addSignedUrlKey";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Adds a key for validating requests with signed URLs for this backend service.
       *
       * Create a request for the method "backendServices.addSignedUrlKey".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddSignedUrlKey#execute()} method to invoke the remote operation.
       * <p> {@link AddSignedUrlKey#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SignedUrlKey}
       * @since 1.13
       */
      protected AddSignedUrlKey(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.SignedUrlKey content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
      }

      @Override
      public AddSignedUrlKey setAlt(java.lang.String alt) {
        return (AddSignedUrlKey) super.setAlt(alt);
      }

      @Override
      public AddSignedUrlKey setFields(java.lang.String fields) {
        return (AddSignedUrlKey) super.setFields(fields);
      }

      @Override
      public AddSignedUrlKey setKey(java.lang.String key) {
        return (AddSignedUrlKey) super.setKey(key);
      }

      @Override
      public AddSignedUrlKey setOauthToken(java.lang.String oauthToken) {
        return (AddSignedUrlKey) super.setOauthToken(oauthToken);
      }

      @Override
      public AddSignedUrlKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddSignedUrlKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddSignedUrlKey setQuotaUser(java.lang.String quotaUser) {
        return (AddSignedUrlKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddSignedUrlKey setUserIp(java.lang.String userIp) {
        return (AddSignedUrlKey) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddSignedUrlKey setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the BackendService resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to which the Signed URL Key should be added. The name should
     conform to RFC1035.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /**
       * Name of the BackendService resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      public AddSignedUrlKey setBackendService(java.lang.String backendService) {
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddSignedUrlKey setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddSignedUrlKey set(String parameterName, Object value) {
        return (AddSignedUrlKey) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of all BackendService resources, regional and global, available to the
     * specified project.
     *
     * Create a request for the method "backendServices.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Name of the project scoping this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.BackendServiceAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/backendServices";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of all BackendService resources, regional and global, available to the
       * specified project.
       *
       * Create a request for the method "backendServices.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Name of the project scoping this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendServiceAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Name of the project scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Name of the project scoping this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Name of the project scoping this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified BackendService resource.
     *
     * Create a request for the method "backendServices.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String backendService) throws java.io.IOException {
      Delete result = new Delete(project, backendService);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified BackendService resource.
       *
       * Create a request for the method "backendServices.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String backendService) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendService resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to delete.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to delete. */
      public Delete setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a key for validating requests with signed URLs for this backend service.
     *
     * Create a request for the method "backendServices.deleteSignedUrlKey".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteSignedUrlKey#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
     * @param keyName The name of the Signed URL Key to delete.
     * @return the request
     */
    public DeleteSignedUrlKey deleteSignedUrlKey(java.lang.String project, java.lang.String backendService, java.lang.String keyName) throws java.io.IOException {
      DeleteSignedUrlKey result = new DeleteSignedUrlKey(project, backendService, keyName);
      initialize(result);
      return result;
    }

    public class DeleteSignedUrlKey extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}/deleteSignedUrlKey";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes a key for validating requests with signed URLs for this backend service.
       *
       * Create a request for the method "backendServices.deleteSignedUrlKey".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteSignedUrlKey#execute()} method to invoke the remote
       * operation. <p> {@link DeleteSignedUrlKey#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to which the Signed URL Key should be added. The name should
     *        conform to RFC1035.
       * @param keyName The name of the Signed URL Key to delete.
       * @since 1.13
       */
      protected DeleteSignedUrlKey(java.lang.String project, java.lang.String backendService, java.lang.String keyName) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        this.keyName = com.google.api.client.util.Preconditions.checkNotNull(keyName, "Required parameter keyName must be specified.");
      }

      @Override
      public DeleteSignedUrlKey setAlt(java.lang.String alt) {
        return (DeleteSignedUrlKey) super.setAlt(alt);
      }

      @Override
      public DeleteSignedUrlKey setFields(java.lang.String fields) {
        return (DeleteSignedUrlKey) super.setFields(fields);
      }

      @Override
      public DeleteSignedUrlKey setKey(java.lang.String key) {
        return (DeleteSignedUrlKey) super.setKey(key);
      }

      @Override
      public DeleteSignedUrlKey setOauthToken(java.lang.String oauthToken) {
        return (DeleteSignedUrlKey) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteSignedUrlKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteSignedUrlKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteSignedUrlKey setQuotaUser(java.lang.String quotaUser) {
        return (DeleteSignedUrlKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteSignedUrlKey setUserIp(java.lang.String userIp) {
        return (DeleteSignedUrlKey) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteSignedUrlKey setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the BackendService resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to which the Signed URL Key should be added. The name should
     conform to RFC1035.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /**
       * Name of the BackendService resource to which the Signed URL Key should be added. The name
       * should conform to RFC1035.
       */
      public DeleteSignedUrlKey setBackendService(java.lang.String backendService) {
        this.backendService = backendService;
        return this;
      }

      /** The name of the Signed URL Key to delete. */
      @com.google.api.client.util.Key
      private java.lang.String keyName;

      /** The name of the Signed URL Key to delete.
       */
      public java.lang.String getKeyName() {
        return keyName;
      }

      /** The name of the Signed URL Key to delete. */
      public DeleteSignedUrlKey setKeyName(java.lang.String keyName) {
        this.keyName = keyName;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteSignedUrlKey setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteSignedUrlKey set(String parameterName, Object value) {
        return (DeleteSignedUrlKey) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified BackendService resource. Gets a list of available backend services by
     * making a list() request.
     *
     * Create a request for the method "backendServices.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String backendService) throws java.io.IOException {
      Get result = new Get(project, backendService);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.BackendService> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified BackendService resource. Gets a list of available backend services by
       * making a list() request.
       *
       * Create a request for the method "backendServices.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String backendService) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendService.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendService resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to return.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to return. */
      public Get setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets the most recent health check results for this BackendService.
     *
     * Create a request for the method "backendServices.getHealth".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation.
     *
     * @param project
     * @param backendService Name of the BackendService resource to which the queried instance belongs.
     * @param content the {@link com.google.api.services.compute.model.ResourceGroupReference}
     * @return the request
     */
    public GetHealth getHealth(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.ResourceGroupReference content) throws java.io.IOException {
      GetHealth result = new GetHealth(project, backendService, content);
      initialize(result);
      return result;
    }

    public class GetHealth extends ComputeRequest<com.google.api.services.compute.model.BackendServiceGroupHealth> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}/getHealth";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Gets the most recent health check results for this BackendService.
       *
       * Create a request for the method "backendServices.getHealth".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetHealth#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project
       * @param backendService Name of the BackendService resource to which the queried instance belongs.
       * @param content the {@link com.google.api.services.compute.model.ResourceGroupReference}
       * @since 1.13
       */
      protected GetHealth(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.ResourceGroupReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.BackendServiceGroupHealth.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public GetHealth setAlt(java.lang.String alt) {
        return (GetHealth) super.setAlt(alt);
      }

      @Override
      public GetHealth setFields(java.lang.String fields) {
        return (GetHealth) super.setFields(fields);
      }

      @Override
      public GetHealth setKey(java.lang.String key) {
        return (GetHealth) super.setKey(key);
      }

      @Override
      public GetHealth setOauthToken(java.lang.String oauthToken) {
        return (GetHealth) super.setOauthToken(oauthToken);
      }

      @Override
      public GetHealth setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetHealth) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetHealth setQuotaUser(java.lang.String quotaUser) {
        return (GetHealth) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetHealth setUserIp(java.lang.String userIp) {
        return (GetHealth) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String project;

      /**

       */
      public java.lang.String getProject() {
        return project;
      }

      public GetHealth setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendService resource to which the queried instance belongs. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to which the queried instance belongs.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to which the queried instance belongs. */
      public GetHealth setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      @Override
      public GetHealth set(String parameterName, Object value) {
        return (GetHealth) super.set(parameterName, value);
      }
    }
    /**
     * Creates a BackendService resource in the specified project using the data included in the
     * request. There are several restrictions and guidelines to keep in mind when creating a backend
     * service. Read  Restrictions and Guidelines for more information.
     *
     * Create a request for the method "backendServices.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a BackendService resource in the specified project using the data included in the
       * request. There are several restrictions and guidelines to keep in mind when creating a backend
       * service. Read  Restrictions and Guidelines for more information.
       *
       * Create a request for the method "backendServices.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of BackendService resources available to the specified project.
     *
     * Create a request for the method "backendServices.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.BackendServiceList> {

      private static final String REST_PATH = "{project}/global/backendServices";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of BackendService resources available to the specified project.
       *
       * Create a request for the method "backendServices.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendServiceList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified BackendService resource with the data included in the request. There are
     * several restrictions and guidelines to keep in mind when updating a backend service. Read
     * Restrictions and Guidelines for more information. This method supports PATCH semantics and uses
     * the JSON merge patch format and processing rules.
     *
     * Create a request for the method "backendServices.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to patch.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Patch result = new Patch(project, backendService, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified BackendService resource with the data included in the request. There are
       * several restrictions and guidelines to keep in mind when updating a backend service. Read
       * Restrictions and Guidelines for more information. This method supports PATCH semantics and uses
       * the JSON merge patch format and processing rules.
       *
       * Create a request for the method "backendServices.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to patch.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendService resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to patch.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to patch. */
      public Patch setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Sets the security policy for the specified backend service.
     *
     * Create a request for the method "backendServices.setSecurityPolicy".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetSecurityPolicy#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to which the security policy should be set. The name should
     *        conform to RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SecurityPolicyReference}
     * @return the request
     */
    public SetSecurityPolicy setSecurityPolicy(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.SecurityPolicyReference content) throws java.io.IOException {
      SetSecurityPolicy result = new SetSecurityPolicy(project, backendService, content);
      initialize(result);
      return result;
    }

    public class SetSecurityPolicy extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}/setSecurityPolicy";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the security policy for the specified backend service.
       *
       * Create a request for the method "backendServices.setSecurityPolicy".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetSecurityPolicy#execute()} method to invoke the remote operation.
       * <p> {@link SetSecurityPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to which the security policy should be set. The name should
     *        conform to RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SecurityPolicyReference}
       * @since 1.13
       */
      protected SetSecurityPolicy(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.SecurityPolicyReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
      }

      @Override
      public SetSecurityPolicy setAlt(java.lang.String alt) {
        return (SetSecurityPolicy) super.setAlt(alt);
      }

      @Override
      public SetSecurityPolicy setFields(java.lang.String fields) {
        return (SetSecurityPolicy) super.setFields(fields);
      }

      @Override
      public SetSecurityPolicy setKey(java.lang.String key) {
        return (SetSecurityPolicy) super.setKey(key);
      }

      @Override
      public SetSecurityPolicy setOauthToken(java.lang.String oauthToken) {
        return (SetSecurityPolicy) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSecurityPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSecurityPolicy) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSecurityPolicy setQuotaUser(java.lang.String quotaUser) {
        return (SetSecurityPolicy) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSecurityPolicy setUserIp(java.lang.String userIp) {
        return (SetSecurityPolicy) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetSecurityPolicy setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the BackendService resource to which the security policy should be set. The name
       * should conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to which the security policy should be set. The name should
     conform to RFC1035.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /**
       * Name of the BackendService resource to which the security policy should be set. The name
       * should conform to RFC1035.
       */
      public SetSecurityPolicy setBackendService(java.lang.String backendService) {
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetSecurityPolicy setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetSecurityPolicy set(String parameterName, Object value) {
        return (SetSecurityPolicy) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified BackendService resource with the data included in the request. There are
     * several restrictions and guidelines to keep in mind when updating a backend service. Read
     * Restrictions and Guidelines for more information.
     *
     * Create a request for the method "backendServices.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param backendService Name of the BackendService resource to update.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Update result = new Update(project, backendService, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified BackendService resource with the data included in the request. There are
       * several restrictions and guidelines to keep in mind when updating a backend service. Read
       * Restrictions and Guidelines for more information.
       *
       * Create a request for the method "backendServices.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param backendService Name of the BackendService resource to update.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the BackendService resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to update.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to update. */
      public Update setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the DiskTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.DiskTypes.List request = compute.diskTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public DiskTypes diskTypes() {
    return new DiskTypes();
  }

  /**
   * The "diskTypes" collection of methods.
   */
  public class DiskTypes {

    /**
     * Retrieves an aggregated list of disk types.
     *
     * Create a request for the method "diskTypes.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.DiskTypeAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/diskTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of disk types.
       *
       * Create a request for the method "diskTypes.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskTypeAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified disk type. Gets a list of available disk types by making a list() request.
     *
     * Create a request for the method "diskTypes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param diskType Name of the disk type to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String diskType) throws java.io.IOException {
      Get result = new Get(project, zone, diskType);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.DiskType> {

      private static final String REST_PATH = "{project}/zones/{zone}/diskTypes/{diskType}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_TYPE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified disk type. Gets a list of available disk types by making a list()
       * request.
       *
       * Create a request for the method "diskTypes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param diskType Name of the disk type to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String diskType) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskType.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.diskType = com.google.api.client.util.Preconditions.checkNotNull(diskType, "Required parameter diskType must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_TYPE_PATTERN.matcher(diskType).matches(),
              "Parameter diskType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the disk type to return. */
      @com.google.api.client.util.Key
      private java.lang.String diskType;

      /** Name of the disk type to return.
       */
      public java.lang.String getDiskType() {
        return diskType;
      }

      /** Name of the disk type to return. */
      public Get setDiskType(java.lang.String diskType) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_TYPE_PATTERN.matcher(diskType).matches(),
              "Parameter diskType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.diskType = diskType;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of disk types available to the specified project.
     *
     * Create a request for the method "diskTypes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.DiskTypeList> {

      private static final String REST_PATH = "{project}/zones/{zone}/diskTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of disk types available to the specified project.
       *
       * Create a request for the method "diskTypes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskTypeList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Disks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Disks.List request = compute.disks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Disks disks() {
    return new Disks();
  }

  /**
   * The "disks" collection of methods.
   */
  public class Disks {

    /**
     * Retrieves an aggregated list of persistent disks.
     *
     * Create a request for the method "disks.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.DiskAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/disks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of persistent disks.
       *
       * Create a request for the method "disks.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Creates a snapshot of a specified persistent disk.
     *
     * Create a request for the method "disks.createSnapshot".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link CreateSnapshot#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param disk Name of the persistent disk to snapshot.
     * @param content the {@link com.google.api.services.compute.model.Snapshot}
     * @return the request
     */
    public CreateSnapshot createSnapshot(java.lang.String project, java.lang.String zone, java.lang.String disk, com.google.api.services.compute.model.Snapshot content) throws java.io.IOException {
      CreateSnapshot result = new CreateSnapshot(project, zone, disk, content);
      initialize(result);
      return result;
    }

    public class CreateSnapshot extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks/{disk}/createSnapshot";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a snapshot of a specified persistent disk.
       *
       * Create a request for the method "disks.createSnapshot".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link CreateSnapshot#execute()} method to invoke the remote operation.
       * <p> {@link CreateSnapshot#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param disk Name of the persistent disk to snapshot.
       * @param content the {@link com.google.api.services.compute.model.Snapshot}
       * @since 1.13
       */
      protected CreateSnapshot(java.lang.String project, java.lang.String zone, java.lang.String disk, com.google.api.services.compute.model.Snapshot content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public CreateSnapshot setAlt(java.lang.String alt) {
        return (CreateSnapshot) super.setAlt(alt);
      }

      @Override
      public CreateSnapshot setFields(java.lang.String fields) {
        return (CreateSnapshot) super.setFields(fields);
      }

      @Override
      public CreateSnapshot setKey(java.lang.String key) {
        return (CreateSnapshot) super.setKey(key);
      }

      @Override
      public CreateSnapshot setOauthToken(java.lang.String oauthToken) {
        return (CreateSnapshot) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateSnapshot setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateSnapshot) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateSnapshot setQuotaUser(java.lang.String quotaUser) {
        return (CreateSnapshot) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateSnapshot setUserIp(java.lang.String userIp) {
        return (CreateSnapshot) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public CreateSnapshot setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public CreateSnapshot setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the persistent disk to snapshot. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the persistent disk to snapshot.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the persistent disk to snapshot. */
      public CreateSnapshot setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = disk;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean guestFlush;

      /**

       */
      public java.lang.Boolean getGuestFlush() {
        return guestFlush;
      }

      public CreateSnapshot setGuestFlush(java.lang.Boolean guestFlush) {
        this.guestFlush = guestFlush;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public CreateSnapshot setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public CreateSnapshot set(String parameterName, Object value) {
        return (CreateSnapshot) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified persistent disk. Deleting a disk removes its data permanently and is
     * irreversible. However, deleting a disk does not delete any snapshots previously made from the
     * disk. You must separately delete snapshots.
     *
     * Create a request for the method "disks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param disk Name of the persistent disk to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String disk) throws java.io.IOException {
      Delete result = new Delete(project, zone, disk);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks/{disk}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified persistent disk. Deleting a disk removes its data permanently and is
       * irreversible. However, deleting a disk does not delete any snapshots previously made from the
       * disk. You must separately delete snapshots.
       *
       * Create a request for the method "disks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param disk Name of the persistent disk to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String disk) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the persistent disk to delete. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the persistent disk to delete.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the persistent disk to delete. */
      public Delete setDisk(java.lang.String disk) {
        this.disk = disk;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns a specified persistent disk. Gets a list of available persistent disks by making a list()
     * request.
     *
     * Create a request for the method "disks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param disk Name of the persistent disk to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String disk) throws java.io.IOException {
      Get result = new Get(project, zone, disk);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Disk> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks/{disk}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns a specified persistent disk. Gets a list of available persistent disks by making a
       * list() request.
       *
       * Create a request for the method "disks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param disk Name of the persistent disk to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String disk) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Disk.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the persistent disk to return. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the persistent disk to return.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the persistent disk to return. */
      public Get setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.disk = disk;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a persistent disk in the specified project using the data in the request. You can create
     * a disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by omitting all
     * properties. You can also create a disk that is larger than the default size by specifying the
     * sizeGb property.
     *
     * Create a request for the method "disks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param content the {@link com.google.api.services.compute.model.Disk}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Disk content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a persistent disk in the specified project using the data in the request. You can
       * create a disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by
       * omitting all properties. You can also create a disk that is larger than the default size by
       * specifying the sizeGb property.
       *
       * Create a request for the method "disks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param content the {@link com.google.api.services.compute.model.Disk}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Disk content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Insert setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      /** Optional. Source image to restore onto a disk. */
      @com.google.api.client.util.Key
      private java.lang.String sourceImage;

      /** Optional. Source image to restore onto a disk.
       */
      public java.lang.String getSourceImage() {
        return sourceImage;
      }

      /** Optional. Source image to restore onto a disk. */
      public Insert setSourceImage(java.lang.String sourceImage) {
        this.sourceImage = sourceImage;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of persistent disks contained within the specified zone.
     *
     * Create a request for the method "disks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.DiskList> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of persistent disks contained within the specified zone.
       *
       * Create a request for the method "disks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Resizes the specified persistent disk. You can only increase the size of the disk.
     *
     * Create a request for the method "disks.resize".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Resize#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param disk The name of the persistent disk.
     * @param content the {@link com.google.api.services.compute.model.DisksResizeRequest}
     * @return the request
     */
    public Resize resize(java.lang.String project, java.lang.String zone, java.lang.String disk, com.google.api.services.compute.model.DisksResizeRequest content) throws java.io.IOException {
      Resize result = new Resize(project, zone, disk, content);
      initialize(result);
      return result;
    }

    public class Resize extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks/{disk}/resize";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Resizes the specified persistent disk. You can only increase the size of the disk.
       *
       * Create a request for the method "disks.resize".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Resize#execute()} method to invoke the remote operation. <p> {@link
       * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param disk The name of the persistent disk.
       * @param content the {@link com.google.api.services.compute.model.DisksResizeRequest}
       * @since 1.13
       */
      protected Resize(java.lang.String project, java.lang.String zone, java.lang.String disk, com.google.api.services.compute.model.DisksResizeRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Resize setAlt(java.lang.String alt) {
        return (Resize) super.setAlt(alt);
      }

      @Override
      public Resize setFields(java.lang.String fields) {
        return (Resize) super.setFields(fields);
      }

      @Override
      public Resize setKey(java.lang.String key) {
        return (Resize) super.setKey(key);
      }

      @Override
      public Resize setOauthToken(java.lang.String oauthToken) {
        return (Resize) super.setOauthToken(oauthToken);
      }

      @Override
      public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resize) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resize setQuotaUser(java.lang.String quotaUser) {
        return (Resize) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resize setUserIp(java.lang.String userIp) {
        return (Resize) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Resize setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Resize setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The name of the persistent disk. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** The name of the persistent disk.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** The name of the persistent disk. */
      public Resize setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = disk;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Resize setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Resize set(String parameterName, Object value) {
        return (Resize) super.set(parameterName, value);
      }
    }
    /**
     * Sets the labels on a disk. To learn more about labels, read the Labeling Resources documentation.
     *
     * Create a request for the method "disks.setLabels".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param resource Name of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.ZoneSetLabelsRequest}
     * @return the request
     */
    public SetLabels setLabels(java.lang.String project, java.lang.String zone, java.lang.String resource, com.google.api.services.compute.model.ZoneSetLabelsRequest content) throws java.io.IOException {
      SetLabels result = new SetLabels(project, zone, resource, content);
      initialize(result);
      return result;
    }

    public class SetLabels extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/disks/{resource}/setLabels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets the labels on a disk. To learn more about labels, read the Labeling Resources
       * documentation.
       *
       * Create a request for the method "disks.setLabels".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param resource Name of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.ZoneSetLabelsRequest}
       * @since 1.13
       */
      protected SetLabels(java.lang.String project, java.lang.String zone, java.lang.String resource, com.google.api.services.compute.model.ZoneSetLabelsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetLabels setAlt(java.lang.String alt) {
        return (SetLabels) super.setAlt(alt);
      }

      @Override
      public SetLabels setFields(java.lang.String fields) {
        return (SetLabels) super.setFields(fields);
      }

      @Override
      public SetLabels setKey(java.lang.String key) {
        return (SetLabels) super.setKey(key);
      }

      @Override
      public SetLabels setOauthToken(java.lang.String oauthToken) {
        return (SetLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public SetLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetLabels setQuotaUser(java.lang.String quotaUser) {
        return (SetLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetLabels setUserIp(java.lang.String userIp) {
        return (SetLabels) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetLabels setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetLabels setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name of the resource for this request. */
      public SetLabels setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = resource;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetLabels setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetLabels set(String parameterName, Object value) {
        return (SetLabels) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Firewalls collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Firewalls.List request = compute.firewalls().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Firewalls firewalls() {
    return new Firewalls();
  }

  /**
   * The "firewalls" collection of methods.
   */
  public class Firewalls {

    /**
     * Deletes the specified firewall.
     *
     * Create a request for the method "firewalls.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param firewall Name of the firewall rule to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String firewall) throws java.io.IOException {
      Delete result = new Delete(project, firewall);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/firewalls/{firewall}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FIREWALL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified firewall.
       *
       * Create a request for the method "firewalls.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param firewall Name of the firewall rule to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String firewall) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.firewall = com.google.api.client.util.Preconditions.checkNotNull(firewall, "Required parameter firewall must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the firewall rule to delete. */
      @com.google.api.client.util.Key
      private java.lang.String firewall;

      /** Name of the firewall rule to delete.
       */
      public java.lang.String getFirewall() {
        return firewall;
      }

      /** Name of the firewall rule to delete. */
      public Delete setFirewall(java.lang.String firewall) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.firewall = firewall;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified firewall.
     *
     * Create a request for the method "firewalls.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param firewall Name of the firewall rule to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String firewall) throws java.io.IOException {
      Get result = new Get(project, firewall);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Firewall> {

      private static final String REST_PATH = "{project}/global/firewalls/{firewall}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FIREWALL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified firewall.
       *
       * Create a request for the method "firewalls.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param firewall Name of the firewall rule to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String firewall) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Firewall.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.firewall = com.google.api.client.util.Preconditions.checkNotNull(firewall, "Required parameter firewall must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the firewall rule to return. */
      @com.google.api.client.util.Key
      private java.lang.String firewall;

      /** Name of the firewall rule to return.
       */
      public java.lang.String getFirewall() {
        return firewall;
      }

      /** Name of the firewall rule to return. */
      public Get setFirewall(java.lang.String firewall) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.firewall = firewall;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a firewall rule in the specified project using the data included in the request.
     *
     * Create a request for the method "firewalls.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Firewall}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Firewall content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/firewalls";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a firewall rule in the specified project using the data included in the request.
       *
       * Create a request for the method "firewalls.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Firewall}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Firewall content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of firewall rules available to the specified project.
     *
     * Create a request for the method "firewalls.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.FirewallList> {

      private static final String REST_PATH = "{project}/global/firewalls";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of firewall rules available to the specified project.
       *
       * Create a request for the method "firewalls.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.FirewallList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified firewall rule with the data included in the request. This method supports
     * PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "firewalls.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param firewall Name of the firewall rule to patch.
     * @param content the {@link com.google.api.services.compute.model.Firewall}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String firewall, com.google.api.services.compute.model.Firewall content) throws java.io.IOException {
      Patch result = new Patch(project, firewall, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/firewalls/{firewall}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FIREWALL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified firewall rule with the data included in the request. This method supports
       * PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "firewalls.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param firewall Name of the firewall rule to patch.
       * @param content the {@link com.google.api.services.compute.model.Firewall}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String firewall, com.google.api.services.compute.model.Firewall content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.firewall = com.google.api.client.util.Preconditions.checkNotNull(firewall, "Required parameter firewall must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the firewall rule to patch. */
      @com.google.api.client.util.Key
      private java.lang.String firewall;

      /** Name of the firewall rule to patch.
       */
      public java.lang.String getFirewall() {
        return firewall;
      }

      /** Name of the firewall rule to patch. */
      public Patch setFirewall(java.lang.String firewall) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.firewall = firewall;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified firewall rule with the data included in the request. The PUT method can
     * only update the following fields of firewall rule: allowed, description, sourceRanges,
     * sourceTags, targetTags.
     *
     * Create a request for the method "firewalls.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param firewall Name of the firewall rule to update.
     * @param content the {@link com.google.api.services.compute.model.Firewall}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String firewall, com.google.api.services.compute.model.Firewall content) throws java.io.IOException {
      Update result = new Update(project, firewall, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/firewalls/{firewall}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FIREWALL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified firewall rule with the data included in the request. The PUT method can
       * only update the following fields of firewall rule: allowed, description, sourceRanges,
       * sourceTags, targetTags.
       *
       * Create a request for the method "firewalls.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param firewall Name of the firewall rule to update.
       * @param content the {@link com.google.api.services.compute.model.Firewall}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String firewall, com.google.api.services.compute.model.Firewall content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.firewall = com.google.api.client.util.Preconditions.checkNotNull(firewall, "Required parameter firewall must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the firewall rule to update. */
      @com.google.api.client.util.Key
      private java.lang.String firewall;

      /** Name of the firewall rule to update.
       */
      public java.lang.String getFirewall() {
        return firewall;
      }

      /** Name of the firewall rule to update. */
      public Update setFirewall(java.lang.String firewall) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FIREWALL_PATTERN.matcher(firewall).matches(),
              "Parameter firewall must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.firewall = firewall;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ForwardingRules collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.ForwardingRules.List request = compute.forwardingRules().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ForwardingRules forwardingRules() {
    return new ForwardingRules();
  }

  /**
   * The "forwardingRules" collection of methods.
   */
  public class ForwardingRules {

    /**
     * Retrieves an aggregated list of forwarding rules.
     *
     * Create a request for the method "forwardingRules.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.ForwardingRuleAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/forwardingRules";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of forwarding rules.
       *
       * Create a request for the method "forwardingRules.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ForwardingRuleAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified ForwardingRule resource.
     *
     * Create a request for the method "forwardingRules.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param forwardingRule Name of the ForwardingRule resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String forwardingRule) throws java.io.IOException {
      Delete result = new Delete(project, region, forwardingRule);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/forwardingRules/{forwardingRule}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified ForwardingRule resource.
       *
       * Create a request for the method "forwardingRules.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param forwardingRule Name of the ForwardingRule resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String forwardingRule) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the ForwardingRule resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource to delete.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource to delete. */
      public Delete setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified ForwardingRule resource.
     *
     * Create a request for the method "forwardingRules.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param forwardingRule Name of the ForwardingRule resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String forwardingRule) throws java.io.IOException {
      Get result = new Get(project, region, forwardingRule);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.ForwardingRule> {

      private static final String REST_PATH = "{project}/regions/{region}/forwardingRules/{forwardingRule}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified ForwardingRule resource.
       *
       * Create a request for the method "forwardingRules.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param forwardingRule Name of the ForwardingRule resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String forwardingRule) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ForwardingRule.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the ForwardingRule resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource to return.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource to return. */
      public Get setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a ForwardingRule resource in the specified project and region using the data included in
     * the request.
     *
     * Create a request for the method "forwardingRules.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.ForwardingRule}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.ForwardingRule content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/forwardingRules";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a ForwardingRule resource in the specified project and region using the data included
       * in the request.
       *
       * Create a request for the method "forwardingRules.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.ForwardingRule}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.ForwardingRule content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of ForwardingRule resources available to the specified project and region.
     *
     * Create a request for the method "forwardingRules.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.ForwardingRuleList> {

      private static final String REST_PATH = "{project}/regions/{region}/forwardingRules";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of ForwardingRule resources available to the specified project and region.
       *
       * Create a request for the method "forwardingRules.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ForwardingRuleList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Changes target URL for forwarding rule. The new target should be of the same type as the old
     * target.
     *
     * Create a request for the method "forwardingRules.setTarget".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetTarget#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param forwardingRule Name of the ForwardingRule resource in which target is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetReference}
     * @return the request
     */
    public SetTarget setTarget(java.lang.String project, java.lang.String region, java.lang.String forwardingRule, com.google.api.services.compute.model.TargetReference content) throws java.io.IOException {
      SetTarget result = new SetTarget(project, region, forwardingRule, content);
      initialize(result);
      return result;
    }

    public class SetTarget extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes target URL for forwarding rule. The new target should be of the same type as the old
       * target.
       *
       * Create a request for the method "forwardingRules.setTarget".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetTarget#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetTarget#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param forwardingRule Name of the ForwardingRule resource in which target is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetReference}
       * @since 1.13
       */
      protected SetTarget(java.lang.String project, java.lang.String region, java.lang.String forwardingRule, com.google.api.services.compute.model.TargetReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetTarget setAlt(java.lang.String alt) {
        return (SetTarget) super.setAlt(alt);
      }

      @Override
      public SetTarget setFields(java.lang.String fields) {
        return (SetTarget) super.setFields(fields);
      }

      @Override
      public SetTarget setKey(java.lang.String key) {
        return (SetTarget) super.setKey(key);
      }

      @Override
      public SetTarget setOauthToken(java.lang.String oauthToken) {
        return (SetTarget) super.setOauthToken(oauthToken);
      }

      @Override
      public SetTarget setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetTarget) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetTarget setQuotaUser(java.lang.String quotaUser) {
        return (SetTarget) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetTarget setUserIp(java.lang.String userIp) {
        return (SetTarget) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetTarget setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetTarget setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the ForwardingRule resource in which target is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource in which target is to be set.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource in which target is to be set. */
      public SetTarget setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetTarget setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetTarget set(String parameterName, Object value) {
        return (SetTarget) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the GlobalAddresses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.GlobalAddresses.List request = compute.globalAddresses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GlobalAddresses globalAddresses() {
    return new GlobalAddresses();
  }

  /**
   * The "globalAddresses" collection of methods.
   */
  public class GlobalAddresses {

    /**
     * Deletes the specified address resource.
     *
     * Create a request for the method "globalAddresses.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param address Name of the address resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String address) throws java.io.IOException {
      Delete result = new Delete(project, address);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/addresses/{address}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ADDRESS_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified address resource.
       *
       * Create a request for the method "globalAddresses.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param address Name of the address resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String address) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the address resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String address;

      /** Name of the address resource to delete.
       */
      public java.lang.String getAddress() {
        return address;
      }

      /** Name of the address resource to delete. */
      public Delete setAddress(java.lang.String address) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = address;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified address resource. Gets a list of available addresses by making a list()
     * request.
     *
     * Create a request for the method "globalAddresses.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param address Name of the address resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String address) throws java.io.IOException {
      Get result = new Get(project, address);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Address> {

      private static final String REST_PATH = "{project}/global/addresses/{address}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ADDRESS_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified address resource. Gets a list of available addresses by making a list()
       * request.
       *
       * Create a request for the method "globalAddresses.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param address Name of the address resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String address) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Address.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the address resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String address;

      /** Name of the address resource to return.
       */
      public java.lang.String getAddress() {
        return address;
      }

      /** Name of the address resource to return. */
      public Get setAddress(java.lang.String address) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ADDRESS_PATTERN.matcher(address).matches(),
              "Parameter address must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.address = address;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an address resource in the specified project using the data included in the request.
     *
     * Create a request for the method "globalAddresses.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Address}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Address content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/addresses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates an address resource in the specified project using the data included in the request.
       *
       * Create a request for the method "globalAddresses.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Address}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Address content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of global addresses.
     *
     * Create a request for the method "globalAddresses.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.AddressList> {

      private static final String REST_PATH = "{project}/global/addresses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves a list of global addresses.
       *
       * Create a request for the method "globalAddresses.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.AddressList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the GlobalForwardingRules collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.GlobalForwardingRules.List request = compute.globalForwardingRules().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GlobalForwardingRules globalForwardingRules() {
    return new GlobalForwardingRules();
  }

  /**
   * The "globalForwardingRules" collection of methods.
   */
  public class GlobalForwardingRules {

    /**
     * Deletes the specified GlobalForwardingRule resource.
     *
     * Create a request for the method "globalForwardingRules.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param forwardingRule Name of the ForwardingRule resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String forwardingRule) throws java.io.IOException {
      Delete result = new Delete(project, forwardingRule);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/forwardingRules/{forwardingRule}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified GlobalForwardingRule resource.
       *
       * Create a request for the method "globalForwardingRules.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param forwardingRule Name of the ForwardingRule resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String forwardingRule) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the ForwardingRule resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource to delete.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource to delete. */
      public Delete setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified GlobalForwardingRule resource. Gets a list of available forwarding rules by
     * making a list() request.
     *
     * Create a request for the method "globalForwardingRules.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param forwardingRule Name of the ForwardingRule resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String forwardingRule) throws java.io.IOException {
      Get result = new Get(project, forwardingRule);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.ForwardingRule> {

      private static final String REST_PATH = "{project}/global/forwardingRules/{forwardingRule}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified GlobalForwardingRule resource. Gets a list of available forwarding rules
       * by making a list() request.
       *
       * Create a request for the method "globalForwardingRules.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param forwardingRule Name of the ForwardingRule resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String forwardingRule) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ForwardingRule.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the ForwardingRule resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource to return.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource to return. */
      public Get setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a GlobalForwardingRule resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "globalForwardingRules.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.ForwardingRule}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.ForwardingRule content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/forwardingRules";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a GlobalForwardingRule resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "globalForwardingRules.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.ForwardingRule}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.ForwardingRule content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of GlobalForwardingRule resources available to the specified project.
     *
     * Create a request for the method "globalForwardingRules.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.ForwardingRuleList> {

      private static final String REST_PATH = "{project}/global/forwardingRules";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves a list of GlobalForwardingRule resources available to the specified project.
       *
       * Create a request for the method "globalForwardingRules.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ForwardingRuleList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Changes target URL for the GlobalForwardingRule resource. The new target should be of the same
     * type as the old target.
     *
     * Create a request for the method "globalForwardingRules.setTarget".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetTarget#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param forwardingRule Name of the ForwardingRule resource in which target is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetReference}
     * @return the request
     */
    public SetTarget setTarget(java.lang.String project, java.lang.String forwardingRule, com.google.api.services.compute.model.TargetReference content) throws java.io.IOException {
      SetTarget result = new SetTarget(project, forwardingRule, content);
      initialize(result);
      return result;
    }

    public class SetTarget extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/forwardingRules/{forwardingRule}/setTarget";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FORWARDING_RULE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes target URL for the GlobalForwardingRule resource. The new target should be of the same
       * type as the old target.
       *
       * Create a request for the method "globalForwardingRules.setTarget".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetTarget#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetTarget#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param forwardingRule Name of the ForwardingRule resource in which target is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetReference}
       * @since 1.13
       */
      protected SetTarget(java.lang.String project, java.lang.String forwardingRule, com.google.api.services.compute.model.TargetReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.forwardingRule = com.google.api.client.util.Preconditions.checkNotNull(forwardingRule, "Required parameter forwardingRule must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetTarget setAlt(java.lang.String alt) {
        return (SetTarget) super.setAlt(alt);
      }

      @Override
      public SetTarget setFields(java.lang.String fields) {
        return (SetTarget) super.setFields(fields);
      }

      @Override
      public SetTarget setKey(java.lang.String key) {
        return (SetTarget) super.setKey(key);
      }

      @Override
      public SetTarget setOauthToken(java.lang.String oauthToken) {
        return (SetTarget) super.setOauthToken(oauthToken);
      }

      @Override
      public SetTarget setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetTarget) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetTarget setQuotaUser(java.lang.String quotaUser) {
        return (SetTarget) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetTarget setUserIp(java.lang.String userIp) {
        return (SetTarget) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetTarget setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the ForwardingRule resource in which target is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String forwardingRule;

      /** Name of the ForwardingRule resource in which target is to be set.
       */
      public java.lang.String getForwardingRule() {
        return forwardingRule;
      }

      /** Name of the ForwardingRule resource in which target is to be set. */
      public SetTarget setForwardingRule(java.lang.String forwardingRule) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FORWARDING_RULE_PATTERN.matcher(forwardingRule).matches(),
              "Parameter forwardingRule must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.forwardingRule = forwardingRule;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetTarget setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetTarget set(String parameterName, Object value) {
        return (SetTarget) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the GlobalOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.GlobalOperations.List request = compute.globalOperations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GlobalOperations globalOperations() {
    return new GlobalOperations();
  }

  /**
   * The "globalOperations" collection of methods.
   */
  public class GlobalOperations {

    /**
     * Retrieves an aggregated list of all operations.
     *
     * Create a request for the method "globalOperations.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.OperationAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/operations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of all operations.
       *
       * Create a request for the method "globalOperations.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.OperationAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified Operations resource.
     *
     * Create a request for the method "globalOperations.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param operation Name of the Operations resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String operation) throws java.io.IOException {
      Delete result = new Delete(project, operation);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<Void> {

      private static final String REST_PATH = "{project}/global/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified Operations resource.
       *
       * Create a request for the method "globalOperations.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param operation Name of the Operations resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String operation) {
        super(Compute.this, "DELETE", REST_PATH, null, Void.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Operations resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to delete.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to delete. */
      public Delete setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the specified Operations resource. Gets a list of operations by making a list()
     * request.
     *
     * Create a request for the method "globalOperations.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param operation Name of the Operations resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String operation) throws java.io.IOException {
      Get result = new Get(project, operation);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the specified Operations resource. Gets a list of operations by making a list()
       * request.
       *
       * Create a request for the method "globalOperations.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param operation Name of the Operations resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String operation) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Operations resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to return.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to return. */
      public Get setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of Operation resources contained within the specified project.
     *
     * Create a request for the method "globalOperations.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.OperationList> {

      private static final String REST_PATH = "{project}/global/operations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves a list of Operation resources contained within the specified project.
       *
       * Create a request for the method "globalOperations.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.OperationList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the HealthChecks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.HealthChecks.List request = compute.healthChecks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public HealthChecks healthChecks() {
    return new HealthChecks();
  }

  /**
   * The "healthChecks" collection of methods.
   */
  public class HealthChecks {

    /**
     * Deletes the specified HealthCheck resource.
     *
     * Create a request for the method "healthChecks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param healthCheck Name of the HealthCheck resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String healthCheck) throws java.io.IOException {
      Delete result = new Delete(project, healthCheck);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/healthChecks/{healthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified HealthCheck resource.
       *
       * Create a request for the method "healthChecks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param healthCheck Name of the HealthCheck resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String healthCheck) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.healthCheck = com.google.api.client.util.Preconditions.checkNotNull(healthCheck, "Required parameter healthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HealthCheck resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String healthCheck;

      /** Name of the HealthCheck resource to delete.
       */
      public java.lang.String getHealthCheck() {
        return healthCheck;
      }

      /** Name of the HealthCheck resource to delete. */
      public Delete setHealthCheck(java.lang.String healthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.healthCheck = healthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified HealthCheck resource. Gets a list of available health checks by making a
     * list() request.
     *
     * Create a request for the method "healthChecks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param healthCheck Name of the HealthCheck resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String healthCheck) throws java.io.IOException {
      Get result = new Get(project, healthCheck);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.HealthCheck> {

      private static final String REST_PATH = "{project}/global/healthChecks/{healthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified HealthCheck resource. Gets a list of available health checks by making a
       * list() request.
       *
       * Create a request for the method "healthChecks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param healthCheck Name of the HealthCheck resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String healthCheck) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HealthCheck.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.healthCheck = com.google.api.client.util.Preconditions.checkNotNull(healthCheck, "Required parameter healthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HealthCheck resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String healthCheck;

      /** Name of the HealthCheck resource to return.
       */
      public java.lang.String getHealthCheck() {
        return healthCheck;
      }

      /** Name of the HealthCheck resource to return. */
      public Get setHealthCheck(java.lang.String healthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.healthCheck = healthCheck;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a HealthCheck resource in the specified project using the data included in the request.
     *
     * Create a request for the method "healthChecks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.HealthCheck}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.HealthCheck content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/healthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a HealthCheck resource in the specified project using the data included in the request.
       *
       * Create a request for the method "healthChecks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.HealthCheck}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.HealthCheck content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of HealthCheck resources available to the specified project.
     *
     * Create a request for the method "healthChecks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.HealthCheckList> {

      private static final String REST_PATH = "{project}/global/healthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of HealthCheck resources available to the specified project.
       *
       * Create a request for the method "healthChecks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HealthCheckList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HealthCheck resource in the specified project using the data included in the request.
     * This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "healthChecks.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param healthCheck Name of the HealthCheck resource to patch.
     * @param content the {@link com.google.api.services.compute.model.HealthCheck}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String healthCheck, com.google.api.services.compute.model.HealthCheck content) throws java.io.IOException {
      Patch result = new Patch(project, healthCheck, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/healthChecks/{healthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HealthCheck resource in the specified project using the data included in the request.
       * This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "healthChecks.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param healthCheck Name of the HealthCheck resource to patch.
       * @param content the {@link com.google.api.services.compute.model.HealthCheck}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String healthCheck, com.google.api.services.compute.model.HealthCheck content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.healthCheck = com.google.api.client.util.Preconditions.checkNotNull(healthCheck, "Required parameter healthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HealthCheck resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String healthCheck;

      /** Name of the HealthCheck resource to patch.
       */
      public java.lang.String getHealthCheck() {
        return healthCheck;
      }

      /** Name of the HealthCheck resource to patch. */
      public Patch setHealthCheck(java.lang.String healthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.healthCheck = healthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HealthCheck resource in the specified project using the data included in the request.
     *
     * Create a request for the method "healthChecks.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param healthCheck Name of the HealthCheck resource to update.
     * @param content the {@link com.google.api.services.compute.model.HealthCheck}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String healthCheck, com.google.api.services.compute.model.HealthCheck content) throws java.io.IOException {
      Update result = new Update(project, healthCheck, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/healthChecks/{healthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HealthCheck resource in the specified project using the data included in the request.
       *
       * Create a request for the method "healthChecks.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param healthCheck Name of the HealthCheck resource to update.
       * @param content the {@link com.google.api.services.compute.model.HealthCheck}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String healthCheck, com.google.api.services.compute.model.HealthCheck content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.healthCheck = com.google.api.client.util.Preconditions.checkNotNull(healthCheck, "Required parameter healthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HealthCheck resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String healthCheck;

      /** Name of the HealthCheck resource to update.
       */
      public java.lang.String getHealthCheck() {
        return healthCheck;
      }

      /** Name of the HealthCheck resource to update. */
      public Update setHealthCheck(java.lang.String healthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HEALTH_CHECK_PATTERN.matcher(healthCheck).matches(),
              "Parameter healthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.healthCheck = healthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the HttpHealthChecks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.HttpHealthChecks.List request = compute.httpHealthChecks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public HttpHealthChecks httpHealthChecks() {
    return new HttpHealthChecks();
  }

  /**
   * The "httpHealthChecks" collection of methods.
   */
  public class HttpHealthChecks {

    /**
     * Deletes the specified HttpHealthCheck resource.
     *
     * Create a request for the method "httpHealthChecks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpHealthCheck Name of the HttpHealthCheck resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String httpHealthCheck) throws java.io.IOException {
      Delete result = new Delete(project, httpHealthCheck);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks/{httpHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTP_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified HttpHealthCheck resource.
       *
       * Create a request for the method "httpHealthChecks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpHealthCheck Name of the HttpHealthCheck resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String httpHealthCheck) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpHealthCheck, "Required parameter httpHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpHealthCheck resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String httpHealthCheck;

      /** Name of the HttpHealthCheck resource to delete.
       */
      public java.lang.String getHttpHealthCheck() {
        return httpHealthCheck;
      }

      /** Name of the HttpHealthCheck resource to delete. */
      public Delete setHttpHealthCheck(java.lang.String httpHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpHealthCheck = httpHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified HttpHealthCheck resource. Gets a list of available HTTP health checks by
     * making a list() request.
     *
     * Create a request for the method "httpHealthChecks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpHealthCheck Name of the HttpHealthCheck resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String httpHealthCheck) throws java.io.IOException {
      Get result = new Get(project, httpHealthCheck);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.HttpHealthCheck> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks/{httpHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTP_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified HttpHealthCheck resource. Gets a list of available HTTP health checks by
       * making a list() request.
       *
       * Create a request for the method "httpHealthChecks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpHealthCheck Name of the HttpHealthCheck resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String httpHealthCheck) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HttpHealthCheck.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpHealthCheck, "Required parameter httpHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpHealthCheck resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String httpHealthCheck;

      /** Name of the HttpHealthCheck resource to return.
       */
      public java.lang.String getHttpHealthCheck() {
        return httpHealthCheck;
      }

      /** Name of the HttpHealthCheck resource to return. */
      public Get setHttpHealthCheck(java.lang.String httpHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpHealthCheck = httpHealthCheck;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a HttpHealthCheck resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "httpHealthChecks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.HttpHealthCheck content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a HttpHealthCheck resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "httpHealthChecks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.HttpHealthCheck content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of HttpHealthCheck resources available to the specified project.
     *
     * Create a request for the method "httpHealthChecks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.HttpHealthCheckList> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of HttpHealthCheck resources available to the specified project.
       *
       * Create a request for the method "httpHealthChecks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HttpHealthCheckList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HttpHealthCheck resource in the specified project using the data included in the
     * request. This method supports PATCH semantics and uses the JSON merge patch format and processing
     * rules.
     *
     * Create a request for the method "httpHealthChecks.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpHealthCheck Name of the HttpHealthCheck resource to patch.
     * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String httpHealthCheck, com.google.api.services.compute.model.HttpHealthCheck content) throws java.io.IOException {
      Patch result = new Patch(project, httpHealthCheck, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks/{httpHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTP_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HttpHealthCheck resource in the specified project using the data included in the
       * request. This method supports PATCH semantics and uses the JSON merge patch format and
       * processing rules.
       *
       * Create a request for the method "httpHealthChecks.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpHealthCheck Name of the HttpHealthCheck resource to patch.
       * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String httpHealthCheck, com.google.api.services.compute.model.HttpHealthCheck content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpHealthCheck, "Required parameter httpHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpHealthCheck resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String httpHealthCheck;

      /** Name of the HttpHealthCheck resource to patch.
       */
      public java.lang.String getHttpHealthCheck() {
        return httpHealthCheck;
      }

      /** Name of the HttpHealthCheck resource to patch. */
      public Patch setHttpHealthCheck(java.lang.String httpHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpHealthCheck = httpHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HttpHealthCheck resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "httpHealthChecks.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpHealthCheck Name of the HttpHealthCheck resource to update.
     * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String httpHealthCheck, com.google.api.services.compute.model.HttpHealthCheck content) throws java.io.IOException {
      Update result = new Update(project, httpHealthCheck, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpHealthChecks/{httpHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTP_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HttpHealthCheck resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "httpHealthChecks.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpHealthCheck Name of the HttpHealthCheck resource to update.
       * @param content the {@link com.google.api.services.compute.model.HttpHealthCheck}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String httpHealthCheck, com.google.api.services.compute.model.HttpHealthCheck content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpHealthCheck, "Required parameter httpHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpHealthCheck resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String httpHealthCheck;

      /** Name of the HttpHealthCheck resource to update.
       */
      public java.lang.String getHttpHealthCheck() {
        return httpHealthCheck;
      }

      /** Name of the HttpHealthCheck resource to update. */
      public Update setHttpHealthCheck(java.lang.String httpHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTP_HEALTH_CHECK_PATTERN.matcher(httpHealthCheck).matches(),
              "Parameter httpHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpHealthCheck = httpHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the HttpsHealthChecks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.HttpsHealthChecks.List request = compute.httpsHealthChecks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public HttpsHealthChecks httpsHealthChecks() {
    return new HttpsHealthChecks();
  }

  /**
   * The "httpsHealthChecks" collection of methods.
   */
  public class HttpsHealthChecks {

    /**
     * Deletes the specified HttpsHealthCheck resource.
     *
     * Create a request for the method "httpsHealthChecks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpsHealthCheck Name of the HttpsHealthCheck resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String httpsHealthCheck) throws java.io.IOException {
      Delete result = new Delete(project, httpsHealthCheck);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks/{httpsHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTPS_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified HttpsHealthCheck resource.
       *
       * Create a request for the method "httpsHealthChecks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpsHealthCheck Name of the HttpsHealthCheck resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String httpsHealthCheck) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpsHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpsHealthCheck, "Required parameter httpsHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpsHealthCheck resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String httpsHealthCheck;

      /** Name of the HttpsHealthCheck resource to delete.
       */
      public java.lang.String getHttpsHealthCheck() {
        return httpsHealthCheck;
      }

      /** Name of the HttpsHealthCheck resource to delete. */
      public Delete setHttpsHealthCheck(java.lang.String httpsHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpsHealthCheck = httpsHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified HttpsHealthCheck resource. Gets a list of available HTTPS health checks by
     * making a list() request.
     *
     * Create a request for the method "httpsHealthChecks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpsHealthCheck Name of the HttpsHealthCheck resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String httpsHealthCheck) throws java.io.IOException {
      Get result = new Get(project, httpsHealthCheck);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.HttpsHealthCheck> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks/{httpsHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTPS_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified HttpsHealthCheck resource. Gets a list of available HTTPS health checks
       * by making a list() request.
       *
       * Create a request for the method "httpsHealthChecks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpsHealthCheck Name of the HttpsHealthCheck resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String httpsHealthCheck) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HttpsHealthCheck.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpsHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpsHealthCheck, "Required parameter httpsHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpsHealthCheck resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String httpsHealthCheck;

      /** Name of the HttpsHealthCheck resource to return.
       */
      public java.lang.String getHttpsHealthCheck() {
        return httpsHealthCheck;
      }

      /** Name of the HttpsHealthCheck resource to return. */
      public Get setHttpsHealthCheck(java.lang.String httpsHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpsHealthCheck = httpsHealthCheck;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a HttpsHealthCheck resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "httpsHealthChecks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.HttpsHealthCheck content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a HttpsHealthCheck resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "httpsHealthChecks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.HttpsHealthCheck content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of HttpsHealthCheck resources available to the specified project.
     *
     * Create a request for the method "httpsHealthChecks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.HttpsHealthCheckList> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of HttpsHealthCheck resources available to the specified project.
       *
       * Create a request for the method "httpsHealthChecks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.HttpsHealthCheckList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HttpsHealthCheck resource in the specified project using the data included in the
     * request. This method supports PATCH semantics and uses the JSON merge patch format and processing
     * rules.
     *
     * Create a request for the method "httpsHealthChecks.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpsHealthCheck Name of the HttpsHealthCheck resource to patch.
     * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String httpsHealthCheck, com.google.api.services.compute.model.HttpsHealthCheck content) throws java.io.IOException {
      Patch result = new Patch(project, httpsHealthCheck, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks/{httpsHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTPS_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HttpsHealthCheck resource in the specified project using the data included in the
       * request. This method supports PATCH semantics and uses the JSON merge patch format and
       * processing rules.
       *
       * Create a request for the method "httpsHealthChecks.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpsHealthCheck Name of the HttpsHealthCheck resource to patch.
       * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String httpsHealthCheck, com.google.api.services.compute.model.HttpsHealthCheck content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpsHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpsHealthCheck, "Required parameter httpsHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpsHealthCheck resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String httpsHealthCheck;

      /** Name of the HttpsHealthCheck resource to patch.
       */
      public java.lang.String getHttpsHealthCheck() {
        return httpsHealthCheck;
      }

      /** Name of the HttpsHealthCheck resource to patch. */
      public Patch setHttpsHealthCheck(java.lang.String httpsHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpsHealthCheck = httpsHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a HttpsHealthCheck resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "httpsHealthChecks.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param httpsHealthCheck Name of the HttpsHealthCheck resource to update.
     * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String httpsHealthCheck, com.google.api.services.compute.model.HttpsHealthCheck content) throws java.io.IOException {
      Update result = new Update(project, httpsHealthCheck, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/httpsHealthChecks/{httpsHealthCheck}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern HTTPS_HEALTH_CHECK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates a HttpsHealthCheck resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "httpsHealthChecks.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param httpsHealthCheck Name of the HttpsHealthCheck resource to update.
       * @param content the {@link com.google.api.services.compute.model.HttpsHealthCheck}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String httpsHealthCheck, com.google.api.services.compute.model.HttpsHealthCheck content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.httpsHealthCheck = com.google.api.client.util.Preconditions.checkNotNull(httpsHealthCheck, "Required parameter httpsHealthCheck must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the HttpsHealthCheck resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String httpsHealthCheck;

      /** Name of the HttpsHealthCheck resource to update.
       */
      public java.lang.String getHttpsHealthCheck() {
        return httpsHealthCheck;
      }

      /** Name of the HttpsHealthCheck resource to update. */
      public Update setHttpsHealthCheck(java.lang.String httpsHealthCheck) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(HTTPS_HEALTH_CHECK_PATTERN.matcher(httpsHealthCheck).matches(),
              "Parameter httpsHealthCheck must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.httpsHealthCheck = httpsHealthCheck;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Images collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Images.List request = compute.images().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Images images() {
    return new Images();
  }

  /**
   * The "images" collection of methods.
   */
  public class Images {

    /**
     * Deletes the specified image.
     *
     * Create a request for the method "images.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param image Name of the image resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String image) throws java.io.IOException {
      Delete result = new Delete(project, image);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/images/{image}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern IMAGE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified image.
       *
       * Create a request for the method "images.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param image Name of the image resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String image) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.image = com.google.api.client.util.Preconditions.checkNotNull(image, "Required parameter image must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the image resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String image;

      /** Name of the image resource to delete.
       */
      public java.lang.String getImage() {
        return image;
      }

      /** Name of the image resource to delete. */
      public Delete setImage(java.lang.String image) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.image = image;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Sets the deprecation status of an image.
     *
     * If an empty request body is given, clears the deprecation status instead.
     *
     * Create a request for the method "images.deprecate".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Deprecate#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param image Image name.
     * @param content the {@link com.google.api.services.compute.model.DeprecationStatus}
     * @return the request
     */
    public Deprecate deprecate(java.lang.String project, java.lang.String image, com.google.api.services.compute.model.DeprecationStatus content) throws java.io.IOException {
      Deprecate result = new Deprecate(project, image, content);
      initialize(result);
      return result;
    }

    public class Deprecate extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/images/{image}/deprecate";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern IMAGE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets the deprecation status of an image.
       *
       * If an empty request body is given, clears the deprecation status instead.
       *
       * Create a request for the method "images.deprecate".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Deprecate#execute()} method to invoke the remote operation. <p>
       * {@link
       * Deprecate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param image Image name.
       * @param content the {@link com.google.api.services.compute.model.DeprecationStatus}
       * @since 1.13
       */
      protected Deprecate(java.lang.String project, java.lang.String image, com.google.api.services.compute.model.DeprecationStatus content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.image = com.google.api.client.util.Preconditions.checkNotNull(image, "Required parameter image must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Deprecate setAlt(java.lang.String alt) {
        return (Deprecate) super.setAlt(alt);
      }

      @Override
      public Deprecate setFields(java.lang.String fields) {
        return (Deprecate) super.setFields(fields);
      }

      @Override
      public Deprecate setKey(java.lang.String key) {
        return (Deprecate) super.setKey(key);
      }

      @Override
      public Deprecate setOauthToken(java.lang.String oauthToken) {
        return (Deprecate) super.setOauthToken(oauthToken);
      }

      @Override
      public Deprecate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Deprecate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Deprecate setQuotaUser(java.lang.String quotaUser) {
        return (Deprecate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Deprecate setUserIp(java.lang.String userIp) {
        return (Deprecate) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Deprecate setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Image name. */
      @com.google.api.client.util.Key
      private java.lang.String image;

      /** Image name.
       */
      public java.lang.String getImage() {
        return image;
      }

      /** Image name. */
      public Deprecate setImage(java.lang.String image) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.image = image;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Deprecate setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Deprecate set(String parameterName, Object value) {
        return (Deprecate) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified image. Gets a list of available images by making a list() request.
     *
     * Create a request for the method "images.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param image Name of the image resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String image) throws java.io.IOException {
      Get result = new Get(project, image);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Image> {

      private static final String REST_PATH = "{project}/global/images/{image}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern IMAGE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns the specified image. Gets a list of available images by making a list() request.
       *
       * Create a request for the method "images.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param image Name of the image resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String image) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Image.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.image = com.google.api.client.util.Preconditions.checkNotNull(image, "Required parameter image must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the image resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String image;

      /** Name of the image resource to return.
       */
      public java.lang.String getImage() {
        return image;
      }

      /** Name of the image resource to return. */
      public Get setImage(java.lang.String image) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(IMAGE_PATTERN.matcher(image).matches(),
              "Parameter image must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.image = image;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns the latest image that is part of an image family and is not deprecated.
     *
     * Create a request for the method "images.getFromFamily".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetFromFamily#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param family Name of the image family to search for.
     * @return the request
     */
    public GetFromFamily getFromFamily(java.lang.String project, java.lang.String family) throws java.io.IOException {
      GetFromFamily result = new GetFromFamily(project, family);
      initialize(result);
      return result;
    }

    public class GetFromFamily extends ComputeRequest<com.google.api.services.compute.model.Image> {

      private static final String REST_PATH = "{project}/global/images/family/{family}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern FAMILY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the latest image that is part of an image family and is not deprecated.
       *
       * Create a request for the method "images.getFromFamily".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetFromFamily#execute()} method to invoke the remote operation. <p>
       * {@link GetFromFamily#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param family Name of the image family to search for.
       * @since 1.13
       */
      protected GetFromFamily(java.lang.String project, java.lang.String family) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Image.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.family = com.google.api.client.util.Preconditions.checkNotNull(family, "Required parameter family must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FAMILY_PATTERN.matcher(family).matches(),
              "Parameter family must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetFromFamily setAlt(java.lang.String alt) {
        return (GetFromFamily) super.setAlt(alt);
      }

      @Override
      public GetFromFamily setFields(java.lang.String fields) {
        return (GetFromFamily) super.setFields(fields);
      }

      @Override
      public GetFromFamily setKey(java.lang.String key) {
        return (GetFromFamily) super.setKey(key);
      }

      @Override
      public GetFromFamily setOauthToken(java.lang.String oauthToken) {
        return (GetFromFamily) super.setOauthToken(oauthToken);
      }

      @Override
      public GetFromFamily setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetFromFamily) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetFromFamily setQuotaUser(java.lang.String quotaUser) {
        return (GetFromFamily) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetFromFamily setUserIp(java.lang.String userIp) {
        return (GetFromFamily) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetFromFamily setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the image family to search for. */
      @com.google.api.client.util.Key
      private java.lang.String family;

      /** Name of the image family to search for.
       */
      public java.lang.String getFamily() {
        return family;
      }

      /** Name of the image family to search for. */
      public GetFromFamily setFamily(java.lang.String family) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(FAMILY_PATTERN.matcher(family).matches(),
              "Parameter family must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.family = family;
        return this;
      }

      @Override
      public GetFromFamily set(String parameterName, Object value) {
        return (GetFromFamily) super.set(parameterName, value);
      }
    }
    /**
     * Creates an image in the specified project using the data included in the request.
     *
     * Create a request for the method "images.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Image}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Image content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/images";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates an image in the specified project using the data included in the request.
       *
       * Create a request for the method "images.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Image}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Image content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Force image creation if true. */
      @com.google.api.client.util.Key
      private java.lang.Boolean forceCreate;

      /** Force image creation if true.
       */
      public java.lang.Boolean getForceCreate() {
        return forceCreate;
      }

      /** Force image creation if true. */
      public Insert setForceCreate(java.lang.Boolean forceCreate) {
        this.forceCreate = forceCreate;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of custom images available to the specified project. Custom images are images
     * you create that belong to your project. This method does not get any images that belong to other
     * projects, including publicly-available images, like Debian 8. If you want to get a list of
     * publicly-available images, use this method to make a request to the respective image project,
     * such as debian-cloud or windows-cloud.
     *
     * Create a request for the method "images.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.ImageList> {

      private static final String REST_PATH = "{project}/global/images";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of custom images available to the specified project. Custom images are
       * images you create that belong to your project. This method does not get any images that belong
       * to other projects, including publicly-available images, like Debian 8. If you want to get a
       * list of publicly-available images, use this method to make a request to the respective image
       * project, such as debian-cloud or windows-cloud.
       *
       * Create a request for the method "images.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ImageList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Sets the labels on an image. To learn more about labels, read the Labeling Resources
     * documentation.
     *
     * Create a request for the method "images.setLabels".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param resource Name of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.GlobalSetLabelsRequest}
     * @return the request
     */
    public SetLabels setLabels(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.GlobalSetLabelsRequest content) throws java.io.IOException {
      SetLabels result = new SetLabels(project, resource, content);
      initialize(result);
      return result;
    }

    public class SetLabels extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/images/{resource}/setLabels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");

      /**
       * Sets the labels on an image. To learn more about labels, read the Labeling Resources
       * documentation.
       *
       * Create a request for the method "images.setLabels".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param resource Name of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.GlobalSetLabelsRequest}
       * @since 1.13
       */
      protected SetLabels(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.GlobalSetLabelsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetLabels setAlt(java.lang.String alt) {
        return (SetLabels) super.setAlt(alt);
      }

      @Override
      public SetLabels setFields(java.lang.String fields) {
        return (SetLabels) super.setFields(fields);
      }

      @Override
      public SetLabels setKey(java.lang.String key) {
        return (SetLabels) super.setKey(key);
      }

      @Override
      public SetLabels setOauthToken(java.lang.String oauthToken) {
        return (SetLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public SetLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetLabels setQuotaUser(java.lang.String quotaUser) {
        return (SetLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetLabels setUserIp(java.lang.String userIp) {
        return (SetLabels) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetLabels setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name of the resource for this request. */
      public SetLabels setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public SetLabels set(String parameterName, Object value) {
        return (SetLabels) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the InstanceGroupManagers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.InstanceGroupManagers.List request = compute.instanceGroupManagers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InstanceGroupManagers instanceGroupManagers() {
    return new InstanceGroupManagers();
  }

  /**
   * The "instanceGroupManagers" collection of methods.
   */
  public class InstanceGroupManagers {

    /**
     * Flags the specified instances to be removed from the managed instance group. Abandoning an
     * instance does not delete the instance, but it does remove the instance from any target pools that
     * are applied by the managed instance group. This method reduces the targetSize of the managed
     * instance group by the number of instances that you abandon. This operation is marked as DONE when
     * the action is scheduled even if the instances have not yet been removed from the group. You must
     * separately verify the status of the abandoning action with the listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "instanceGroupManagers.abandonInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AbandonInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersAbandonInstancesRequest}
     * @return the request
     */
    public AbandonInstances abandonInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersAbandonInstancesRequest content) throws java.io.IOException {
      AbandonInstances result = new AbandonInstances(project, zone, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class AbandonInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances to be removed from the managed instance group. Abandoning an
       * instance does not delete the instance, but it does remove the instance from any target pools
       * that are applied by the managed instance group. This method reduces the targetSize of the
       * managed instance group by the number of instances that you abandon. This operation is marked as
       * DONE when the action is scheduled even if the instances have not yet been removed from the
       * group. You must separately verify the status of the abandoning action with the
       * listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "instanceGroupManagers.abandonInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AbandonInstances#execute()} method to invoke the remote operation.
       * <p> {@link AbandonInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersAbandonInstancesRequest}
       * @since 1.13
       */
      protected AbandonInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersAbandonInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public AbandonInstances setAlt(java.lang.String alt) {
        return (AbandonInstances) super.setAlt(alt);
      }

      @Override
      public AbandonInstances setFields(java.lang.String fields) {
        return (AbandonInstances) super.setFields(fields);
      }

      @Override
      public AbandonInstances setKey(java.lang.String key) {
        return (AbandonInstances) super.setKey(key);
      }

      @Override
      public AbandonInstances setOauthToken(java.lang.String oauthToken) {
        return (AbandonInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public AbandonInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AbandonInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AbandonInstances setQuotaUser(java.lang.String quotaUser) {
        return (AbandonInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public AbandonInstances setUserIp(java.lang.String userIp) {
        return (AbandonInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AbandonInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public AbandonInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public AbandonInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AbandonInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AbandonInstances set(String parameterName, Object value) {
        return (AbandonInstances) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of managed instance groups and groups them by zone.
     *
     * Create a request for the method "instanceGroupManagers.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupManagerAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/instanceGroupManagers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of managed instance groups and groups them by zone.
       *
       * Create a request for the method "instanceGroupManagers.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupManagerAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified managed instance group and all of the instances in that group. Note that
     * the instance group must not belong to a backend service. Read  Deleting an instance group for
     * more information.
     *
     * Create a request for the method "instanceGroupManagers.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) throws java.io.IOException {
      Delete result = new Delete(project, zone, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes the specified managed instance group and all of the instances in that group. Note that
       * the instance group must not belong to a backend service. Read  Deleting an instance group for
       * more information.
       *
       * Create a request for the method "instanceGroupManagers.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public Delete setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group to delete. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group to delete.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group to delete. */
      public Delete setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Flags the specified instances in the managed instance group for immediate deletion. The instances
     * are also removed from any target pools of which they were a member. This method reduces the
     * targetSize of the managed instance group by the number of instances that you delete. This
     * operation is marked as DONE when the action is scheduled even if the instances are still being
     * deleted. You must separately verify the status of the deleting action with the
     * listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "instanceGroupManagers.deleteInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersDeleteInstancesRequest}
     * @return the request
     */
    public DeleteInstances deleteInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersDeleteInstancesRequest content) throws java.io.IOException {
      DeleteInstances result = new DeleteInstances(project, zone, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class DeleteInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances in the managed instance group for immediate deletion. The
       * instances are also removed from any target pools of which they were a member. This method
       * reduces the targetSize of the managed instance group by the number of instances that you
       * delete. This operation is marked as DONE when the action is scheduled even if the instances are
       * still being deleted. You must separately verify the status of the deleting action with the
       * listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "instanceGroupManagers.deleteInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteInstances#execute()} method to invoke the remote operation.
       * <p> {@link DeleteInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersDeleteInstancesRequest}
       * @since 1.13
       */
      protected DeleteInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersDeleteInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public DeleteInstances setAlt(java.lang.String alt) {
        return (DeleteInstances) super.setAlt(alt);
      }

      @Override
      public DeleteInstances setFields(java.lang.String fields) {
        return (DeleteInstances) super.setFields(fields);
      }

      @Override
      public DeleteInstances setKey(java.lang.String key) {
        return (DeleteInstances) super.setKey(key);
      }

      @Override
      public DeleteInstances setOauthToken(java.lang.String oauthToken) {
        return (DeleteInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteInstances setQuotaUser(java.lang.String quotaUser) {
        return (DeleteInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteInstances setUserIp(java.lang.String userIp) {
        return (DeleteInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public DeleteInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public DeleteInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteInstances set(String parameterName, Object value) {
        return (DeleteInstances) super.set(parameterName, value);
      }
    }
    /**
     * Returns all of the details about the specified managed instance group. Gets a list of available
     * managed instance groups by making a list() request.
     *
     * Create a request for the method "instanceGroupManagers.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) throws java.io.IOException {
      Get result = new Get(project, zone, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupManager> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns all of the details about the specified managed instance group. Gets a list of available
       * managed instance groups by making a list() request.
       *
       * Create a request for the method "instanceGroupManagers.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupManager.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public Get setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public Get setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a managed instance group using the information that you specify in the request. After the
     * group is created, instances in the group are created using the specified instance template. This
     * operation is marked as DONE when the group is created even if the instances in the group have not
     * yet been created. You must separately verify the status of the individual instances with the
     * listmanagedinstances method.
     *
     * A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support
     * if you need an increase in this limit.
     *
     * Create a request for the method "instanceGroupManagers.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where you want to create the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManager}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.InstanceGroupManager content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a managed instance group using the information that you specify in the request. After
       * the group is created, instances in the group are created using the specified instance template.
       * This operation is marked as DONE when the group is created even if the instances in the group
       * have not yet been created. You must separately verify the status of the individual instances
       * with the listmanagedinstances method.
       *
       * A managed instance group can have up to 1000 VM instances per group. Please contact Cloud
       * Support if you need an increase in this limit.
       *
       * Create a request for the method "instanceGroupManagers.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where you want to create the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManager}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.InstanceGroupManager content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where you want to create the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where you want to create the managed instance group.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where you want to create the managed instance group. */
      public Insert setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of managed instance groups that are contained within the specified project and
     * zone.
     *
     * Create a request for the method "instanceGroupManagers.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupManagerList> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves a list of managed instance groups that are contained within the specified project and
       * zone.
       *
       * Create a request for the method "instanceGroupManagers.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupManagerList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public List setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists all of the instances in the managed instance group. Each instance in the list has a
     * currentAction, which indicates the action that the managed instance group is performing on the
     * instance. For example, if the group is still creating an instance, the currentAction is CREATING.
     * If a previous action failed, the list displays the errors for that failed action.
     *
     * Create a request for the method "instanceGroupManagers.listManagedInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListManagedInstances#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @return the request
     */
    public ListManagedInstances listManagedInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) throws java.io.IOException {
      ListManagedInstances result = new ListManagedInstances(project, zone, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class ListManagedInstances extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupManagersListManagedInstancesResponse> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists all of the instances in the managed instance group. Each instance in the list has a
       * currentAction, which indicates the action that the managed instance group is performing on the
       * instance. For example, if the group is still creating an instance, the currentAction is
       * CREATING. If a previous action failed, the list displays the errors for that failed action.
       *
       * Create a request for the method "instanceGroupManagers.listManagedInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListManagedInstances#execute()} method to invoke the remote
       * operation. <p> {@link ListManagedInstances#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @since 1.13
       */
      protected ListManagedInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupManagersListManagedInstancesResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public ListManagedInstances setAlt(java.lang.String alt) {
        return (ListManagedInstances) super.setAlt(alt);
      }

      @Override
      public ListManagedInstances setFields(java.lang.String fields) {
        return (ListManagedInstances) super.setFields(fields);
      }

      @Override
      public ListManagedInstances setKey(java.lang.String key) {
        return (ListManagedInstances) super.setKey(key);
      }

      @Override
      public ListManagedInstances setOauthToken(java.lang.String oauthToken) {
        return (ListManagedInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public ListManagedInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListManagedInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListManagedInstances setQuotaUser(java.lang.String quotaUser) {
        return (ListManagedInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListManagedInstances setUserIp(java.lang.String userIp) {
        return (ListManagedInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListManagedInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public ListManagedInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public ListManagedInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListManagedInstances setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListManagedInstances setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key("order_by")
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListManagedInstances setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListManagedInstances setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListManagedInstances set(String parameterName, Object value) {
        return (ListManagedInstances) super.set(parameterName, value);
      }
    }
    /**
     * Flags the specified instances in the managed instance group to be immediately recreated. The
     * instances are deleted and recreated using the current instance template for the managed instance
     * group. This operation is marked as DONE when the flag is set even if the instances have not yet
     * been recreated. You must separately verify the status of the recreating action with the
     * listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "instanceGroupManagers.recreateInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RecreateInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersRecreateInstancesRequest}
     * @return the request
     */
    public RecreateInstances recreateInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersRecreateInstancesRequest content) throws java.io.IOException {
      RecreateInstances result = new RecreateInstances(project, zone, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class RecreateInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances in the managed instance group to be immediately recreated. The
       * instances are deleted and recreated using the current instance template for the managed
       * instance group. This operation is marked as DONE when the flag is set even if the instances
       * have not yet been recreated. You must separately verify the status of the recreating action
       * with the listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "instanceGroupManagers.recreateInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RecreateInstances#execute()} method to invoke the remote operation.
       * <p> {@link RecreateInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersRecreateInstancesRequest}
       * @since 1.13
       */
      protected RecreateInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersRecreateInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public RecreateInstances setAlt(java.lang.String alt) {
        return (RecreateInstances) super.setAlt(alt);
      }

      @Override
      public RecreateInstances setFields(java.lang.String fields) {
        return (RecreateInstances) super.setFields(fields);
      }

      @Override
      public RecreateInstances setKey(java.lang.String key) {
        return (RecreateInstances) super.setKey(key);
      }

      @Override
      public RecreateInstances setOauthToken(java.lang.String oauthToken) {
        return (RecreateInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public RecreateInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RecreateInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RecreateInstances setQuotaUser(java.lang.String quotaUser) {
        return (RecreateInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public RecreateInstances setUserIp(java.lang.String userIp) {
        return (RecreateInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RecreateInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public RecreateInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public RecreateInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RecreateInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RecreateInstances set(String parameterName, Object value) {
        return (RecreateInstances) super.set(parameterName, value);
      }
    }
    /**
     * Resizes the managed instance group. If you increase the size, the group creates new instances
     * using the current instance template. If you decrease the size, the group deletes instances. The
     * resize operation is marked DONE when the resize actions are scheduled even if the group has not
     * yet added or deleted any instances. You must separately verify the status of the creating or
     * deleting actions with the listmanagedinstances method.
     *
     * When resizing down, the instance group arbitrarily chooses the order in which VMs are deleted.
     * The group takes into account some VM attributes when making the selection including:
     *
     * + The status of the VM instance. + The health of the VM instance. + The instance template version
     * the VM is based on. + For regional managed instance groups, the location of the VM instance.
     *
     * This list is subject to change.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * Create a request for the method "instanceGroupManagers.resize".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Resize#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param size The number of running instances that the managed instance group should maintain at any given time.
     *        The group automatically adds or removes instances to maintain the number of instances
     *        specified by this parameter.
     * @return the request
     */
    public Resize resize(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, java.lang.Integer size) throws java.io.IOException {
      Resize result = new Resize(project, zone, instanceGroupManager, size);
      initialize(result);
      return result;
    }

    public class Resize extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Resizes the managed instance group. If you increase the size, the group creates new instances
       * using the current instance template. If you decrease the size, the group deletes instances. The
       * resize operation is marked DONE when the resize actions are scheduled even if the group has not
       * yet added or deleted any instances. You must separately verify the status of the creating or
       * deleting actions with the listmanagedinstances method.
       *
       * When resizing down, the instance group arbitrarily chooses the order in which VMs are deleted.
       * The group takes into account some VM attributes when making the selection including:
       *
       * + The status of the VM instance. + The health of the VM instance. + The instance template
       * version the VM is based on. + For regional managed instance groups, the location of the VM
       * instance.
       *
       * This list is subject to change.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * Create a request for the method "instanceGroupManagers.resize".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Resize#execute()} method to invoke the remote operation. <p> {@link
       * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param size The number of running instances that the managed instance group should maintain at any given time.
     *        The group automatically adds or removes instances to maintain the number of instances
     *        specified by this parameter.
       * @since 1.13
       */
      protected Resize(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, java.lang.Integer size) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
        this.size = com.google.api.client.util.Preconditions.checkNotNull(size, "Required parameter size must be specified.");
      }

      @Override
      public Resize setAlt(java.lang.String alt) {
        return (Resize) super.setAlt(alt);
      }

      @Override
      public Resize setFields(java.lang.String fields) {
        return (Resize) super.setFields(fields);
      }

      @Override
      public Resize setKey(java.lang.String key) {
        return (Resize) super.setKey(key);
      }

      @Override
      public Resize setOauthToken(java.lang.String oauthToken) {
        return (Resize) super.setOauthToken(oauthToken);
      }

      @Override
      public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resize) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resize setQuotaUser(java.lang.String quotaUser) {
        return (Resize) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resize setUserIp(java.lang.String userIp) {
        return (Resize) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Resize setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public Resize setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public Resize setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * The number of running instances that the managed instance group should maintain at any
       * given time. The group automatically adds or removes instances to maintain the number of
       * instances specified by this parameter.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer size;

      /** The number of running instances that the managed instance group should maintain at any given time.
     The group automatically adds or removes instances to maintain the number of instances specified by
     this parameter.
       */
      public java.lang.Integer getSize() {
        return size;
      }

      /**
       * The number of running instances that the managed instance group should maintain at any
       * given time. The group automatically adds or removes instances to maintain the number of
       * instances specified by this parameter.
       */
      public Resize setSize(java.lang.Integer size) {
        this.size = size;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Resize setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Resize set(String parameterName, Object value) {
        return (Resize) super.set(parameterName, value);
      }
    }
    /**
     * Specifies the instance template to use when creating new instances in this group. The templates
     * for existing instances in the group do not change unless you recreate them.
     *
     * Create a request for the method "instanceGroupManagers.setInstanceTemplate".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetInstanceTemplate#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersSetInstanceTemplateRequest}
     * @return the request
     */
    public SetInstanceTemplate setInstanceTemplate(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersSetInstanceTemplateRequest content) throws java.io.IOException {
      SetInstanceTemplate result = new SetInstanceTemplate(project, zone, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class SetInstanceTemplate extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Specifies the instance template to use when creating new instances in this group. The templates
       * for existing instances in the group do not change unless you recreate them.
       *
       * Create a request for the method "instanceGroupManagers.setInstanceTemplate".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetInstanceTemplate#execute()} method to invoke the remote
       * operation. <p> {@link SetInstanceTemplate#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersSetInstanceTemplateRequest}
       * @since 1.13
       */
      protected SetInstanceTemplate(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersSetInstanceTemplateRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public SetInstanceTemplate setAlt(java.lang.String alt) {
        return (SetInstanceTemplate) super.setAlt(alt);
      }

      @Override
      public SetInstanceTemplate setFields(java.lang.String fields) {
        return (SetInstanceTemplate) super.setFields(fields);
      }

      @Override
      public SetInstanceTemplate setKey(java.lang.String key) {
        return (SetInstanceTemplate) super.setKey(key);
      }

      @Override
      public SetInstanceTemplate setOauthToken(java.lang.String oauthToken) {
        return (SetInstanceTemplate) super.setOauthToken(oauthToken);
      }

      @Override
      public SetInstanceTemplate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetInstanceTemplate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetInstanceTemplate setQuotaUser(java.lang.String quotaUser) {
        return (SetInstanceTemplate) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetInstanceTemplate setUserIp(java.lang.String userIp) {
        return (SetInstanceTemplate) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetInstanceTemplate setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public SetInstanceTemplate setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public SetInstanceTemplate setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetInstanceTemplate setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetInstanceTemplate set(String parameterName, Object value) {
        return (SetInstanceTemplate) super.set(parameterName, value);
      }
    }
    /**
     * Modifies the target pools to which all instances in this managed instance group are assigned. The
     * target pools automatically apply to all of the instances in the managed instance group. This
     * operation is marked DONE when you make the request even if the instances have not yet been added
     * to their target pools. The change might take some time to apply to all of the instances in the
     * group depending on the size of the group.
     *
     * Create a request for the method "instanceGroupManagers.setTargetPools".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetTargetPools#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the managed instance group is located.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersSetTargetPoolsRequest}
     * @return the request
     */
    public SetTargetPools setTargetPools(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersSetTargetPoolsRequest content) throws java.io.IOException {
      SetTargetPools result = new SetTargetPools(project, zone, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class SetTargetPools extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Modifies the target pools to which all instances in this managed instance group are assigned.
       * The target pools automatically apply to all of the instances in the managed instance group.
       * This operation is marked DONE when you make the request even if the instances have not yet been
       * added to their target pools. The change might take some time to apply to all of the instances
       * in the group depending on the size of the group.
       *
       * Create a request for the method "instanceGroupManagers.setTargetPools".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetTargetPools#execute()} method to invoke the remote operation.
       * <p> {@link SetTargetPools#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the managed instance group is located.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManagersSetTargetPoolsRequest}
       * @since 1.13
       */
      protected SetTargetPools(java.lang.String project, java.lang.String zone, java.lang.String instanceGroupManager, com.google.api.services.compute.model.InstanceGroupManagersSetTargetPoolsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public SetTargetPools setAlt(java.lang.String alt) {
        return (SetTargetPools) super.setAlt(alt);
      }

      @Override
      public SetTargetPools setFields(java.lang.String fields) {
        return (SetTargetPools) super.setFields(fields);
      }

      @Override
      public SetTargetPools setKey(java.lang.String key) {
        return (SetTargetPools) super.setKey(key);
      }

      @Override
      public SetTargetPools setOauthToken(java.lang.String oauthToken) {
        return (SetTargetPools) super.setOauthToken(oauthToken);
      }

      @Override
      public SetTargetPools setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetTargetPools) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetTargetPools setQuotaUser(java.lang.String quotaUser) {
        return (SetTargetPools) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetTargetPools setUserIp(java.lang.String userIp) {
        return (SetTargetPools) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetTargetPools setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the managed instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the managed instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the managed instance group is located. */
      public SetTargetPools setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public SetTargetPools setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetTargetPools setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetTargetPools set(String parameterName, Object value) {
        return (SetTargetPools) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the InstanceGroups collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.InstanceGroups.List request = compute.instanceGroups().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InstanceGroups instanceGroups() {
    return new InstanceGroups();
  }

  /**
   * The "instanceGroups" collection of methods.
   */
  public class InstanceGroups {

    /**
     * Adds a list of instances to the specified instance group. All of the instances in the instance
     * group must be in the same network/subnetwork. Read  Adding instances for more information.
     *
     * Create a request for the method "instanceGroups.addInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group where you are adding instances.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupsAddInstancesRequest}
     * @return the request
     */
    public AddInstances addInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsAddInstancesRequest content) throws java.io.IOException {
      AddInstances result = new AddInstances(project, zone, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class AddInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Adds a list of instances to the specified instance group. All of the instances in the instance
       * group must be in the same network/subnetwork. Read  Adding instances for more information.
       *
       * Create a request for the method "instanceGroups.addInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddInstances#execute()} method to invoke the remote operation. <p>
       * {@link
       * AddInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group where you are adding instances.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupsAddInstancesRequest}
       * @since 1.13
       */
      protected AddInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsAddInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public AddInstances setAlt(java.lang.String alt) {
        return (AddInstances) super.setAlt(alt);
      }

      @Override
      public AddInstances setFields(java.lang.String fields) {
        return (AddInstances) super.setFields(fields);
      }

      @Override
      public AddInstances setKey(java.lang.String key) {
        return (AddInstances) super.setKey(key);
      }

      @Override
      public AddInstances setOauthToken(java.lang.String oauthToken) {
        return (AddInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public AddInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddInstances setQuotaUser(java.lang.String quotaUser) {
        return (AddInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddInstances setUserIp(java.lang.String userIp) {
        return (AddInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public AddInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the instance group where you are adding instances. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group where you are adding instances.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the instance group where you are adding instances. */
      public AddInstances setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddInstances set(String parameterName, Object value) {
        return (AddInstances) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of instance groups and sorts them by zone.
     *
     * Create a request for the method "instanceGroups.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/instanceGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of instance groups and sorts them by zone.
       *
       * Create a request for the method "instanceGroups.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified instance group. The instances in the group are not deleted. Note that
     * instance group must not belong to a backend service. Read  Deleting an instance group for more
     * information.
     *
     * Create a request for the method "instanceGroups.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup) throws java.io.IOException {
      Delete result = new Delete(project, zone, instanceGroup);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes the specified instance group. The instances in the group are not deleted. Note that
       * instance group must not belong to a backend service. Read  Deleting an instance group for more
       * information.
       *
       * Create a request for the method "instanceGroups.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public Delete setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the instance group to delete. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group to delete.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the instance group to delete. */
      public Delete setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified instance group. Gets a list of available instance groups by making a list()
     * request.
     *
     * Create a request for the method "instanceGroups.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup) throws java.io.IOException {
      Get result = new Get(project, zone, instanceGroup);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InstanceGroup> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns the specified instance group. Gets a list of available instance groups by making a
       * list() request.
       *
       * Create a request for the method "instanceGroups.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroup.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public Get setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the instance group. */
      public Get setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an instance group in the specified project using the parameters that are included in the
     * request.
     *
     * Create a request for the method "instanceGroups.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where you want to create the instance group.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroup}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.InstanceGroup content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates an instance group in the specified project using the parameters that are included in
       * the request.
       *
       * Create a request for the method "instanceGroups.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where you want to create the instance group.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroup}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.InstanceGroup content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where you want to create the instance group. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where you want to create the instance group.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where you want to create the instance group. */
      public Insert setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of instance groups that are located in the specified project and zone.
     *
     * Create a request for the method "instanceGroups.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupList> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of instance groups that are located in the specified project and zone.
       *
       * Create a request for the method "instanceGroups.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public List setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists the instances in the specified instance group.
     *
     * Create a request for the method "instanceGroups.listInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group from which you want to generate a list of included instances.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupsListInstancesRequest}
     * @return the request
     */
    public ListInstances listInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsListInstancesRequest content) throws java.io.IOException {
      ListInstances result = new ListInstances(project, zone, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class ListInstances extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupsListInstances> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists the instances in the specified instance group.
       *
       * Create a request for the method "instanceGroups.listInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListInstances#execute()} method to invoke the remote operation. <p>
       * {@link ListInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group from which you want to generate a list of included instances.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupsListInstancesRequest}
       * @since 1.13
       */
      protected ListInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsListInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.InstanceGroupsListInstances.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public ListInstances setAlt(java.lang.String alt) {
        return (ListInstances) super.setAlt(alt);
      }

      @Override
      public ListInstances setFields(java.lang.String fields) {
        return (ListInstances) super.setFields(fields);
      }

      @Override
      public ListInstances setKey(java.lang.String key) {
        return (ListInstances) super.setKey(key);
      }

      @Override
      public ListInstances setOauthToken(java.lang.String oauthToken) {
        return (ListInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public ListInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListInstances setQuotaUser(java.lang.String quotaUser) {
        return (ListInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListInstances setUserIp(java.lang.String userIp) {
        return (ListInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public ListInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /**
       * The name of the instance group from which you want to generate a list of included
       * instances.
       */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group from which you want to generate a list of included instances.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /**
       * The name of the instance group from which you want to generate a list of included
       * instances.
       */
      public ListInstances setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListInstances setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListInstances setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListInstances setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListInstances setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListInstances set(String parameterName, Object value) {
        return (ListInstances) super.set(parameterName, value);
      }
    }
    /**
     * Removes one or more instances from the specified instance group, but does not delete those
     * instances.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration before the VM instance is removed or deleted.
     *
     * Create a request for the method "instanceGroups.removeInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RemoveInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group where the specified instances will be removed.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupsRemoveInstancesRequest}
     * @return the request
     */
    public RemoveInstances removeInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsRemoveInstancesRequest content) throws java.io.IOException {
      RemoveInstances result = new RemoveInstances(project, zone, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class RemoveInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Removes one or more instances from the specified instance group, but does not delete those
       * instances.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration before the VM instance is removed or
       * deleted.
       *
       * Create a request for the method "instanceGroups.removeInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RemoveInstances#execute()} method to invoke the remote operation.
       * <p> {@link RemoveInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group where the specified instances will be removed.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupsRemoveInstancesRequest}
       * @since 1.13
       */
      protected RemoveInstances(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsRemoveInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public RemoveInstances setAlt(java.lang.String alt) {
        return (RemoveInstances) super.setAlt(alt);
      }

      @Override
      public RemoveInstances setFields(java.lang.String fields) {
        return (RemoveInstances) super.setFields(fields);
      }

      @Override
      public RemoveInstances setKey(java.lang.String key) {
        return (RemoveInstances) super.setKey(key);
      }

      @Override
      public RemoveInstances setOauthToken(java.lang.String oauthToken) {
        return (RemoveInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveInstances setQuotaUser(java.lang.String quotaUser) {
        return (RemoveInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveInstances setUserIp(java.lang.String userIp) {
        return (RemoveInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RemoveInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public RemoveInstances setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the instance group where the specified instances will be removed. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group where the specified instances will be removed.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the instance group where the specified instances will be removed. */
      public RemoveInstances setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RemoveInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RemoveInstances set(String parameterName, Object value) {
        return (RemoveInstances) super.set(parameterName, value);
      }
    }
    /**
     * Sets the named ports for the specified instance group.
     *
     * Create a request for the method "instanceGroups.setNamedPorts".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetNamedPorts#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone where the instance group is located.
     * @param instanceGroup The name of the instance group where the named ports are updated.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupsSetNamedPortsRequest}
     * @return the request
     */
    public SetNamedPorts setNamedPorts(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsSetNamedPortsRequest content) throws java.io.IOException {
      SetNamedPorts result = new SetNamedPorts(project, zone, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class SetNamedPorts extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the named ports for the specified instance group.
       *
       * Create a request for the method "instanceGroups.setNamedPorts".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetNamedPorts#execute()} method to invoke the remote operation. <p>
       * {@link SetNamedPorts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone where the instance group is located.
       * @param instanceGroup The name of the instance group where the named ports are updated.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupsSetNamedPortsRequest}
       * @since 1.13
       */
      protected SetNamedPorts(java.lang.String project, java.lang.String zone, java.lang.String instanceGroup, com.google.api.services.compute.model.InstanceGroupsSetNamedPortsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public SetNamedPorts setAlt(java.lang.String alt) {
        return (SetNamedPorts) super.setAlt(alt);
      }

      @Override
      public SetNamedPorts setFields(java.lang.String fields) {
        return (SetNamedPorts) super.setFields(fields);
      }

      @Override
      public SetNamedPorts setKey(java.lang.String key) {
        return (SetNamedPorts) super.setKey(key);
      }

      @Override
      public SetNamedPorts setOauthToken(java.lang.String oauthToken) {
        return (SetNamedPorts) super.setOauthToken(oauthToken);
      }

      @Override
      public SetNamedPorts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetNamedPorts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetNamedPorts setQuotaUser(java.lang.String quotaUser) {
        return (SetNamedPorts) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetNamedPorts setUserIp(java.lang.String userIp) {
        return (SetNamedPorts) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetNamedPorts setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone where the instance group is located. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone where the instance group is located.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone where the instance group is located. */
      public SetNamedPorts setZone(java.lang.String zone) {
        this.zone = zone;
        return this;
      }

      /** The name of the instance group where the named ports are updated. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the instance group where the named ports are updated.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the instance group where the named ports are updated. */
      public SetNamedPorts setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetNamedPorts setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetNamedPorts set(String parameterName, Object value) {
        return (SetNamedPorts) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the InstanceTemplates collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.InstanceTemplates.List request = compute.instanceTemplates().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InstanceTemplates instanceTemplates() {
    return new InstanceTemplates();
  }

  /**
   * The "instanceTemplates" collection of methods.
   */
  public class InstanceTemplates {

    /**
     * Deletes the specified instance template. Deleting an instance template is permanent and cannot be
     * undone. It's not possible to delete templates which are in use by an instance group.
     *
     * Create a request for the method "instanceTemplates.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param instanceTemplate The name of the instance template to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String instanceTemplate) throws java.io.IOException {
      Delete result = new Delete(project, instanceTemplate);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/instanceTemplates/{instanceTemplate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INSTANCE_TEMPLATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified instance template. Deleting an instance template is permanent and cannot
       * be undone. It's not possible to delete templates which are in use by an instance group.
       *
       * Create a request for the method "instanceTemplates.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param instanceTemplate The name of the instance template to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String instanceTemplate) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.instanceTemplate = com.google.api.client.util.Preconditions.checkNotNull(instanceTemplate, "Required parameter instanceTemplate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_TEMPLATE_PATTERN.matcher(instanceTemplate).matches(),
              "Parameter instanceTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the instance template to delete. */
      @com.google.api.client.util.Key
      private java.lang.String instanceTemplate;

      /** The name of the instance template to delete.
       */
      public java.lang.String getInstanceTemplate() {
        return instanceTemplate;
      }

      /** The name of the instance template to delete. */
      public Delete setInstanceTemplate(java.lang.String instanceTemplate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_TEMPLATE_PATTERN.matcher(instanceTemplate).matches(),
              "Parameter instanceTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instanceTemplate = instanceTemplate;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified instance template. Gets a list of available instance templates by making a
     * list() request.
     *
     * Create a request for the method "instanceTemplates.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param instanceTemplate The name of the instance template.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String instanceTemplate) throws java.io.IOException {
      Get result = new Get(project, instanceTemplate);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InstanceTemplate> {

      private static final String REST_PATH = "{project}/global/instanceTemplates/{instanceTemplate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INSTANCE_TEMPLATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified instance template. Gets a list of available instance templates by making
       * a list() request.
       *
       * Create a request for the method "instanceTemplates.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param instanceTemplate The name of the instance template.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String instanceTemplate) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceTemplate.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.instanceTemplate = com.google.api.client.util.Preconditions.checkNotNull(instanceTemplate, "Required parameter instanceTemplate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_TEMPLATE_PATTERN.matcher(instanceTemplate).matches(),
              "Parameter instanceTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the instance template. */
      @com.google.api.client.util.Key
      private java.lang.String instanceTemplate;

      /** The name of the instance template.
       */
      public java.lang.String getInstanceTemplate() {
        return instanceTemplate;
      }

      /** The name of the instance template. */
      public Get setInstanceTemplate(java.lang.String instanceTemplate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_TEMPLATE_PATTERN.matcher(instanceTemplate).matches(),
              "Parameter instanceTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instanceTemplate = instanceTemplate;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an instance template in the specified project using the data that is included in the
     * request. If you are creating a new template to update an existing instance group, your new
     * instance template must use the same network or, if applicable, the same subnetwork as the
     * original template.
     *
     * Create a request for the method "instanceTemplates.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.InstanceTemplate}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.InstanceTemplate content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/instanceTemplates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates an instance template in the specified project using the data that is included in the
       * request. If you are creating a new template to update an existing instance group, your new
       * instance template must use the same network or, if applicable, the same subnetwork as the
       * original template.
       *
       * Create a request for the method "instanceTemplates.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.InstanceTemplate}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.InstanceTemplate content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of instance templates that are contained within the specified project and zone.
     *
     * Create a request for the method "instanceTemplates.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InstanceTemplateList> {

      private static final String REST_PATH = "{project}/global/instanceTemplates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves a list of instance templates that are contained within the specified project and
       * zone.
       *
       * Create a request for the method "instanceTemplates.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceTemplateList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Instances collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Instances.List request = compute.instances().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Instances instances() {
    return new Instances();
  }

  /**
   * The "instances" collection of methods.
   */
  public class Instances {

    /**
     * Adds an access config to an instance's network interface.
     *
     * Create a request for the method "instances.addAccessConfig".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddAccessConfig#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name for this request.
     * @param networkInterface The name of the network interface to add to this instance.
     * @param content the {@link com.google.api.services.compute.model.AccessConfig}
     * @return the request
     */
    public AddAccessConfig addAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.AccessConfig content) throws java.io.IOException {
      AddAccessConfig result = new AddAccessConfig(project, zone, instance, networkInterface, content);
      initialize(result);
      return result;
    }

    public class AddAccessConfig extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/addAccessConfig";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Adds an access config to an instance's network interface.
       *
       * Create a request for the method "instances.addAccessConfig".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddAccessConfig#execute()} method to invoke the remote operation.
       * <p> {@link AddAccessConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name for this request.
       * @param networkInterface The name of the network interface to add to this instance.
       * @param content the {@link com.google.api.services.compute.model.AccessConfig}
       * @since 1.13
       */
      protected AddAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.AccessConfig content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.networkInterface = com.google.api.client.util.Preconditions.checkNotNull(networkInterface, "Required parameter networkInterface must be specified.");
      }

      @Override
      public AddAccessConfig setAlt(java.lang.String alt) {
        return (AddAccessConfig) super.setAlt(alt);
      }

      @Override
      public AddAccessConfig setFields(java.lang.String fields) {
        return (AddAccessConfig) super.setFields(fields);
      }

      @Override
      public AddAccessConfig setKey(java.lang.String key) {
        return (AddAccessConfig) super.setKey(key);
      }

      @Override
      public AddAccessConfig setOauthToken(java.lang.String oauthToken) {
        return (AddAccessConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public AddAccessConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddAccessConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddAccessConfig setQuotaUser(java.lang.String quotaUser) {
        return (AddAccessConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddAccessConfig setUserIp(java.lang.String userIp) {
        return (AddAccessConfig) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddAccessConfig setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public AddAccessConfig setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name for this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name for this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name for this request. */
      public AddAccessConfig setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** The name of the network interface to add to this instance. */
      @com.google.api.client.util.Key
      private java.lang.String networkInterface;

      /** The name of the network interface to add to this instance.
       */
      public java.lang.String getNetworkInterface() {
        return networkInterface;
      }

      /** The name of the network interface to add to this instance. */
      public AddAccessConfig setNetworkInterface(java.lang.String networkInterface) {
        this.networkInterface = networkInterface;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddAccessConfig setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddAccessConfig set(String parameterName, Object value) {
        return (AddAccessConfig) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves aggregated list of all of the instances in your project across all regions and zones.
     *
     * Create a request for the method "instances.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.InstanceAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/instances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves aggregated list of all of the instances in your project across all regions and zones.
       *
       * Create a request for the method "instances.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Attaches an existing Disk resource to an instance. You must first create the disk before you can
     * attach it. It is not possible to create and attach a disk at the same time. For more information,
     * read Adding a persistent disk to your instance.
     *
     * Create a request for the method "instances.attachDisk".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AttachDisk#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name for this request.
     * @param content the {@link com.google.api.services.compute.model.AttachedDisk}
     * @return the request
     */
    public AttachDisk attachDisk(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.AttachedDisk content) throws java.io.IOException {
      AttachDisk result = new AttachDisk(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class AttachDisk extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/attachDisk";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Attaches an existing Disk resource to an instance. You must first create the disk before you
       * can attach it. It is not possible to create and attach a disk at the same time. For more
       * information, read Adding a persistent disk to your instance.
       *
       * Create a request for the method "instances.attachDisk".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AttachDisk#execute()} method to invoke the remote operation. <p>
       * {@link
       * AttachDisk#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name for this request.
       * @param content the {@link com.google.api.services.compute.model.AttachedDisk}
       * @since 1.13
       */
      protected AttachDisk(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.AttachedDisk content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AttachDisk setAlt(java.lang.String alt) {
        return (AttachDisk) super.setAlt(alt);
      }

      @Override
      public AttachDisk setFields(java.lang.String fields) {
        return (AttachDisk) super.setFields(fields);
      }

      @Override
      public AttachDisk setKey(java.lang.String key) {
        return (AttachDisk) super.setKey(key);
      }

      @Override
      public AttachDisk setOauthToken(java.lang.String oauthToken) {
        return (AttachDisk) super.setOauthToken(oauthToken);
      }

      @Override
      public AttachDisk setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AttachDisk) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AttachDisk setQuotaUser(java.lang.String quotaUser) {
        return (AttachDisk) super.setQuotaUser(quotaUser);
      }

      @Override
      public AttachDisk setUserIp(java.lang.String userIp) {
        return (AttachDisk) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AttachDisk setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public AttachDisk setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name for this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name for this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name for this request. */
      public AttachDisk setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * Whether to force attach the disk even if it's currently attached to another instance. This
       * is only available for regional disks.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean forceAttach;

      /** Whether to force attach the disk even if it's currently attached to another instance. This is only
     available for regional disks.
       */
      public java.lang.Boolean getForceAttach() {
        return forceAttach;
      }

      /**
       * Whether to force attach the disk even if it's currently attached to another instance. This
       * is only available for regional disks.
       */
      public AttachDisk setForceAttach(java.lang.Boolean forceAttach) {
        this.forceAttach = forceAttach;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AttachDisk setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AttachDisk set(String parameterName, Object value) {
        return (AttachDisk) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified Instance resource. For more information, see Stopping or Deleting an
     * Instance.
     *
     * Create a request for the method "instances.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      Delete result = new Delete(project, zone, instance);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Deletes the specified Instance resource. For more information, see Stopping or Deleting an
       * Instance.
       *
       * Create a request for the method "instances.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to delete.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to delete. */
      public Delete setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Deletes an access config from an instance's network interface.
     *
     * Create a request for the method "instances.deleteAccessConfig".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteAccessConfig#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name for this request.
     * @param accessConfig The name of the access config to delete.
     * @param networkInterface The name of the network interface.
     * @return the request
     */
    public DeleteAccessConfig deleteAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String accessConfig, java.lang.String networkInterface) throws java.io.IOException {
      DeleteAccessConfig result = new DeleteAccessConfig(project, zone, instance, accessConfig, networkInterface);
      initialize(result);
      return result;
    }

    public class DeleteAccessConfig extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/deleteAccessConfig";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes an access config from an instance's network interface.
       *
       * Create a request for the method "instances.deleteAccessConfig".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteAccessConfig#execute()} method to invoke the remote
       * operation. <p> {@link DeleteAccessConfig#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name for this request.
       * @param accessConfig The name of the access config to delete.
       * @param networkInterface The name of the network interface.
       * @since 1.13
       */
      protected DeleteAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String accessConfig, java.lang.String networkInterface) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.accessConfig = com.google.api.client.util.Preconditions.checkNotNull(accessConfig, "Required parameter accessConfig must be specified.");
        this.networkInterface = com.google.api.client.util.Preconditions.checkNotNull(networkInterface, "Required parameter networkInterface must be specified.");
      }

      @Override
      public DeleteAccessConfig setAlt(java.lang.String alt) {
        return (DeleteAccessConfig) super.setAlt(alt);
      }

      @Override
      public DeleteAccessConfig setFields(java.lang.String fields) {
        return (DeleteAccessConfig) super.setFields(fields);
      }

      @Override
      public DeleteAccessConfig setKey(java.lang.String key) {
        return (DeleteAccessConfig) super.setKey(key);
      }

      @Override
      public DeleteAccessConfig setOauthToken(java.lang.String oauthToken) {
        return (DeleteAccessConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteAccessConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteAccessConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteAccessConfig setQuotaUser(java.lang.String quotaUser) {
        return (DeleteAccessConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteAccessConfig setUserIp(java.lang.String userIp) {
        return (DeleteAccessConfig) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteAccessConfig setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public DeleteAccessConfig setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name for this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name for this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name for this request. */
      public DeleteAccessConfig setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** The name of the access config to delete. */
      @com.google.api.client.util.Key
      private java.lang.String accessConfig;

      /** The name of the access config to delete.
       */
      public java.lang.String getAccessConfig() {
        return accessConfig;
      }

      /** The name of the access config to delete. */
      public DeleteAccessConfig setAccessConfig(java.lang.String accessConfig) {
        this.accessConfig = accessConfig;
        return this;
      }

      /** The name of the network interface. */
      @com.google.api.client.util.Key
      private java.lang.String networkInterface;

      /** The name of the network interface.
       */
      public java.lang.String getNetworkInterface() {
        return networkInterface;
      }

      /** The name of the network interface. */
      public DeleteAccessConfig setNetworkInterface(java.lang.String networkInterface) {
        this.networkInterface = networkInterface;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteAccessConfig setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteAccessConfig set(String parameterName, Object value) {
        return (DeleteAccessConfig) super.set(parameterName, value);
      }
    }
    /**
     * Detaches a disk from an instance.
     *
     * Create a request for the method "instances.detachDisk".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DetachDisk#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Instance name.
     * @param deviceName Disk device name to detach.
     * @return the request
     */
    public DetachDisk detachDisk(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String deviceName) throws java.io.IOException {
      DetachDisk result = new DetachDisk(project, zone, instance, deviceName);
      initialize(result);
      return result;
    }

    public class DetachDisk extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/detachDisk";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Detaches a disk from an instance.
       *
       * Create a request for the method "instances.detachDisk".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DetachDisk#execute()} method to invoke the remote operation. <p>
       * {@link
       * DetachDisk#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Instance name.
       * @param deviceName Disk device name to detach.
       * @since 1.13
       */
      protected DetachDisk(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String deviceName) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.deviceName = com.google.api.client.util.Preconditions.checkNotNull(deviceName, "Required parameter deviceName must be specified.");
      }

      @Override
      public DetachDisk setAlt(java.lang.String alt) {
        return (DetachDisk) super.setAlt(alt);
      }

      @Override
      public DetachDisk setFields(java.lang.String fields) {
        return (DetachDisk) super.setFields(fields);
      }

      @Override
      public DetachDisk setKey(java.lang.String key) {
        return (DetachDisk) super.setKey(key);
      }

      @Override
      public DetachDisk setOauthToken(java.lang.String oauthToken) {
        return (DetachDisk) super.setOauthToken(oauthToken);
      }

      @Override
      public DetachDisk setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DetachDisk) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DetachDisk setQuotaUser(java.lang.String quotaUser) {
        return (DetachDisk) super.setQuotaUser(quotaUser);
      }

      @Override
      public DetachDisk setUserIp(java.lang.String userIp) {
        return (DetachDisk) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DetachDisk setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public DetachDisk setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Instance name. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Instance name.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Instance name. */
      public DetachDisk setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** Disk device name to detach. */
      @com.google.api.client.util.Key
      private java.lang.String deviceName;

      /** Disk device name to detach.
       */
      public java.lang.String getDeviceName() {
        return deviceName;
      }

      /** Disk device name to detach. */
      public DetachDisk setDeviceName(java.lang.String deviceName) {
        this.deviceName = deviceName;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DetachDisk setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DetachDisk set(String parameterName, Object value) {
        return (DetachDisk) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified Instance resource. Gets a list of available instances by making a list()
     * request.
     *
     * Create a request for the method "instances.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      Get result = new Get(project, zone, instance);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Instance> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns the specified Instance resource. Gets a list of available instances by making a list()
       * request.
       *
       * Create a request for the method "instances.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Instance.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to return.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to return. */
      public Get setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.instance = instance;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns the last 1 MB of serial port output from the specified instance.
     *
     * Create a request for the method "instances.getSerialPortOutput".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetSerialPortOutput#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @return the request
     */
    public GetSerialPortOutput getSerialPortOutput(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      GetSerialPortOutput result = new GetSerialPortOutput(project, zone, instance);
      initialize(result);
      return result;
    }

    public class GetSerialPortOutput extends ComputeRequest<com.google.api.services.compute.model.SerialPortOutput> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/serialPort";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the last 1 MB of serial port output from the specified instance.
       *
       * Create a request for the method "instances.getSerialPortOutput".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetSerialPortOutput#execute()} method to invoke the remote
       * operation. <p> {@link GetSerialPortOutput#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @since 1.13
       */
      protected GetSerialPortOutput(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SerialPortOutput.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSerialPortOutput setAlt(java.lang.String alt) {
        return (GetSerialPortOutput) super.setAlt(alt);
      }

      @Override
      public GetSerialPortOutput setFields(java.lang.String fields) {
        return (GetSerialPortOutput) super.setFields(fields);
      }

      @Override
      public GetSerialPortOutput setKey(java.lang.String key) {
        return (GetSerialPortOutput) super.setKey(key);
      }

      @Override
      public GetSerialPortOutput setOauthToken(java.lang.String oauthToken) {
        return (GetSerialPortOutput) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSerialPortOutput setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSerialPortOutput) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSerialPortOutput setQuotaUser(java.lang.String quotaUser) {
        return (GetSerialPortOutput) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSerialPortOutput setUserIp(java.lang.String userIp) {
        return (GetSerialPortOutput) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetSerialPortOutput setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public GetSerialPortOutput setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public GetSerialPortOutput setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** Specifies which COM or serial port to retrieve data from. */
      @com.google.api.client.util.Key
      private java.lang.Integer port;

      /** Specifies which COM or serial port to retrieve data from. [default: 1] [minimum: 1] [maximum: 4]
       */
      public java.lang.Integer getPort() {
        return port;
      }

      /** Specifies which COM or serial port to retrieve data from. */
      public GetSerialPortOutput setPort(java.lang.Integer port) {
        this.port = port;
        return this;
      }

      /**
       * Returns output starting from a specific byte position. Use this to page through output when
       * the output is too large to return in a single request. For the initial request, leave this
       * field unspecified. For subsequent calls, this field should be set to the next value
       * returned in the previous call.
       */
      @com.google.api.client.util.Key
      private java.lang.Long start;

      /** Returns output starting from a specific byte position. Use this to page through output when the
     output is too large to return in a single request. For the initial request, leave this field
     unspecified. For subsequent calls, this field should be set to the next value returned in the
     previous call.
       */
      public java.lang.Long getStart() {
        return start;
      }

      /**
       * Returns output starting from a specific byte position. Use this to page through output when
       * the output is too large to return in a single request. For the initial request, leave this
       * field unspecified. For subsequent calls, this field should be set to the next value
       * returned in the previous call.
       */
      public GetSerialPortOutput setStart(java.lang.Long start) {
        this.start = start;
        return this;
      }

      @Override
      public GetSerialPortOutput set(String parameterName, Object value) {
        return (GetSerialPortOutput) super.set(parameterName, value);
      }
    }
    /**
     * Creates an instance resource in the specified project using the data included in the request.
     *
     * Create a request for the method "instances.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param content the {@link com.google.api.services.compute.model.Instance}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Instance content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates an instance resource in the specified project using the data included in the request.
       *
       * Create a request for the method "instances.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param content the {@link com.google.api.services.compute.model.Instance}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.Instance content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Insert setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      /**
       * Specifies instance template to create the instance.
       *
       * This field is optional. It can be a full or partial URL. For example, the following are all
       * valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/projec
       * t/global/instanceTemplates/instanceTemplate -
       * projects/project/global/instanceTemplates/instanceTemplate -
       * global/instanceTemplates/instanceTemplate
       */
      @com.google.api.client.util.Key
      private java.lang.String sourceInstanceTemplate;

      /** Specifies instance template to create the instance.

     This field is optional. It can be a full or partial URL. For example, the following are all valid
     URLs to an instance template: -
     https://www.googleapis.com/compute/v1/projects/project/global/instanceTemplates/instanceTemplate -
     projects/project/global/instanceTemplates/instanceTemplate -
     global/instanceTemplates/instanceTemplate
       */
      public java.lang.String getSourceInstanceTemplate() {
        return sourceInstanceTemplate;
      }

      /**
       * Specifies instance template to create the instance.
       *
       * This field is optional. It can be a full or partial URL. For example, the following are all
       * valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/projec
       * t/global/instanceTemplates/instanceTemplate -
       * projects/project/global/instanceTemplates/instanceTemplate -
       * global/instanceTemplates/instanceTemplate
       */
      public Insert setSourceInstanceTemplate(java.lang.String sourceInstanceTemplate) {
        this.sourceInstanceTemplate = sourceInstanceTemplate;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of instances contained within the specified zone.
     *
     * Create a request for the method "instances.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InstanceList> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the list of instances contained within the specified zone.
       *
       * Create a request for the method "instances.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of referrers to instances contained within the specified zone. For more
     * information, read Viewing Referrers to VM Instances.
     *
     * Create a request for the method "instances.listReferrers".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListReferrers#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the target instance scoping this request, or '-' if the request should span over all
     *        instances in the container.
     * @return the request
     */
    public ListReferrers listReferrers(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      ListReferrers result = new ListReferrers(project, zone, instance);
      initialize(result);
      return result;
    }

    public class ListReferrers extends ComputeRequest<com.google.api.services.compute.model.InstanceListReferrers> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/referrers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("-|[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the list of referrers to instances contained within the specified zone. For more
       * information, read Viewing Referrers to VM Instances.
       *
       * Create a request for the method "instances.listReferrers".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListReferrers#execute()} method to invoke the remote operation. <p>
       * {@link ListReferrers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the target instance scoping this request, or '-' if the request should span over all
     *        instances in the container.
       * @since 1.13
       */
      protected ListReferrers(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceListReferrers.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "-|[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListReferrers setAlt(java.lang.String alt) {
        return (ListReferrers) super.setAlt(alt);
      }

      @Override
      public ListReferrers setFields(java.lang.String fields) {
        return (ListReferrers) super.setFields(fields);
      }

      @Override
      public ListReferrers setKey(java.lang.String key) {
        return (ListReferrers) super.setKey(key);
      }

      @Override
      public ListReferrers setOauthToken(java.lang.String oauthToken) {
        return (ListReferrers) super.setOauthToken(oauthToken);
      }

      @Override
      public ListReferrers setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListReferrers) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListReferrers setQuotaUser(java.lang.String quotaUser) {
        return (ListReferrers) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListReferrers setUserIp(java.lang.String userIp) {
        return (ListReferrers) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListReferrers setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public ListReferrers setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * Name of the target instance scoping this request, or '-' if the request should span over
       * all instances in the container.
       */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the target instance scoping this request, or '-' if the request should span over all
     instances in the container.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /**
       * Name of the target instance scoping this request, or '-' if the request should span over
       * all instances in the container.
       */
      public ListReferrers setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "-|[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListReferrers setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListReferrers setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListReferrers setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListReferrers setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListReferrers set(String parameterName, Object value) {
        return (ListReferrers) super.set(parameterName, value);
      }
    }
    /**
     * Performs a reset on the instance. For more information, see Resetting an instance.
     *
     * Create a request for the method "instances.reset".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Reset#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @return the request
     */
    public Reset reset(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      Reset result = new Reset(project, zone, instance);
      initialize(result);
      return result;
    }

    public class Reset extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/reset";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Performs a reset on the instance. For more information, see Resetting an instance.
       *
       * Create a request for the method "instances.reset".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Reset#execute()} method to invoke the remote operation. <p> {@link
       * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @since 1.13
       */
      protected Reset(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Reset setAlt(java.lang.String alt) {
        return (Reset) super.setAlt(alt);
      }

      @Override
      public Reset setFields(java.lang.String fields) {
        return (Reset) super.setFields(fields);
      }

      @Override
      public Reset setKey(java.lang.String key) {
        return (Reset) super.setKey(key);
      }

      @Override
      public Reset setOauthToken(java.lang.String oauthToken) {
        return (Reset) super.setOauthToken(oauthToken);
      }

      @Override
      public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Reset) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Reset setQuotaUser(java.lang.String quotaUser) {
        return (Reset) super.setQuotaUser(quotaUser);
      }

      @Override
      public Reset setUserIp(java.lang.String userIp) {
        return (Reset) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Reset setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Reset setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public Reset setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Reset setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Reset set(String parameterName, Object value) {
        return (Reset) super.set(parameterName, value);
      }
    }
    /**
     * Sets deletion protection on the instance.
     *
     * Create a request for the method "instances.setDeletionProtection".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetDeletionProtection#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param resource Name of the resource for this request.
     * @return the request
     */
    public SetDeletionProtection setDeletionProtection(java.lang.String project, java.lang.String zone, java.lang.String resource) throws java.io.IOException {
      SetDeletionProtection result = new SetDeletionProtection(project, zone, resource);
      initialize(result);
      return result;
    }

    public class SetDeletionProtection extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{resource}/setDeletionProtection";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets deletion protection on the instance.
       *
       * Create a request for the method "instances.setDeletionProtection".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetDeletionProtection#execute()} method to invoke the remote
       * operation. <p> {@link SetDeletionProtection#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param resource Name of the resource for this request.
       * @since 1.13
       */
      protected SetDeletionProtection(java.lang.String project, java.lang.String zone, java.lang.String resource) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetDeletionProtection setAlt(java.lang.String alt) {
        return (SetDeletionProtection) super.setAlt(alt);
      }

      @Override
      public SetDeletionProtection setFields(java.lang.String fields) {
        return (SetDeletionProtection) super.setFields(fields);
      }

      @Override
      public SetDeletionProtection setKey(java.lang.String key) {
        return (SetDeletionProtection) super.setKey(key);
      }

      @Override
      public SetDeletionProtection setOauthToken(java.lang.String oauthToken) {
        return (SetDeletionProtection) super.setOauthToken(oauthToken);
      }

      @Override
      public SetDeletionProtection setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetDeletionProtection) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetDeletionProtection setQuotaUser(java.lang.String quotaUser) {
        return (SetDeletionProtection) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetDeletionProtection setUserIp(java.lang.String userIp) {
        return (SetDeletionProtection) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetDeletionProtection setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetDeletionProtection setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name of the resource for this request. */
      public SetDeletionProtection setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = resource;
        return this;
      }

      /** Whether the resource should be protected against deletion. */
      @com.google.api.client.util.Key
      private java.lang.Boolean deletionProtection;

      /** Whether the resource should be protected against deletion. [default: true]
       */
      public java.lang.Boolean getDeletionProtection() {
        return deletionProtection;
      }

      /** Whether the resource should be protected against deletion. */
      public SetDeletionProtection setDeletionProtection(java.lang.Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
      }

      /**
       * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
       *
       * <p>
       * Boolean properties can have four possible values:
       * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
       * or {@link Boolean#FALSE}.
       * </p>
       *
       * <p>
       * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
       * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
       * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * </p>
       *
       * <p>
       * Whether the resource should be protected against deletion.
       * </p>
       */
      public boolean isDeletionProtection() {
        if (deletionProtection == null || deletionProtection == com.google.api.client.util.Data.NULL_BOOLEAN) {
          return true;
        }
        return deletionProtection;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetDeletionProtection setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetDeletionProtection set(String parameterName, Object value) {
        return (SetDeletionProtection) super.set(parameterName, value);
      }
    }
    /**
     * Sets the auto-delete flag for a disk attached to an instance.
     *
     * Create a request for the method "instances.setDiskAutoDelete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetDiskAutoDelete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name.
     * @param autoDelete Whether to auto-delete the disk when the instance is deleted.
     * @param deviceName The device name of the disk to modify.
     * @return the request
     */
    public SetDiskAutoDelete setDiskAutoDelete(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.Boolean autoDelete, java.lang.String deviceName) throws java.io.IOException {
      SetDiskAutoDelete result = new SetDiskAutoDelete(project, zone, instance, autoDelete, deviceName);
      initialize(result);
      return result;
    }

    public class SetDiskAutoDelete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DEVICE_NAME_PATTERN =
          java.util.regex.Pattern.compile("\\w[\\w.-]{0,254}");

      /**
       * Sets the auto-delete flag for a disk attached to an instance.
       *
       * Create a request for the method "instances.setDiskAutoDelete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetDiskAutoDelete#execute()} method to invoke the remote operation.
       * <p> {@link SetDiskAutoDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name.
       * @param autoDelete Whether to auto-delete the disk when the instance is deleted.
       * @param deviceName The device name of the disk to modify.
       * @since 1.13
       */
      protected SetDiskAutoDelete(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.Boolean autoDelete, java.lang.String deviceName) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoDelete = com.google.api.client.util.Preconditions.checkNotNull(autoDelete, "Required parameter autoDelete must be specified.");
        this.deviceName = com.google.api.client.util.Preconditions.checkNotNull(deviceName, "Required parameter deviceName must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DEVICE_NAME_PATTERN.matcher(deviceName).matches(),
              "Parameter deviceName must conform to the pattern " +
              "\\w[\\w.-]{0,254}");
        }
      }

      @Override
      public SetDiskAutoDelete setAlt(java.lang.String alt) {
        return (SetDiskAutoDelete) super.setAlt(alt);
      }

      @Override
      public SetDiskAutoDelete setFields(java.lang.String fields) {
        return (SetDiskAutoDelete) super.setFields(fields);
      }

      @Override
      public SetDiskAutoDelete setKey(java.lang.String key) {
        return (SetDiskAutoDelete) super.setKey(key);
      }

      @Override
      public SetDiskAutoDelete setOauthToken(java.lang.String oauthToken) {
        return (SetDiskAutoDelete) super.setOauthToken(oauthToken);
      }

      @Override
      public SetDiskAutoDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetDiskAutoDelete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetDiskAutoDelete setQuotaUser(java.lang.String quotaUser) {
        return (SetDiskAutoDelete) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetDiskAutoDelete setUserIp(java.lang.String userIp) {
        return (SetDiskAutoDelete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetDiskAutoDelete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetDiskAutoDelete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name. */
      public SetDiskAutoDelete setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** Whether to auto-delete the disk when the instance is deleted. */
      @com.google.api.client.util.Key
      private java.lang.Boolean autoDelete;

      /** Whether to auto-delete the disk when the instance is deleted.
       */
      public java.lang.Boolean getAutoDelete() {
        return autoDelete;
      }

      /** Whether to auto-delete the disk when the instance is deleted. */
      public SetDiskAutoDelete setAutoDelete(java.lang.Boolean autoDelete) {
        this.autoDelete = autoDelete;
        return this;
      }

      /** The device name of the disk to modify. */
      @com.google.api.client.util.Key
      private java.lang.String deviceName;

      /** The device name of the disk to modify.
       */
      public java.lang.String getDeviceName() {
        return deviceName;
      }

      /** The device name of the disk to modify. */
      public SetDiskAutoDelete setDeviceName(java.lang.String deviceName) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DEVICE_NAME_PATTERN.matcher(deviceName).matches(),
              "Parameter deviceName must conform to the pattern " +
              "\\w[\\w.-]{0,254}");
        }
        this.deviceName = deviceName;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetDiskAutoDelete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetDiskAutoDelete set(String parameterName, Object value) {
        return (SetDiskAutoDelete) super.set(parameterName, value);
      }
    }
    /**
     * Sets labels on an instance. To learn more about labels, read the Labeling Resources
     * documentation.
     *
     * Create a request for the method "instances.setLabels".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.InstancesSetLabelsRequest}
     * @return the request
     */
    public SetLabels setLabels(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetLabelsRequest content) throws java.io.IOException {
      SetLabels result = new SetLabels(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetLabels extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setLabels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets labels on an instance. To learn more about labels, read the Labeling Resources
       * documentation.
       *
       * Create a request for the method "instances.setLabels".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.InstancesSetLabelsRequest}
       * @since 1.13
       */
      protected SetLabels(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetLabelsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetLabels setAlt(java.lang.String alt) {
        return (SetLabels) super.setAlt(alt);
      }

      @Override
      public SetLabels setFields(java.lang.String fields) {
        return (SetLabels) super.setFields(fields);
      }

      @Override
      public SetLabels setKey(java.lang.String key) {
        return (SetLabels) super.setKey(key);
      }

      @Override
      public SetLabels setOauthToken(java.lang.String oauthToken) {
        return (SetLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public SetLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetLabels setQuotaUser(java.lang.String quotaUser) {
        return (SetLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetLabels setUserIp(java.lang.String userIp) {
        return (SetLabels) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetLabels setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetLabels setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetLabels setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetLabels setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetLabels set(String parameterName, Object value) {
        return (SetLabels) super.set(parameterName, value);
      }
    }
    /**
     * Changes the number and/or type of accelerator for a stopped instance to the values specified in
     * the request.
     *
     * Create a request for the method "instances.setMachineResources".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetMachineResources#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.InstancesSetMachineResourcesRequest}
     * @return the request
     */
    public SetMachineResources setMachineResources(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMachineResourcesRequest content) throws java.io.IOException {
      SetMachineResources result = new SetMachineResources(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetMachineResources extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setMachineResources";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the number and/or type of accelerator for a stopped instance to the values specified in
       * the request.
       *
       * Create a request for the method "instances.setMachineResources".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetMachineResources#execute()} method to invoke the remote
       * operation. <p> {@link SetMachineResources#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.InstancesSetMachineResourcesRequest}
       * @since 1.13
       */
      protected SetMachineResources(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMachineResourcesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetMachineResources setAlt(java.lang.String alt) {
        return (SetMachineResources) super.setAlt(alt);
      }

      @Override
      public SetMachineResources setFields(java.lang.String fields) {
        return (SetMachineResources) super.setFields(fields);
      }

      @Override
      public SetMachineResources setKey(java.lang.String key) {
        return (SetMachineResources) super.setKey(key);
      }

      @Override
      public SetMachineResources setOauthToken(java.lang.String oauthToken) {
        return (SetMachineResources) super.setOauthToken(oauthToken);
      }

      @Override
      public SetMachineResources setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetMachineResources) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetMachineResources setQuotaUser(java.lang.String quotaUser) {
        return (SetMachineResources) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetMachineResources setUserIp(java.lang.String userIp) {
        return (SetMachineResources) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetMachineResources setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetMachineResources setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetMachineResources setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetMachineResources setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetMachineResources set(String parameterName, Object value) {
        return (SetMachineResources) super.set(parameterName, value);
      }
    }
    /**
     * Changes the machine type for a stopped instance to the machine type specified in the request.
     *
     * Create a request for the method "instances.setMachineType".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetMachineType#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.InstancesSetMachineTypeRequest}
     * @return the request
     */
    public SetMachineType setMachineType(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMachineTypeRequest content) throws java.io.IOException {
      SetMachineType result = new SetMachineType(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetMachineType extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setMachineType";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the machine type for a stopped instance to the machine type specified in the request.
       *
       * Create a request for the method "instances.setMachineType".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetMachineType#execute()} method to invoke the remote operation.
       * <p> {@link SetMachineType#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.InstancesSetMachineTypeRequest}
       * @since 1.13
       */
      protected SetMachineType(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMachineTypeRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetMachineType setAlt(java.lang.String alt) {
        return (SetMachineType) super.setAlt(alt);
      }

      @Override
      public SetMachineType setFields(java.lang.String fields) {
        return (SetMachineType) super.setFields(fields);
      }

      @Override
      public SetMachineType setKey(java.lang.String key) {
        return (SetMachineType) super.setKey(key);
      }

      @Override
      public SetMachineType setOauthToken(java.lang.String oauthToken) {
        return (SetMachineType) super.setOauthToken(oauthToken);
      }

      @Override
      public SetMachineType setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetMachineType) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetMachineType setQuotaUser(java.lang.String quotaUser) {
        return (SetMachineType) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetMachineType setUserIp(java.lang.String userIp) {
        return (SetMachineType) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetMachineType setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetMachineType setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetMachineType setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetMachineType setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetMachineType set(String parameterName, Object value) {
        return (SetMachineType) super.set(parameterName, value);
      }
    }
    /**
     * Sets metadata for the specified instance to the data included in the request.
     *
     * Create a request for the method "instances.setMetadata".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetMetadata#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Metadata}
     * @return the request
     */
    public SetMetadata setMetadata(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Metadata content) throws java.io.IOException {
      SetMetadata result = new SetMetadata(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetMetadata extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setMetadata";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets metadata for the specified instance to the data included in the request.
       *
       * Create a request for the method "instances.setMetadata".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetMetadata#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetMetadata#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Metadata}
       * @since 1.13
       */
      protected SetMetadata(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Metadata content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetMetadata setAlt(java.lang.String alt) {
        return (SetMetadata) super.setAlt(alt);
      }

      @Override
      public SetMetadata setFields(java.lang.String fields) {
        return (SetMetadata) super.setFields(fields);
      }

      @Override
      public SetMetadata setKey(java.lang.String key) {
        return (SetMetadata) super.setKey(key);
      }

      @Override
      public SetMetadata setOauthToken(java.lang.String oauthToken) {
        return (SetMetadata) super.setOauthToken(oauthToken);
      }

      @Override
      public SetMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetMetadata) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetMetadata setQuotaUser(java.lang.String quotaUser) {
        return (SetMetadata) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetMetadata setUserIp(java.lang.String userIp) {
        return (SetMetadata) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetMetadata setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetMetadata setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetMetadata setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetMetadata setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetMetadata set(String parameterName, Object value) {
        return (SetMetadata) super.set(parameterName, value);
      }
    }
    /**
     * Changes the minimum CPU platform that this instance should use. This method can only be called on
     * a stopped instance. For more information, read Specifying a Minimum CPU Platform.
     *
     * Create a request for the method "instances.setMinCpuPlatform".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetMinCpuPlatform#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.InstancesSetMinCpuPlatformRequest}
     * @return the request
     */
    public SetMinCpuPlatform setMinCpuPlatform(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMinCpuPlatformRequest content) throws java.io.IOException {
      SetMinCpuPlatform result = new SetMinCpuPlatform(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetMinCpuPlatform extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the minimum CPU platform that this instance should use. This method can only be called
       * on a stopped instance. For more information, read Specifying a Minimum CPU Platform.
       *
       * Create a request for the method "instances.setMinCpuPlatform".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetMinCpuPlatform#execute()} method to invoke the remote operation.
       * <p> {@link SetMinCpuPlatform#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.InstancesSetMinCpuPlatformRequest}
       * @since 1.13
       */
      protected SetMinCpuPlatform(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetMinCpuPlatformRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetMinCpuPlatform setAlt(java.lang.String alt) {
        return (SetMinCpuPlatform) super.setAlt(alt);
      }

      @Override
      public SetMinCpuPlatform setFields(java.lang.String fields) {
        return (SetMinCpuPlatform) super.setFields(fields);
      }

      @Override
      public SetMinCpuPlatform setKey(java.lang.String key) {
        return (SetMinCpuPlatform) super.setKey(key);
      }

      @Override
      public SetMinCpuPlatform setOauthToken(java.lang.String oauthToken) {
        return (SetMinCpuPlatform) super.setOauthToken(oauthToken);
      }

      @Override
      public SetMinCpuPlatform setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetMinCpuPlatform) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetMinCpuPlatform setQuotaUser(java.lang.String quotaUser) {
        return (SetMinCpuPlatform) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetMinCpuPlatform setUserIp(java.lang.String userIp) {
        return (SetMinCpuPlatform) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetMinCpuPlatform setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetMinCpuPlatform setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetMinCpuPlatform setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetMinCpuPlatform setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetMinCpuPlatform set(String parameterName, Object value) {
        return (SetMinCpuPlatform) super.set(parameterName, value);
      }
    }
    /**
     * Sets an instance's scheduling options.
     *
     * Create a request for the method "instances.setScheduling".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetScheduling#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Instance name.
     * @param content the {@link com.google.api.services.compute.model.Scheduling}
     * @return the request
     */
    public SetScheduling setScheduling(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Scheduling content) throws java.io.IOException {
      SetScheduling result = new SetScheduling(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetScheduling extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setScheduling";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets an instance's scheduling options.
       *
       * Create a request for the method "instances.setScheduling".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetScheduling#execute()} method to invoke the remote operation. <p>
       * {@link SetScheduling#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Instance name.
       * @param content the {@link com.google.api.services.compute.model.Scheduling}
       * @since 1.13
       */
      protected SetScheduling(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Scheduling content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetScheduling setAlt(java.lang.String alt) {
        return (SetScheduling) super.setAlt(alt);
      }

      @Override
      public SetScheduling setFields(java.lang.String fields) {
        return (SetScheduling) super.setFields(fields);
      }

      @Override
      public SetScheduling setKey(java.lang.String key) {
        return (SetScheduling) super.setKey(key);
      }

      @Override
      public SetScheduling setOauthToken(java.lang.String oauthToken) {
        return (SetScheduling) super.setOauthToken(oauthToken);
      }

      @Override
      public SetScheduling setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetScheduling) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetScheduling setQuotaUser(java.lang.String quotaUser) {
        return (SetScheduling) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetScheduling setUserIp(java.lang.String userIp) {
        return (SetScheduling) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetScheduling setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetScheduling setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Instance name. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Instance name.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Instance name. */
      public SetScheduling setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetScheduling setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetScheduling set(String parameterName, Object value) {
        return (SetScheduling) super.set(parameterName, value);
      }
    }
    /**
     * Sets the service account on the instance. For more information, read Changing the service account
     * and access scopes for an instance.
     *
     * Create a request for the method "instances.setServiceAccount".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetServiceAccount#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to start.
     * @param content the {@link com.google.api.services.compute.model.InstancesSetServiceAccountRequest}
     * @return the request
     */
    public SetServiceAccount setServiceAccount(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetServiceAccountRequest content) throws java.io.IOException {
      SetServiceAccount result = new SetServiceAccount(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetServiceAccount extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setServiceAccount";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets the service account on the instance. For more information, read Changing the service
       * account and access scopes for an instance.
       *
       * Create a request for the method "instances.setServiceAccount".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetServiceAccount#execute()} method to invoke the remote operation.
       * <p> {@link SetServiceAccount#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to start.
       * @param content the {@link com.google.api.services.compute.model.InstancesSetServiceAccountRequest}
       * @since 1.13
       */
      protected SetServiceAccount(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesSetServiceAccountRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetServiceAccount setAlt(java.lang.String alt) {
        return (SetServiceAccount) super.setAlt(alt);
      }

      @Override
      public SetServiceAccount setFields(java.lang.String fields) {
        return (SetServiceAccount) super.setFields(fields);
      }

      @Override
      public SetServiceAccount setKey(java.lang.String key) {
        return (SetServiceAccount) super.setKey(key);
      }

      @Override
      public SetServiceAccount setOauthToken(java.lang.String oauthToken) {
        return (SetServiceAccount) super.setOauthToken(oauthToken);
      }

      @Override
      public SetServiceAccount setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetServiceAccount) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetServiceAccount setQuotaUser(java.lang.String quotaUser) {
        return (SetServiceAccount) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetServiceAccount setUserIp(java.lang.String userIp) {
        return (SetServiceAccount) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetServiceAccount setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetServiceAccount setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to start. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to start.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to start. */
      public SetServiceAccount setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetServiceAccount setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetServiceAccount set(String parameterName, Object value) {
        return (SetServiceAccount) super.set(parameterName, value);
      }
    }
    /**
     * Sets network tags for the specified instance to the data included in the request.
     *
     * Create a request for the method "instances.setTags".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetTags#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Tags}
     * @return the request
     */
    public SetTags setTags(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Tags content) throws java.io.IOException {
      SetTags result = new SetTags(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class SetTags extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/setTags";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets network tags for the specified instance to the data included in the request.
       *
       * Create a request for the method "instances.setTags".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetTags#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetTags#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Tags}
       * @since 1.13
       */
      protected SetTags(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.Tags content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetTags setAlt(java.lang.String alt) {
        return (SetTags) super.setAlt(alt);
      }

      @Override
      public SetTags setFields(java.lang.String fields) {
        return (SetTags) super.setFields(fields);
      }

      @Override
      public SetTags setKey(java.lang.String key) {
        return (SetTags) super.setKey(key);
      }

      @Override
      public SetTags setOauthToken(java.lang.String oauthToken) {
        return (SetTags) super.setOauthToken(oauthToken);
      }

      @Override
      public SetTags setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetTags) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetTags setQuotaUser(java.lang.String quotaUser) {
        return (SetTags) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetTags setUserIp(java.lang.String userIp) {
        return (SetTags) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetTags setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetTags setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SetTags setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetTags setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetTags set(String parameterName, Object value) {
        return (SetTags) super.set(parameterName, value);
      }
    }
    /**
     * Simulates a maintenance event on the instance.
     *
     * Create a request for the method "instances.simulateMaintenanceEvent".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SimulateMaintenanceEvent#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance scoping this request.
     * @return the request
     */
    public SimulateMaintenanceEvent simulateMaintenanceEvent(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      SimulateMaintenanceEvent result = new SimulateMaintenanceEvent(project, zone, instance);
      initialize(result);
      return result;
    }

    public class SimulateMaintenanceEvent extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/simulateMaintenanceEvent";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Simulates a maintenance event on the instance.
       *
       * Create a request for the method "instances.simulateMaintenanceEvent".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SimulateMaintenanceEvent#execute()} method to invoke the remote
       * operation. <p> {@link SimulateMaintenanceEvent#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance scoping this request.
       * @since 1.13
       */
      protected SimulateMaintenanceEvent(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SimulateMaintenanceEvent setAlt(java.lang.String alt) {
        return (SimulateMaintenanceEvent) super.setAlt(alt);
      }

      @Override
      public SimulateMaintenanceEvent setFields(java.lang.String fields) {
        return (SimulateMaintenanceEvent) super.setFields(fields);
      }

      @Override
      public SimulateMaintenanceEvent setKey(java.lang.String key) {
        return (SimulateMaintenanceEvent) super.setKey(key);
      }

      @Override
      public SimulateMaintenanceEvent setOauthToken(java.lang.String oauthToken) {
        return (SimulateMaintenanceEvent) super.setOauthToken(oauthToken);
      }

      @Override
      public SimulateMaintenanceEvent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SimulateMaintenanceEvent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SimulateMaintenanceEvent setQuotaUser(java.lang.String quotaUser) {
        return (SimulateMaintenanceEvent) super.setQuotaUser(quotaUser);
      }

      @Override
      public SimulateMaintenanceEvent setUserIp(java.lang.String userIp) {
        return (SimulateMaintenanceEvent) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SimulateMaintenanceEvent setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SimulateMaintenanceEvent setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance scoping this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance scoping this request. */
      public SimulateMaintenanceEvent setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      @Override
      public SimulateMaintenanceEvent set(String parameterName, Object value) {
        return (SimulateMaintenanceEvent) super.set(parameterName, value);
      }
    }
    /**
     * Starts an instance that was stopped using the instances().stop method. For more information, see
     * Restart an instance.
     *
     * Create a request for the method "instances.start".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Start#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to start.
     * @return the request
     */
    public Start start(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      Start result = new Start(project, zone, instance);
      initialize(result);
      return result;
    }

    public class Start extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/start";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Starts an instance that was stopped using the instances().stop method. For more information,
       * see Restart an instance.
       *
       * Create a request for the method "instances.start".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Start#execute()} method to invoke the remote operation. <p> {@link
       * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to start.
       * @since 1.13
       */
      protected Start(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Start setAlt(java.lang.String alt) {
        return (Start) super.setAlt(alt);
      }

      @Override
      public Start setFields(java.lang.String fields) {
        return (Start) super.setFields(fields);
      }

      @Override
      public Start setKey(java.lang.String key) {
        return (Start) super.setKey(key);
      }

      @Override
      public Start setOauthToken(java.lang.String oauthToken) {
        return (Start) super.setOauthToken(oauthToken);
      }

      @Override
      public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Start) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Start setQuotaUser(java.lang.String quotaUser) {
        return (Start) super.setQuotaUser(quotaUser);
      }

      @Override
      public Start setUserIp(java.lang.String userIp) {
        return (Start) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Start setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Start setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to start. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to start.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to start. */
      public Start setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Start setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Start set(String parameterName, Object value) {
        return (Start) super.set(parameterName, value);
      }
    }
    /**
     * Starts an instance that was stopped using the instances().stop method. For more information, see
     * Restart an instance.
     *
     * Create a request for the method "instances.startWithEncryptionKey".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link StartWithEncryptionKey#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to start.
     * @param content the {@link com.google.api.services.compute.model.InstancesStartWithEncryptionKeyRequest}
     * @return the request
     */
    public StartWithEncryptionKey startWithEncryptionKey(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesStartWithEncryptionKeyRequest content) throws java.io.IOException {
      StartWithEncryptionKey result = new StartWithEncryptionKey(project, zone, instance, content);
      initialize(result);
      return result;
    }

    public class StartWithEncryptionKey extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Starts an instance that was stopped using the instances().stop method. For more information,
       * see Restart an instance.
       *
       * Create a request for the method "instances.startWithEncryptionKey".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link StartWithEncryptionKey#execute()} method to invoke the remote
       * operation. <p> {@link StartWithEncryptionKey#initialize(com.google.api.client.googleapis.servic
       * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to start.
       * @param content the {@link com.google.api.services.compute.model.InstancesStartWithEncryptionKeyRequest}
       * @since 1.13
       */
      protected StartWithEncryptionKey(java.lang.String project, java.lang.String zone, java.lang.String instance, com.google.api.services.compute.model.InstancesStartWithEncryptionKeyRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public StartWithEncryptionKey setAlt(java.lang.String alt) {
        return (StartWithEncryptionKey) super.setAlt(alt);
      }

      @Override
      public StartWithEncryptionKey setFields(java.lang.String fields) {
        return (StartWithEncryptionKey) super.setFields(fields);
      }

      @Override
      public StartWithEncryptionKey setKey(java.lang.String key) {
        return (StartWithEncryptionKey) super.setKey(key);
      }

      @Override
      public StartWithEncryptionKey setOauthToken(java.lang.String oauthToken) {
        return (StartWithEncryptionKey) super.setOauthToken(oauthToken);
      }

      @Override
      public StartWithEncryptionKey setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StartWithEncryptionKey) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StartWithEncryptionKey setQuotaUser(java.lang.String quotaUser) {
        return (StartWithEncryptionKey) super.setQuotaUser(quotaUser);
      }

      @Override
      public StartWithEncryptionKey setUserIp(java.lang.String userIp) {
        return (StartWithEncryptionKey) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public StartWithEncryptionKey setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public StartWithEncryptionKey setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to start. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to start.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to start. */
      public StartWithEncryptionKey setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public StartWithEncryptionKey setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public StartWithEncryptionKey set(String parameterName, Object value) {
        return (StartWithEncryptionKey) super.set(parameterName, value);
      }
    }
    /**
     * Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a
     * later time. Stopped instances do not incur VM usage charges while they are stopped. However,
     * resources that the VM is using, such as persistent disks and static IP addresses, will continue
     * to be charged until they are deleted. For more information, see Stopping an instance.
     *
     * Create a request for the method "instances.stop".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Stop#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance Name of the instance resource to stop.
     * @return the request
     */
    public Stop stop(java.lang.String project, java.lang.String zone, java.lang.String instance) throws java.io.IOException {
      Stop result = new Stop(project, zone, instance);
      initialize(result);
      return result;
    }

    public class Stop extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/stop";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a
       * later time. Stopped instances do not incur VM usage charges while they are stopped. However,
       * resources that the VM is using, such as persistent disks and static IP addresses, will continue
       * to be charged until they are deleted. For more information, see Stopping an instance.
       *
       * Create a request for the method "instances.stop".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Stop#execute()} method to invoke the remote operation. <p> {@link
       * Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance Name of the instance resource to stop.
       * @since 1.13
       */
      protected Stop(java.lang.String project, java.lang.String zone, java.lang.String instance) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Stop setAlt(java.lang.String alt) {
        return (Stop) super.setAlt(alt);
      }

      @Override
      public Stop setFields(java.lang.String fields) {
        return (Stop) super.setFields(fields);
      }

      @Override
      public Stop setKey(java.lang.String key) {
        return (Stop) super.setKey(key);
      }

      @Override
      public Stop setOauthToken(java.lang.String oauthToken) {
        return (Stop) super.setOauthToken(oauthToken);
      }

      @Override
      public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Stop) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Stop setQuotaUser(java.lang.String quotaUser) {
        return (Stop) super.setQuotaUser(quotaUser);
      }

      @Override
      public Stop setUserIp(java.lang.String userIp) {
        return (Stop) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Stop setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Stop setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the instance resource to stop. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** Name of the instance resource to stop.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** Name of the instance resource to stop. */
      public Stop setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Stop setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Stop set(String parameterName, Object value) {
        return (Stop) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified access config from an instance's network interface with the data included
     * in the request. This method supports PATCH semantics and uses the JSON merge patch format and
     * processing rules.
     *
     * Create a request for the method "instances.updateAccessConfig".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link UpdateAccessConfig#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name for this request.
     * @param networkInterface The name of the network interface where the access config is attached.
     * @param content the {@link com.google.api.services.compute.model.AccessConfig}
     * @return the request
     */
    public UpdateAccessConfig updateAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.AccessConfig content) throws java.io.IOException {
      UpdateAccessConfig result = new UpdateAccessConfig(project, zone, instance, networkInterface, content);
      initialize(result);
      return result;
    }

    public class UpdateAccessConfig extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/updateAccessConfig";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified access config from an instance's network interface with the data included
       * in the request. This method supports PATCH semantics and uses the JSON merge patch format and
       * processing rules.
       *
       * Create a request for the method "instances.updateAccessConfig".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link UpdateAccessConfig#execute()} method to invoke the remote
       * operation. <p> {@link UpdateAccessConfig#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name for this request.
       * @param networkInterface The name of the network interface where the access config is attached.
       * @param content the {@link com.google.api.services.compute.model.AccessConfig}
       * @since 1.13
       */
      protected UpdateAccessConfig(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.AccessConfig content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.networkInterface = com.google.api.client.util.Preconditions.checkNotNull(networkInterface, "Required parameter networkInterface must be specified.");
      }

      @Override
      public UpdateAccessConfig setAlt(java.lang.String alt) {
        return (UpdateAccessConfig) super.setAlt(alt);
      }

      @Override
      public UpdateAccessConfig setFields(java.lang.String fields) {
        return (UpdateAccessConfig) super.setFields(fields);
      }

      @Override
      public UpdateAccessConfig setKey(java.lang.String key) {
        return (UpdateAccessConfig) super.setKey(key);
      }

      @Override
      public UpdateAccessConfig setOauthToken(java.lang.String oauthToken) {
        return (UpdateAccessConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateAccessConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateAccessConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateAccessConfig setQuotaUser(java.lang.String quotaUser) {
        return (UpdateAccessConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateAccessConfig setUserIp(java.lang.String userIp) {
        return (UpdateAccessConfig) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public UpdateAccessConfig setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public UpdateAccessConfig setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name for this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name for this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name for this request. */
      public UpdateAccessConfig setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** The name of the network interface where the access config is attached. */
      @com.google.api.client.util.Key
      private java.lang.String networkInterface;

      /** The name of the network interface where the access config is attached.
       */
      public java.lang.String getNetworkInterface() {
        return networkInterface;
      }

      /** The name of the network interface where the access config is attached. */
      public UpdateAccessConfig setNetworkInterface(java.lang.String networkInterface) {
        this.networkInterface = networkInterface;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public UpdateAccessConfig setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public UpdateAccessConfig set(String parameterName, Object value) {
        return (UpdateAccessConfig) super.set(parameterName, value);
      }
    }
    /**
     * Updates an instance's network interface. This method follows PATCH semantics.
     *
     * Create a request for the method "instances.updateNetworkInterface".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link UpdateNetworkInterface#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param instance The instance name for this request.
     * @param networkInterface The name of the network interface to update.
     * @param content the {@link com.google.api.services.compute.model.NetworkInterface}
     * @return the request
     */
    public UpdateNetworkInterface updateNetworkInterface(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.NetworkInterface content) throws java.io.IOException {
      UpdateNetworkInterface result = new UpdateNetworkInterface(project, zone, instance, networkInterface, content);
      initialize(result);
      return result;
    }

    public class UpdateNetworkInterface extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/instances/{instance}/updateNetworkInterface";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates an instance's network interface. This method follows PATCH semantics.
       *
       * Create a request for the method "instances.updateNetworkInterface".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link UpdateNetworkInterface#execute()} method to invoke the remote
       * operation. <p> {@link UpdateNetworkInterface#initialize(com.google.api.client.googleapis.servic
       * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param instance The instance name for this request.
       * @param networkInterface The name of the network interface to update.
       * @param content the {@link com.google.api.services.compute.model.NetworkInterface}
       * @since 1.13
       */
      protected UpdateNetworkInterface(java.lang.String project, java.lang.String zone, java.lang.String instance, java.lang.String networkInterface, com.google.api.services.compute.model.NetworkInterface content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.networkInterface = com.google.api.client.util.Preconditions.checkNotNull(networkInterface, "Required parameter networkInterface must be specified.");
      }

      @Override
      public UpdateNetworkInterface setAlt(java.lang.String alt) {
        return (UpdateNetworkInterface) super.setAlt(alt);
      }

      @Override
      public UpdateNetworkInterface setFields(java.lang.String fields) {
        return (UpdateNetworkInterface) super.setFields(fields);
      }

      @Override
      public UpdateNetworkInterface setKey(java.lang.String key) {
        return (UpdateNetworkInterface) super.setKey(key);
      }

      @Override
      public UpdateNetworkInterface setOauthToken(java.lang.String oauthToken) {
        return (UpdateNetworkInterface) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateNetworkInterface setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateNetworkInterface) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateNetworkInterface setQuotaUser(java.lang.String quotaUser) {
        return (UpdateNetworkInterface) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateNetworkInterface setUserIp(java.lang.String userIp) {
        return (UpdateNetworkInterface) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public UpdateNetworkInterface setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public UpdateNetworkInterface setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** The instance name for this request. */
      @com.google.api.client.util.Key
      private java.lang.String instance;

      /** The instance name for this request.
       */
      public java.lang.String getInstance() {
        return instance;
      }

      /** The instance name for this request. */
      public UpdateNetworkInterface setInstance(java.lang.String instance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
              "Parameter instance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.instance = instance;
        return this;
      }

      /** The name of the network interface to update. */
      @com.google.api.client.util.Key
      private java.lang.String networkInterface;

      /** The name of the network interface to update.
       */
      public java.lang.String getNetworkInterface() {
        return networkInterface;
      }

      /** The name of the network interface to update. */
      public UpdateNetworkInterface setNetworkInterface(java.lang.String networkInterface) {
        this.networkInterface = networkInterface;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public UpdateNetworkInterface setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public UpdateNetworkInterface set(String parameterName, Object value) {
        return (UpdateNetworkInterface) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the InterconnectAttachments collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.InterconnectAttachments.List request = compute.interconnectAttachments().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InterconnectAttachments interconnectAttachments() {
    return new InterconnectAttachments();
  }

  /**
   * The "interconnectAttachments" collection of methods.
   */
  public class InterconnectAttachments {

    /**
     * Retrieves an aggregated list of interconnect attachments.
     *
     * Create a request for the method "interconnectAttachments.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.InterconnectAttachmentAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/interconnectAttachments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of interconnect attachments.
       *
       * Create a request for the method "interconnectAttachments.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectAttachmentAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified interconnect attachment.
     *
     * Create a request for the method "interconnectAttachments.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param interconnectAttachment Name of the interconnect attachment to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment) throws java.io.IOException {
      Delete result = new Delete(project, region, interconnectAttachment);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INTERCONNECT_ATTACHMENT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified interconnect attachment.
       *
       * Create a request for the method "interconnectAttachments.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param interconnectAttachment Name of the interconnect attachment to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = com.google.api.client.util.Preconditions.checkNotNull(interconnectAttachment, "Required parameter interconnectAttachment must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the interconnect attachment to delete. */
      @com.google.api.client.util.Key
      private java.lang.String interconnectAttachment;

      /** Name of the interconnect attachment to delete.
       */
      public java.lang.String getInterconnectAttachment() {
        return interconnectAttachment;
      }

      /** Name of the interconnect attachment to delete. */
      public Delete setInterconnectAttachment(java.lang.String interconnectAttachment) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = interconnectAttachment;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified interconnect attachment.
     *
     * Create a request for the method "interconnectAttachments.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param interconnectAttachment Name of the interconnect attachment to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment) throws java.io.IOException {
      Get result = new Get(project, region, interconnectAttachment);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InterconnectAttachment> {

      private static final String REST_PATH = "{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INTERCONNECT_ATTACHMENT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified interconnect attachment.
       *
       * Create a request for the method "interconnectAttachments.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param interconnectAttachment Name of the interconnect attachment to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectAttachment.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = com.google.api.client.util.Preconditions.checkNotNull(interconnectAttachment, "Required parameter interconnectAttachment must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the interconnect attachment to return. */
      @com.google.api.client.util.Key
      private java.lang.String interconnectAttachment;

      /** Name of the interconnect attachment to return.
       */
      public java.lang.String getInterconnectAttachment() {
        return interconnectAttachment;
      }

      /** Name of the interconnect attachment to return. */
      public Get setInterconnectAttachment(java.lang.String interconnectAttachment) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = interconnectAttachment;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an InterconnectAttachment in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "interconnectAttachments.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.InterconnectAttachment}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.InterconnectAttachment content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/interconnectAttachments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates an InterconnectAttachment in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "interconnectAttachments.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.InterconnectAttachment}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.InterconnectAttachment content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of interconnect attachments contained within the specified region.
     *
     * Create a request for the method "interconnectAttachments.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InterconnectAttachmentList> {

      private static final String REST_PATH = "{project}/regions/{region}/interconnectAttachments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the list of interconnect attachments contained within the specified region.
       *
       * Create a request for the method "interconnectAttachments.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectAttachmentList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified interconnect attachment with the data included in the request. This method
     * supports PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "interconnectAttachments.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param interconnectAttachment Name of the interconnect attachment to patch.
     * @param content the {@link com.google.api.services.compute.model.InterconnectAttachment}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment, com.google.api.services.compute.model.InterconnectAttachment content) throws java.io.IOException {
      Patch result = new Patch(project, region, interconnectAttachment, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern INTERCONNECT_ATTACHMENT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified interconnect attachment with the data included in the request. This
       * method supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "interconnectAttachments.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param interconnectAttachment Name of the interconnect attachment to patch.
       * @param content the {@link com.google.api.services.compute.model.InterconnectAttachment}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String region, java.lang.String interconnectAttachment, com.google.api.services.compute.model.InterconnectAttachment content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = com.google.api.client.util.Preconditions.checkNotNull(interconnectAttachment, "Required parameter interconnectAttachment must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Patch setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the interconnect attachment to patch. */
      @com.google.api.client.util.Key
      private java.lang.String interconnectAttachment;

      /** Name of the interconnect attachment to patch.
       */
      public java.lang.String getInterconnectAttachment() {
        return interconnectAttachment;
      }

      /** Name of the interconnect attachment to patch. */
      public Patch setInterconnectAttachment(java.lang.String interconnectAttachment) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_ATTACHMENT_PATTERN.matcher(interconnectAttachment).matches(),
              "Parameter interconnectAttachment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectAttachment = interconnectAttachment;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the InterconnectLocations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.InterconnectLocations.List request = compute.interconnectLocations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InterconnectLocations interconnectLocations() {
    return new InterconnectLocations();
  }

  /**
   * The "interconnectLocations" collection of methods.
   */
  public class InterconnectLocations {

    /**
     * Returns the details for the specified interconnect location. Gets a list of available
     * interconnect locations by making a list() request.
     *
     * Create a request for the method "interconnectLocations.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param interconnectLocation Name of the interconnect location to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String interconnectLocation) throws java.io.IOException {
      Get result = new Get(project, interconnectLocation);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InterconnectLocation> {

      private static final String REST_PATH = "{project}/global/interconnectLocations/{interconnectLocation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INTERCONNECT_LOCATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the details for the specified interconnect location. Gets a list of available
       * interconnect locations by making a list() request.
       *
       * Create a request for the method "interconnectLocations.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param interconnectLocation Name of the interconnect location to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String interconnectLocation) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectLocation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.interconnectLocation = com.google.api.client.util.Preconditions.checkNotNull(interconnectLocation, "Required parameter interconnectLocation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_LOCATION_PATTERN.matcher(interconnectLocation).matches(),
              "Parameter interconnectLocation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the interconnect location to return. */
      @com.google.api.client.util.Key
      private java.lang.String interconnectLocation;

      /** Name of the interconnect location to return.
       */
      public java.lang.String getInterconnectLocation() {
        return interconnectLocation;
      }

      /** Name of the interconnect location to return. */
      public Get setInterconnectLocation(java.lang.String interconnectLocation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_LOCATION_PATTERN.matcher(interconnectLocation).matches(),
              "Parameter interconnectLocation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnectLocation = interconnectLocation;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of interconnect locations available to the specified project.
     *
     * Create a request for the method "interconnectLocations.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InterconnectLocationList> {

      private static final String REST_PATH = "{project}/global/interconnectLocations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of interconnect locations available to the specified project.
       *
       * Create a request for the method "interconnectLocations.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectLocationList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Interconnects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Interconnects.List request = compute.interconnects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Interconnects interconnects() {
    return new Interconnects();
  }

  /**
   * The "interconnects" collection of methods.
   */
  public class Interconnects {

    /**
     * Deletes the specified interconnect.
     *
     * Create a request for the method "interconnects.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param interconnect Name of the interconnect to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String interconnect) throws java.io.IOException {
      Delete result = new Delete(project, interconnect);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/interconnects/{interconnect}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INTERCONNECT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified interconnect.
       *
       * Create a request for the method "interconnects.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param interconnect Name of the interconnect to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String interconnect) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.interconnect = com.google.api.client.util.Preconditions.checkNotNull(interconnect, "Required parameter interconnect must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the interconnect to delete. */
      @com.google.api.client.util.Key
      private java.lang.String interconnect;

      /** Name of the interconnect to delete.
       */
      public java.lang.String getInterconnect() {
        return interconnect;
      }

      /** Name of the interconnect to delete. */
      public Delete setInterconnect(java.lang.String interconnect) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnect = interconnect;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified interconnect. Get a list of available interconnects by making a list()
     * request.
     *
     * Create a request for the method "interconnects.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param interconnect Name of the interconnect to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String interconnect) throws java.io.IOException {
      Get result = new Get(project, interconnect);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Interconnect> {

      private static final String REST_PATH = "{project}/global/interconnects/{interconnect}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INTERCONNECT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified interconnect. Get a list of available interconnects by making a list()
       * request.
       *
       * Create a request for the method "interconnects.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param interconnect Name of the interconnect to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String interconnect) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Interconnect.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.interconnect = com.google.api.client.util.Preconditions.checkNotNull(interconnect, "Required parameter interconnect must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the interconnect to return. */
      @com.google.api.client.util.Key
      private java.lang.String interconnect;

      /** Name of the interconnect to return.
       */
      public java.lang.String getInterconnect() {
        return interconnect;
      }

      /** Name of the interconnect to return. */
      public Get setInterconnect(java.lang.String interconnect) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnect = interconnect;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns the interconnectDiagnostics for the specified interconnect.
     *
     * Create a request for the method "interconnects.getDiagnostics".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetDiagnostics#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param interconnect Name of the interconnect resource to query.
     * @return the request
     */
    public GetDiagnostics getDiagnostics(java.lang.String project, java.lang.String interconnect) throws java.io.IOException {
      GetDiagnostics result = new GetDiagnostics(project, interconnect);
      initialize(result);
      return result;
    }

    public class GetDiagnostics extends ComputeRequest<com.google.api.services.compute.model.InterconnectsGetDiagnosticsResponse> {

      private static final String REST_PATH = "{project}/global/interconnects/{interconnect}/getDiagnostics";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INTERCONNECT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the interconnectDiagnostics for the specified interconnect.
       *
       * Create a request for the method "interconnects.getDiagnostics".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetDiagnostics#execute()} method to invoke the remote operation.
       * <p> {@link GetDiagnostics#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param interconnect Name of the interconnect resource to query.
       * @since 1.13
       */
      protected GetDiagnostics(java.lang.String project, java.lang.String interconnect) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectsGetDiagnosticsResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.interconnect = com.google.api.client.util.Preconditions.checkNotNull(interconnect, "Required parameter interconnect must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDiagnostics setAlt(java.lang.String alt) {
        return (GetDiagnostics) super.setAlt(alt);
      }

      @Override
      public GetDiagnostics setFields(java.lang.String fields) {
        return (GetDiagnostics) super.setFields(fields);
      }

      @Override
      public GetDiagnostics setKey(java.lang.String key) {
        return (GetDiagnostics) super.setKey(key);
      }

      @Override
      public GetDiagnostics setOauthToken(java.lang.String oauthToken) {
        return (GetDiagnostics) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDiagnostics setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDiagnostics) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDiagnostics setQuotaUser(java.lang.String quotaUser) {
        return (GetDiagnostics) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDiagnostics setUserIp(java.lang.String userIp) {
        return (GetDiagnostics) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetDiagnostics setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the interconnect resource to query. */
      @com.google.api.client.util.Key
      private java.lang.String interconnect;

      /** Name of the interconnect resource to query.
       */
      public java.lang.String getInterconnect() {
        return interconnect;
      }

      /** Name of the interconnect resource to query. */
      public GetDiagnostics setInterconnect(java.lang.String interconnect) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnect = interconnect;
        return this;
      }

      @Override
      public GetDiagnostics set(String parameterName, Object value) {
        return (GetDiagnostics) super.set(parameterName, value);
      }
    }
    /**
     * Creates a Interconnect in the specified project using the data included in the request.
     *
     * Create a request for the method "interconnects.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Interconnect}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Interconnect content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/interconnects";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a Interconnect in the specified project using the data included in the request.
       *
       * Create a request for the method "interconnects.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Interconnect}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Interconnect content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of interconnect available to the specified project.
     *
     * Create a request for the method "interconnects.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.InterconnectList> {

      private static final String REST_PATH = "{project}/global/interconnects";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of interconnect available to the specified project.
       *
       * Create a request for the method "interconnects.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InterconnectList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified interconnect with the data included in the request. This method supports
     * PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "interconnects.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param interconnect Name of the interconnect to update.
     * @param content the {@link com.google.api.services.compute.model.Interconnect}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String interconnect, com.google.api.services.compute.model.Interconnect content) throws java.io.IOException {
      Patch result = new Patch(project, interconnect, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/interconnects/{interconnect}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern INTERCONNECT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified interconnect with the data included in the request. This method supports
       * PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "interconnects.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param interconnect Name of the interconnect to update.
       * @param content the {@link com.google.api.services.compute.model.Interconnect}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String interconnect, com.google.api.services.compute.model.Interconnect content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.interconnect = com.google.api.client.util.Preconditions.checkNotNull(interconnect, "Required parameter interconnect must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the interconnect to update. */
      @com.google.api.client.util.Key
      private java.lang.String interconnect;

      /** Name of the interconnect to update.
       */
      public java.lang.String getInterconnect() {
        return interconnect;
      }

      /** Name of the interconnect to update. */
      public Patch setInterconnect(java.lang.String interconnect) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(INTERCONNECT_PATTERN.matcher(interconnect).matches(),
              "Parameter interconnect must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.interconnect = interconnect;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the LicenseCodes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.LicenseCodes.List request = compute.licenseCodes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public LicenseCodes licenseCodes() {
    return new LicenseCodes();
  }

  /**
   * The "licenseCodes" collection of methods.
   */
  public class LicenseCodes {

    /**
     * Return a specified license code. License codes are mirrored across all projects that have
     * permissions to read the License Code.
     *
     * Create a request for the method "licenseCodes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param licenseCode Number corresponding to the License code resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String licenseCode) throws java.io.IOException {
      Get result = new Get(project, licenseCode);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.LicenseCode> {

      private static final String REST_PATH = "{project}/global/licenseCodes/{licenseCode}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern LICENSE_CODE_PATTERN =
          java.util.regex.Pattern.compile("[0-9]{0,61}?");

      /**
       * Return a specified license code. License codes are mirrored across all projects that have
       * permissions to read the License Code.
       *
       * Create a request for the method "licenseCodes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param licenseCode Number corresponding to the License code resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String licenseCode) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.LicenseCode.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.licenseCode = com.google.api.client.util.Preconditions.checkNotNull(licenseCode, "Required parameter licenseCode must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_CODE_PATTERN.matcher(licenseCode).matches(),
              "Parameter licenseCode must conform to the pattern " +
              "[0-9]{0,61}?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Number corresponding to the License code resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String licenseCode;

      /** Number corresponding to the License code resource to return.
       */
      public java.lang.String getLicenseCode() {
        return licenseCode;
      }

      /** Number corresponding to the License code resource to return. */
      public Get setLicenseCode(java.lang.String licenseCode) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_CODE_PATTERN.matcher(licenseCode).matches(),
              "Parameter licenseCode must conform to the pattern " +
              "[0-9]{0,61}?");
        }
        this.licenseCode = licenseCode;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns permissions that a caller has on the specified resource.
     *
     * Create a request for the method "licenseCodes.testIamPermissions".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param resource Name or id of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
     * @return the request
     */
    public TestIamPermissions testIamPermissions(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) throws java.io.IOException {
      TestIamPermissions result = new TestIamPermissions(project, resource, content);
      initialize(result);
      return result;
    }

    public class TestIamPermissions extends ComputeRequest<com.google.api.services.compute.model.TestPermissionsResponse> {

      private static final String REST_PATH = "{project}/global/licenseCodes/{resource}/testIamPermissions";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns permissions that a caller has on the specified resource.
       *
       * Create a request for the method "licenseCodes.testIamPermissions".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
       * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param resource Name or id of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
       * @since 1.13
       */
      protected TestIamPermissions(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.TestPermissionsResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public TestIamPermissions setAlt(java.lang.String alt) {
        return (TestIamPermissions) super.setAlt(alt);
      }

      @Override
      public TestIamPermissions setFields(java.lang.String fields) {
        return (TestIamPermissions) super.setFields(fields);
      }

      @Override
      public TestIamPermissions setKey(java.lang.String key) {
        return (TestIamPermissions) super.setKey(key);
      }

      @Override
      public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
        return (TestIamPermissions) super.setOauthToken(oauthToken);
      }

      @Override
      public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
        return (TestIamPermissions) super.setQuotaUser(quotaUser);
      }

      @Override
      public TestIamPermissions setUserIp(java.lang.String userIp) {
        return (TestIamPermissions) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public TestIamPermissions setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name or id of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name or id of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name or id of the resource for this request. */
      public TestIamPermissions setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public TestIamPermissions set(String parameterName, Object value) {
        return (TestIamPermissions) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Licenses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Licenses.List request = compute.licenses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Licenses licenses() {
    return new Licenses();
  }

  /**
   * The "licenses" collection of methods.
   */
  public class Licenses {

    /**
     * Deletes the specified license.
     *
     * Create a request for the method "licenses.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param license Name of the license resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String license) throws java.io.IOException {
      Delete result = new Delete(project, license);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/licenses/{license}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern LICENSE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified license.
       *
       * Create a request for the method "licenses.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param license Name of the license resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String license) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.license = com.google.api.client.util.Preconditions.checkNotNull(license, "Required parameter license must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_PATTERN.matcher(license).matches(),
              "Parameter license must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the license resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String license;

      /** Name of the license resource to delete.
       */
      public java.lang.String getLicense() {
        return license;
      }

      /** Name of the license resource to delete. */
      public Delete setLicense(java.lang.String license) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_PATTERN.matcher(license).matches(),
              "Parameter license must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.license = license;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified License resource.
     *
     * Create a request for the method "licenses.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param license Name of the License resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String license) throws java.io.IOException {
      Get result = new Get(project, license);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.License> {

      private static final String REST_PATH = "{project}/global/licenses/{license}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern LICENSE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified License resource.
       *
       * Create a request for the method "licenses.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param license Name of the License resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String license) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.License.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.license = com.google.api.client.util.Preconditions.checkNotNull(license, "Required parameter license must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_PATTERN.matcher(license).matches(),
              "Parameter license must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the License resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String license;

      /** Name of the License resource to return.
       */
      public java.lang.String getLicense() {
        return license;
      }

      /** Name of the License resource to return. */
      public Get setLicense(java.lang.String license) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(LICENSE_PATTERN.matcher(license).matches(),
              "Parameter license must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.license = license;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a License resource in the specified project.
     *
     * Create a request for the method "licenses.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.License}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.License content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/licenses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Create a License resource in the specified project.
       *
       * Create a request for the method "licenses.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.License}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.License content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of licenses available in the specified project. This method does not get any
     * licenses that belong to other projects, including licenses attached to publicly-available images,
     * like Debian 9. If you want to get a list of publicly-available licenses, use this method to make
     * a request to the respective image project, such as debian-cloud or windows-cloud.
     *
     * Create a request for the method "licenses.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.LicensesListResponse> {

      private static final String REST_PATH = "{project}/global/licenses";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of licenses available in the specified project. This method does not get any
       * licenses that belong to other projects, including licenses attached to publicly-available
       * images, like Debian 9. If you want to get a list of publicly-available licenses, use this
       * method to make a request to the respective image project, such as debian-cloud or windows-
       * cloud.
       *
       * Create a request for the method "licenses.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.LicensesListResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Returns permissions that a caller has on the specified resource.
     *
     * Create a request for the method "licenses.testIamPermissions".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param resource Name or id of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
     * @return the request
     */
    public TestIamPermissions testIamPermissions(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) throws java.io.IOException {
      TestIamPermissions result = new TestIamPermissions(project, resource, content);
      initialize(result);
      return result;
    }

    public class TestIamPermissions extends ComputeRequest<com.google.api.services.compute.model.TestPermissionsResponse> {

      private static final String REST_PATH = "{project}/global/licenses/{resource}/testIamPermissions";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns permissions that a caller has on the specified resource.
       *
       * Create a request for the method "licenses.testIamPermissions".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
       * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param resource Name or id of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
       * @since 1.13
       */
      protected TestIamPermissions(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.TestPermissionsResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public TestIamPermissions setAlt(java.lang.String alt) {
        return (TestIamPermissions) super.setAlt(alt);
      }

      @Override
      public TestIamPermissions setFields(java.lang.String fields) {
        return (TestIamPermissions) super.setFields(fields);
      }

      @Override
      public TestIamPermissions setKey(java.lang.String key) {
        return (TestIamPermissions) super.setKey(key);
      }

      @Override
      public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
        return (TestIamPermissions) super.setOauthToken(oauthToken);
      }

      @Override
      public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
        return (TestIamPermissions) super.setQuotaUser(quotaUser);
      }

      @Override
      public TestIamPermissions setUserIp(java.lang.String userIp) {
        return (TestIamPermissions) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public TestIamPermissions setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name or id of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name or id of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name or id of the resource for this request. */
      public TestIamPermissions setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public TestIamPermissions set(String parameterName, Object value) {
        return (TestIamPermissions) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the MachineTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.MachineTypes.List request = compute.machineTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public MachineTypes machineTypes() {
    return new MachineTypes();
  }

  /**
   * The "machineTypes" collection of methods.
   */
  public class MachineTypes {

    /**
     * Retrieves an aggregated list of machine types.
     *
     * Create a request for the method "machineTypes.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.MachineTypeAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/machineTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of machine types.
       *
       * Create a request for the method "machineTypes.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.MachineTypeAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified machine type. Gets a list of available machine types by making a list()
     * request.
     *
     * Create a request for the method "machineTypes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param machineType Name of the machine type to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String machineType) throws java.io.IOException {
      Get result = new Get(project, zone, machineType);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.MachineType> {

      private static final String REST_PATH = "{project}/zones/{zone}/machineTypes/{machineType}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern MACHINE_TYPE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified machine type. Gets a list of available machine types by making a list()
       * request.
       *
       * Create a request for the method "machineTypes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param machineType Name of the machine type to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String machineType) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.MachineType.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.machineType = com.google.api.client.util.Preconditions.checkNotNull(machineType, "Required parameter machineType must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MACHINE_TYPE_PATTERN.matcher(machineType).matches(),
              "Parameter machineType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the machine type to return. */
      @com.google.api.client.util.Key
      private java.lang.String machineType;

      /** Name of the machine type to return.
       */
      public java.lang.String getMachineType() {
        return machineType;
      }

      /** Name of the machine type to return. */
      public Get setMachineType(java.lang.String machineType) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(MACHINE_TYPE_PATTERN.matcher(machineType).matches(),
              "Parameter machineType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.machineType = machineType;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of machine types available to the specified project.
     *
     * Create a request for the method "machineTypes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.MachineTypeList> {

      private static final String REST_PATH = "{project}/zones/{zone}/machineTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of machine types available to the specified project.
       *
       * Create a request for the method "machineTypes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.MachineTypeList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Networks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Networks.List request = compute.networks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Networks networks() {
    return new Networks();
  }

  /**
   * The "networks" collection of methods.
   */
  public class Networks {

    /**
     * Adds a peering to the specified network.
     *
     * Create a request for the method "networks.addPeering".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddPeering#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network resource to add peering to.
     * @param content the {@link com.google.api.services.compute.model.NetworksAddPeeringRequest}
     * @return the request
     */
    public AddPeering addPeering(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.NetworksAddPeeringRequest content) throws java.io.IOException {
      AddPeering result = new AddPeering(project, network, content);
      initialize(result);
      return result;
    }

    public class AddPeering extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks/{network}/addPeering";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Adds a peering to the specified network.
       *
       * Create a request for the method "networks.addPeering".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddPeering#execute()} method to invoke the remote operation. <p>
       * {@link
       * AddPeering#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network resource to add peering to.
       * @param content the {@link com.google.api.services.compute.model.NetworksAddPeeringRequest}
       * @since 1.13
       */
      protected AddPeering(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.NetworksAddPeeringRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AddPeering setAlt(java.lang.String alt) {
        return (AddPeering) super.setAlt(alt);
      }

      @Override
      public AddPeering setFields(java.lang.String fields) {
        return (AddPeering) super.setFields(fields);
      }

      @Override
      public AddPeering setKey(java.lang.String key) {
        return (AddPeering) super.setKey(key);
      }

      @Override
      public AddPeering setOauthToken(java.lang.String oauthToken) {
        return (AddPeering) super.setOauthToken(oauthToken);
      }

      @Override
      public AddPeering setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddPeering) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddPeering setQuotaUser(java.lang.String quotaUser) {
        return (AddPeering) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddPeering setUserIp(java.lang.String userIp) {
        return (AddPeering) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddPeering setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network resource to add peering to. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network resource to add peering to.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network resource to add peering to. */
      public AddPeering setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddPeering setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddPeering set(String parameterName, Object value) {
        return (AddPeering) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified network.
     *
     * Create a request for the method "networks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String network) throws java.io.IOException {
      Delete result = new Delete(project, network);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks/{network}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified network.
       *
       * Create a request for the method "networks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String network) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network to delete. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network to delete.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network to delete. */
      public Delete setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified network. Gets a list of available networks by making a list() request.
     *
     * Create a request for the method "networks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String network) throws java.io.IOException {
      Get result = new Get(project, network);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Network> {

      private static final String REST_PATH = "{project}/global/networks/{network}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified network. Gets a list of available networks by making a list() request.
       *
       * Create a request for the method "networks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String network) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Network.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network to return. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network to return.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network to return. */
      public Get setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a network in the specified project using the data included in the request.
     *
     * Create a request for the method "networks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Network}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Network content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a network in the specified project using the data included in the request.
       *
       * Create a request for the method "networks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Network}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Network content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of networks available to the specified project.
     *
     * Create a request for the method "networks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.NetworkList> {

      private static final String REST_PATH = "{project}/global/networks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of networks available to the specified project.
       *
       * Create a request for the method "networks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NetworkList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified network with the data included in the request. Only the following fields
     * can be modified: routingConfig.routingMode.
     *
     * Create a request for the method "networks.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network to update.
     * @param content the {@link com.google.api.services.compute.model.Network}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.Network content) throws java.io.IOException {
      Patch result = new Patch(project, network, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks/{network}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified network with the data included in the request. Only the following fields
       * can be modified: routingConfig.routingMode.
       *
       * Create a request for the method "networks.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network to update.
       * @param content the {@link com.google.api.services.compute.model.Network}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.Network content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network to update. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network to update.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network to update. */
      public Patch setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Removes a peering from the specified network.
     *
     * Create a request for the method "networks.removePeering".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RemovePeering#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network resource to remove peering from.
     * @param content the {@link com.google.api.services.compute.model.NetworksRemovePeeringRequest}
     * @return the request
     */
    public RemovePeering removePeering(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.NetworksRemovePeeringRequest content) throws java.io.IOException {
      RemovePeering result = new RemovePeering(project, network, content);
      initialize(result);
      return result;
    }

    public class RemovePeering extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks/{network}/removePeering";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Removes a peering from the specified network.
       *
       * Create a request for the method "networks.removePeering".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RemovePeering#execute()} method to invoke the remote operation. <p>
       * {@link RemovePeering#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network resource to remove peering from.
       * @param content the {@link com.google.api.services.compute.model.NetworksRemovePeeringRequest}
       * @since 1.13
       */
      protected RemovePeering(java.lang.String project, java.lang.String network, com.google.api.services.compute.model.NetworksRemovePeeringRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public RemovePeering setAlt(java.lang.String alt) {
        return (RemovePeering) super.setAlt(alt);
      }

      @Override
      public RemovePeering setFields(java.lang.String fields) {
        return (RemovePeering) super.setFields(fields);
      }

      @Override
      public RemovePeering setKey(java.lang.String key) {
        return (RemovePeering) super.setKey(key);
      }

      @Override
      public RemovePeering setOauthToken(java.lang.String oauthToken) {
        return (RemovePeering) super.setOauthToken(oauthToken);
      }

      @Override
      public RemovePeering setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemovePeering) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemovePeering setQuotaUser(java.lang.String quotaUser) {
        return (RemovePeering) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemovePeering setUserIp(java.lang.String userIp) {
        return (RemovePeering) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RemovePeering setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network resource to remove peering from. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network resource to remove peering from.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network resource to remove peering from. */
      public RemovePeering setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RemovePeering setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RemovePeering set(String parameterName, Object value) {
        return (RemovePeering) super.set(parameterName, value);
      }
    }
    /**
     * Switches the network mode from auto subnet mode to custom subnet mode.
     *
     * Create a request for the method "networks.switchToCustomMode".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SwitchToCustomMode#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param network Name of the network to be updated.
     * @return the request
     */
    public SwitchToCustomMode switchToCustomMode(java.lang.String project, java.lang.String network) throws java.io.IOException {
      SwitchToCustomMode result = new SwitchToCustomMode(project, network);
      initialize(result);
      return result;
    }

    public class SwitchToCustomMode extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/networks/{network}/switchToCustomMode";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern NETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Switches the network mode from auto subnet mode to custom subnet mode.
       *
       * Create a request for the method "networks.switchToCustomMode".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SwitchToCustomMode#execute()} method to invoke the remote
       * operation. <p> {@link SwitchToCustomMode#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param network Name of the network to be updated.
       * @since 1.13
       */
      protected SwitchToCustomMode(java.lang.String project, java.lang.String network) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.network = com.google.api.client.util.Preconditions.checkNotNull(network, "Required parameter network must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SwitchToCustomMode setAlt(java.lang.String alt) {
        return (SwitchToCustomMode) super.setAlt(alt);
      }

      @Override
      public SwitchToCustomMode setFields(java.lang.String fields) {
        return (SwitchToCustomMode) super.setFields(fields);
      }

      @Override
      public SwitchToCustomMode setKey(java.lang.String key) {
        return (SwitchToCustomMode) super.setKey(key);
      }

      @Override
      public SwitchToCustomMode setOauthToken(java.lang.String oauthToken) {
        return (SwitchToCustomMode) super.setOauthToken(oauthToken);
      }

      @Override
      public SwitchToCustomMode setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SwitchToCustomMode) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SwitchToCustomMode setQuotaUser(java.lang.String quotaUser) {
        return (SwitchToCustomMode) super.setQuotaUser(quotaUser);
      }

      @Override
      public SwitchToCustomMode setUserIp(java.lang.String userIp) {
        return (SwitchToCustomMode) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SwitchToCustomMode setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the network to be updated. */
      @com.google.api.client.util.Key
      private java.lang.String network;

      /** Name of the network to be updated.
       */
      public java.lang.String getNetwork() {
        return network;
      }

      /** Name of the network to be updated. */
      public SwitchToCustomMode setNetwork(java.lang.String network) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NETWORK_PATTERN.matcher(network).matches(),
              "Parameter network must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.network = network;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SwitchToCustomMode setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SwitchToCustomMode set(String parameterName, Object value) {
        return (SwitchToCustomMode) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the NodeGroups collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.NodeGroups.List request = compute.nodeGroups().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public NodeGroups nodeGroups() {
    return new NodeGroups();
  }

  /**
   * The "nodeGroups" collection of methods.
   */
  public class NodeGroups {

    /**
     * Adds specified number of nodes to the node group.
     *
     * Create a request for the method "nodeGroups.addNodes".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddNodes#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the NodeGroup resource to delete.
     * @param content the {@link com.google.api.services.compute.model.NodeGroupsAddNodesRequest}
     * @return the request
     */
    public AddNodes addNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsAddNodesRequest content) throws java.io.IOException {
      AddNodes result = new AddNodes(project, zone, nodeGroup, content);
      initialize(result);
      return result;
    }

    public class AddNodes extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}/addNodes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Adds specified number of nodes to the node group.
       *
       * Create a request for the method "nodeGroups.addNodes".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddNodes#execute()} method to invoke the remote operation. <p>
       * {@link
       * AddNodes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the NodeGroup resource to delete.
       * @param content the {@link com.google.api.services.compute.model.NodeGroupsAddNodesRequest}
       * @since 1.13
       */
      protected AddNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsAddNodesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AddNodes setAlt(java.lang.String alt) {
        return (AddNodes) super.setAlt(alt);
      }

      @Override
      public AddNodes setFields(java.lang.String fields) {
        return (AddNodes) super.setFields(fields);
      }

      @Override
      public AddNodes setKey(java.lang.String key) {
        return (AddNodes) super.setKey(key);
      }

      @Override
      public AddNodes setOauthToken(java.lang.String oauthToken) {
        return (AddNodes) super.setOauthToken(oauthToken);
      }

      @Override
      public AddNodes setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddNodes) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddNodes setQuotaUser(java.lang.String quotaUser) {
        return (AddNodes) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddNodes setUserIp(java.lang.String userIp) {
        return (AddNodes) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddNodes setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public AddNodes setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the NodeGroup resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the NodeGroup resource to delete.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the NodeGroup resource to delete. */
      public AddNodes setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddNodes setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddNodes set(String parameterName, Object value) {
        return (AddNodes) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an aggregated list of node groups. Note: use nodeGroups.listNodes for more details
     * about each group.
     *
     * Create a request for the method "nodeGroups.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.NodeGroupAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/nodeGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of node groups. Note: use nodeGroups.listNodes for more details
       * about each group.
       *
       * Create a request for the method "nodeGroups.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeGroupAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified NodeGroup resource.
     *
     * Create a request for the method "nodeGroups.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the NodeGroup resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) throws java.io.IOException {
      Delete result = new Delete(project, zone, nodeGroup);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified NodeGroup resource.
       *
       * Create a request for the method "nodeGroups.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the NodeGroup resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the NodeGroup resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the NodeGroup resource to delete.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the NodeGroup resource to delete. */
      public Delete setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Deletes specified nodes from the node group.
     *
     * Create a request for the method "nodeGroups.deleteNodes".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteNodes#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the NodeGroup resource to delete.
     * @param content the {@link com.google.api.services.compute.model.NodeGroupsDeleteNodesRequest}
     * @return the request
     */
    public DeleteNodes deleteNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsDeleteNodesRequest content) throws java.io.IOException {
      DeleteNodes result = new DeleteNodes(project, zone, nodeGroup, content);
      initialize(result);
      return result;
    }

    public class DeleteNodes extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}/deleteNodes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes specified nodes from the node group.
       *
       * Create a request for the method "nodeGroups.deleteNodes".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteNodes#execute()} method to invoke the remote operation. <p>
       * {@link
       * DeleteNodes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the NodeGroup resource to delete.
       * @param content the {@link com.google.api.services.compute.model.NodeGroupsDeleteNodesRequest}
       * @since 1.13
       */
      protected DeleteNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsDeleteNodesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public DeleteNodes setAlt(java.lang.String alt) {
        return (DeleteNodes) super.setAlt(alt);
      }

      @Override
      public DeleteNodes setFields(java.lang.String fields) {
        return (DeleteNodes) super.setFields(fields);
      }

      @Override
      public DeleteNodes setKey(java.lang.String key) {
        return (DeleteNodes) super.setKey(key);
      }

      @Override
      public DeleteNodes setOauthToken(java.lang.String oauthToken) {
        return (DeleteNodes) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteNodes setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteNodes) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteNodes setQuotaUser(java.lang.String quotaUser) {
        return (DeleteNodes) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteNodes setUserIp(java.lang.String userIp) {
        return (DeleteNodes) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteNodes setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public DeleteNodes setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the NodeGroup resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the NodeGroup resource to delete.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the NodeGroup resource to delete. */
      public DeleteNodes setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteNodes setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteNodes set(String parameterName, Object value) {
        return (DeleteNodes) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified NodeGroup. Get a list of available NodeGroups by making a list() request.
     * Note: the "nodes" field should not be used. Use nodeGroups.listNodes instead.
     *
     * Create a request for the method "nodeGroups.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the node group to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) throws java.io.IOException {
      Get result = new Get(project, zone, nodeGroup);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.NodeGroup> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified NodeGroup. Get a list of available NodeGroups by making a list() request.
       * Note: the "nodes" field should not be used. Use nodeGroups.listNodes instead.
       *
       * Create a request for the method "nodeGroups.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the node group to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeGroup.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the node group to return. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the node group to return.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the node group to return. */
      public Get setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a NodeGroup resource in the specified project using the data included in the request.
     *
     * Create a request for the method "nodeGroups.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param initialNodeCount Initial count of nodes in the node group.
     * @param content the {@link com.google.api.services.compute.model.NodeGroup}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, java.lang.Integer initialNodeCount, com.google.api.services.compute.model.NodeGroup content) throws java.io.IOException {
      Insert result = new Insert(project, zone, initialNodeCount, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a NodeGroup resource in the specified project using the data included in the request.
       *
       * Create a request for the method "nodeGroups.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param initialNodeCount Initial count of nodes in the node group.
       * @param content the {@link com.google.api.services.compute.model.NodeGroup}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, java.lang.Integer initialNodeCount, com.google.api.services.compute.model.NodeGroup content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.initialNodeCount = com.google.api.client.util.Preconditions.checkNotNull(initialNodeCount, "Required parameter initialNodeCount must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Insert setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Initial count of nodes in the node group. */
      @com.google.api.client.util.Key
      private java.lang.Integer initialNodeCount;

      /** Initial count of nodes in the node group.
       */
      public java.lang.Integer getInitialNodeCount() {
        return initialNodeCount;
      }

      /** Initial count of nodes in the node group. */
      public Insert setInitialNodeCount(java.lang.Integer initialNodeCount) {
        this.initialNodeCount = initialNodeCount;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of node groups available to the specified project. Note: use
     * nodeGroups.listNodes for more details about each group.
     *
     * Create a request for the method "nodeGroups.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.NodeGroupList> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of node groups available to the specified project. Note: use
       * nodeGroups.listNodes for more details about each group.
       *
       * Create a request for the method "nodeGroups.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeGroupList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists nodes in the node group.
     *
     * Create a request for the method "nodeGroups.listNodes".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListNodes#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the NodeGroup resource whose nodes you want to list.
     * @return the request
     */
    public ListNodes listNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) throws java.io.IOException {
      ListNodes result = new ListNodes(project, zone, nodeGroup);
      initialize(result);
      return result;
    }

    public class ListNodes extends ComputeRequest<com.google.api.services.compute.model.NodeGroupsListNodes> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}/listNodes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Lists nodes in the node group.
       *
       * Create a request for the method "nodeGroups.listNodes".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListNodes#execute()} method to invoke the remote operation. <p>
       * {@link
       * ListNodes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the NodeGroup resource whose nodes you want to list.
       * @since 1.13
       */
      protected ListNodes(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.NodeGroupsListNodes.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public ListNodes setAlt(java.lang.String alt) {
        return (ListNodes) super.setAlt(alt);
      }

      @Override
      public ListNodes setFields(java.lang.String fields) {
        return (ListNodes) super.setFields(fields);
      }

      @Override
      public ListNodes setKey(java.lang.String key) {
        return (ListNodes) super.setKey(key);
      }

      @Override
      public ListNodes setOauthToken(java.lang.String oauthToken) {
        return (ListNodes) super.setOauthToken(oauthToken);
      }

      @Override
      public ListNodes setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListNodes) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListNodes setQuotaUser(java.lang.String quotaUser) {
        return (ListNodes) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListNodes setUserIp(java.lang.String userIp) {
        return (ListNodes) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListNodes setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public ListNodes setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the NodeGroup resource whose nodes you want to list. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the NodeGroup resource whose nodes you want to list.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the NodeGroup resource whose nodes you want to list. */
      public ListNodes setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListNodes setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListNodes setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListNodes setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListNodes setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListNodes set(String parameterName, Object value) {
        return (ListNodes) super.set(parameterName, value);
      }
    }
    /**
     * Updates the node template of the node group.
     *
     * Create a request for the method "nodeGroups.setNodeTemplate".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetNodeTemplate#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeGroup Name of the NodeGroup resource to delete.
     * @param content the {@link com.google.api.services.compute.model.NodeGroupsSetNodeTemplateRequest}
     * @return the request
     */
    public SetNodeTemplate setNodeTemplate(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsSetNodeTemplateRequest content) throws java.io.IOException {
      SetNodeTemplate result = new SetNodeTemplate(project, zone, nodeGroup, content);
      initialize(result);
      return result;
    }

    public class SetNodeTemplate extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeGroups/{nodeGroup}/setNodeTemplate";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_GROUP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the node template of the node group.
       *
       * Create a request for the method "nodeGroups.setNodeTemplate".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetNodeTemplate#execute()} method to invoke the remote operation.
       * <p> {@link SetNodeTemplate#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeGroup Name of the NodeGroup resource to delete.
       * @param content the {@link com.google.api.services.compute.model.NodeGroupsSetNodeTemplateRequest}
       * @since 1.13
       */
      protected SetNodeTemplate(java.lang.String project, java.lang.String zone, java.lang.String nodeGroup, com.google.api.services.compute.model.NodeGroupsSetNodeTemplateRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = com.google.api.client.util.Preconditions.checkNotNull(nodeGroup, "Required parameter nodeGroup must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetNodeTemplate setAlt(java.lang.String alt) {
        return (SetNodeTemplate) super.setAlt(alt);
      }

      @Override
      public SetNodeTemplate setFields(java.lang.String fields) {
        return (SetNodeTemplate) super.setFields(fields);
      }

      @Override
      public SetNodeTemplate setKey(java.lang.String key) {
        return (SetNodeTemplate) super.setKey(key);
      }

      @Override
      public SetNodeTemplate setOauthToken(java.lang.String oauthToken) {
        return (SetNodeTemplate) super.setOauthToken(oauthToken);
      }

      @Override
      public SetNodeTemplate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetNodeTemplate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetNodeTemplate setQuotaUser(java.lang.String quotaUser) {
        return (SetNodeTemplate) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetNodeTemplate setUserIp(java.lang.String userIp) {
        return (SetNodeTemplate) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetNodeTemplate setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public SetNodeTemplate setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the NodeGroup resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String nodeGroup;

      /** Name of the NodeGroup resource to delete.
       */
      public java.lang.String getNodeGroup() {
        return nodeGroup;
      }

      /** Name of the NodeGroup resource to delete. */
      public SetNodeTemplate setNodeGroup(java.lang.String nodeGroup) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_GROUP_PATTERN.matcher(nodeGroup).matches(),
              "Parameter nodeGroup must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeGroup = nodeGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetNodeTemplate setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetNodeTemplate set(String parameterName, Object value) {
        return (SetNodeTemplate) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the NodeTemplates collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.NodeTemplates.List request = compute.nodeTemplates().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public NodeTemplates nodeTemplates() {
    return new NodeTemplates();
  }

  /**
   * The "nodeTemplates" collection of methods.
   */
  public class NodeTemplates {

    /**
     * Retrieves an aggregated list of node templates.
     *
     * Create a request for the method "nodeTemplates.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.NodeTemplateAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/nodeTemplates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of node templates.
       *
       * Create a request for the method "nodeTemplates.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeTemplateAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified NodeTemplate resource.
     *
     * Create a request for the method "nodeTemplates.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @param nodeTemplate Name of the NodeTemplate resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String nodeTemplate) throws java.io.IOException {
      Delete result = new Delete(project, region, nodeTemplate);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/nodeTemplates/{nodeTemplate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_TEMPLATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified NodeTemplate resource.
       *
       * Create a request for the method "nodeTemplates.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @param nodeTemplate Name of the NodeTemplate resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String nodeTemplate) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeTemplate = com.google.api.client.util.Preconditions.checkNotNull(nodeTemplate, "Required parameter nodeTemplate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TEMPLATE_PATTERN.matcher(nodeTemplate).matches(),
              "Parameter nodeTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the NodeTemplate resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String nodeTemplate;

      /** Name of the NodeTemplate resource to delete.
       */
      public java.lang.String getNodeTemplate() {
        return nodeTemplate;
      }

      /** Name of the NodeTemplate resource to delete. */
      public Delete setNodeTemplate(java.lang.String nodeTemplate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TEMPLATE_PATTERN.matcher(nodeTemplate).matches(),
              "Parameter nodeTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeTemplate = nodeTemplate;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified node template. Gets a list of available node templates by making a list()
     * request.
     *
     * Create a request for the method "nodeTemplates.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @param nodeTemplate Name of the node template to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String nodeTemplate) throws java.io.IOException {
      Get result = new Get(project, region, nodeTemplate);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.NodeTemplate> {

      private static final String REST_PATH = "{project}/regions/{region}/nodeTemplates/{nodeTemplate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_TEMPLATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified node template. Gets a list of available node templates by making a list()
       * request.
       *
       * Create a request for the method "nodeTemplates.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @param nodeTemplate Name of the node template to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String nodeTemplate) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeTemplate.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeTemplate = com.google.api.client.util.Preconditions.checkNotNull(nodeTemplate, "Required parameter nodeTemplate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TEMPLATE_PATTERN.matcher(nodeTemplate).matches(),
              "Parameter nodeTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the node template to return. */
      @com.google.api.client.util.Key
      private java.lang.String nodeTemplate;

      /** Name of the node template to return.
       */
      public java.lang.String getNodeTemplate() {
        return nodeTemplate;
      }

      /** Name of the node template to return. */
      public Get setNodeTemplate(java.lang.String nodeTemplate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TEMPLATE_PATTERN.matcher(nodeTemplate).matches(),
              "Parameter nodeTemplate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeTemplate = nodeTemplate;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a NodeTemplate resource in the specified project using the data included in the request.
     *
     * Create a request for the method "nodeTemplates.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.NodeTemplate}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.NodeTemplate content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/nodeTemplates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a NodeTemplate resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "nodeTemplates.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.NodeTemplate}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.NodeTemplate content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of node templates available to the specified project.
     *
     * Create a request for the method "nodeTemplates.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.NodeTemplateList> {

      private static final String REST_PATH = "{project}/regions/{region}/nodeTemplates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of node templates available to the specified project.
       *
       * Create a request for the method "nodeTemplates.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeTemplateList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the NodeTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.NodeTypes.List request = compute.nodeTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public NodeTypes nodeTypes() {
    return new NodeTypes();
  }

  /**
   * The "nodeTypes" collection of methods.
   */
  public class NodeTypes {

    /**
     * Retrieves an aggregated list of node types.
     *
     * Create a request for the method "nodeTypes.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.NodeTypeAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/nodeTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of node types.
       *
       * Create a request for the method "nodeTypes.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeTypeAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified node type. Gets a list of available node types by making a list() request.
     *
     * Create a request for the method "nodeTypes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @param nodeType Name of the node type to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String nodeType) throws java.io.IOException {
      Get result = new Get(project, zone, nodeType);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.NodeType> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeTypes/{nodeType}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern NODE_TYPE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified node type. Gets a list of available node types by making a list()
       * request.
       *
       * Create a request for the method "nodeTypes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @param nodeType Name of the node type to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String nodeType) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeType.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeType = com.google.api.client.util.Preconditions.checkNotNull(nodeType, "Required parameter nodeType must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TYPE_PATTERN.matcher(nodeType).matches(),
              "Parameter nodeType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the node type to return. */
      @com.google.api.client.util.Key
      private java.lang.String nodeType;

      /** Name of the node type to return.
       */
      public java.lang.String getNodeType() {
        return nodeType;
      }

      /** Name of the node type to return. */
      public Get setNodeType(java.lang.String nodeType) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NODE_TYPE_PATTERN.matcher(nodeType).matches(),
              "Parameter nodeType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.nodeType = nodeType;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of node types available to the specified project.
     *
     * Create a request for the method "nodeTypes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone The name of the zone for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.NodeTypeList> {

      private static final String REST_PATH = "{project}/zones/{zone}/nodeTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of node types available to the specified project.
       *
       * Create a request for the method "nodeTypes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone The name of the zone for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.NodeTypeList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** The name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** The name of the zone for this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Projects.List request = compute.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Disable this project as a shared VPC host project.
     *
     * Create a request for the method "projects.disableXpnHost".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DisableXpnHost#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public DisableXpnHost disableXpnHost(java.lang.String project) throws java.io.IOException {
      DisableXpnHost result = new DisableXpnHost(project);
      initialize(result);
      return result;
    }

    public class DisableXpnHost extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/disableXpnHost";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Disable this project as a shared VPC host project.
       *
       * Create a request for the method "projects.disableXpnHost".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DisableXpnHost#execute()} method to invoke the remote operation.
       * <p> {@link DisableXpnHost#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected DisableXpnHost(java.lang.String project) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public DisableXpnHost setAlt(java.lang.String alt) {
        return (DisableXpnHost) super.setAlt(alt);
      }

      @Override
      public DisableXpnHost setFields(java.lang.String fields) {
        return (DisableXpnHost) super.setFields(fields);
      }

      @Override
      public DisableXpnHost setKey(java.lang.String key) {
        return (DisableXpnHost) super.setKey(key);
      }

      @Override
      public DisableXpnHost setOauthToken(java.lang.String oauthToken) {
        return (DisableXpnHost) super.setOauthToken(oauthToken);
      }

      @Override
      public DisableXpnHost setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DisableXpnHost) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DisableXpnHost setQuotaUser(java.lang.String quotaUser) {
        return (DisableXpnHost) super.setQuotaUser(quotaUser);
      }

      @Override
      public DisableXpnHost setUserIp(java.lang.String userIp) {
        return (DisableXpnHost) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DisableXpnHost setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DisableXpnHost setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DisableXpnHost set(String parameterName, Object value) {
        return (DisableXpnHost) super.set(parameterName, value);
      }
    }
    /**
     * Disable a serivce resource (a.k.a service project) associated with this host project.
     *
     * Create a request for the method "projects.disableXpnResource".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DisableXpnResource#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.ProjectsDisableXpnResourceRequest}
     * @return the request
     */
    public DisableXpnResource disableXpnResource(java.lang.String project, com.google.api.services.compute.model.ProjectsDisableXpnResourceRequest content) throws java.io.IOException {
      DisableXpnResource result = new DisableXpnResource(project, content);
      initialize(result);
      return result;
    }

    public class DisableXpnResource extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/disableXpnResource";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Disable a serivce resource (a.k.a service project) associated with this host project.
       *
       * Create a request for the method "projects.disableXpnResource".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DisableXpnResource#execute()} method to invoke the remote
       * operation. <p> {@link DisableXpnResource#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.ProjectsDisableXpnResourceRequest}
       * @since 1.13
       */
      protected DisableXpnResource(java.lang.String project, com.google.api.services.compute.model.ProjectsDisableXpnResourceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public DisableXpnResource setAlt(java.lang.String alt) {
        return (DisableXpnResource) super.setAlt(alt);
      }

      @Override
      public DisableXpnResource setFields(java.lang.String fields) {
        return (DisableXpnResource) super.setFields(fields);
      }

      @Override
      public DisableXpnResource setKey(java.lang.String key) {
        return (DisableXpnResource) super.setKey(key);
      }

      @Override
      public DisableXpnResource setOauthToken(java.lang.String oauthToken) {
        return (DisableXpnResource) super.setOauthToken(oauthToken);
      }

      @Override
      public DisableXpnResource setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DisableXpnResource) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DisableXpnResource setQuotaUser(java.lang.String quotaUser) {
        return (DisableXpnResource) super.setQuotaUser(quotaUser);
      }

      @Override
      public DisableXpnResource setUserIp(java.lang.String userIp) {
        return (DisableXpnResource) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DisableXpnResource setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DisableXpnResource setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DisableXpnResource set(String parameterName, Object value) {
        return (DisableXpnResource) super.set(parameterName, value);
      }
    }
    /**
     * Enable this project as a shared VPC host project.
     *
     * Create a request for the method "projects.enableXpnHost".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link EnableXpnHost#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public EnableXpnHost enableXpnHost(java.lang.String project) throws java.io.IOException {
      EnableXpnHost result = new EnableXpnHost(project);
      initialize(result);
      return result;
    }

    public class EnableXpnHost extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/enableXpnHost";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Enable this project as a shared VPC host project.
       *
       * Create a request for the method "projects.enableXpnHost".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link EnableXpnHost#execute()} method to invoke the remote operation. <p>
       * {@link EnableXpnHost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected EnableXpnHost(java.lang.String project) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public EnableXpnHost setAlt(java.lang.String alt) {
        return (EnableXpnHost) super.setAlt(alt);
      }

      @Override
      public EnableXpnHost setFields(java.lang.String fields) {
        return (EnableXpnHost) super.setFields(fields);
      }

      @Override
      public EnableXpnHost setKey(java.lang.String key) {
        return (EnableXpnHost) super.setKey(key);
      }

      @Override
      public EnableXpnHost setOauthToken(java.lang.String oauthToken) {
        return (EnableXpnHost) super.setOauthToken(oauthToken);
      }

      @Override
      public EnableXpnHost setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EnableXpnHost) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EnableXpnHost setQuotaUser(java.lang.String quotaUser) {
        return (EnableXpnHost) super.setQuotaUser(quotaUser);
      }

      @Override
      public EnableXpnHost setUserIp(java.lang.String userIp) {
        return (EnableXpnHost) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public EnableXpnHost setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public EnableXpnHost setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public EnableXpnHost set(String parameterName, Object value) {
        return (EnableXpnHost) super.set(parameterName, value);
      }
    }
    /**
     * Enable service resource (a.k.a service project) for a host project, so that subnets in the host
     * project can be used by instances in the service project.
     *
     * Create a request for the method "projects.enableXpnResource".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link EnableXpnResource#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.ProjectsEnableXpnResourceRequest}
     * @return the request
     */
    public EnableXpnResource enableXpnResource(java.lang.String project, com.google.api.services.compute.model.ProjectsEnableXpnResourceRequest content) throws java.io.IOException {
      EnableXpnResource result = new EnableXpnResource(project, content);
      initialize(result);
      return result;
    }

    public class EnableXpnResource extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/enableXpnResource";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Enable service resource (a.k.a service project) for a host project, so that subnets in the host
       * project can be used by instances in the service project.
       *
       * Create a request for the method "projects.enableXpnResource".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link EnableXpnResource#execute()} method to invoke the remote operation.
       * <p> {@link EnableXpnResource#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.ProjectsEnableXpnResourceRequest}
       * @since 1.13
       */
      protected EnableXpnResource(java.lang.String project, com.google.api.services.compute.model.ProjectsEnableXpnResourceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public EnableXpnResource setAlt(java.lang.String alt) {
        return (EnableXpnResource) super.setAlt(alt);
      }

      @Override
      public EnableXpnResource setFields(java.lang.String fields) {
        return (EnableXpnResource) super.setFields(fields);
      }

      @Override
      public EnableXpnResource setKey(java.lang.String key) {
        return (EnableXpnResource) super.setKey(key);
      }

      @Override
      public EnableXpnResource setOauthToken(java.lang.String oauthToken) {
        return (EnableXpnResource) super.setOauthToken(oauthToken);
      }

      @Override
      public EnableXpnResource setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EnableXpnResource) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EnableXpnResource setQuotaUser(java.lang.String quotaUser) {
        return (EnableXpnResource) super.setQuotaUser(quotaUser);
      }

      @Override
      public EnableXpnResource setUserIp(java.lang.String userIp) {
        return (EnableXpnResource) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public EnableXpnResource setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public EnableXpnResource setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public EnableXpnResource set(String parameterName, Object value) {
        return (EnableXpnResource) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified Project resource.
     *
     * Create a request for the method "projects.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public Get get(java.lang.String project) throws java.io.IOException {
      Get result = new Get(project);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Project> {

      private static final String REST_PATH = "{project}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns the specified Project resource.
       *
       * Create a request for the method "projects.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected Get(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Project.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets the shared VPC host project that this project links to. May be empty if no link exists.
     *
     * Create a request for the method "projects.getXpnHost".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetXpnHost#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public GetXpnHost getXpnHost(java.lang.String project) throws java.io.IOException {
      GetXpnHost result = new GetXpnHost(project);
      initialize(result);
      return result;
    }

    public class GetXpnHost extends ComputeRequest<com.google.api.services.compute.model.Project> {

      private static final String REST_PATH = "{project}/getXpnHost";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Gets the shared VPC host project that this project links to. May be empty if no link exists.
       *
       * Create a request for the method "projects.getXpnHost".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetXpnHost#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetXpnHost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected GetXpnHost(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Project.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetXpnHost setAlt(java.lang.String alt) {
        return (GetXpnHost) super.setAlt(alt);
      }

      @Override
      public GetXpnHost setFields(java.lang.String fields) {
        return (GetXpnHost) super.setFields(fields);
      }

      @Override
      public GetXpnHost setKey(java.lang.String key) {
        return (GetXpnHost) super.setKey(key);
      }

      @Override
      public GetXpnHost setOauthToken(java.lang.String oauthToken) {
        return (GetXpnHost) super.setOauthToken(oauthToken);
      }

      @Override
      public GetXpnHost setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetXpnHost) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetXpnHost setQuotaUser(java.lang.String quotaUser) {
        return (GetXpnHost) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetXpnHost setUserIp(java.lang.String userIp) {
        return (GetXpnHost) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetXpnHost setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      @Override
      public GetXpnHost set(String parameterName, Object value) {
        return (GetXpnHost) super.set(parameterName, value);
      }
    }
    /**
     * Gets service resources (a.k.a service project) associated with this host project.
     *
     * Create a request for the method "projects.getXpnResources".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetXpnResources#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public GetXpnResources getXpnResources(java.lang.String project) throws java.io.IOException {
      GetXpnResources result = new GetXpnResources(project);
      initialize(result);
      return result;
    }

    public class GetXpnResources extends ComputeRequest<com.google.api.services.compute.model.ProjectsGetXpnResources> {

      private static final String REST_PATH = "{project}/getXpnResources";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Gets service resources (a.k.a service project) associated with this host project.
       *
       * Create a request for the method "projects.getXpnResources".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetXpnResources#execute()} method to invoke the remote operation.
       * <p> {@link GetXpnResources#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected GetXpnResources(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ProjectsGetXpnResources.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetXpnResources setAlt(java.lang.String alt) {
        return (GetXpnResources) super.setAlt(alt);
      }

      @Override
      public GetXpnResources setFields(java.lang.String fields) {
        return (GetXpnResources) super.setFields(fields);
      }

      @Override
      public GetXpnResources setKey(java.lang.String key) {
        return (GetXpnResources) super.setKey(key);
      }

      @Override
      public GetXpnResources setOauthToken(java.lang.String oauthToken) {
        return (GetXpnResources) super.setOauthToken(oauthToken);
      }

      @Override
      public GetXpnResources setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetXpnResources) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetXpnResources setQuotaUser(java.lang.String quotaUser) {
        return (GetXpnResources) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetXpnResources setUserIp(java.lang.String userIp) {
        return (GetXpnResources) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetXpnResources setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public GetXpnResources setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public GetXpnResources setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key("order_by")
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public GetXpnResources setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public GetXpnResources setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public GetXpnResources set(String parameterName, Object value) {
        return (GetXpnResources) super.set(parameterName, value);
      }
    }
    /**
     * Lists all shared VPC host projects visible to the user in an organization.
     *
     * Create a request for the method "projects.listXpnHosts".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListXpnHosts#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.ProjectsListXpnHostsRequest}
     * @return the request
     */
    public ListXpnHosts listXpnHosts(java.lang.String project, com.google.api.services.compute.model.ProjectsListXpnHostsRequest content) throws java.io.IOException {
      ListXpnHosts result = new ListXpnHosts(project, content);
      initialize(result);
      return result;
    }

    public class ListXpnHosts extends ComputeRequest<com.google.api.services.compute.model.XpnHostList> {

      private static final String REST_PATH = "{project}/listXpnHosts";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists all shared VPC host projects visible to the user in an organization.
       *
       * Create a request for the method "projects.listXpnHosts".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListXpnHosts#execute()} method to invoke the remote operation. <p>
       * {@link
       * ListXpnHosts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.ProjectsListXpnHostsRequest}
       * @since 1.13
       */
      protected ListXpnHosts(java.lang.String project, com.google.api.services.compute.model.ProjectsListXpnHostsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.XpnHostList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public ListXpnHosts setAlt(java.lang.String alt) {
        return (ListXpnHosts) super.setAlt(alt);
      }

      @Override
      public ListXpnHosts setFields(java.lang.String fields) {
        return (ListXpnHosts) super.setFields(fields);
      }

      @Override
      public ListXpnHosts setKey(java.lang.String key) {
        return (ListXpnHosts) super.setKey(key);
      }

      @Override
      public ListXpnHosts setOauthToken(java.lang.String oauthToken) {
        return (ListXpnHosts) super.setOauthToken(oauthToken);
      }

      @Override
      public ListXpnHosts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListXpnHosts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListXpnHosts setQuotaUser(java.lang.String quotaUser) {
        return (ListXpnHosts) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListXpnHosts setUserIp(java.lang.String userIp) {
        return (ListXpnHosts) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListXpnHosts setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListXpnHosts setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListXpnHosts setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key("order_by")
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListXpnHosts setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListXpnHosts setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListXpnHosts set(String parameterName, Object value) {
        return (ListXpnHosts) super.set(parameterName, value);
      }
    }
    /**
     * Moves a persistent disk from one zone to another.
     *
     * Create a request for the method "projects.moveDisk".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link MoveDisk#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.DiskMoveRequest}
     * @return the request
     */
    public MoveDisk moveDisk(java.lang.String project, com.google.api.services.compute.model.DiskMoveRequest content) throws java.io.IOException {
      MoveDisk result = new MoveDisk(project, content);
      initialize(result);
      return result;
    }

    public class MoveDisk extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/moveDisk";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Moves a persistent disk from one zone to another.
       *
       * Create a request for the method "projects.moveDisk".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link MoveDisk#execute()} method to invoke the remote operation. <p>
       * {@link
       * MoveDisk#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.DiskMoveRequest}
       * @since 1.13
       */
      protected MoveDisk(java.lang.String project, com.google.api.services.compute.model.DiskMoveRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public MoveDisk setAlt(java.lang.String alt) {
        return (MoveDisk) super.setAlt(alt);
      }

      @Override
      public MoveDisk setFields(java.lang.String fields) {
        return (MoveDisk) super.setFields(fields);
      }

      @Override
      public MoveDisk setKey(java.lang.String key) {
        return (MoveDisk) super.setKey(key);
      }

      @Override
      public MoveDisk setOauthToken(java.lang.String oauthToken) {
        return (MoveDisk) super.setOauthToken(oauthToken);
      }

      @Override
      public MoveDisk setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (MoveDisk) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public MoveDisk setQuotaUser(java.lang.String quotaUser) {
        return (MoveDisk) super.setQuotaUser(quotaUser);
      }

      @Override
      public MoveDisk setUserIp(java.lang.String userIp) {
        return (MoveDisk) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public MoveDisk setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public MoveDisk setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public MoveDisk set(String parameterName, Object value) {
        return (MoveDisk) super.set(parameterName, value);
      }
    }
    /**
     * Moves an instance and its attached persistent disks from one zone to another.
     *
     * Create a request for the method "projects.moveInstance".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link MoveInstance#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.InstanceMoveRequest}
     * @return the request
     */
    public MoveInstance moveInstance(java.lang.String project, com.google.api.services.compute.model.InstanceMoveRequest content) throws java.io.IOException {
      MoveInstance result = new MoveInstance(project, content);
      initialize(result);
      return result;
    }

    public class MoveInstance extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/moveInstance";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Moves an instance and its attached persistent disks from one zone to another.
       *
       * Create a request for the method "projects.moveInstance".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link MoveInstance#execute()} method to invoke the remote operation. <p>
       * {@link
       * MoveInstance#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.InstanceMoveRequest}
       * @since 1.13
       */
      protected MoveInstance(java.lang.String project, com.google.api.services.compute.model.InstanceMoveRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public MoveInstance setAlt(java.lang.String alt) {
        return (MoveInstance) super.setAlt(alt);
      }

      @Override
      public MoveInstance setFields(java.lang.String fields) {
        return (MoveInstance) super.setFields(fields);
      }

      @Override
      public MoveInstance setKey(java.lang.String key) {
        return (MoveInstance) super.setKey(key);
      }

      @Override
      public MoveInstance setOauthToken(java.lang.String oauthToken) {
        return (MoveInstance) super.setOauthToken(oauthToken);
      }

      @Override
      public MoveInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (MoveInstance) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public MoveInstance setQuotaUser(java.lang.String quotaUser) {
        return (MoveInstance) super.setQuotaUser(quotaUser);
      }

      @Override
      public MoveInstance setUserIp(java.lang.String userIp) {
        return (MoveInstance) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public MoveInstance setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public MoveInstance setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public MoveInstance set(String parameterName, Object value) {
        return (MoveInstance) super.set(parameterName, value);
      }
    }
    /**
     * Sets metadata common to all instances within the specified project using the data included in the
     * request.
     *
     * Create a request for the method "projects.setCommonInstanceMetadata".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetCommonInstanceMetadata#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Metadata}
     * @return the request
     */
    public SetCommonInstanceMetadata setCommonInstanceMetadata(java.lang.String project, com.google.api.services.compute.model.Metadata content) throws java.io.IOException {
      SetCommonInstanceMetadata result = new SetCommonInstanceMetadata(project, content);
      initialize(result);
      return result;
    }

    public class SetCommonInstanceMetadata extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/setCommonInstanceMetadata";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets metadata common to all instances within the specified project using the data included in
       * the request.
       *
       * Create a request for the method "projects.setCommonInstanceMetadata".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetCommonInstanceMetadata#execute()} method to invoke the remote
       * operation. <p> {@link SetCommonInstanceMetadata#initialize(com.google.api.client.googleapis.ser
       * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Metadata}
       * @since 1.13
       */
      protected SetCommonInstanceMetadata(java.lang.String project, com.google.api.services.compute.model.Metadata content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public SetCommonInstanceMetadata setAlt(java.lang.String alt) {
        return (SetCommonInstanceMetadata) super.setAlt(alt);
      }

      @Override
      public SetCommonInstanceMetadata setFields(java.lang.String fields) {
        return (SetCommonInstanceMetadata) super.setFields(fields);
      }

      @Override
      public SetCommonInstanceMetadata setKey(java.lang.String key) {
        return (SetCommonInstanceMetadata) super.setKey(key);
      }

      @Override
      public SetCommonInstanceMetadata setOauthToken(java.lang.String oauthToken) {
        return (SetCommonInstanceMetadata) super.setOauthToken(oauthToken);
      }

      @Override
      public SetCommonInstanceMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetCommonInstanceMetadata) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetCommonInstanceMetadata setQuotaUser(java.lang.String quotaUser) {
        return (SetCommonInstanceMetadata) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetCommonInstanceMetadata setUserIp(java.lang.String userIp) {
        return (SetCommonInstanceMetadata) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetCommonInstanceMetadata setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetCommonInstanceMetadata setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetCommonInstanceMetadata set(String parameterName, Object value) {
        return (SetCommonInstanceMetadata) super.set(parameterName, value);
      }
    }
    /**
     * Sets the default network tier of the project. The default network tier is used when an
     * address/forwardingRule/instance is created without specifying the network tier field.
     *
     * Create a request for the method "projects.setDefaultNetworkTier".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetDefaultNetworkTier#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.ProjectsSetDefaultNetworkTierRequest}
     * @return the request
     */
    public SetDefaultNetworkTier setDefaultNetworkTier(java.lang.String project, com.google.api.services.compute.model.ProjectsSetDefaultNetworkTierRequest content) throws java.io.IOException {
      SetDefaultNetworkTier result = new SetDefaultNetworkTier(project, content);
      initialize(result);
      return result;
    }

    public class SetDefaultNetworkTier extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/setDefaultNetworkTier";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the default network tier of the project. The default network tier is used when an
       * address/forwardingRule/instance is created without specifying the network tier field.
       *
       * Create a request for the method "projects.setDefaultNetworkTier".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetDefaultNetworkTier#execute()} method to invoke the remote
       * operation. <p> {@link SetDefaultNetworkTier#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.ProjectsSetDefaultNetworkTierRequest}
       * @since 1.13
       */
      protected SetDefaultNetworkTier(java.lang.String project, com.google.api.services.compute.model.ProjectsSetDefaultNetworkTierRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public SetDefaultNetworkTier setAlt(java.lang.String alt) {
        return (SetDefaultNetworkTier) super.setAlt(alt);
      }

      @Override
      public SetDefaultNetworkTier setFields(java.lang.String fields) {
        return (SetDefaultNetworkTier) super.setFields(fields);
      }

      @Override
      public SetDefaultNetworkTier setKey(java.lang.String key) {
        return (SetDefaultNetworkTier) super.setKey(key);
      }

      @Override
      public SetDefaultNetworkTier setOauthToken(java.lang.String oauthToken) {
        return (SetDefaultNetworkTier) super.setOauthToken(oauthToken);
      }

      @Override
      public SetDefaultNetworkTier setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetDefaultNetworkTier) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetDefaultNetworkTier setQuotaUser(java.lang.String quotaUser) {
        return (SetDefaultNetworkTier) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetDefaultNetworkTier setUserIp(java.lang.String userIp) {
        return (SetDefaultNetworkTier) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetDefaultNetworkTier setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetDefaultNetworkTier setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetDefaultNetworkTier set(String parameterName, Object value) {
        return (SetDefaultNetworkTier) super.set(parameterName, value);
      }
    }
    /**
     * Enables the usage export feature and sets the usage export bucket where reports are stored. If
     * you provide an empty request body using this method, the usage export feature will be disabled.
     *
     * Create a request for the method "projects.setUsageExportBucket".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetUsageExportBucket#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.UsageExportLocation}
     * @return the request
     */
    public SetUsageExportBucket setUsageExportBucket(java.lang.String project, com.google.api.services.compute.model.UsageExportLocation content) throws java.io.IOException {
      SetUsageExportBucket result = new SetUsageExportBucket(project, content);
      initialize(result);
      return result;
    }

    public class SetUsageExportBucket extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/setUsageExportBucket";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Enables the usage export feature and sets the usage export bucket where reports are stored. If
       * you provide an empty request body using this method, the usage export feature will be disabled.
       *
       * Create a request for the method "projects.setUsageExportBucket".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetUsageExportBucket#execute()} method to invoke the remote
       * operation. <p> {@link SetUsageExportBucket#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.UsageExportLocation}
       * @since 1.13
       */
      protected SetUsageExportBucket(java.lang.String project, com.google.api.services.compute.model.UsageExportLocation content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public SetUsageExportBucket setAlt(java.lang.String alt) {
        return (SetUsageExportBucket) super.setAlt(alt);
      }

      @Override
      public SetUsageExportBucket setFields(java.lang.String fields) {
        return (SetUsageExportBucket) super.setFields(fields);
      }

      @Override
      public SetUsageExportBucket setKey(java.lang.String key) {
        return (SetUsageExportBucket) super.setKey(key);
      }

      @Override
      public SetUsageExportBucket setOauthToken(java.lang.String oauthToken) {
        return (SetUsageExportBucket) super.setOauthToken(oauthToken);
      }

      @Override
      public SetUsageExportBucket setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetUsageExportBucket) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetUsageExportBucket setQuotaUser(java.lang.String quotaUser) {
        return (SetUsageExportBucket) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetUsageExportBucket setUserIp(java.lang.String userIp) {
        return (SetUsageExportBucket) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetUsageExportBucket setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetUsageExportBucket setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetUsageExportBucket set(String parameterName, Object value) {
        return (SetUsageExportBucket) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionAutoscalers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionAutoscalers.List request = compute.regionAutoscalers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionAutoscalers regionAutoscalers() {
    return new RegionAutoscalers();
  }

  /**
   * The "regionAutoscalers" collection of methods.
   */
  public class RegionAutoscalers {

    /**
     * Deletes the specified autoscaler.
     *
     * Create a request for the method "regionAutoscalers.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param autoscaler Name of the autoscaler to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String autoscaler) throws java.io.IOException {
      Delete result = new Delete(project, region, autoscaler);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers/{autoscaler}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified autoscaler.
       *
       * Create a request for the method "regionAutoscalers.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param autoscaler Name of the autoscaler to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String autoscaler) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = com.google.api.client.util.Preconditions.checkNotNull(autoscaler, "Required parameter autoscaler must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the autoscaler to delete. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to delete.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to delete. */
      public Delete setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified autoscaler.
     *
     * Create a request for the method "regionAutoscalers.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param autoscaler Name of the autoscaler to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String autoscaler) throws java.io.IOException {
      Get result = new Get(project, region, autoscaler);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Autoscaler> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers/{autoscaler}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified autoscaler.
       *
       * Create a request for the method "regionAutoscalers.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param autoscaler Name of the autoscaler to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String autoscaler) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Autoscaler.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = com.google.api.client.util.Preconditions.checkNotNull(autoscaler, "Required parameter autoscaler must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the autoscaler to return. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to return.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to return. */
      public Get setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates an autoscaler in the specified project using the data included in the request.
     *
     * Create a request for the method "regionAutoscalers.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates an autoscaler in the specified project using the data included in the request.
       *
       * Create a request for the method "regionAutoscalers.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of autoscalers contained within the specified region.
     *
     * Create a request for the method "regionAutoscalers.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RegionAutoscalerList> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of autoscalers contained within the specified region.
       *
       * Create a request for the method "regionAutoscalers.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RegionAutoscalerList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an autoscaler in the specified project using the data included in the request. This
     * method supports PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "regionAutoscalers.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Patch result = new Patch(project, region, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates an autoscaler in the specified project using the data included in the request. This
       * method supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "regionAutoscalers.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Patch setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the autoscaler to patch. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to patch.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to patch. */
      public Patch setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates an autoscaler in the specified project using the data included in the request.
     *
     * Create a request for the method "regionAutoscalers.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Autoscaler}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) throws java.io.IOException {
      Update result = new Update(project, region, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/autoscalers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern AUTOSCALER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates an autoscaler in the specified project using the data included in the request.
       *
       * Create a request for the method "regionAutoscalers.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Autoscaler}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Autoscaler content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Update setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the autoscaler to update. */
      @com.google.api.client.util.Key
      private java.lang.String autoscaler;

      /** Name of the autoscaler to update.
       */
      public java.lang.String getAutoscaler() {
        return autoscaler;
      }

      /** Name of the autoscaler to update. */
      public Update setAutoscaler(java.lang.String autoscaler) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(AUTOSCALER_PATTERN.matcher(autoscaler).matches(),
              "Parameter autoscaler must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.autoscaler = autoscaler;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionBackendServices collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionBackendServices.List request = compute.regionBackendServices().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionBackendServices regionBackendServices() {
    return new RegionBackendServices();
  }

  /**
   * The "regionBackendServices" collection of methods.
   */
  public class RegionBackendServices {

    /**
     * Deletes the specified regional BackendService resource.
     *
     * Create a request for the method "regionBackendServices.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param backendService Name of the BackendService resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String backendService) throws java.io.IOException {
      Delete result = new Delete(project, region, backendService);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified regional BackendService resource.
       *
       * Create a request for the method "regionBackendServices.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param backendService Name of the BackendService resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String backendService) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the BackendService resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to delete.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to delete. */
      public Delete setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified regional BackendService resource.
     *
     * Create a request for the method "regionBackendServices.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param backendService Name of the BackendService resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String backendService) throws java.io.IOException {
      Get result = new Get(project, region, backendService);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.BackendService> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified regional BackendService resource.
       *
       * Create a request for the method "regionBackendServices.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param backendService Name of the BackendService resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String backendService) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendService.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the BackendService resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to return.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to return. */
      public Get setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets the most recent health check results for this regional BackendService.
     *
     * Create a request for the method "regionBackendServices.getHealth".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation.
     *
     * @param project
     * @param region Name of the region scoping this request.
     * @param backendService Name of the BackendService resource for which to get health.
     * @param content the {@link com.google.api.services.compute.model.ResourceGroupReference}
     * @return the request
     */
    public GetHealth getHealth(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.ResourceGroupReference content) throws java.io.IOException {
      GetHealth result = new GetHealth(project, region, backendService, content);
      initialize(result);
      return result;
    }

    public class GetHealth extends ComputeRequest<com.google.api.services.compute.model.BackendServiceGroupHealth> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices/{backendService}/getHealth";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Gets the most recent health check results for this regional BackendService.
       *
       * Create a request for the method "regionBackendServices.getHealth".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetHealth#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project
       * @param region Name of the region scoping this request.
       * @param backendService Name of the BackendService resource for which to get health.
       * @param content the {@link com.google.api.services.compute.model.ResourceGroupReference}
       * @since 1.13
       */
      protected GetHealth(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.ResourceGroupReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.BackendServiceGroupHealth.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public GetHealth setAlt(java.lang.String alt) {
        return (GetHealth) super.setAlt(alt);
      }

      @Override
      public GetHealth setFields(java.lang.String fields) {
        return (GetHealth) super.setFields(fields);
      }

      @Override
      public GetHealth setKey(java.lang.String key) {
        return (GetHealth) super.setKey(key);
      }

      @Override
      public GetHealth setOauthToken(java.lang.String oauthToken) {
        return (GetHealth) super.setOauthToken(oauthToken);
      }

      @Override
      public GetHealth setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetHealth) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetHealth setQuotaUser(java.lang.String quotaUser) {
        return (GetHealth) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetHealth setUserIp(java.lang.String userIp) {
        return (GetHealth) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String project;

      /**

       */
      public java.lang.String getProject() {
        return project;
      }

      public GetHealth setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public GetHealth setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the BackendService resource for which to get health. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource for which to get health.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource for which to get health. */
      public GetHealth setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      @Override
      public GetHealth set(String parameterName, Object value) {
        return (GetHealth) super.set(parameterName, value);
      }
    }
    /**
     * Creates a regional BackendService resource in the specified project using the data included in
     * the request. There are several restrictions and guidelines to keep in mind when creating a
     * regional backend service. Read  Restrictions and Guidelines for more information.
     *
     * Create a request for the method "regionBackendServices.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a regional BackendService resource in the specified project using the data included in
       * the request. There are several restrictions and guidelines to keep in mind when creating a
       * regional backend service. Read  Restrictions and Guidelines for more information.
       *
       * Create a request for the method "regionBackendServices.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of regional BackendService resources available to the specified project in the
     * given region.
     *
     * Create a request for the method "regionBackendServices.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.BackendServiceList> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the list of regional BackendService resources available to the specified project in
       * the given region.
       *
       * Create a request for the method "regionBackendServices.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.BackendServiceList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified regional BackendService resource with the data included in the request.
     * There are several restrictions and guidelines to keep in mind when updating a backend service.
     * Read  Restrictions and Guidelines for more information. This method supports PATCH semantics and
     * uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "regionBackendServices.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param backendService Name of the BackendService resource to patch.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Patch result = new Patch(project, region, backendService, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified regional BackendService resource with the data included in the request.
       * There are several restrictions and guidelines to keep in mind when updating a backend service.
       * Read  Restrictions and Guidelines for more information. This method supports PATCH semantics
       * and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "regionBackendServices.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param backendService Name of the BackendService resource to patch.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Patch setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the BackendService resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to patch.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to patch. */
      public Patch setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified regional BackendService resource with the data included in the request.
     * There are several restrictions and guidelines to keep in mind when updating a backend service.
     * Read  Restrictions and Guidelines for more information.
     *
     * Create a request for the method "regionBackendServices.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param backendService Name of the BackendService resource to update.
     * @param content the {@link com.google.api.services.compute.model.BackendService}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) throws java.io.IOException {
      Update result = new Update(project, region, backendService, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/backendServices/{backendService}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern BACKEND_SERVICE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified regional BackendService resource with the data included in the request.
       * There are several restrictions and guidelines to keep in mind when updating a backend service.
       * Read  Restrictions and Guidelines for more information.
       *
       * Create a request for the method "regionBackendServices.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param backendService Name of the BackendService resource to update.
       * @param content the {@link com.google.api.services.compute.model.BackendService}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String region, java.lang.String backendService, com.google.api.services.compute.model.BackendService content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = com.google.api.client.util.Preconditions.checkNotNull(backendService, "Required parameter backendService must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Update setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the BackendService resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String backendService;

      /** Name of the BackendService resource to update.
       */
      public java.lang.String getBackendService() {
        return backendService;
      }

      /** Name of the BackendService resource to update. */
      public Update setBackendService(java.lang.String backendService) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(BACKEND_SERVICE_PATTERN.matcher(backendService).matches(),
              "Parameter backendService must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.backendService = backendService;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionCommitments collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionCommitments.List request = compute.regionCommitments().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionCommitments regionCommitments() {
    return new RegionCommitments();
  }

  /**
   * The "regionCommitments" collection of methods.
   */
  public class RegionCommitments {

    /**
     * Retrieves an aggregated list of commitments.
     *
     * Create a request for the method "regionCommitments.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.CommitmentAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/commitments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of commitments.
       *
       * Create a request for the method "regionCommitments.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.CommitmentAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified commitment resource. Gets a list of available commitments by making a
     * list() request.
     *
     * Create a request for the method "regionCommitments.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param commitment Name of the commitment to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String commitment) throws java.io.IOException {
      Get result = new Get(project, region, commitment);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Commitment> {

      private static final String REST_PATH = "{project}/regions/{region}/commitments/{commitment}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern COMMITMENT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified commitment resource. Gets a list of available commitments by making a
       * list() request.
       *
       * Create a request for the method "regionCommitments.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param commitment Name of the commitment to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String commitment) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Commitment.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.commitment = com.google.api.client.util.Preconditions.checkNotNull(commitment, "Required parameter commitment must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(COMMITMENT_PATTERN.matcher(commitment).matches(),
              "Parameter commitment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the commitment to return. */
      @com.google.api.client.util.Key
      private java.lang.String commitment;

      /** Name of the commitment to return.
       */
      public java.lang.String getCommitment() {
        return commitment;
      }

      /** Name of the commitment to return. */
      public Get setCommitment(java.lang.String commitment) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(COMMITMENT_PATTERN.matcher(commitment).matches(),
              "Parameter commitment must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.commitment = commitment;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a commitment in the specified project using the data included in the request.
     *
     * Create a request for the method "regionCommitments.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.Commitment}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Commitment content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/commitments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a commitment in the specified project using the data included in the request.
       *
       * Create a request for the method "regionCommitments.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.Commitment}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Commitment content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of commitments contained within the specified region.
     *
     * Create a request for the method "regionCommitments.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.CommitmentList> {

      private static final String REST_PATH = "{project}/regions/{region}/commitments";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of commitments contained within the specified region.
       *
       * Create a request for the method "regionCommitments.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.CommitmentList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionDiskTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionDiskTypes.List request = compute.regionDiskTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionDiskTypes regionDiskTypes() {
    return new RegionDiskTypes();
  }

  /**
   * The "regionDiskTypes" collection of methods.
   */
  public class RegionDiskTypes {

    /**
     * Returns the specified regional disk type. Gets a list of available disk types by making a list()
     * request.
     *
     * Create a request for the method "regionDiskTypes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @param diskType Name of the disk type to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String diskType) throws java.io.IOException {
      Get result = new Get(project, region, diskType);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.DiskType> {

      private static final String REST_PATH = "{project}/regions/{region}/diskTypes/{diskType}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_TYPE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified regional disk type. Gets a list of available disk types by making a
       * list() request.
       *
       * Create a request for the method "regionDiskTypes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @param diskType Name of the disk type to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String diskType) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskType.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.diskType = com.google.api.client.util.Preconditions.checkNotNull(diskType, "Required parameter diskType must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_TYPE_PATTERN.matcher(diskType).matches(),
              "Parameter diskType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the disk type to return. */
      @com.google.api.client.util.Key
      private java.lang.String diskType;

      /** Name of the disk type to return.
       */
      public java.lang.String getDiskType() {
        return diskType;
      }

      /** Name of the disk type to return. */
      public Get setDiskType(java.lang.String diskType) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_TYPE_PATTERN.matcher(diskType).matches(),
              "Parameter diskType must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.diskType = diskType;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of regional disk types available to the specified project.
     *
     * Create a request for the method "regionDiskTypes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RegionDiskTypeList> {

      private static final String REST_PATH = "{project}/regions/{region}/diskTypes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of regional disk types available to the specified project.
       *
       * Create a request for the method "regionDiskTypes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RegionDiskTypeList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionDisks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionDisks.List request = compute.regionDisks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionDisks regionDisks() {
    return new RegionDisks();
  }

  /**
   * The "regionDisks" collection of methods.
   */
  public class RegionDisks {

    /**
     * Creates a snapshot of this regional disk.
     *
     * Create a request for the method "regionDisks.createSnapshot".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link CreateSnapshot#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param disk Name of the regional persistent disk to snapshot.
     * @param content the {@link com.google.api.services.compute.model.Snapshot}
     * @return the request
     */
    public CreateSnapshot createSnapshot(java.lang.String project, java.lang.String region, java.lang.String disk, com.google.api.services.compute.model.Snapshot content) throws java.io.IOException {
      CreateSnapshot result = new CreateSnapshot(project, region, disk, content);
      initialize(result);
      return result;
    }

    public class CreateSnapshot extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{disk}/createSnapshot";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a snapshot of this regional disk.
       *
       * Create a request for the method "regionDisks.createSnapshot".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link CreateSnapshot#execute()} method to invoke the remote operation.
       * <p> {@link CreateSnapshot#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param disk Name of the regional persistent disk to snapshot.
       * @param content the {@link com.google.api.services.compute.model.Snapshot}
       * @since 1.13
       */
      protected CreateSnapshot(java.lang.String project, java.lang.String region, java.lang.String disk, com.google.api.services.compute.model.Snapshot content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public CreateSnapshot setAlt(java.lang.String alt) {
        return (CreateSnapshot) super.setAlt(alt);
      }

      @Override
      public CreateSnapshot setFields(java.lang.String fields) {
        return (CreateSnapshot) super.setFields(fields);
      }

      @Override
      public CreateSnapshot setKey(java.lang.String key) {
        return (CreateSnapshot) super.setKey(key);
      }

      @Override
      public CreateSnapshot setOauthToken(java.lang.String oauthToken) {
        return (CreateSnapshot) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateSnapshot setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateSnapshot) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateSnapshot setQuotaUser(java.lang.String quotaUser) {
        return (CreateSnapshot) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateSnapshot setUserIp(java.lang.String userIp) {
        return (CreateSnapshot) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public CreateSnapshot setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public CreateSnapshot setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the regional persistent disk to snapshot. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the regional persistent disk to snapshot.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the regional persistent disk to snapshot. */
      public CreateSnapshot setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = disk;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public CreateSnapshot setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public CreateSnapshot set(String parameterName, Object value) {
        return (CreateSnapshot) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified regional persistent disk. Deleting a regional disk removes all the replicas
     * of its data permanently and is irreversible. However, deleting a disk does not delete any
     * snapshots previously made from the disk. You must separately delete snapshots.
     *
     * Create a request for the method "regionDisks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param disk Name of the regional persistent disk to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String disk) throws java.io.IOException {
      Delete result = new Delete(project, region, disk);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{disk}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified regional persistent disk. Deleting a regional disk removes all the
       * replicas of its data permanently and is irreversible. However, deleting a disk does not delete
       * any snapshots previously made from the disk. You must separately delete snapshots.
       *
       * Create a request for the method "regionDisks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param disk Name of the regional persistent disk to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String disk) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the regional persistent disk to delete. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the regional persistent disk to delete.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the regional persistent disk to delete. */
      public Delete setDisk(java.lang.String disk) {
        this.disk = disk;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns a specified regional persistent disk.
     *
     * Create a request for the method "regionDisks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param disk Name of the regional persistent disk to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String disk) throws java.io.IOException {
      Get result = new Get(project, region, disk);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Disk> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{disk}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns a specified regional persistent disk.
       *
       * Create a request for the method "regionDisks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param disk Name of the regional persistent disk to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String disk) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Disk.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the regional persistent disk to return. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the regional persistent disk to return.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the regional persistent disk to return. */
      public Get setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = disk;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a persistent regional disk in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "regionDisks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.Disk}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Disk content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/disks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a persistent regional disk in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "regionDisks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.Disk}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Disk content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      /** Optional. Source image to restore onto a disk. */
      @com.google.api.client.util.Key
      private java.lang.String sourceImage;

      /** Optional. Source image to restore onto a disk.
       */
      public java.lang.String getSourceImage() {
        return sourceImage;
      }

      /** Optional. Source image to restore onto a disk. */
      public Insert setSourceImage(java.lang.String sourceImage) {
        this.sourceImage = sourceImage;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of persistent disks contained within the specified region.
     *
     * Create a request for the method "regionDisks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.DiskList> {

      private static final String REST_PATH = "{project}/regions/{region}/disks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the list of persistent disks contained within the specified region.
       *
       * Create a request for the method "regionDisks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.DiskList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Resizes the specified regional persistent disk.
     *
     * Create a request for the method "regionDisks.resize".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Resize#execute()} method to invoke the remote operation.
     *
     * @param project The project ID for this request.
     * @param region Name of the region for this request.
     * @param disk Name of the regional persistent disk.
     * @param content the {@link com.google.api.services.compute.model.RegionDisksResizeRequest}
     * @return the request
     */
    public Resize resize(java.lang.String project, java.lang.String region, java.lang.String disk, com.google.api.services.compute.model.RegionDisksResizeRequest content) throws java.io.IOException {
      Resize result = new Resize(project, region, disk, content);
      initialize(result);
      return result;
    }

    public class Resize extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{disk}/resize";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern DISK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Resizes the specified regional persistent disk.
       *
       * Create a request for the method "regionDisks.resize".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Resize#execute()} method to invoke the remote operation. <p> {@link
       * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project The project ID for this request.
       * @param region Name of the region for this request.
       * @param disk Name of the regional persistent disk.
       * @param content the {@link com.google.api.services.compute.model.RegionDisksResizeRequest}
       * @since 1.13
       */
      protected Resize(java.lang.String project, java.lang.String region, java.lang.String disk, com.google.api.services.compute.model.RegionDisksResizeRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = com.google.api.client.util.Preconditions.checkNotNull(disk, "Required parameter disk must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Resize setAlt(java.lang.String alt) {
        return (Resize) super.setAlt(alt);
      }

      @Override
      public Resize setFields(java.lang.String fields) {
        return (Resize) super.setFields(fields);
      }

      @Override
      public Resize setKey(java.lang.String key) {
        return (Resize) super.setKey(key);
      }

      @Override
      public Resize setOauthToken(java.lang.String oauthToken) {
        return (Resize) super.setOauthToken(oauthToken);
      }

      @Override
      public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resize) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resize setQuotaUser(java.lang.String quotaUser) {
        return (Resize) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resize setUserIp(java.lang.String userIp) {
        return (Resize) super.setUserIp(userIp);
      }

      /** The project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** The project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** The project ID for this request. */
      public Resize setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Resize setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the regional persistent disk. */
      @com.google.api.client.util.Key
      private java.lang.String disk;

      /** Name of the regional persistent disk.
       */
      public java.lang.String getDisk() {
        return disk;
      }

      /** Name of the regional persistent disk. */
      public Resize setDisk(java.lang.String disk) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(DISK_PATTERN.matcher(disk).matches(),
              "Parameter disk must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.disk = disk;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Resize setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Resize set(String parameterName, Object value) {
        return (Resize) super.set(parameterName, value);
      }
    }
    /**
     * Sets the labels on the target regional disk.
     *
     * Create a request for the method "regionDisks.setLabels".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The region for this request.
     * @param resource Name of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.RegionSetLabelsRequest}
     * @return the request
     */
    public SetLabels setLabels(java.lang.String project, java.lang.String region, java.lang.String resource, com.google.api.services.compute.model.RegionSetLabelsRequest content) throws java.io.IOException {
      SetLabels result = new SetLabels(project, region, resource, content);
      initialize(result);
      return result;
    }

    public class SetLabels extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{resource}/setLabels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Sets the labels on the target regional disk.
       *
       * Create a request for the method "regionDisks.setLabels".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The region for this request.
       * @param resource Name of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.RegionSetLabelsRequest}
       * @since 1.13
       */
      protected SetLabels(java.lang.String project, java.lang.String region, java.lang.String resource, com.google.api.services.compute.model.RegionSetLabelsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetLabels setAlt(java.lang.String alt) {
        return (SetLabels) super.setAlt(alt);
      }

      @Override
      public SetLabels setFields(java.lang.String fields) {
        return (SetLabels) super.setFields(fields);
      }

      @Override
      public SetLabels setKey(java.lang.String key) {
        return (SetLabels) super.setKey(key);
      }

      @Override
      public SetLabels setOauthToken(java.lang.String oauthToken) {
        return (SetLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public SetLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetLabels setQuotaUser(java.lang.String quotaUser) {
        return (SetLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetLabels setUserIp(java.lang.String userIp) {
        return (SetLabels) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetLabels setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The region for this request. */
      public SetLabels setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name of the resource for this request. */
      public SetLabels setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = resource;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetLabels setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetLabels set(String parameterName, Object value) {
        return (SetLabels) super.set(parameterName, value);
      }
    }
    /**
     * Returns permissions that a caller has on the specified resource.
     *
     * Create a request for the method "regionDisks.testIamPermissions".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region The name of the region for this request.
     * @param resource Name or id of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
     * @return the request
     */
    public TestIamPermissions testIamPermissions(java.lang.String project, java.lang.String region, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) throws java.io.IOException {
      TestIamPermissions result = new TestIamPermissions(project, region, resource, content);
      initialize(result);
      return result;
    }

    public class TestIamPermissions extends ComputeRequest<com.google.api.services.compute.model.TestPermissionsResponse> {

      private static final String REST_PATH = "{project}/regions/{region}/disks/{resource}/testIamPermissions";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns permissions that a caller has on the specified resource.
       *
       * Create a request for the method "regionDisks.testIamPermissions".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
       * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region The name of the region for this request.
       * @param resource Name or id of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.TestPermissionsRequest}
       * @since 1.13
       */
      protected TestIamPermissions(java.lang.String project, java.lang.String region, java.lang.String resource, com.google.api.services.compute.model.TestPermissionsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.TestPermissionsResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public TestIamPermissions setAlt(java.lang.String alt) {
        return (TestIamPermissions) super.setAlt(alt);
      }

      @Override
      public TestIamPermissions setFields(java.lang.String fields) {
        return (TestIamPermissions) super.setFields(fields);
      }

      @Override
      public TestIamPermissions setKey(java.lang.String key) {
        return (TestIamPermissions) super.setKey(key);
      }

      @Override
      public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
        return (TestIamPermissions) super.setOauthToken(oauthToken);
      }

      @Override
      public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
        return (TestIamPermissions) super.setQuotaUser(quotaUser);
      }

      @Override
      public TestIamPermissions setUserIp(java.lang.String userIp) {
        return (TestIamPermissions) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public TestIamPermissions setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** The name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** The name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** The name of the region for this request. */
      public TestIamPermissions setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name or id of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name or id of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name or id of the resource for this request. */
      public TestIamPermissions setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public TestIamPermissions set(String parameterName, Object value) {
        return (TestIamPermissions) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionInstanceGroupManagers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionInstanceGroupManagers.List request = compute.regionInstanceGroupManagers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionInstanceGroupManagers regionInstanceGroupManagers() {
    return new RegionInstanceGroupManagers();
  }

  /**
   * The "regionInstanceGroupManagers" collection of methods.
   */
  public class RegionInstanceGroupManagers {

    /**
     * Flags the specified instances to be immediately removed from the managed instance group.
     * Abandoning an instance does not delete the instance, but it does remove the instance from any
     * target pools that are applied by the managed instance group. This method reduces the targetSize
     * of the managed instance group by the number of instances that you abandon. This operation is
     * marked as DONE when the action is scheduled even if the instances have not yet been removed from
     * the group. You must separately verify the status of the abandoning action with the
     * listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "regionInstanceGroupManagers.abandonInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AbandonInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersAbandonInstancesRequest}
     * @return the request
     */
    public AbandonInstances abandonInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersAbandonInstancesRequest content) throws java.io.IOException {
      AbandonInstances result = new AbandonInstances(project, region, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class AbandonInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances to be immediately removed from the managed instance group.
       * Abandoning an instance does not delete the instance, but it does remove the instance from any
       * target pools that are applied by the managed instance group. This method reduces the targetSize
       * of the managed instance group by the number of instances that you abandon. This operation is
       * marked as DONE when the action is scheduled even if the instances have not yet been removed
       * from the group. You must separately verify the status of the abandoning action with the
       * listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "regionInstanceGroupManagers.abandonInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AbandonInstances#execute()} method to invoke the remote operation.
       * <p> {@link AbandonInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersAbandonInstancesRequest}
       * @since 1.13
       */
      protected AbandonInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersAbandonInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public AbandonInstances setAlt(java.lang.String alt) {
        return (AbandonInstances) super.setAlt(alt);
      }

      @Override
      public AbandonInstances setFields(java.lang.String fields) {
        return (AbandonInstances) super.setFields(fields);
      }

      @Override
      public AbandonInstances setKey(java.lang.String key) {
        return (AbandonInstances) super.setKey(key);
      }

      @Override
      public AbandonInstances setOauthToken(java.lang.String oauthToken) {
        return (AbandonInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public AbandonInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AbandonInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AbandonInstances setQuotaUser(java.lang.String quotaUser) {
        return (AbandonInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public AbandonInstances setUserIp(java.lang.String userIp) {
        return (AbandonInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AbandonInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public AbandonInstances setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group. */
      public AbandonInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AbandonInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AbandonInstances set(String parameterName, Object value) {
        return (AbandonInstances) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified managed instance group and all of the instances in that group.
     *
     * Create a request for the method "regionInstanceGroupManagers.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) throws java.io.IOException {
      Delete result = new Delete(project, region, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes the specified managed instance group and all of the instances in that group.
       *
       * Create a request for the method "regionInstanceGroupManagers.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group to delete. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group to delete.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group to delete. */
      public Delete setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Flags the specified instances in the managed instance group to be immediately deleted. The
     * instances are also removed from any target pools of which they were a member. This method reduces
     * the targetSize of the managed instance group by the number of instances that you delete. The
     * deleteInstances operation is marked DONE if the deleteInstances request is successful. The
     * underlying actions take additional time. You must separately verify the status of the deleting
     * action with the listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "regionInstanceGroupManagers.deleteInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link DeleteInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersDeleteInstancesRequest}
     * @return the request
     */
    public DeleteInstances deleteInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersDeleteInstancesRequest content) throws java.io.IOException {
      DeleteInstances result = new DeleteInstances(project, region, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class DeleteInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances in the managed instance group to be immediately deleted. The
       * instances are also removed from any target pools of which they were a member. This method
       * reduces the targetSize of the managed instance group by the number of instances that you
       * delete. The deleteInstances operation is marked DONE if the deleteInstances request is
       * successful. The underlying actions take additional time. You must separately verify the status
       * of the deleting action with the listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "regionInstanceGroupManagers.deleteInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link DeleteInstances#execute()} method to invoke the remote operation.
       * <p> {@link DeleteInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersDeleteInstancesRequest}
       * @since 1.13
       */
      protected DeleteInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersDeleteInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public DeleteInstances setAlt(java.lang.String alt) {
        return (DeleteInstances) super.setAlt(alt);
      }

      @Override
      public DeleteInstances setFields(java.lang.String fields) {
        return (DeleteInstances) super.setFields(fields);
      }

      @Override
      public DeleteInstances setKey(java.lang.String key) {
        return (DeleteInstances) super.setKey(key);
      }

      @Override
      public DeleteInstances setOauthToken(java.lang.String oauthToken) {
        return (DeleteInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteInstances setQuotaUser(java.lang.String quotaUser) {
        return (DeleteInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteInstances setUserIp(java.lang.String userIp) {
        return (DeleteInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public DeleteInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public DeleteInstances setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group. */
      public DeleteInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public DeleteInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public DeleteInstances set(String parameterName, Object value) {
        return (DeleteInstances) super.set(parameterName, value);
      }
    }
    /**
     * Returns all of the details about the specified managed instance group.
     *
     * Create a request for the method "regionInstanceGroupManagers.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) throws java.io.IOException {
      Get result = new Get(project, region, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InstanceGroupManager> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns all of the details about the specified managed instance group.
       *
       * Create a request for the method "regionInstanceGroupManagers.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroupManager.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group to return. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group to return.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group to return. */
      public Get setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a managed instance group using the information that you specify in the request. After the
     * group is created, instances in the group are created using the specified instance template. This
     * operation is marked as DONE when the group is created even if the instances in the group have not
     * yet been created. You must separately verify the status of the individual instances with the
     * listmanagedinstances method.
     *
     * A regional managed instance group can contain up to 2000 instances.
     *
     * Create a request for the method "regionInstanceGroupManagers.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.InstanceGroupManager}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.InstanceGroupManager content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a managed instance group using the information that you specify in the request. After
       * the group is created, instances in the group are created using the specified instance template.
       * This operation is marked as DONE when the group is created even if the instances in the group
       * have not yet been created. You must separately verify the status of the individual instances
       * with the listmanagedinstances method.
       *
       * A regional managed instance group can contain up to 2000 instances.
       *
       * Create a request for the method "regionInstanceGroupManagers.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.InstanceGroupManager}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.InstanceGroupManager content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of managed instance groups that are contained within the specified region.
     *
     * Create a request for the method "regionInstanceGroupManagers.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RegionInstanceGroupManagerList> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of managed instance groups that are contained within the specified region.
       *
       * Create a request for the method "regionInstanceGroupManagers.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RegionInstanceGroupManagerList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists the instances in the managed instance group and instances that are scheduled to be created.
     * The list includes any current actions that the group has scheduled for its instances.
     *
     * Create a request for the method "regionInstanceGroupManagers.listManagedInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListManagedInstances#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager The name of the managed instance group.
     * @return the request
     */
    public ListManagedInstances listManagedInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) throws java.io.IOException {
      ListManagedInstances result = new ListManagedInstances(project, region, instanceGroupManager);
      initialize(result);
      return result;
    }

    public class ListManagedInstances extends ComputeRequest<com.google.api.services.compute.model.RegionInstanceGroupManagersListInstancesResponse> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists the instances in the managed instance group and instances that are scheduled to be
       * created. The list includes any current actions that the group has scheduled for its instances.
       *
       * Create a request for the method "regionInstanceGroupManagers.listManagedInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListManagedInstances#execute()} method to invoke the remote
       * operation. <p> {@link ListManagedInstances#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager The name of the managed instance group.
       * @since 1.13
       */
      protected ListManagedInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.RegionInstanceGroupManagersListInstancesResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public ListManagedInstances setAlt(java.lang.String alt) {
        return (ListManagedInstances) super.setAlt(alt);
      }

      @Override
      public ListManagedInstances setFields(java.lang.String fields) {
        return (ListManagedInstances) super.setFields(fields);
      }

      @Override
      public ListManagedInstances setKey(java.lang.String key) {
        return (ListManagedInstances) super.setKey(key);
      }

      @Override
      public ListManagedInstances setOauthToken(java.lang.String oauthToken) {
        return (ListManagedInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public ListManagedInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListManagedInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListManagedInstances setQuotaUser(java.lang.String quotaUser) {
        return (ListManagedInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListManagedInstances setUserIp(java.lang.String userIp) {
        return (ListManagedInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListManagedInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public ListManagedInstances setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public ListManagedInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListManagedInstances setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListManagedInstances setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key("order_by")
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListManagedInstances setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListManagedInstances setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListManagedInstances set(String parameterName, Object value) {
        return (ListManagedInstances) super.set(parameterName, value);
      }
    }
    /**
     * Flags the specified instances in the managed instance group to be immediately recreated. The
     * instances are deleted and recreated using the current instance template for the managed instance
     * group. This operation is marked as DONE when the flag is set even if the instances have not yet
     * been recreated. You must separately verify the status of the recreating action with the
     * listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * You can specify a maximum of 1000 instances with this method per request.
     *
     * Create a request for the method "regionInstanceGroupManagers.recreateInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RecreateInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersRecreateRequest}
     * @return the request
     */
    public RecreateInstances recreateInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersRecreateRequest content) throws java.io.IOException {
      RecreateInstances result = new RecreateInstances(project, region, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class RecreateInstances extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Flags the specified instances in the managed instance group to be immediately recreated. The
       * instances are deleted and recreated using the current instance template for the managed
       * instance group. This operation is marked as DONE when the flag is set even if the instances
       * have not yet been recreated. You must separately verify the status of the recreating action
       * with the listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * You can specify a maximum of 1000 instances with this method per request.
       *
       * Create a request for the method "regionInstanceGroupManagers.recreateInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RecreateInstances#execute()} method to invoke the remote operation.
       * <p> {@link RecreateInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersRecreateRequest}
       * @since 1.13
       */
      protected RecreateInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersRecreateRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public RecreateInstances setAlt(java.lang.String alt) {
        return (RecreateInstances) super.setAlt(alt);
      }

      @Override
      public RecreateInstances setFields(java.lang.String fields) {
        return (RecreateInstances) super.setFields(fields);
      }

      @Override
      public RecreateInstances setKey(java.lang.String key) {
        return (RecreateInstances) super.setKey(key);
      }

      @Override
      public RecreateInstances setOauthToken(java.lang.String oauthToken) {
        return (RecreateInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public RecreateInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RecreateInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RecreateInstances setQuotaUser(java.lang.String quotaUser) {
        return (RecreateInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public RecreateInstances setUserIp(java.lang.String userIp) {
        return (RecreateInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RecreateInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public RecreateInstances setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group. */
      public RecreateInstances setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RecreateInstances setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RecreateInstances set(String parameterName, Object value) {
        return (RecreateInstances) super.set(parameterName, value);
      }
    }
    /**
     * Changes the intended size of the managed instance group. If you increase the size, the group
     * creates new instances using the current instance template. If you decrease the size, the group
     * deletes one or more instances.
     *
     * The resize operation is marked DONE if the resize request is successful. The underlying actions
     * take additional time. You must separately verify the status of the creating or deleting actions
     * with the listmanagedinstances method.
     *
     * If the group is part of a backend service that has enabled connection draining, it can take up to
     * 60 seconds after the connection draining duration has elapsed before the VM instance is removed
     * or deleted.
     *
     * Create a request for the method "regionInstanceGroupManagers.resize".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Resize#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group.
     * @param size Number of instances that should exist in this instance group manager.
    [minimum: 0]
     * @return the request
     */
    public Resize resize(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, java.lang.Integer size) throws java.io.IOException {
      Resize result = new Resize(project, region, instanceGroupManager, size);
      initialize(result);
      return result;
    }

    public class Resize extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Changes the intended size of the managed instance group. If you increase the size, the group
       * creates new instances using the current instance template. If you decrease the size, the group
       * deletes one or more instances.
       *
       * The resize operation is marked DONE if the resize request is successful. The underlying actions
       * take additional time. You must separately verify the status of the creating or deleting actions
       * with the listmanagedinstances method.
       *
       * If the group is part of a backend service that has enabled connection draining, it can take up
       * to 60 seconds after the connection draining duration has elapsed before the VM instance is
       * removed or deleted.
       *
       * Create a request for the method "regionInstanceGroupManagers.resize".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Resize#execute()} method to invoke the remote operation. <p> {@link
       * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group.
       * @param size Number of instances that should exist in this instance group manager.
    [minimum: 0]
       * @since 1.13
       */
      protected Resize(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, java.lang.Integer size) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
        this.size = com.google.api.client.util.Preconditions.checkNotNull(size, "Required parameter size must be specified.");
      }

      @Override
      public Resize setAlt(java.lang.String alt) {
        return (Resize) super.setAlt(alt);
      }

      @Override
      public Resize setFields(java.lang.String fields) {
        return (Resize) super.setFields(fields);
      }

      @Override
      public Resize setKey(java.lang.String key) {
        return (Resize) super.setKey(key);
      }

      @Override
      public Resize setOauthToken(java.lang.String oauthToken) {
        return (Resize) super.setOauthToken(oauthToken);
      }

      @Override
      public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resize) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resize setQuotaUser(java.lang.String quotaUser) {
        return (Resize) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resize setUserIp(java.lang.String userIp) {
        return (Resize) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Resize setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Resize setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group. */
      public Resize setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /** Number of instances that should exist in this instance group manager. */
      @com.google.api.client.util.Key
      private java.lang.Integer size;

      /** Number of instances that should exist in this instance group manager.

     [minimum: 0]
       */
      public java.lang.Integer getSize() {
        return size;
      }

      /** Number of instances that should exist in this instance group manager. */
      public Resize setSize(java.lang.Integer size) {
        this.size = size;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Resize setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Resize set(String parameterName, Object value) {
        return (Resize) super.set(parameterName, value);
      }
    }
    /**
     * Sets the instance template to use when creating new instances or recreating instances in this
     * group. Existing instances are not affected.
     *
     * Create a request for the method "regionInstanceGroupManagers.setInstanceTemplate".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetInstanceTemplate#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager The name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersSetTemplateRequest}
     * @return the request
     */
    public SetInstanceTemplate setInstanceTemplate(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersSetTemplateRequest content) throws java.io.IOException {
      SetInstanceTemplate result = new SetInstanceTemplate(project, region, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class SetInstanceTemplate extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the instance template to use when creating new instances or recreating instances in this
       * group. Existing instances are not affected.
       *
       * Create a request for the method "regionInstanceGroupManagers.setInstanceTemplate".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetInstanceTemplate#execute()} method to invoke the remote
       * operation. <p> {@link SetInstanceTemplate#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager The name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersSetTemplateRequest}
       * @since 1.13
       */
      protected SetInstanceTemplate(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersSetTemplateRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public SetInstanceTemplate setAlt(java.lang.String alt) {
        return (SetInstanceTemplate) super.setAlt(alt);
      }

      @Override
      public SetInstanceTemplate setFields(java.lang.String fields) {
        return (SetInstanceTemplate) super.setFields(fields);
      }

      @Override
      public SetInstanceTemplate setKey(java.lang.String key) {
        return (SetInstanceTemplate) super.setKey(key);
      }

      @Override
      public SetInstanceTemplate setOauthToken(java.lang.String oauthToken) {
        return (SetInstanceTemplate) super.setOauthToken(oauthToken);
      }

      @Override
      public SetInstanceTemplate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetInstanceTemplate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetInstanceTemplate setQuotaUser(java.lang.String quotaUser) {
        return (SetInstanceTemplate) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetInstanceTemplate setUserIp(java.lang.String userIp) {
        return (SetInstanceTemplate) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetInstanceTemplate setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetInstanceTemplate setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** The name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** The name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** The name of the managed instance group. */
      public SetInstanceTemplate setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetInstanceTemplate setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetInstanceTemplate set(String parameterName, Object value) {
        return (SetInstanceTemplate) super.set(parameterName, value);
      }
    }
    /**
     * Modifies the target pools to which all new instances in this group are assigned. Existing
     * instances in the group are not affected.
     *
     * Create a request for the method "regionInstanceGroupManagers.setTargetPools".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetTargetPools#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroupManager Name of the managed instance group.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersSetTargetPoolsRequest}
     * @return the request
     */
    public SetTargetPools setTargetPools(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersSetTargetPoolsRequest content) throws java.io.IOException {
      SetTargetPools result = new SetTargetPools(project, region, instanceGroupManager, content);
      initialize(result);
      return result;
    }

    public class SetTargetPools extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Modifies the target pools to which all new instances in this group are assigned. Existing
       * instances in the group are not affected.
       *
       * Create a request for the method "regionInstanceGroupManagers.setTargetPools".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetTargetPools#execute()} method to invoke the remote operation.
       * <p> {@link SetTargetPools#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroupManager Name of the managed instance group.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupManagersSetTargetPoolsRequest}
       * @since 1.13
       */
      protected SetTargetPools(java.lang.String project, java.lang.String region, java.lang.String instanceGroupManager, com.google.api.services.compute.model.RegionInstanceGroupManagersSetTargetPoolsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroupManager = com.google.api.client.util.Preconditions.checkNotNull(instanceGroupManager, "Required parameter instanceGroupManager must be specified.");
      }

      @Override
      public SetTargetPools setAlt(java.lang.String alt) {
        return (SetTargetPools) super.setAlt(alt);
      }

      @Override
      public SetTargetPools setFields(java.lang.String fields) {
        return (SetTargetPools) super.setFields(fields);
      }

      @Override
      public SetTargetPools setKey(java.lang.String key) {
        return (SetTargetPools) super.setKey(key);
      }

      @Override
      public SetTargetPools setOauthToken(java.lang.String oauthToken) {
        return (SetTargetPools) super.setOauthToken(oauthToken);
      }

      @Override
      public SetTargetPools setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetTargetPools) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetTargetPools setQuotaUser(java.lang.String quotaUser) {
        return (SetTargetPools) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetTargetPools setUserIp(java.lang.String userIp) {
        return (SetTargetPools) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetTargetPools setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetTargetPools setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the managed instance group. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroupManager;

      /** Name of the managed instance group.
       */
      public java.lang.String getInstanceGroupManager() {
        return instanceGroupManager;
      }

      /** Name of the managed instance group. */
      public SetTargetPools setInstanceGroupManager(java.lang.String instanceGroupManager) {
        this.instanceGroupManager = instanceGroupManager;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetTargetPools setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetTargetPools set(String parameterName, Object value) {
        return (SetTargetPools) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionInstanceGroups collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionInstanceGroups.List request = compute.regionInstanceGroups().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionInstanceGroups regionInstanceGroups() {
    return new RegionInstanceGroups();
  }

  /**
   * The "regionInstanceGroups" collection of methods.
   */
  public class RegionInstanceGroups {

    /**
     * Returns the specified instance group resource.
     *
     * Create a request for the method "regionInstanceGroups.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroup Name of the instance group resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String instanceGroup) throws java.io.IOException {
      Get result = new Get(project, region, instanceGroup);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.InstanceGroup> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroups/{instanceGroup}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns the specified instance group resource.
       *
       * Create a request for the method "regionInstanceGroups.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroup Name of the instance group resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String instanceGroup) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.InstanceGroup.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the instance group resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** Name of the instance group resource to return.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** Name of the instance group resource to return. */
      public Get setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of instance group resources contained within the specified region.
     *
     * Create a request for the method "regionInstanceGroups.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RegionInstanceGroupList> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroups";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of instance group resources contained within the specified region.
       *
       * Create a request for the method "regionInstanceGroups.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RegionInstanceGroupList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists the instances in the specified instance group and displays information about the named
     * ports. Depending on the specified options, this method can list all instances or only the
     * instances that are running.
     *
     * Create a request for the method "regionInstanceGroups.listInstances".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListInstances#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroup Name of the regional instance group for which we want to list the instances.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupsListInstancesRequest}
     * @return the request
     */
    public ListInstances listInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroup, com.google.api.services.compute.model.RegionInstanceGroupsListInstancesRequest content) throws java.io.IOException {
      ListInstances result = new ListInstances(project, region, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class ListInstances extends ComputeRequest<com.google.api.services.compute.model.RegionInstanceGroupsListInstances> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists the instances in the specified instance group and displays information about the named
       * ports. Depending on the specified options, this method can list all instances or only the
       * instances that are running.
       *
       * Create a request for the method "regionInstanceGroups.listInstances".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListInstances#execute()} method to invoke the remote operation. <p>
       * {@link ListInstances#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroup Name of the regional instance group for which we want to list the instances.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupsListInstancesRequest}
       * @since 1.13
       */
      protected ListInstances(java.lang.String project, java.lang.String region, java.lang.String instanceGroup, com.google.api.services.compute.model.RegionInstanceGroupsListInstancesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.RegionInstanceGroupsListInstances.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public ListInstances setAlt(java.lang.String alt) {
        return (ListInstances) super.setAlt(alt);
      }

      @Override
      public ListInstances setFields(java.lang.String fields) {
        return (ListInstances) super.setFields(fields);
      }

      @Override
      public ListInstances setKey(java.lang.String key) {
        return (ListInstances) super.setKey(key);
      }

      @Override
      public ListInstances setOauthToken(java.lang.String oauthToken) {
        return (ListInstances) super.setOauthToken(oauthToken);
      }

      @Override
      public ListInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListInstances) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListInstances setQuotaUser(java.lang.String quotaUser) {
        return (ListInstances) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListInstances setUserIp(java.lang.String userIp) {
        return (ListInstances) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListInstances setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public ListInstances setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** Name of the regional instance group for which we want to list the instances. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** Name of the regional instance group for which we want to list the instances.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** Name of the regional instance group for which we want to list the instances. */
      public ListInstances setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListInstances setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListInstances setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListInstances setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListInstances setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListInstances set(String parameterName, Object value) {
        return (ListInstances) super.set(parameterName, value);
      }
    }
    /**
     * Sets the named ports for the specified regional instance group.
     *
     * Create a request for the method "regionInstanceGroups.setNamedPorts".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetNamedPorts#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param instanceGroup The name of the regional instance group where the named ports are updated.
     * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupsSetNamedPortsRequest}
     * @return the request
     */
    public SetNamedPorts setNamedPorts(java.lang.String project, java.lang.String region, java.lang.String instanceGroup, com.google.api.services.compute.model.RegionInstanceGroupsSetNamedPortsRequest content) throws java.io.IOException {
      SetNamedPorts result = new SetNamedPorts(project, region, instanceGroup, content);
      initialize(result);
      return result;
    }

    public class SetNamedPorts extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the named ports for the specified regional instance group.
       *
       * Create a request for the method "regionInstanceGroups.setNamedPorts".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetNamedPorts#execute()} method to invoke the remote operation. <p>
       * {@link SetNamedPorts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param instanceGroup The name of the regional instance group where the named ports are updated.
       * @param content the {@link com.google.api.services.compute.model.RegionInstanceGroupsSetNamedPortsRequest}
       * @since 1.13
       */
      protected SetNamedPorts(java.lang.String project, java.lang.String region, java.lang.String instanceGroup, com.google.api.services.compute.model.RegionInstanceGroupsSetNamedPortsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        this.instanceGroup = com.google.api.client.util.Preconditions.checkNotNull(instanceGroup, "Required parameter instanceGroup must be specified.");
      }

      @Override
      public SetNamedPorts setAlt(java.lang.String alt) {
        return (SetNamedPorts) super.setAlt(alt);
      }

      @Override
      public SetNamedPorts setFields(java.lang.String fields) {
        return (SetNamedPorts) super.setFields(fields);
      }

      @Override
      public SetNamedPorts setKey(java.lang.String key) {
        return (SetNamedPorts) super.setKey(key);
      }

      @Override
      public SetNamedPorts setOauthToken(java.lang.String oauthToken) {
        return (SetNamedPorts) super.setOauthToken(oauthToken);
      }

      @Override
      public SetNamedPorts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetNamedPorts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetNamedPorts setQuotaUser(java.lang.String quotaUser) {
        return (SetNamedPorts) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetNamedPorts setUserIp(java.lang.String userIp) {
        return (SetNamedPorts) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetNamedPorts setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetNamedPorts setRegion(java.lang.String region) {
        this.region = region;
        return this;
      }

      /** The name of the regional instance group where the named ports are updated. */
      @com.google.api.client.util.Key
      private java.lang.String instanceGroup;

      /** The name of the regional instance group where the named ports are updated.
       */
      public java.lang.String getInstanceGroup() {
        return instanceGroup;
      }

      /** The name of the regional instance group where the named ports are updated. */
      public SetNamedPorts setInstanceGroup(java.lang.String instanceGroup) {
        this.instanceGroup = instanceGroup;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetNamedPorts setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetNamedPorts set(String parameterName, Object value) {
        return (SetNamedPorts) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the RegionOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.RegionOperations.List request = compute.regionOperations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegionOperations regionOperations() {
    return new RegionOperations();
  }

  /**
   * The "regionOperations" collection of methods.
   */
  public class RegionOperations {

    /**
     * Deletes the specified region-specific Operations resource.
     *
     * Create a request for the method "regionOperations.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param operation Name of the Operations resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String operation) throws java.io.IOException {
      Delete result = new Delete(project, region, operation);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<Void> {

      private static final String REST_PATH = "{project}/regions/{region}/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified region-specific Operations resource.
       *
       * Create a request for the method "regionOperations.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param operation Name of the Operations resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String operation) {
        super(Compute.this, "DELETE", REST_PATH, null, Void.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Operations resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to delete.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to delete. */
      public Delete setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the specified region-specific Operations resource.
     *
     * Create a request for the method "regionOperations.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param operation Name of the Operations resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String operation) throws java.io.IOException {
      Get result = new Get(project, region, operation);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the specified region-specific Operations resource.
       *
       * Create a request for the method "regionOperations.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param operation Name of the Operations resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String operation) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Operations resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to return.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to return. */
      public Get setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of Operation resources contained within the specified region.
     *
     * Create a request for the method "regionOperations.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.OperationList> {

      private static final String REST_PATH = "{project}/regions/{region}/operations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of Operation resources contained within the specified region.
       *
       * Create a request for the method "regionOperations.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.OperationList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Regions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Regions.List request = compute.regions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Regions regions() {
    return new Regions();
  }

  /**
   * The "regions" collection of methods.
   */
  public class Regions {

    /**
     * Returns the specified Region resource. Gets a list of available regions by making a list()
     * request.
     *
     * Create a request for the method "regions.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region) throws java.io.IOException {
      Get result = new Get(project, region);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Region> {

      private static final String REST_PATH = "{project}/regions/{region}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified Region resource. Gets a list of available regions by making a list()
       * request.
       *
       * Create a request for the method "regions.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Region.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region resource to return.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region resource to return. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of region resources available to the specified project.
     *
     * Create a request for the method "regions.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RegionList> {

      private static final String REST_PATH = "{project}/regions";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of region resources available to the specified project.
       *
       * Create a request for the method "regions.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RegionList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Routers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Routers.List request = compute.routers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Routers routers() {
    return new Routers();
  }

  /**
   * The "routers" collection of methods.
   */
  public class Routers {

    /**
     * Retrieves an aggregated list of routers.
     *
     * Create a request for the method "routers.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.RouterAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/routers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of routers.
       *
       * Create a request for the method "routers.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RouterAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified Router resource.
     *
     * Create a request for the method "routers.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String router) throws java.io.IOException {
      Delete result = new Delete(project, region, router);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified Router resource.
       *
       * Create a request for the method "routers.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String router) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to delete.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to delete. */
      public Delete setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified Router resource. Gets a list of available routers by making a list()
     * request.
     *
     * Create a request for the method "routers.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String router) throws java.io.IOException {
      Get result = new Get(project, region, router);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Router> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified Router resource. Gets a list of available routers by making a list()
       * request.
       *
       * Create a request for the method "routers.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String router) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Router.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to return.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to return. */
      public Get setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves runtime Nat mapping information of VM endpoints.
     *
     * Create a request for the method "routers.getNatMappingInfo".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetNatMappingInfo#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to query for Nat Mapping information of VM endpoints.
     * @return the request
     */
    public GetNatMappingInfo getNatMappingInfo(java.lang.String project, java.lang.String region, java.lang.String router) throws java.io.IOException {
      GetNatMappingInfo result = new GetNatMappingInfo(project, region, router);
      initialize(result);
      return result;
    }

    public class GetNatMappingInfo extends ComputeRequest<com.google.api.services.compute.model.VmEndpointNatMappingsList> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}/getNatMappingInfo";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves runtime Nat mapping information of VM endpoints.
       *
       * Create a request for the method "routers.getNatMappingInfo".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetNatMappingInfo#execute()} method to invoke the remote operation.
       * <p> {@link GetNatMappingInfo#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to query for Nat Mapping information of VM endpoints.
       * @since 1.13
       */
      protected GetNatMappingInfo(java.lang.String project, java.lang.String region, java.lang.String router) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.VmEndpointNatMappingsList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetNatMappingInfo setAlt(java.lang.String alt) {
        return (GetNatMappingInfo) super.setAlt(alt);
      }

      @Override
      public GetNatMappingInfo setFields(java.lang.String fields) {
        return (GetNatMappingInfo) super.setFields(fields);
      }

      @Override
      public GetNatMappingInfo setKey(java.lang.String key) {
        return (GetNatMappingInfo) super.setKey(key);
      }

      @Override
      public GetNatMappingInfo setOauthToken(java.lang.String oauthToken) {
        return (GetNatMappingInfo) super.setOauthToken(oauthToken);
      }

      @Override
      public GetNatMappingInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetNatMappingInfo) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetNatMappingInfo setQuotaUser(java.lang.String quotaUser) {
        return (GetNatMappingInfo) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetNatMappingInfo setUserIp(java.lang.String userIp) {
        return (GetNatMappingInfo) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetNatMappingInfo setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public GetNatMappingInfo setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to query for Nat Mapping information of VM endpoints. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to query for Nat Mapping information of VM endpoints.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to query for Nat Mapping information of VM endpoints. */
      public GetNatMappingInfo setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public GetNatMappingInfo setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public GetNatMappingInfo setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public GetNatMappingInfo setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public GetNatMappingInfo setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public GetNatMappingInfo set(String parameterName, Object value) {
        return (GetNatMappingInfo) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves runtime information of the specified router.
     *
     * Create a request for the method "routers.getRouterStatus".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetRouterStatus#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to query.
     * @return the request
     */
    public GetRouterStatus getRouterStatus(java.lang.String project, java.lang.String region, java.lang.String router) throws java.io.IOException {
      GetRouterStatus result = new GetRouterStatus(project, region, router);
      initialize(result);
      return result;
    }

    public class GetRouterStatus extends ComputeRequest<com.google.api.services.compute.model.RouterStatusResponse> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}/getRouterStatus";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves runtime information of the specified router.
       *
       * Create a request for the method "routers.getRouterStatus".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetRouterStatus#execute()} method to invoke the remote operation.
       * <p> {@link GetRouterStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to query.
       * @since 1.13
       */
      protected GetRouterStatus(java.lang.String project, java.lang.String region, java.lang.String router) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RouterStatusResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRouterStatus setAlt(java.lang.String alt) {
        return (GetRouterStatus) super.setAlt(alt);
      }

      @Override
      public GetRouterStatus setFields(java.lang.String fields) {
        return (GetRouterStatus) super.setFields(fields);
      }

      @Override
      public GetRouterStatus setKey(java.lang.String key) {
        return (GetRouterStatus) super.setKey(key);
      }

      @Override
      public GetRouterStatus setOauthToken(java.lang.String oauthToken) {
        return (GetRouterStatus) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRouterStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRouterStatus) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRouterStatus setQuotaUser(java.lang.String quotaUser) {
        return (GetRouterStatus) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRouterStatus setUserIp(java.lang.String userIp) {
        return (GetRouterStatus) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetRouterStatus setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public GetRouterStatus setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to query. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to query.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to query. */
      public GetRouterStatus setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      @Override
      public GetRouterStatus set(String parameterName, Object value) {
        return (GetRouterStatus) super.set(parameterName, value);
      }
    }
    /**
     * Creates a Router resource in the specified project and region using the data included in the
     * request.
     *
     * Create a request for the method "routers.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.Router}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Router content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/routers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a Router resource in the specified project and region using the data included in the
       * request.
       *
       * Create a request for the method "routers.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.Router}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Router content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of Router resources available to the specified project.
     *
     * Create a request for the method "routers.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RouterList> {

      private static final String REST_PATH = "{project}/regions/{region}/routers";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of Router resources available to the specified project.
       *
       * Create a request for the method "routers.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RouterList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified Router resource with the data included in the request. This method supports
     * PATCH semantics and uses JSON merge patch format and processing rules.
     *
     * Create a request for the method "routers.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to patch.
     * @param content the {@link com.google.api.services.compute.model.Router}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) throws java.io.IOException {
      Patch result = new Patch(project, region, router, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified Router resource with the data included in the request. This method
       * supports PATCH semantics and uses JSON merge patch format and processing rules.
       *
       * Create a request for the method "routers.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to patch.
       * @param content the {@link com.google.api.services.compute.model.Router}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Patch setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to patch.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to patch. */
      public Patch setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Preview fields auto-generated during router create and update operations. Calling this method
     * does NOT create or update the router.
     *
     * Create a request for the method "routers.preview".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Preview#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to query.
     * @param content the {@link com.google.api.services.compute.model.Router}
     * @return the request
     */
    public Preview preview(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) throws java.io.IOException {
      Preview result = new Preview(project, region, router, content);
      initialize(result);
      return result;
    }

    public class Preview extends ComputeRequest<com.google.api.services.compute.model.RoutersPreviewResponse> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}/preview";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Preview fields auto-generated during router create and update operations. Calling this method
       * does NOT create or update the router.
       *
       * Create a request for the method "routers.preview".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Preview#execute()} method to invoke the remote operation. <p>
       * {@link
       * Preview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to query.
       * @param content the {@link com.google.api.services.compute.model.Router}
       * @since 1.13
       */
      protected Preview(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.RoutersPreviewResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Preview setAlt(java.lang.String alt) {
        return (Preview) super.setAlt(alt);
      }

      @Override
      public Preview setFields(java.lang.String fields) {
        return (Preview) super.setFields(fields);
      }

      @Override
      public Preview setKey(java.lang.String key) {
        return (Preview) super.setKey(key);
      }

      @Override
      public Preview setOauthToken(java.lang.String oauthToken) {
        return (Preview) super.setOauthToken(oauthToken);
      }

      @Override
      public Preview setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Preview) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Preview setQuotaUser(java.lang.String quotaUser) {
        return (Preview) super.setQuotaUser(quotaUser);
      }

      @Override
      public Preview setUserIp(java.lang.String userIp) {
        return (Preview) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Preview setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Preview setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to query. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to query.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to query. */
      public Preview setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      @Override
      public Preview set(String parameterName, Object value) {
        return (Preview) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified Router resource with the data included in the request.
     *
     * Create a request for the method "routers.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param router Name of the Router resource to update.
     * @param content the {@link com.google.api.services.compute.model.Router}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) throws java.io.IOException {
      Update result = new Update(project, region, router, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/routers/{router}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern ROUTER_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified Router resource with the data included in the request.
       *
       * Create a request for the method "routers.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param router Name of the Router resource to update.
       * @param content the {@link com.google.api.services.compute.model.Router}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String region, java.lang.String router, com.google.api.services.compute.model.Router content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = com.google.api.client.util.Preconditions.checkNotNull(router, "Required parameter router must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Update setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Router resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String router;

      /** Name of the Router resource to update.
       */
      public java.lang.String getRouter() {
        return router;
      }

      /** Name of the Router resource to update. */
      public Update setRouter(java.lang.String router) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTER_PATTERN.matcher(router).matches(),
              "Parameter router must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.router = router;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Routes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Routes.List request = compute.routes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Routes routes() {
    return new Routes();
  }

  /**
   * The "routes" collection of methods.
   */
  public class Routes {

    /**
     * Deletes the specified Route resource.
     *
     * Create a request for the method "routes.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param route Name of the Route resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String route) throws java.io.IOException {
      Delete result = new Delete(project, route);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/routes/{route}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ROUTE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified Route resource.
       *
       * Create a request for the method "routes.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param route Name of the Route resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String route) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.route = com.google.api.client.util.Preconditions.checkNotNull(route, "Required parameter route must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTE_PATTERN.matcher(route).matches(),
              "Parameter route must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Route resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String route;

      /** Name of the Route resource to delete.
       */
      public java.lang.String getRoute() {
        return route;
      }

      /** Name of the Route resource to delete. */
      public Delete setRoute(java.lang.String route) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTE_PATTERN.matcher(route).matches(),
              "Parameter route must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.route = route;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified Route resource. Gets a list of available routes by making a list() request.
     *
     * Create a request for the method "routes.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param route Name of the Route resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String route) throws java.io.IOException {
      Get result = new Get(project, route);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Route> {

      private static final String REST_PATH = "{project}/global/routes/{route}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ROUTE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified Route resource. Gets a list of available routes by making a list()
       * request.
       *
       * Create a request for the method "routes.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param route Name of the Route resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String route) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Route.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.route = com.google.api.client.util.Preconditions.checkNotNull(route, "Required parameter route must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTE_PATTERN.matcher(route).matches(),
              "Parameter route must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Route resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String route;

      /** Name of the Route resource to return.
       */
      public java.lang.String getRoute() {
        return route;
      }

      /** Name of the Route resource to return. */
      public Get setRoute(java.lang.String route) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ROUTE_PATTERN.matcher(route).matches(),
              "Parameter route must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.route = route;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a Route resource in the specified project using the data included in the request.
     *
     * Create a request for the method "routes.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.Route}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.Route content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/routes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a Route resource in the specified project using the data included in the request.
       *
       * Create a request for the method "routes.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.Route}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.Route content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of Route resources available to the specified project.
     *
     * Create a request for the method "routes.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.RouteList> {

      private static final String REST_PATH = "{project}/global/routes";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of Route resources available to the specified project.
       *
       * Create a request for the method "routes.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.RouteList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the SecurityPolicies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.SecurityPolicies.List request = compute.securityPolicies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public SecurityPolicies securityPolicies() {
    return new SecurityPolicies();
  }

  /**
   * The "securityPolicies" collection of methods.
   */
  public class SecurityPolicies {

    /**
     * Inserts a rule into a security policy.
     *
     * Create a request for the method "securityPolicies.addRule".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddRule#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to update.
     * @param content the {@link com.google.api.services.compute.model.SecurityPolicyRule}
     * @return the request
     */
    public AddRule addRule(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicyRule content) throws java.io.IOException {
      AddRule result = new AddRule(project, securityPolicy, content);
      initialize(result);
      return result;
    }

    public class AddRule extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}/addRule";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Inserts a rule into a security policy.
       *
       * Create a request for the method "securityPolicies.addRule".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddRule#execute()} method to invoke the remote operation. <p>
       * {@link
       * AddRule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to update.
       * @param content the {@link com.google.api.services.compute.model.SecurityPolicyRule}
       * @since 1.13
       */
      protected AddRule(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicyRule content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AddRule setAlt(java.lang.String alt) {
        return (AddRule) super.setAlt(alt);
      }

      @Override
      public AddRule setFields(java.lang.String fields) {
        return (AddRule) super.setFields(fields);
      }

      @Override
      public AddRule setKey(java.lang.String key) {
        return (AddRule) super.setKey(key);
      }

      @Override
      public AddRule setOauthToken(java.lang.String oauthToken) {
        return (AddRule) super.setOauthToken(oauthToken);
      }

      @Override
      public AddRule setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddRule) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddRule setQuotaUser(java.lang.String quotaUser) {
        return (AddRule) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddRule setUserIp(java.lang.String userIp) {
        return (AddRule) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddRule setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to update. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to update.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to update. */
      public AddRule setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      @Override
      public AddRule set(String parameterName, Object value) {
        return (AddRule) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified policy.
     *
     * Create a request for the method "securityPolicies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String securityPolicy) throws java.io.IOException {
      Delete result = new Delete(project, securityPolicy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified policy.
       *
       * Create a request for the method "securityPolicies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String securityPolicy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to delete. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to delete.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to delete. */
      public Delete setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * List all of the ordered rules present in a single specified policy.
     *
     * Create a request for the method "securityPolicies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to get.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String securityPolicy) throws java.io.IOException {
      Get result = new Get(project, securityPolicy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.SecurityPolicy> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * List all of the ordered rules present in a single specified policy.
       *
       * Create a request for the method "securityPolicies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to get.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String securityPolicy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SecurityPolicy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to get. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to get.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to get. */
      public Get setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets a rule at the specified priority.
     *
     * Create a request for the method "securityPolicies.getRule".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetRule#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to which the queried rule belongs.
     * @return the request
     */
    public GetRule getRule(java.lang.String project, java.lang.String securityPolicy) throws java.io.IOException {
      GetRule result = new GetRule(project, securityPolicy);
      initialize(result);
      return result;
    }

    public class GetRule extends ComputeRequest<com.google.api.services.compute.model.SecurityPolicyRule> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}/getRule";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Gets a rule at the specified priority.
       *
       * Create a request for the method "securityPolicies.getRule".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetRule#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetRule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to which the queried rule belongs.
       * @since 1.13
       */
      protected GetRule(java.lang.String project, java.lang.String securityPolicy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SecurityPolicyRule.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRule setAlt(java.lang.String alt) {
        return (GetRule) super.setAlt(alt);
      }

      @Override
      public GetRule setFields(java.lang.String fields) {
        return (GetRule) super.setFields(fields);
      }

      @Override
      public GetRule setKey(java.lang.String key) {
        return (GetRule) super.setKey(key);
      }

      @Override
      public GetRule setOauthToken(java.lang.String oauthToken) {
        return (GetRule) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRule setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRule) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRule setQuotaUser(java.lang.String quotaUser) {
        return (GetRule) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRule setUserIp(java.lang.String userIp) {
        return (GetRule) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetRule setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to which the queried rule belongs. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to which the queried rule belongs.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to which the queried rule belongs. */
      public GetRule setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      /** The priority of the rule to get from the security policy. */
      @com.google.api.client.util.Key
      private java.lang.Integer priority;

      /** The priority of the rule to get from the security policy.
       */
      public java.lang.Integer getPriority() {
        return priority;
      }

      /** The priority of the rule to get from the security policy. */
      public GetRule setPriority(java.lang.Integer priority) {
        this.priority = priority;
        return this;
      }

      @Override
      public GetRule set(String parameterName, Object value) {
        return (GetRule) super.set(parameterName, value);
      }
    }
    /**
     * Creates a new policy in the specified project using the data included in the request.
     *
     * Create a request for the method "securityPolicies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.SecurityPolicy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.SecurityPolicy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a new policy in the specified project using the data included in the request.
       *
       * Create a request for the method "securityPolicies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.SecurityPolicy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.SecurityPolicy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * List all the policies that have been configured for the specified project.
     *
     * Create a request for the method "securityPolicies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.SecurityPolicyList> {

      private static final String REST_PATH = "{project}/global/securityPolicies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * List all the policies that have been configured for the specified project.
       *
       * Create a request for the method "securityPolicies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SecurityPolicyList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified policy with the data included in the request.
     *
     * Create a request for the method "securityPolicies.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to update.
     * @param content the {@link com.google.api.services.compute.model.SecurityPolicy}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicy content) throws java.io.IOException {
      Patch result = new Patch(project, securityPolicy, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified policy with the data included in the request.
       *
       * Create a request for the method "securityPolicies.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to update.
       * @param content the {@link com.google.api.services.compute.model.SecurityPolicy}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicy content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to update. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to update.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to update. */
      public Patch setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Patches a rule at the specified priority.
     *
     * Create a request for the method "securityPolicies.patchRule".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link PatchRule#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to update.
     * @param content the {@link com.google.api.services.compute.model.SecurityPolicyRule}
     * @return the request
     */
    public PatchRule patchRule(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicyRule content) throws java.io.IOException {
      PatchRule result = new PatchRule(project, securityPolicy, content);
      initialize(result);
      return result;
    }

    public class PatchRule extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}/patchRule";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches a rule at the specified priority.
       *
       * Create a request for the method "securityPolicies.patchRule".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link PatchRule#execute()} method to invoke the remote operation. <p>
       * {@link
       * PatchRule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to update.
       * @param content the {@link com.google.api.services.compute.model.SecurityPolicyRule}
       * @since 1.13
       */
      protected PatchRule(java.lang.String project, java.lang.String securityPolicy, com.google.api.services.compute.model.SecurityPolicyRule content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public PatchRule setAlt(java.lang.String alt) {
        return (PatchRule) super.setAlt(alt);
      }

      @Override
      public PatchRule setFields(java.lang.String fields) {
        return (PatchRule) super.setFields(fields);
      }

      @Override
      public PatchRule setKey(java.lang.String key) {
        return (PatchRule) super.setKey(key);
      }

      @Override
      public PatchRule setOauthToken(java.lang.String oauthToken) {
        return (PatchRule) super.setOauthToken(oauthToken);
      }

      @Override
      public PatchRule setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (PatchRule) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public PatchRule setQuotaUser(java.lang.String quotaUser) {
        return (PatchRule) super.setQuotaUser(quotaUser);
      }

      @Override
      public PatchRule setUserIp(java.lang.String userIp) {
        return (PatchRule) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public PatchRule setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to update. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to update.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to update. */
      public PatchRule setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      /** The priority of the rule to patch. */
      @com.google.api.client.util.Key
      private java.lang.Integer priority;

      /** The priority of the rule to patch.
       */
      public java.lang.Integer getPriority() {
        return priority;
      }

      /** The priority of the rule to patch. */
      public PatchRule setPriority(java.lang.Integer priority) {
        this.priority = priority;
        return this;
      }

      @Override
      public PatchRule set(String parameterName, Object value) {
        return (PatchRule) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a rule at the specified priority.
     *
     * Create a request for the method "securityPolicies.removeRule".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RemoveRule#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param securityPolicy Name of the security policy to update.
     * @return the request
     */
    public RemoveRule removeRule(java.lang.String project, java.lang.String securityPolicy) throws java.io.IOException {
      RemoveRule result = new RemoveRule(project, securityPolicy);
      initialize(result);
      return result;
    }

    public class RemoveRule extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/securityPolicies/{securityPolicy}/removeRule";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SECURITY_POLICY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes a rule at the specified priority.
       *
       * Create a request for the method "securityPolicies.removeRule".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RemoveRule#execute()} method to invoke the remote operation. <p>
       * {@link
       * RemoveRule#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param securityPolicy Name of the security policy to update.
       * @since 1.13
       */
      protected RemoveRule(java.lang.String project, java.lang.String securityPolicy) {
        super(Compute.this, "POST", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.securityPolicy = com.google.api.client.util.Preconditions.checkNotNull(securityPolicy, "Required parameter securityPolicy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public RemoveRule setAlt(java.lang.String alt) {
        return (RemoveRule) super.setAlt(alt);
      }

      @Override
      public RemoveRule setFields(java.lang.String fields) {
        return (RemoveRule) super.setFields(fields);
      }

      @Override
      public RemoveRule setKey(java.lang.String key) {
        return (RemoveRule) super.setKey(key);
      }

      @Override
      public RemoveRule setOauthToken(java.lang.String oauthToken) {
        return (RemoveRule) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveRule setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveRule) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveRule setQuotaUser(java.lang.String quotaUser) {
        return (RemoveRule) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveRule setUserIp(java.lang.String userIp) {
        return (RemoveRule) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RemoveRule setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the security policy to update. */
      @com.google.api.client.util.Key
      private java.lang.String securityPolicy;

      /** Name of the security policy to update.
       */
      public java.lang.String getSecurityPolicy() {
        return securityPolicy;
      }

      /** Name of the security policy to update. */
      public RemoveRule setSecurityPolicy(java.lang.String securityPolicy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SECURITY_POLICY_PATTERN.matcher(securityPolicy).matches(),
              "Parameter securityPolicy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.securityPolicy = securityPolicy;
        return this;
      }

      /** The priority of the rule to remove from the security policy. */
      @com.google.api.client.util.Key
      private java.lang.Integer priority;

      /** The priority of the rule to remove from the security policy.
       */
      public java.lang.Integer getPriority() {
        return priority;
      }

      /** The priority of the rule to remove from the security policy. */
      public RemoveRule setPriority(java.lang.Integer priority) {
        this.priority = priority;
        return this;
      }

      @Override
      public RemoveRule set(String parameterName, Object value) {
        return (RemoveRule) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Snapshots collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Snapshots.List request = compute.snapshots().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Snapshots snapshots() {
    return new Snapshots();
  }

  /**
   * The "snapshots" collection of methods.
   */
  public class Snapshots {

    /**
     * Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not
     * necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for
     * deletion is needed for subsequent snapshots, the data will be moved to the next corresponding
     * snapshot.
     *
     * For more information, see Deleting snaphots.
     *
     * Create a request for the method "snapshots.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param snapshot Name of the Snapshot resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String snapshot) throws java.io.IOException {
      Delete result = new Delete(project, snapshot);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/snapshots/{snapshot}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SNAPSHOT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not
       * necessarily delete all the data on that snapshot. If any data on the snapshot that is marked
       * for deletion is needed for subsequent snapshots, the data will be moved to the next
       * corresponding snapshot.
       *
       * For more information, see Deleting snaphots.
       *
       * Create a request for the method "snapshots.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param snapshot Name of the Snapshot resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String snapshot) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.snapshot = com.google.api.client.util.Preconditions.checkNotNull(snapshot, "Required parameter snapshot must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SNAPSHOT_PATTERN.matcher(snapshot).matches(),
              "Parameter snapshot must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Snapshot resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String snapshot;

      /** Name of the Snapshot resource to delete.
       */
      public java.lang.String getSnapshot() {
        return snapshot;
      }

      /** Name of the Snapshot resource to delete. */
      public Delete setSnapshot(java.lang.String snapshot) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SNAPSHOT_PATTERN.matcher(snapshot).matches(),
              "Parameter snapshot must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.snapshot = snapshot;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified Snapshot resource. Gets a list of available snapshots by making a list()
     * request.
     *
     * Create a request for the method "snapshots.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param snapshot Name of the Snapshot resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String snapshot) throws java.io.IOException {
      Get result = new Get(project, snapshot);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Snapshot> {

      private static final String REST_PATH = "{project}/global/snapshots/{snapshot}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SNAPSHOT_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");

      /**
       * Returns the specified Snapshot resource. Gets a list of available snapshots by making a list()
       * request.
       *
       * Create a request for the method "snapshots.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param snapshot Name of the Snapshot resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String snapshot) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Snapshot.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.snapshot = com.google.api.client.util.Preconditions.checkNotNull(snapshot, "Required parameter snapshot must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SNAPSHOT_PATTERN.matcher(snapshot).matches(),
              "Parameter snapshot must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the Snapshot resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String snapshot;

      /** Name of the Snapshot resource to return.
       */
      public java.lang.String getSnapshot() {
        return snapshot;
      }

      /** Name of the Snapshot resource to return. */
      public Get setSnapshot(java.lang.String snapshot) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SNAPSHOT_PATTERN.matcher(snapshot).matches(),
              "Parameter snapshot must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?|[1-9][0-9]{0,19}");
        }
        this.snapshot = snapshot;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of Snapshot resources contained within the specified project.
     *
     * Create a request for the method "snapshots.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.SnapshotList> {

      private static final String REST_PATH = "{project}/global/snapshots";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of Snapshot resources contained within the specified project.
       *
       * Create a request for the method "snapshots.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SnapshotList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources
     * documentation.
     *
     * Create a request for the method "snapshots.setLabels".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param resource Name of the resource for this request.
     * @param content the {@link com.google.api.services.compute.model.GlobalSetLabelsRequest}
     * @return the request
     */
    public SetLabels setLabels(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.GlobalSetLabelsRequest content) throws java.io.IOException {
      SetLabels result = new SetLabels(project, resource, content);
      initialize(result);
      return result;
    }

    public class SetLabels extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/snapshots/{resource}/setLabels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");

      /**
       * Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources
       * documentation.
       *
       * Create a request for the method "snapshots.setLabels".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param resource Name of the resource for this request.
       * @param content the {@link com.google.api.services.compute.model.GlobalSetLabelsRequest}
       * @since 1.13
       */
      protected SetLabels(java.lang.String project, java.lang.String resource, com.google.api.services.compute.model.GlobalSetLabelsRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetLabels setAlt(java.lang.String alt) {
        return (SetLabels) super.setAlt(alt);
      }

      @Override
      public SetLabels setFields(java.lang.String fields) {
        return (SetLabels) super.setFields(fields);
      }

      @Override
      public SetLabels setKey(java.lang.String key) {
        return (SetLabels) super.setKey(key);
      }

      @Override
      public SetLabels setOauthToken(java.lang.String oauthToken) {
        return (SetLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public SetLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetLabels setQuotaUser(java.lang.String quotaUser) {
        return (SetLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetLabels setUserIp(java.lang.String userIp) {
        return (SetLabels) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetLabels setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the resource for this request. */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** Name of the resource for this request.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /** Name of the resource for this request. */
      public SetLabels setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public SetLabels set(String parameterName, Object value) {
        return (SetLabels) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the SslCertificates collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.SslCertificates.List request = compute.sslCertificates().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public SslCertificates sslCertificates() {
    return new SslCertificates();
  }

  /**
   * The "sslCertificates" collection of methods.
   */
  public class SslCertificates {

    /**
     * Deletes the specified SslCertificate resource.
     *
     * Create a request for the method "sslCertificates.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param sslCertificate Name of the SslCertificate resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String sslCertificate) throws java.io.IOException {
      Delete result = new Delete(project, sslCertificate);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/sslCertificates/{sslCertificate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SSL_CERTIFICATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified SslCertificate resource.
       *
       * Create a request for the method "sslCertificates.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param sslCertificate Name of the SslCertificate resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String sslCertificate) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.sslCertificate = com.google.api.client.util.Preconditions.checkNotNull(sslCertificate, "Required parameter sslCertificate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SSL_CERTIFICATE_PATTERN.matcher(sslCertificate).matches(),
              "Parameter sslCertificate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the SslCertificate resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String sslCertificate;

      /** Name of the SslCertificate resource to delete.
       */
      public java.lang.String getSslCertificate() {
        return sslCertificate;
      }

      /** Name of the SslCertificate resource to delete. */
      public Delete setSslCertificate(java.lang.String sslCertificate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SSL_CERTIFICATE_PATTERN.matcher(sslCertificate).matches(),
              "Parameter sslCertificate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.sslCertificate = sslCertificate;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified SslCertificate resource. Gets a list of available SSL certificates by
     * making a list() request.
     *
     * Create a request for the method "sslCertificates.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param sslCertificate Name of the SslCertificate resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String sslCertificate) throws java.io.IOException {
      Get result = new Get(project, sslCertificate);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.SslCertificate> {

      private static final String REST_PATH = "{project}/global/sslCertificates/{sslCertificate}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern SSL_CERTIFICATE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified SslCertificate resource. Gets a list of available SSL certificates by
       * making a list() request.
       *
       * Create a request for the method "sslCertificates.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param sslCertificate Name of the SslCertificate resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String sslCertificate) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SslCertificate.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.sslCertificate = com.google.api.client.util.Preconditions.checkNotNull(sslCertificate, "Required parameter sslCertificate must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SSL_CERTIFICATE_PATTERN.matcher(sslCertificate).matches(),
              "Parameter sslCertificate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the SslCertificate resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String sslCertificate;

      /** Name of the SslCertificate resource to return.
       */
      public java.lang.String getSslCertificate() {
        return sslCertificate;
      }

      /** Name of the SslCertificate resource to return. */
      public Get setSslCertificate(java.lang.String sslCertificate) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SSL_CERTIFICATE_PATTERN.matcher(sslCertificate).matches(),
              "Parameter sslCertificate must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.sslCertificate = sslCertificate;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a SslCertificate resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "sslCertificates.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.SslCertificate}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.SslCertificate content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/sslCertificates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a SslCertificate resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "sslCertificates.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.SslCertificate}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.SslCertificate content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of SslCertificate resources available to the specified project.
     *
     * Create a request for the method "sslCertificates.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.SslCertificateList> {

      private static final String REST_PATH = "{project}/global/sslCertificates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of SslCertificate resources available to the specified project.
       *
       * Create a request for the method "sslCertificates.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SslCertificateList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the SslPolicies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.SslPolicies.List request = compute.sslPolicies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public SslPolicies sslPolicies() {
    return new SslPolicies();
  }

  /**
   * The "sslPolicies" collection of methods.
   */
  public class SslPolicies {

    /**
     * Deletes the specified SSL policy. The SSL policy resource can be deleted only if it is not in use
     * by any TargetHttpsProxy or TargetSslProxy resources.
     *
     * Create a request for the method "sslPolicies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param sslPolicy Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String sslPolicy) throws java.io.IOException {
      Delete result = new Delete(project, sslPolicy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/sslPolicies/{sslPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Deletes the specified SSL policy. The SSL policy resource can be deleted only if it is not in
       * use by any TargetHttpsProxy or TargetSslProxy resources.
       *
       * Create a request for the method "sslPolicies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param sslPolicy Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String sslPolicy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.sslPolicy = com.google.api.client.util.Preconditions.checkNotNull(sslPolicy, "Required parameter sslPolicy must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String sslPolicy;

      /** Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035.
       */
      public java.lang.String getSslPolicy() {
        return sslPolicy;
      }

      /**
       * Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      public Delete setSslPolicy(java.lang.String sslPolicy) {
        this.sslPolicy = sslPolicy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Lists all of the ordered rules present in a single specified policy.
     *
     * Create a request for the method "sslPolicies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param sslPolicy Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String sslPolicy) throws java.io.IOException {
      Get result = new Get(project, sslPolicy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.SslPolicy> {

      private static final String REST_PATH = "{project}/global/sslPolicies/{sslPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists all of the ordered rules present in a single specified policy.
       *
       * Create a request for the method "sslPolicies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param sslPolicy Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String sslPolicy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SslPolicy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.sslPolicy = com.google.api.client.util.Preconditions.checkNotNull(sslPolicy, "Required parameter sslPolicy must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the SSL policy to update. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String sslPolicy;

      /** Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
       */
      public java.lang.String getSslPolicy() {
        return sslPolicy;
      }

      /**
       * Name of the SSL policy to update. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      public Get setSslPolicy(java.lang.String sslPolicy) {
        this.sslPolicy = sslPolicy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified SSL policy resource. Gets a list of available SSL policies by making a
     * list() request.
     *
     * Create a request for the method "sslPolicies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.SslPolicy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.SslPolicy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/sslPolicies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Returns the specified SSL policy resource. Gets a list of available SSL policies by making a
       * list() request.
       *
       * Create a request for the method "sslPolicies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.SslPolicy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.SslPolicy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists all the SSL policies that have been configured for the specified project.
     *
     * Create a request for the method "sslPolicies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.SslPoliciesList> {

      private static final String REST_PATH = "{project}/global/sslPolicies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists all the SSL policies that have been configured for the specified project.
       *
       * Create a request for the method "sslPolicies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SslPoliciesList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists all features that can be specified in the SSL policy when using custom profile.
     *
     * Create a request for the method "sslPolicies.listAvailableFeatures".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListAvailableFeatures#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public ListAvailableFeatures listAvailableFeatures(java.lang.String project) throws java.io.IOException {
      ListAvailableFeatures result = new ListAvailableFeatures(project);
      initialize(result);
      return result;
    }

    public class ListAvailableFeatures extends ComputeRequest<com.google.api.services.compute.model.SslPoliciesListAvailableFeaturesResponse> {

      private static final String REST_PATH = "{project}/global/sslPolicies/listAvailableFeatures";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Lists all features that can be specified in the SSL policy when using custom profile.
       *
       * Create a request for the method "sslPolicies.listAvailableFeatures".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListAvailableFeatures#execute()} method to invoke the remote
       * operation. <p> {@link ListAvailableFeatures#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected ListAvailableFeatures(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SslPoliciesListAvailableFeaturesResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListAvailableFeatures setAlt(java.lang.String alt) {
        return (ListAvailableFeatures) super.setAlt(alt);
      }

      @Override
      public ListAvailableFeatures setFields(java.lang.String fields) {
        return (ListAvailableFeatures) super.setFields(fields);
      }

      @Override
      public ListAvailableFeatures setKey(java.lang.String key) {
        return (ListAvailableFeatures) super.setKey(key);
      }

      @Override
      public ListAvailableFeatures setOauthToken(java.lang.String oauthToken) {
        return (ListAvailableFeatures) super.setOauthToken(oauthToken);
      }

      @Override
      public ListAvailableFeatures setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListAvailableFeatures) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListAvailableFeatures setQuotaUser(java.lang.String quotaUser) {
        return (ListAvailableFeatures) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListAvailableFeatures setUserIp(java.lang.String userIp) {
        return (ListAvailableFeatures) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListAvailableFeatures setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListAvailableFeatures setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListAvailableFeatures setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListAvailableFeatures setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListAvailableFeatures setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListAvailableFeatures set(String parameterName, Object value) {
        return (ListAvailableFeatures) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified SSL policy with the data included in the request.
     *
     * Create a request for the method "sslPolicies.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param sslPolicy Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SslPolicy}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String sslPolicy, com.google.api.services.compute.model.SslPolicy content) throws java.io.IOException {
      Patch result = new Patch(project, sslPolicy, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/sslPolicies/{sslPolicy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Patches the specified SSL policy with the data included in the request.
       *
       * Create a request for the method "sslPolicies.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param sslPolicy Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SslPolicy}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String sslPolicy, com.google.api.services.compute.model.SslPolicy content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.sslPolicy = com.google.api.client.util.Preconditions.checkNotNull(sslPolicy, "Required parameter sslPolicy must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the SSL policy to update. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String sslPolicy;

      /** Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035.
       */
      public java.lang.String getSslPolicy() {
        return sslPolicy;
      }

      /**
       * Name of the SSL policy to update. The name must be 1-63 characters long, and comply with
       * RFC1035.
       */
      public Patch setSslPolicy(java.lang.String sslPolicy) {
        this.sslPolicy = sslPolicy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Subnetworks collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Subnetworks.List request = compute.subnetworks().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Subnetworks subnetworks() {
    return new Subnetworks();
  }

  /**
   * The "subnetworks" collection of methods.
   */
  public class Subnetworks {

    /**
     * Retrieves an aggregated list of subnetworks.
     *
     * Create a request for the method "subnetworks.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.SubnetworkAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/subnetworks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of subnetworks.
       *
       * Create a request for the method "subnetworks.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SubnetworkAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified subnetwork.
     *
     * Create a request for the method "subnetworks.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param subnetwork Name of the Subnetwork resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String subnetwork) throws java.io.IOException {
      Delete result = new Delete(project, region, subnetwork);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks/{subnetwork}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern SUBNETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified subnetwork.
       *
       * Create a request for the method "subnetworks.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param subnetwork Name of the Subnetwork resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String subnetwork) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = com.google.api.client.util.Preconditions.checkNotNull(subnetwork, "Required parameter subnetwork must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Subnetwork resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String subnetwork;

      /** Name of the Subnetwork resource to delete.
       */
      public java.lang.String getSubnetwork() {
        return subnetwork;
      }

      /** Name of the Subnetwork resource to delete. */
      public Delete setSubnetwork(java.lang.String subnetwork) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = subnetwork;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Expands the IP CIDR range of the subnetwork to a specified value.
     *
     * Create a request for the method "subnetworks.expandIpCidrRange".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ExpandIpCidrRange#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param subnetwork Name of the Subnetwork resource to update.
     * @param content the {@link com.google.api.services.compute.model.SubnetworksExpandIpCidrRangeRequest}
     * @return the request
     */
    public ExpandIpCidrRange expandIpCidrRange(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.SubnetworksExpandIpCidrRangeRequest content) throws java.io.IOException {
      ExpandIpCidrRange result = new ExpandIpCidrRange(project, region, subnetwork, content);
      initialize(result);
      return result;
    }

    public class ExpandIpCidrRange extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern SUBNETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Expands the IP CIDR range of the subnetwork to a specified value.
       *
       * Create a request for the method "subnetworks.expandIpCidrRange".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ExpandIpCidrRange#execute()} method to invoke the remote operation.
       * <p> {@link ExpandIpCidrRange#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param subnetwork Name of the Subnetwork resource to update.
       * @param content the {@link com.google.api.services.compute.model.SubnetworksExpandIpCidrRangeRequest}
       * @since 1.13
       */
      protected ExpandIpCidrRange(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.SubnetworksExpandIpCidrRangeRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = com.google.api.client.util.Preconditions.checkNotNull(subnetwork, "Required parameter subnetwork must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public ExpandIpCidrRange setAlt(java.lang.String alt) {
        return (ExpandIpCidrRange) super.setAlt(alt);
      }

      @Override
      public ExpandIpCidrRange setFields(java.lang.String fields) {
        return (ExpandIpCidrRange) super.setFields(fields);
      }

      @Override
      public ExpandIpCidrRange setKey(java.lang.String key) {
        return (ExpandIpCidrRange) super.setKey(key);
      }

      @Override
      public ExpandIpCidrRange setOauthToken(java.lang.String oauthToken) {
        return (ExpandIpCidrRange) super.setOauthToken(oauthToken);
      }

      @Override
      public ExpandIpCidrRange setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ExpandIpCidrRange) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ExpandIpCidrRange setQuotaUser(java.lang.String quotaUser) {
        return (ExpandIpCidrRange) super.setQuotaUser(quotaUser);
      }

      @Override
      public ExpandIpCidrRange setUserIp(java.lang.String userIp) {
        return (ExpandIpCidrRange) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ExpandIpCidrRange setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public ExpandIpCidrRange setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Subnetwork resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String subnetwork;

      /** Name of the Subnetwork resource to update.
       */
      public java.lang.String getSubnetwork() {
        return subnetwork;
      }

      /** Name of the Subnetwork resource to update. */
      public ExpandIpCidrRange setSubnetwork(java.lang.String subnetwork) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = subnetwork;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public ExpandIpCidrRange setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public ExpandIpCidrRange set(String parameterName, Object value) {
        return (ExpandIpCidrRange) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified subnetwork. Gets a list of available subnetworks list() request.
     *
     * Create a request for the method "subnetworks.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param subnetwork Name of the Subnetwork resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String subnetwork) throws java.io.IOException {
      Get result = new Get(project, region, subnetwork);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Subnetwork> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks/{subnetwork}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern SUBNETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified subnetwork. Gets a list of available subnetworks list() request.
       *
       * Create a request for the method "subnetworks.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param subnetwork Name of the Subnetwork resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String subnetwork) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Subnetwork.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = com.google.api.client.util.Preconditions.checkNotNull(subnetwork, "Required parameter subnetwork must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Subnetwork resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String subnetwork;

      /** Name of the Subnetwork resource to return.
       */
      public java.lang.String getSubnetwork() {
        return subnetwork;
      }

      /** Name of the Subnetwork resource to return. */
      public Get setSubnetwork(java.lang.String subnetwork) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = subnetwork;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a subnetwork in the specified project using the data included in the request.
     *
     * Create a request for the method "subnetworks.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.Subnetwork}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Subnetwork content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a subnetwork in the specified project using the data included in the request.
       *
       * Create a request for the method "subnetworks.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.Subnetwork}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.Subnetwork content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of subnetworks available to the specified project.
     *
     * Create a request for the method "subnetworks.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.SubnetworkList> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of subnetworks available to the specified project.
       *
       * Create a request for the method "subnetworks.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.SubnetworkList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an aggregated list of usable subnetworks.
     *
     * Create a request for the method "subnetworks.listUsable".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link ListUsable#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public ListUsable listUsable(java.lang.String project) throws java.io.IOException {
      ListUsable result = new ListUsable(project);
      initialize(result);
      return result;
    }

    public class ListUsable extends ComputeRequest<com.google.api.services.compute.model.UsableSubnetworksAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/subnetworks/listUsable";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of usable subnetworks.
       *
       * Create a request for the method "subnetworks.listUsable".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link ListUsable#execute()} method to invoke the remote operation. <p>
       * {@link
       * ListUsable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected ListUsable(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.UsableSubnetworksAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListUsable setAlt(java.lang.String alt) {
        return (ListUsable) super.setAlt(alt);
      }

      @Override
      public ListUsable setFields(java.lang.String fields) {
        return (ListUsable) super.setFields(fields);
      }

      @Override
      public ListUsable setKey(java.lang.String key) {
        return (ListUsable) super.setKey(key);
      }

      @Override
      public ListUsable setOauthToken(java.lang.String oauthToken) {
        return (ListUsable) super.setOauthToken(oauthToken);
      }

      @Override
      public ListUsable setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListUsable) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListUsable setQuotaUser(java.lang.String quotaUser) {
        return (ListUsable) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListUsable setUserIp(java.lang.String userIp) {
        return (ListUsable) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public ListUsable setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public ListUsable setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public ListUsable setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public ListUsable setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public ListUsable setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListUsable set(String parameterName, Object value) {
        return (ListUsable) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified subnetwork with the data included in the request. Only the following fields
     * within the subnetwork resource can be specified in the request: secondary_ip_range,
     * allow_subnet_cidr_routes_overlap and role. It is also mandatory to specify the current fingeprint
     * of the subnetwork resource being patched.
     *
     * Create a request for the method "subnetworks.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param subnetwork Name of the Subnetwork resource to patch.
     * @param content the {@link com.google.api.services.compute.model.Subnetwork}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.Subnetwork content) throws java.io.IOException {
      Patch result = new Patch(project, region, subnetwork, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks/{subnetwork}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern SUBNETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified subnetwork with the data included in the request. Only the following
       * fields within the subnetwork resource can be specified in the request: secondary_ip_range,
       * allow_subnet_cidr_routes_overlap and role. It is also mandatory to specify the current
       * fingeprint of the subnetwork resource being patched.
       *
       * Create a request for the method "subnetworks.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param subnetwork Name of the Subnetwork resource to patch.
       * @param content the {@link com.google.api.services.compute.model.Subnetwork}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.Subnetwork content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = com.google.api.client.util.Preconditions.checkNotNull(subnetwork, "Required parameter subnetwork must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Patch setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Subnetwork resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String subnetwork;

      /** Name of the Subnetwork resource to patch.
       */
      public java.lang.String getSubnetwork() {
        return subnetwork;
      }

      /** Name of the Subnetwork resource to patch. */
      public Patch setSubnetwork(java.lang.String subnetwork) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = subnetwork;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Set whether VMs in this subnet can access Google services without assigning external IP addresses
     * through Private Google Access.
     *
     * Create a request for the method "subnetworks.setPrivateIpGoogleAccess".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetPrivateIpGoogleAccess#execute()} method to invoke the remote
     * operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param subnetwork Name of the Subnetwork resource.
     * @param content the {@link com.google.api.services.compute.model.SubnetworksSetPrivateIpGoogleAccessRequest}
     * @return the request
     */
    public SetPrivateIpGoogleAccess setPrivateIpGoogleAccess(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.SubnetworksSetPrivateIpGoogleAccessRequest content) throws java.io.IOException {
      SetPrivateIpGoogleAccess result = new SetPrivateIpGoogleAccess(project, region, subnetwork, content);
      initialize(result);
      return result;
    }

    public class SetPrivateIpGoogleAccess extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern SUBNETWORK_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Set whether VMs in this subnet can access Google services without assigning external IP
       * addresses through Private Google Access.
       *
       * Create a request for the method "subnetworks.setPrivateIpGoogleAccess".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetPrivateIpGoogleAccess#execute()} method to invoke the remote
       * operation. <p> {@link SetPrivateIpGoogleAccess#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param subnetwork Name of the Subnetwork resource.
       * @param content the {@link com.google.api.services.compute.model.SubnetworksSetPrivateIpGoogleAccessRequest}
       * @since 1.13
       */
      protected SetPrivateIpGoogleAccess(java.lang.String project, java.lang.String region, java.lang.String subnetwork, com.google.api.services.compute.model.SubnetworksSetPrivateIpGoogleAccessRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = com.google.api.client.util.Preconditions.checkNotNull(subnetwork, "Required parameter subnetwork must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetPrivateIpGoogleAccess setAlt(java.lang.String alt) {
        return (SetPrivateIpGoogleAccess) super.setAlt(alt);
      }

      @Override
      public SetPrivateIpGoogleAccess setFields(java.lang.String fields) {
        return (SetPrivateIpGoogleAccess) super.setFields(fields);
      }

      @Override
      public SetPrivateIpGoogleAccess setKey(java.lang.String key) {
        return (SetPrivateIpGoogleAccess) super.setKey(key);
      }

      @Override
      public SetPrivateIpGoogleAccess setOauthToken(java.lang.String oauthToken) {
        return (SetPrivateIpGoogleAccess) super.setOauthToken(oauthToken);
      }

      @Override
      public SetPrivateIpGoogleAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetPrivateIpGoogleAccess) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetPrivateIpGoogleAccess setQuotaUser(java.lang.String quotaUser) {
        return (SetPrivateIpGoogleAccess) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetPrivateIpGoogleAccess setUserIp(java.lang.String userIp) {
        return (SetPrivateIpGoogleAccess) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetPrivateIpGoogleAccess setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetPrivateIpGoogleAccess setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the Subnetwork resource. */
      @com.google.api.client.util.Key
      private java.lang.String subnetwork;

      /** Name of the Subnetwork resource.
       */
      public java.lang.String getSubnetwork() {
        return subnetwork;
      }

      /** Name of the Subnetwork resource. */
      public SetPrivateIpGoogleAccess setSubnetwork(java.lang.String subnetwork) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(SUBNETWORK_PATTERN.matcher(subnetwork).matches(),
              "Parameter subnetwork must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.subnetwork = subnetwork;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetPrivateIpGoogleAccess setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetPrivateIpGoogleAccess set(String parameterName, Object value) {
        return (SetPrivateIpGoogleAccess) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetHttpProxies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetHttpProxies.List request = compute.targetHttpProxies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetHttpProxies targetHttpProxies() {
    return new TargetHttpProxies();
  }

  /**
   * The "targetHttpProxies" collection of methods.
   */
  public class TargetHttpProxies {

    /**
     * Deletes the specified TargetHttpProxy resource.
     *
     * Create a request for the method "targetHttpProxies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpProxy Name of the TargetHttpProxy resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String targetHttpProxy) throws java.io.IOException {
      Delete result = new Delete(project, targetHttpProxy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpProxies/{targetHttpProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified TargetHttpProxy resource.
       *
       * Create a request for the method "targetHttpProxies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpProxy Name of the TargetHttpProxy resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String targetHttpProxy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpProxy, "Required parameter targetHttpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpProxy resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpProxy;

      /** Name of the TargetHttpProxy resource to delete.
       */
      public java.lang.String getTargetHttpProxy() {
        return targetHttpProxy;
      }

      /** Name of the TargetHttpProxy resource to delete. */
      public Delete setTargetHttpProxy(java.lang.String targetHttpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpProxy = targetHttpProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified TargetHttpProxy resource. Gets a list of available target HTTP proxies by
     * making a list() request.
     *
     * Create a request for the method "targetHttpProxies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpProxy Name of the TargetHttpProxy resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String targetHttpProxy) throws java.io.IOException {
      Get result = new Get(project, targetHttpProxy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetHttpProxy> {

      private static final String REST_PATH = "{project}/global/targetHttpProxies/{targetHttpProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified TargetHttpProxy resource. Gets a list of available target HTTP proxies by
       * making a list() request.
       *
       * Create a request for the method "targetHttpProxies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpProxy Name of the TargetHttpProxy resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String targetHttpProxy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetHttpProxy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpProxy, "Required parameter targetHttpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpProxy resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpProxy;

      /** Name of the TargetHttpProxy resource to return.
       */
      public java.lang.String getTargetHttpProxy() {
        return targetHttpProxy;
      }

      /** Name of the TargetHttpProxy resource to return. */
      public Get setTargetHttpProxy(java.lang.String targetHttpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpProxy = targetHttpProxy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a TargetHttpProxy resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "targetHttpProxies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.TargetHttpProxy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.TargetHttpProxy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a TargetHttpProxy resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "targetHttpProxies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.TargetHttpProxy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.TargetHttpProxy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of TargetHttpProxy resources available to the specified project.
     *
     * Create a request for the method "targetHttpProxies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetHttpProxyList> {

      private static final String REST_PATH = "{project}/global/targetHttpProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of TargetHttpProxy resources available to the specified project.
       *
       * Create a request for the method "targetHttpProxies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetHttpProxyList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Changes the URL map for TargetHttpProxy.
     *
     * Create a request for the method "targetHttpProxies.setUrlMap".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetUrlMap#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpProxy Name of the TargetHttpProxy to set a URL map for.
     * @param content the {@link com.google.api.services.compute.model.UrlMapReference}
     * @return the request
     */
    public SetUrlMap setUrlMap(java.lang.String project, java.lang.String targetHttpProxy, com.google.api.services.compute.model.UrlMapReference content) throws java.io.IOException {
      SetUrlMap result = new SetUrlMap(project, targetHttpProxy, content);
      initialize(result);
      return result;
    }

    public class SetUrlMap extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the URL map for TargetHttpProxy.
       *
       * Create a request for the method "targetHttpProxies.setUrlMap".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetUrlMap#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetUrlMap#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpProxy Name of the TargetHttpProxy to set a URL map for.
       * @param content the {@link com.google.api.services.compute.model.UrlMapReference}
       * @since 1.13
       */
      protected SetUrlMap(java.lang.String project, java.lang.String targetHttpProxy, com.google.api.services.compute.model.UrlMapReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpProxy, "Required parameter targetHttpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetUrlMap setAlt(java.lang.String alt) {
        return (SetUrlMap) super.setAlt(alt);
      }

      @Override
      public SetUrlMap setFields(java.lang.String fields) {
        return (SetUrlMap) super.setFields(fields);
      }

      @Override
      public SetUrlMap setKey(java.lang.String key) {
        return (SetUrlMap) super.setKey(key);
      }

      @Override
      public SetUrlMap setOauthToken(java.lang.String oauthToken) {
        return (SetUrlMap) super.setOauthToken(oauthToken);
      }

      @Override
      public SetUrlMap setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetUrlMap) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetUrlMap setQuotaUser(java.lang.String quotaUser) {
        return (SetUrlMap) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetUrlMap setUserIp(java.lang.String userIp) {
        return (SetUrlMap) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetUrlMap setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpProxy to set a URL map for. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpProxy;

      /** Name of the TargetHttpProxy to set a URL map for.
       */
      public java.lang.String getTargetHttpProxy() {
        return targetHttpProxy;
      }

      /** Name of the TargetHttpProxy to set a URL map for. */
      public SetUrlMap setTargetHttpProxy(java.lang.String targetHttpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTP_PROXY_PATTERN.matcher(targetHttpProxy).matches(),
              "Parameter targetHttpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpProxy = targetHttpProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetUrlMap setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetUrlMap set(String parameterName, Object value) {
        return (SetUrlMap) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetHttpsProxies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetHttpsProxies.List request = compute.targetHttpsProxies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetHttpsProxies targetHttpsProxies() {
    return new TargetHttpsProxies();
  }

  /**
   * The "targetHttpsProxies" collection of methods.
   */
  public class TargetHttpsProxies {

    /**
     * Deletes the specified TargetHttpsProxy resource.
     *
     * Create a request for the method "targetHttpsProxies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String targetHttpsProxy) throws java.io.IOException {
      Delete result = new Delete(project, targetHttpsProxy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies/{targetHttpsProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTPS_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified TargetHttpsProxy resource.
       *
       * Create a request for the method "targetHttpsProxies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String targetHttpsProxy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpsProxy resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource to delete.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /** Name of the TargetHttpsProxy resource to delete. */
      public Delete setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified TargetHttpsProxy resource. Gets a list of available target HTTPS proxies by
     * making a list() request.
     *
     * Create a request for the method "targetHttpsProxies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String targetHttpsProxy) throws java.io.IOException {
      Get result = new Get(project, targetHttpsProxy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetHttpsProxy> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies/{targetHttpsProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTPS_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified TargetHttpsProxy resource. Gets a list of available target HTTPS proxies
       * by making a list() request.
       *
       * Create a request for the method "targetHttpsProxies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String targetHttpsProxy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetHttpsProxy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpsProxy resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource to return.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /** Name of the TargetHttpsProxy resource to return. */
      public Get setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a TargetHttpsProxy resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "targetHttpsProxies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.TargetHttpsProxy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a TargetHttpsProxy resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "targetHttpsProxies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.TargetHttpsProxy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of TargetHttpsProxy resources available to the specified project.
     *
     * Create a request for the method "targetHttpsProxies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetHttpsProxyList> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of TargetHttpsProxy resources available to the specified project.
       *
       * Create a request for the method "targetHttpsProxies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetHttpsProxyList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Sets the QUIC override policy for TargetHttpsProxy.
     *
     * Create a request for the method "targetHttpsProxies.setQuicOverride".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetQuicOverride#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should conform
     *        to RFC1035.
     * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxiesSetQuicOverrideRequest}
     * @return the request
     */
    public SetQuicOverride setQuicOverride(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.TargetHttpsProxiesSetQuicOverrideRequest content) throws java.io.IOException {
      SetQuicOverride result = new SetQuicOverride(project, targetHttpsProxy, content);
      initialize(result);
      return result;
    }

    public class SetQuicOverride extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies/{targetHttpsProxy}/setQuicOverride";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the QUIC override policy for TargetHttpsProxy.
       *
       * Create a request for the method "targetHttpsProxies.setQuicOverride".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetQuicOverride#execute()} method to invoke the remote operation.
       * <p> {@link SetQuicOverride#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should conform
     *        to RFC1035.
       * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxiesSetQuicOverrideRequest}
       * @since 1.13
       */
      protected SetQuicOverride(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.TargetHttpsProxiesSetQuicOverrideRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
      }

      @Override
      public SetQuicOverride setAlt(java.lang.String alt) {
        return (SetQuicOverride) super.setAlt(alt);
      }

      @Override
      public SetQuicOverride setFields(java.lang.String fields) {
        return (SetQuicOverride) super.setFields(fields);
      }

      @Override
      public SetQuicOverride setKey(java.lang.String key) {
        return (SetQuicOverride) super.setKey(key);
      }

      @Override
      public SetQuicOverride setOauthToken(java.lang.String oauthToken) {
        return (SetQuicOverride) super.setOauthToken(oauthToken);
      }

      @Override
      public SetQuicOverride setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetQuicOverride) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetQuicOverride setQuotaUser(java.lang.String quotaUser) {
        return (SetQuicOverride) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetQuicOverride setUserIp(java.lang.String userIp) {
        return (SetQuicOverride) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetQuicOverride setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should
       * conform to RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should conform
     to RFC1035.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /**
       * Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should
       * conform to RFC1035.
       */
      public SetQuicOverride setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetQuicOverride setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetQuicOverride set(String parameterName, Object value) {
        return (SetQuicOverride) super.set(parameterName, value);
      }
    }
    /**
     * Replaces SslCertificates for TargetHttpsProxy.
     *
     * Create a request for the method "targetHttpsProxies.setSslCertificates".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetSslCertificates#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
     * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxiesSetSslCertificatesRequest}
     * @return the request
     */
    public SetSslCertificates setSslCertificates(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.TargetHttpsProxiesSetSslCertificatesRequest content) throws java.io.IOException {
      SetSslCertificates result = new SetSslCertificates(project, targetHttpsProxy, content);
      initialize(result);
      return result;
    }

    public class SetSslCertificates extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTPS_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Replaces SslCertificates for TargetHttpsProxy.
       *
       * Create a request for the method "targetHttpsProxies.setSslCertificates".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetSslCertificates#execute()} method to invoke the remote
       * operation. <p> {@link SetSslCertificates#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
       * @param content the {@link com.google.api.services.compute.model.TargetHttpsProxiesSetSslCertificatesRequest}
       * @since 1.13
       */
      protected SetSslCertificates(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.TargetHttpsProxiesSetSslCertificatesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetSslCertificates setAlt(java.lang.String alt) {
        return (SetSslCertificates) super.setAlt(alt);
      }

      @Override
      public SetSslCertificates setFields(java.lang.String fields) {
        return (SetSslCertificates) super.setFields(fields);
      }

      @Override
      public SetSslCertificates setKey(java.lang.String key) {
        return (SetSslCertificates) super.setKey(key);
      }

      @Override
      public SetSslCertificates setOauthToken(java.lang.String oauthToken) {
        return (SetSslCertificates) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSslCertificates setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSslCertificates) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSslCertificates setQuotaUser(java.lang.String quotaUser) {
        return (SetSslCertificates) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSslCertificates setUserIp(java.lang.String userIp) {
        return (SetSslCertificates) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetSslCertificates setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpsProxy resource to set an SslCertificates resource for. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /** Name of the TargetHttpsProxy resource to set an SslCertificates resource for. */
      public SetSslCertificates setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetSslCertificates setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetSslCertificates set(String parameterName, Object value) {
        return (SetSslCertificates) super.set(parameterName, value);
      }
    }
    /**
     * Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the server-side support for
     * SSL features. This affects connections between clients and the HTTPS proxy load balancer. They do
     * not affect the connection between the load balancer and the backends.
     *
     * Create a request for the method "targetHttpsProxies.setSslPolicy".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetSslPolicy#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63
     *        characters long, and comply with RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SslPolicyReference}
     * @return the request
     */
    public SetSslPolicy setSslPolicy(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.SslPolicyReference content) throws java.io.IOException {
      SetSslPolicy result = new SetSslPolicy(project, targetHttpsProxy, content);
      initialize(result);
      return result;
    }

    public class SetSslPolicy extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetHttpsProxies/{targetHttpsProxy}/setSslPolicy";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the server-side support for
       * SSL features. This affects connections between clients and the HTTPS proxy load balancer. They
       * do not affect the connection between the load balancer and the backends.
       *
       * Create a request for the method "targetHttpsProxies.setSslPolicy".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetSslPolicy#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetSslPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63
     *        characters long, and comply with RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SslPolicyReference}
       * @since 1.13
       */
      protected SetSslPolicy(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.SslPolicyReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
      }

      @Override
      public SetSslPolicy setAlt(java.lang.String alt) {
        return (SetSslPolicy) super.setAlt(alt);
      }

      @Override
      public SetSslPolicy setFields(java.lang.String fields) {
        return (SetSslPolicy) super.setFields(fields);
      }

      @Override
      public SetSslPolicy setKey(java.lang.String key) {
        return (SetSslPolicy) super.setKey(key);
      }

      @Override
      public SetSslPolicy setOauthToken(java.lang.String oauthToken) {
        return (SetSslPolicy) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSslPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSslPolicy) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSslPolicy setQuotaUser(java.lang.String quotaUser) {
        return (SetSslPolicy) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSslPolicy setUserIp(java.lang.String userIp) {
        return (SetSslPolicy) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetSslPolicy setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63
       * characters long, and comply with RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63
     characters long, and comply with RFC1035.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /**
       * Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63
       * characters long, and comply with RFC1035.
       */
      public SetSslPolicy setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetSslPolicy setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetSslPolicy set(String parameterName, Object value) {
        return (SetSslPolicy) super.set(parameterName, value);
      }
    }
    /**
     * Changes the URL map for TargetHttpsProxy.
     *
     * Create a request for the method "targetHttpsProxies.setUrlMap".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetUrlMap#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetHttpsProxy Name of the TargetHttpsProxy resource whose URL map is to be set.
     * @param content the {@link com.google.api.services.compute.model.UrlMapReference}
     * @return the request
     */
    public SetUrlMap setUrlMap(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.UrlMapReference content) throws java.io.IOException {
      SetUrlMap result = new SetUrlMap(project, targetHttpsProxy, content);
      initialize(result);
      return result;
    }

    public class SetUrlMap extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_HTTPS_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the URL map for TargetHttpsProxy.
       *
       * Create a request for the method "targetHttpsProxies.setUrlMap".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetUrlMap#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetUrlMap#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetHttpsProxy Name of the TargetHttpsProxy resource whose URL map is to be set.
       * @param content the {@link com.google.api.services.compute.model.UrlMapReference}
       * @since 1.13
       */
      protected SetUrlMap(java.lang.String project, java.lang.String targetHttpsProxy, com.google.api.services.compute.model.UrlMapReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetHttpsProxy = com.google.api.client.util.Preconditions.checkNotNull(targetHttpsProxy, "Required parameter targetHttpsProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetUrlMap setAlt(java.lang.String alt) {
        return (SetUrlMap) super.setAlt(alt);
      }

      @Override
      public SetUrlMap setFields(java.lang.String fields) {
        return (SetUrlMap) super.setFields(fields);
      }

      @Override
      public SetUrlMap setKey(java.lang.String key) {
        return (SetUrlMap) super.setKey(key);
      }

      @Override
      public SetUrlMap setOauthToken(java.lang.String oauthToken) {
        return (SetUrlMap) super.setOauthToken(oauthToken);
      }

      @Override
      public SetUrlMap setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetUrlMap) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetUrlMap setQuotaUser(java.lang.String quotaUser) {
        return (SetUrlMap) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetUrlMap setUserIp(java.lang.String userIp) {
        return (SetUrlMap) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetUrlMap setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetHttpsProxy resource whose URL map is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetHttpsProxy;

      /** Name of the TargetHttpsProxy resource whose URL map is to be set.
       */
      public java.lang.String getTargetHttpsProxy() {
        return targetHttpsProxy;
      }

      /** Name of the TargetHttpsProxy resource whose URL map is to be set. */
      public SetUrlMap setTargetHttpsProxy(java.lang.String targetHttpsProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_HTTPS_PROXY_PATTERN.matcher(targetHttpsProxy).matches(),
              "Parameter targetHttpsProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetHttpsProxy = targetHttpsProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetUrlMap setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetUrlMap set(String parameterName, Object value) {
        return (SetUrlMap) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetInstances collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetInstances.List request = compute.targetInstances().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetInstances targetInstances() {
    return new TargetInstances();
  }

  /**
   * The "targetInstances" collection of methods.
   */
  public class TargetInstances {

    /**
     * Retrieves an aggregated list of target instances.
     *
     * Create a request for the method "targetInstances.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.TargetInstanceAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/targetInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of target instances.
       *
       * Create a request for the method "targetInstances.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetInstanceAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified TargetInstance resource.
     *
     * Create a request for the method "targetInstances.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone scoping this request.
     * @param targetInstance Name of the TargetInstance resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String targetInstance) throws java.io.IOException {
      Delete result = new Delete(project, zone, targetInstance);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/targetInstances/{targetInstance}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified TargetInstance resource.
       *
       * Create a request for the method "targetInstances.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone scoping this request.
       * @param targetInstance Name of the TargetInstance resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String targetInstance) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetInstance = com.google.api.client.util.Preconditions.checkNotNull(targetInstance, "Required parameter targetInstance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_INSTANCE_PATTERN.matcher(targetInstance).matches(),
              "Parameter targetInstance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the TargetInstance resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetInstance;

      /** Name of the TargetInstance resource to delete.
       */
      public java.lang.String getTargetInstance() {
        return targetInstance;
      }

      /** Name of the TargetInstance resource to delete. */
      public Delete setTargetInstance(java.lang.String targetInstance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_INSTANCE_PATTERN.matcher(targetInstance).matches(),
              "Parameter targetInstance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetInstance = targetInstance;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified TargetInstance resource. Gets a list of available target instances by
     * making a list() request.
     *
     * Create a request for the method "targetInstances.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone scoping this request.
     * @param targetInstance Name of the TargetInstance resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String targetInstance) throws java.io.IOException {
      Get result = new Get(project, zone, targetInstance);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetInstance> {

      private static final String REST_PATH = "{project}/zones/{zone}/targetInstances/{targetInstance}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_INSTANCE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified TargetInstance resource. Gets a list of available target instances by
       * making a list() request.
       *
       * Create a request for the method "targetInstances.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone scoping this request.
       * @param targetInstance Name of the TargetInstance resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String targetInstance) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetInstance.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetInstance = com.google.api.client.util.Preconditions.checkNotNull(targetInstance, "Required parameter targetInstance must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_INSTANCE_PATTERN.matcher(targetInstance).matches(),
              "Parameter targetInstance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the TargetInstance resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetInstance;

      /** Name of the TargetInstance resource to return.
       */
      public java.lang.String getTargetInstance() {
        return targetInstance;
      }

      /** Name of the TargetInstance resource to return. */
      public Get setTargetInstance(java.lang.String targetInstance) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_INSTANCE_PATTERN.matcher(targetInstance).matches(),
              "Parameter targetInstance must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetInstance = targetInstance;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a TargetInstance resource in the specified project and zone using the data included in
     * the request.
     *
     * Create a request for the method "targetInstances.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone scoping this request.
     * @param content the {@link com.google.api.services.compute.model.TargetInstance}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.TargetInstance content) throws java.io.IOException {
      Insert result = new Insert(project, zone, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/targetInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a TargetInstance resource in the specified project and zone using the data included in
       * the request.
       *
       * Create a request for the method "targetInstances.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone scoping this request.
       * @param content the {@link com.google.api.services.compute.model.TargetInstance}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String zone, com.google.api.services.compute.model.TargetInstance content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public Insert setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of TargetInstance resources available to the specified project and zone.
     *
     * Create a request for the method "targetInstances.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetInstanceList> {

      private static final String REST_PATH = "{project}/zones/{zone}/targetInstances";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of TargetInstance resources available to the specified project and zone.
       *
       * Create a request for the method "targetInstances.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetInstanceList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone scoping this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone scoping this request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetPools collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetPools.List request = compute.targetPools().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetPools targetPools() {
    return new TargetPools();
  }

  /**
   * The "targetPools" collection of methods.
   */
  public class TargetPools {

    /**
     * Adds health check URLs to a target pool.
     *
     * Create a request for the method "targetPools.addHealthCheck".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddHealthCheck#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the target pool to add a health check to.
     * @param content the {@link com.google.api.services.compute.model.TargetPoolsAddHealthCheckRequest}
     * @return the request
     */
    public AddHealthCheck addHealthCheck(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsAddHealthCheckRequest content) throws java.io.IOException {
      AddHealthCheck result = new AddHealthCheck(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class AddHealthCheck extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Adds health check URLs to a target pool.
       *
       * Create a request for the method "targetPools.addHealthCheck".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddHealthCheck#execute()} method to invoke the remote operation.
       * <p> {@link AddHealthCheck#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the target pool to add a health check to.
       * @param content the {@link com.google.api.services.compute.model.TargetPoolsAddHealthCheckRequest}
       * @since 1.13
       */
      protected AddHealthCheck(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsAddHealthCheckRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AddHealthCheck setAlt(java.lang.String alt) {
        return (AddHealthCheck) super.setAlt(alt);
      }

      @Override
      public AddHealthCheck setFields(java.lang.String fields) {
        return (AddHealthCheck) super.setFields(fields);
      }

      @Override
      public AddHealthCheck setKey(java.lang.String key) {
        return (AddHealthCheck) super.setKey(key);
      }

      @Override
      public AddHealthCheck setOauthToken(java.lang.String oauthToken) {
        return (AddHealthCheck) super.setOauthToken(oauthToken);
      }

      @Override
      public AddHealthCheck setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddHealthCheck) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddHealthCheck setQuotaUser(java.lang.String quotaUser) {
        return (AddHealthCheck) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddHealthCheck setUserIp(java.lang.String userIp) {
        return (AddHealthCheck) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddHealthCheck setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public AddHealthCheck setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the target pool to add a health check to. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the target pool to add a health check to.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the target pool to add a health check to. */
      public AddHealthCheck setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddHealthCheck setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddHealthCheck set(String parameterName, Object value) {
        return (AddHealthCheck) super.set(parameterName, value);
      }
    }
    /**
     * Adds an instance to a target pool.
     *
     * Create a request for the method "targetPools.addInstance".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AddInstance#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to add instances to.
     * @param content the {@link com.google.api.services.compute.model.TargetPoolsAddInstanceRequest}
     * @return the request
     */
    public AddInstance addInstance(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsAddInstanceRequest content) throws java.io.IOException {
      AddInstance result = new AddInstance(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class AddInstance extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/addInstance";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Adds an instance to a target pool.
       *
       * Create a request for the method "targetPools.addInstance".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AddInstance#execute()} method to invoke the remote operation. <p>
       * {@link
       * AddInstance#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to add instances to.
       * @param content the {@link com.google.api.services.compute.model.TargetPoolsAddInstanceRequest}
       * @since 1.13
       */
      protected AddInstance(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsAddInstanceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public AddInstance setAlt(java.lang.String alt) {
        return (AddInstance) super.setAlt(alt);
      }

      @Override
      public AddInstance setFields(java.lang.String fields) {
        return (AddInstance) super.setFields(fields);
      }

      @Override
      public AddInstance setKey(java.lang.String key) {
        return (AddInstance) super.setKey(key);
      }

      @Override
      public AddInstance setOauthToken(java.lang.String oauthToken) {
        return (AddInstance) super.setOauthToken(oauthToken);
      }

      @Override
      public AddInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddInstance) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddInstance setQuotaUser(java.lang.String quotaUser) {
        return (AddInstance) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddInstance setUserIp(java.lang.String userIp) {
        return (AddInstance) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AddInstance setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public AddInstance setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to add instances to. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to add instances to.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to add instances to. */
      public AddInstance setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public AddInstance setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public AddInstance set(String parameterName, Object value) {
        return (AddInstance) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an aggregated list of target pools.
     *
     * Create a request for the method "targetPools.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.TargetPoolAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/targetPools";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of target pools.
       *
       * Create a request for the method "targetPools.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetPoolAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified target pool.
     *
     * Create a request for the method "targetPools.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String targetPool) throws java.io.IOException {
      Delete result = new Delete(project, region, targetPool);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified target pool.
       *
       * Create a request for the method "targetPools.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String targetPool) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to delete.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to delete. */
      public Delete setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified target pool. Gets a list of available target pools by making a list()
     * request.
     *
     * Create a request for the method "targetPools.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String targetPool) throws java.io.IOException {
      Get result = new Get(project, region, targetPool);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetPool> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified target pool. Gets a list of available target pools by making a list()
       * request.
       *
       * Create a request for the method "targetPools.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String targetPool) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetPool.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to return.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to return. */
      public Get setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets the most recent health check results for each IP for the instance that is referenced by the
     * given target pool.
     *
     * Create a request for the method "targetPools.getHealth".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to which the queried instance belongs.
     * @param content the {@link com.google.api.services.compute.model.InstanceReference}
     * @return the request
     */
    public GetHealth getHealth(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.InstanceReference content) throws java.io.IOException {
      GetHealth result = new GetHealth(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class GetHealth extends ComputeRequest<com.google.api.services.compute.model.TargetPoolInstanceHealth> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/getHealth";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Gets the most recent health check results for each IP for the instance that is referenced by
       * the given target pool.
       *
       * Create a request for the method "targetPools.getHealth".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link GetHealth#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetHealth#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to which the queried instance belongs.
       * @param content the {@link com.google.api.services.compute.model.InstanceReference}
       * @since 1.13
       */
      protected GetHealth(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.InstanceReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.TargetPoolInstanceHealth.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public GetHealth setAlt(java.lang.String alt) {
        return (GetHealth) super.setAlt(alt);
      }

      @Override
      public GetHealth setFields(java.lang.String fields) {
        return (GetHealth) super.setFields(fields);
      }

      @Override
      public GetHealth setKey(java.lang.String key) {
        return (GetHealth) super.setKey(key);
      }

      @Override
      public GetHealth setOauthToken(java.lang.String oauthToken) {
        return (GetHealth) super.setOauthToken(oauthToken);
      }

      @Override
      public GetHealth setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetHealth) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetHealth setQuotaUser(java.lang.String quotaUser) {
        return (GetHealth) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetHealth setUserIp(java.lang.String userIp) {
        return (GetHealth) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public GetHealth setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public GetHealth setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to which the queried instance belongs. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to which the queried instance belongs.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to which the queried instance belongs. */
      public GetHealth setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      @Override
      public GetHealth set(String parameterName, Object value) {
        return (GetHealth) super.set(parameterName, value);
      }
    }
    /**
     * Creates a target pool in the specified project and region using the data included in the request.
     *
     * Create a request for the method "targetPools.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param content the {@link com.google.api.services.compute.model.TargetPool}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.TargetPool content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a target pool in the specified project and region using the data included in the
       * request.
       *
       * Create a request for the method "targetPools.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param content the {@link com.google.api.services.compute.model.TargetPool}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.TargetPool content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of target pools available to the specified project and region.
     *
     * Create a request for the method "targetPools.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetPoolList> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of target pools available to the specified project and region.
       *
       * Create a request for the method "targetPools.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetPoolList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Removes health check URL from a target pool.
     *
     * Create a request for the method "targetPools.removeHealthCheck".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RemoveHealthCheck#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param targetPool Name of the target pool to remove health checks from.
     * @param content the {@link com.google.api.services.compute.model.TargetPoolsRemoveHealthCheckRequest}
     * @return the request
     */
    public RemoveHealthCheck removeHealthCheck(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsRemoveHealthCheckRequest content) throws java.io.IOException {
      RemoveHealthCheck result = new RemoveHealthCheck(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class RemoveHealthCheck extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Removes health check URL from a target pool.
       *
       * Create a request for the method "targetPools.removeHealthCheck".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RemoveHealthCheck#execute()} method to invoke the remote operation.
       * <p> {@link RemoveHealthCheck#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param targetPool Name of the target pool to remove health checks from.
       * @param content the {@link com.google.api.services.compute.model.TargetPoolsRemoveHealthCheckRequest}
       * @since 1.13
       */
      protected RemoveHealthCheck(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsRemoveHealthCheckRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public RemoveHealthCheck setAlt(java.lang.String alt) {
        return (RemoveHealthCheck) super.setAlt(alt);
      }

      @Override
      public RemoveHealthCheck setFields(java.lang.String fields) {
        return (RemoveHealthCheck) super.setFields(fields);
      }

      @Override
      public RemoveHealthCheck setKey(java.lang.String key) {
        return (RemoveHealthCheck) super.setKey(key);
      }

      @Override
      public RemoveHealthCheck setOauthToken(java.lang.String oauthToken) {
        return (RemoveHealthCheck) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveHealthCheck setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveHealthCheck) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveHealthCheck setQuotaUser(java.lang.String quotaUser) {
        return (RemoveHealthCheck) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveHealthCheck setUserIp(java.lang.String userIp) {
        return (RemoveHealthCheck) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RemoveHealthCheck setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public RemoveHealthCheck setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the target pool to remove health checks from. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the target pool to remove health checks from.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the target pool to remove health checks from. */
      public RemoveHealthCheck setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RemoveHealthCheck setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RemoveHealthCheck set(String parameterName, Object value) {
        return (RemoveHealthCheck) super.set(parameterName, value);
      }
    }
    /**
     * Removes instance URL from a target pool.
     *
     * Create a request for the method "targetPools.removeInstance".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link RemoveInstance#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to remove instances from.
     * @param content the {@link com.google.api.services.compute.model.TargetPoolsRemoveInstanceRequest}
     * @return the request
     */
    public RemoveInstance removeInstance(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsRemoveInstanceRequest content) throws java.io.IOException {
      RemoveInstance result = new RemoveInstance(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class RemoveInstance extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/removeInstance";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Removes instance URL from a target pool.
       *
       * Create a request for the method "targetPools.removeInstance".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link RemoveInstance#execute()} method to invoke the remote operation.
       * <p> {@link RemoveInstance#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to remove instances from.
       * @param content the {@link com.google.api.services.compute.model.TargetPoolsRemoveInstanceRequest}
       * @since 1.13
       */
      protected RemoveInstance(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetPoolsRemoveInstanceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public RemoveInstance setAlt(java.lang.String alt) {
        return (RemoveInstance) super.setAlt(alt);
      }

      @Override
      public RemoveInstance setFields(java.lang.String fields) {
        return (RemoveInstance) super.setFields(fields);
      }

      @Override
      public RemoveInstance setKey(java.lang.String key) {
        return (RemoveInstance) super.setKey(key);
      }

      @Override
      public RemoveInstance setOauthToken(java.lang.String oauthToken) {
        return (RemoveInstance) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveInstance) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveInstance setQuotaUser(java.lang.String quotaUser) {
        return (RemoveInstance) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveInstance setUserIp(java.lang.String userIp) {
        return (RemoveInstance) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public RemoveInstance setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public RemoveInstance setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to remove instances from. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to remove instances from.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to remove instances from. */
      public RemoveInstance setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public RemoveInstance setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public RemoveInstance set(String parameterName, Object value) {
        return (RemoveInstance) super.set(parameterName, value);
      }
    }
    /**
     * Changes a backup target pool's configurations.
     *
     * Create a request for the method "targetPools.setBackup".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetBackup#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region scoping this request.
     * @param targetPool Name of the TargetPool resource to set a backup pool for.
     * @param content the {@link com.google.api.services.compute.model.TargetReference}
     * @return the request
     */
    public SetBackup setBackup(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetReference content) throws java.io.IOException {
      SetBackup result = new SetBackup(project, region, targetPool, content);
      initialize(result);
      return result;
    }

    public class SetBackup extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetPools/{targetPool}/setBackup";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_POOL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes a backup target pool's configurations.
       *
       * Create a request for the method "targetPools.setBackup".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetBackup#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetBackup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region scoping this request.
       * @param targetPool Name of the TargetPool resource to set a backup pool for.
       * @param content the {@link com.google.api.services.compute.model.TargetReference}
       * @since 1.13
       */
      protected SetBackup(java.lang.String project, java.lang.String region, java.lang.String targetPool, com.google.api.services.compute.model.TargetReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = com.google.api.client.util.Preconditions.checkNotNull(targetPool, "Required parameter targetPool must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetBackup setAlt(java.lang.String alt) {
        return (SetBackup) super.setAlt(alt);
      }

      @Override
      public SetBackup setFields(java.lang.String fields) {
        return (SetBackup) super.setFields(fields);
      }

      @Override
      public SetBackup setKey(java.lang.String key) {
        return (SetBackup) super.setKey(key);
      }

      @Override
      public SetBackup setOauthToken(java.lang.String oauthToken) {
        return (SetBackup) super.setOauthToken(oauthToken);
      }

      @Override
      public SetBackup setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetBackup) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetBackup setQuotaUser(java.lang.String quotaUser) {
        return (SetBackup) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetBackup setUserIp(java.lang.String userIp) {
        return (SetBackup) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetBackup setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region scoping this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region scoping this request. */
      public SetBackup setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the TargetPool resource to set a backup pool for. */
      @com.google.api.client.util.Key
      private java.lang.String targetPool;

      /** Name of the TargetPool resource to set a backup pool for.
       */
      public java.lang.String getTargetPool() {
        return targetPool;
      }

      /** Name of the TargetPool resource to set a backup pool for. */
      public SetBackup setTargetPool(java.lang.String targetPool) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_POOL_PATTERN.matcher(targetPool).matches(),
              "Parameter targetPool must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetPool = targetPool;
        return this;
      }

      /** New failoverRatio value for the target pool. */
      @com.google.api.client.util.Key
      private java.lang.Float failoverRatio;

      /** New failoverRatio value for the target pool.
       */
      public java.lang.Float getFailoverRatio() {
        return failoverRatio;
      }

      /** New failoverRatio value for the target pool. */
      public SetBackup setFailoverRatio(java.lang.Float failoverRatio) {
        this.failoverRatio = failoverRatio;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetBackup setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetBackup set(String parameterName, Object value) {
        return (SetBackup) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetSslProxies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetSslProxies.List request = compute.targetSslProxies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetSslProxies targetSslProxies() {
    return new TargetSslProxies();
  }

  /**
   * The "targetSslProxies" collection of methods.
   */
  public class TargetSslProxies {

    /**
     * Deletes the specified TargetSslProxy resource.
     *
     * Create a request for the method "targetSslProxies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String targetSslProxy) throws java.io.IOException {
      Delete result = new Delete(project, targetSslProxy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_SSL_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified TargetSslProxy resource.
       *
       * Create a request for the method "targetSslProxies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String targetSslProxy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetSslProxy resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource to delete.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /** Name of the TargetSslProxy resource to delete. */
      public Delete setTargetSslProxy(java.lang.String targetSslProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified TargetSslProxy resource. Gets a list of available target SSL proxies by
     * making a list() request.
     *
     * Create a request for the method "targetSslProxies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String targetSslProxy) throws java.io.IOException {
      Get result = new Get(project, targetSslProxy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetSslProxy> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_SSL_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified TargetSslProxy resource. Gets a list of available target SSL proxies by
       * making a list() request.
       *
       * Create a request for the method "targetSslProxies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String targetSslProxy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetSslProxy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetSslProxy resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource to return.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /** Name of the TargetSslProxy resource to return. */
      public Get setTargetSslProxy(java.lang.String targetSslProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a TargetSslProxy resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "targetSslProxies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.TargetSslProxy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.TargetSslProxy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a TargetSslProxy resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "targetSslProxies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.TargetSslProxy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.TargetSslProxy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of TargetSslProxy resources available to the specified project.
     *
     * Create a request for the method "targetSslProxies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetSslProxyList> {

      private static final String REST_PATH = "{project}/global/targetSslProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of TargetSslProxy resources available to the specified project.
       *
       * Create a request for the method "targetSslProxies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetSslProxyList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Changes the BackendService for TargetSslProxy.
     *
     * Create a request for the method "targetSslProxies.setBackendService".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetBackendService#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource whose BackendService resource is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetBackendServiceRequest}
     * @return the request
     */
    public SetBackendService setBackendService(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetBackendServiceRequest content) throws java.io.IOException {
      SetBackendService result = new SetBackendService(project, targetSslProxy, content);
      initialize(result);
      return result;
    }

    public class SetBackendService extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}/setBackendService";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_SSL_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the BackendService for TargetSslProxy.
       *
       * Create a request for the method "targetSslProxies.setBackendService".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetBackendService#execute()} method to invoke the remote operation.
       * <p> {@link SetBackendService#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource whose BackendService resource is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetBackendServiceRequest}
       * @since 1.13
       */
      protected SetBackendService(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetBackendServiceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetBackendService setAlt(java.lang.String alt) {
        return (SetBackendService) super.setAlt(alt);
      }

      @Override
      public SetBackendService setFields(java.lang.String fields) {
        return (SetBackendService) super.setFields(fields);
      }

      @Override
      public SetBackendService setKey(java.lang.String key) {
        return (SetBackendService) super.setKey(key);
      }

      @Override
      public SetBackendService setOauthToken(java.lang.String oauthToken) {
        return (SetBackendService) super.setOauthToken(oauthToken);
      }

      @Override
      public SetBackendService setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetBackendService) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetBackendService setQuotaUser(java.lang.String quotaUser) {
        return (SetBackendService) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetBackendService setUserIp(java.lang.String userIp) {
        return (SetBackendService) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetBackendService setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetSslProxy resource whose BackendService resource is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource whose BackendService resource is to be set.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /** Name of the TargetSslProxy resource whose BackendService resource is to be set. */
      public SetBackendService setTargetSslProxy(java.lang.String targetSslProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetBackendService setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetBackendService set(String parameterName, Object value) {
        return (SetBackendService) super.set(parameterName, value);
      }
    }
    /**
     * Changes the ProxyHeaderType for TargetSslProxy.
     *
     * Create a request for the method "targetSslProxies.setProxyHeader".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetProxyHeader#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource whose ProxyHeader is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetProxyHeaderRequest}
     * @return the request
     */
    public SetProxyHeader setProxyHeader(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetProxyHeaderRequest content) throws java.io.IOException {
      SetProxyHeader result = new SetProxyHeader(project, targetSslProxy, content);
      initialize(result);
      return result;
    }

    public class SetProxyHeader extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_SSL_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the ProxyHeaderType for TargetSslProxy.
       *
       * Create a request for the method "targetSslProxies.setProxyHeader".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetProxyHeader#execute()} method to invoke the remote operation.
       * <p> {@link SetProxyHeader#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource whose ProxyHeader is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetProxyHeaderRequest}
       * @since 1.13
       */
      protected SetProxyHeader(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetProxyHeaderRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetProxyHeader setAlt(java.lang.String alt) {
        return (SetProxyHeader) super.setAlt(alt);
      }

      @Override
      public SetProxyHeader setFields(java.lang.String fields) {
        return (SetProxyHeader) super.setFields(fields);
      }

      @Override
      public SetProxyHeader setKey(java.lang.String key) {
        return (SetProxyHeader) super.setKey(key);
      }

      @Override
      public SetProxyHeader setOauthToken(java.lang.String oauthToken) {
        return (SetProxyHeader) super.setOauthToken(oauthToken);
      }

      @Override
      public SetProxyHeader setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetProxyHeader) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetProxyHeader setQuotaUser(java.lang.String quotaUser) {
        return (SetProxyHeader) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetProxyHeader setUserIp(java.lang.String userIp) {
        return (SetProxyHeader) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetProxyHeader setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetSslProxy resource whose ProxyHeader is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource whose ProxyHeader is to be set.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /** Name of the TargetSslProxy resource whose ProxyHeader is to be set. */
      public SetProxyHeader setTargetSslProxy(java.lang.String targetSslProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetProxyHeader setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetProxyHeader set(String parameterName, Object value) {
        return (SetProxyHeader) super.set(parameterName, value);
      }
    }
    /**
     * Changes SslCertificates for TargetSslProxy.
     *
     * Create a request for the method "targetSslProxies.setSslCertificates".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetSslCertificates#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetSslCertificatesRequest}
     * @return the request
     */
    public SetSslCertificates setSslCertificates(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetSslCertificatesRequest content) throws java.io.IOException {
      SetSslCertificates result = new SetSslCertificates(project, targetSslProxy, content);
      initialize(result);
      return result;
    }

    public class SetSslCertificates extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_SSL_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes SslCertificates for TargetSslProxy.
       *
       * Create a request for the method "targetSslProxies.setSslCertificates".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetSslCertificates#execute()} method to invoke the remote
       * operation. <p> {@link SetSslCertificates#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetSslProxiesSetSslCertificatesRequest}
       * @since 1.13
       */
      protected SetSslCertificates(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.TargetSslProxiesSetSslCertificatesRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetSslCertificates setAlt(java.lang.String alt) {
        return (SetSslCertificates) super.setAlt(alt);
      }

      @Override
      public SetSslCertificates setFields(java.lang.String fields) {
        return (SetSslCertificates) super.setFields(fields);
      }

      @Override
      public SetSslCertificates setKey(java.lang.String key) {
        return (SetSslCertificates) super.setKey(key);
      }

      @Override
      public SetSslCertificates setOauthToken(java.lang.String oauthToken) {
        return (SetSslCertificates) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSslCertificates setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSslCertificates) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSslCertificates setQuotaUser(java.lang.String quotaUser) {
        return (SetSslCertificates) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSslCertificates setUserIp(java.lang.String userIp) {
        return (SetSslCertificates) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetSslCertificates setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetSslProxy resource whose SslCertificate resource is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /** Name of the TargetSslProxy resource whose SslCertificate resource is to be set. */
      public SetSslCertificates setTargetSslProxy(java.lang.String targetSslProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_SSL_PROXY_PATTERN.matcher(targetSslProxy).matches(),
              "Parameter targetSslProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetSslCertificates setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetSslCertificates set(String parameterName, Object value) {
        return (SetSslCertificates) super.set(parameterName, value);
      }
    }
    /**
     * Sets the SSL policy for TargetSslProxy. The SSL policy specifies the server-side support for SSL
     * features. This affects connections between clients and the SSL proxy load balancer. They do not
     * affect the connection between the load balancer and the backends.
     *
     * Create a request for the method "targetSslProxies.setSslPolicy".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetSslPolicy#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetSslProxy Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63 characters
     *        long, and comply with RFC1035.
     * @param content the {@link com.google.api.services.compute.model.SslPolicyReference}
     * @return the request
     */
    public SetSslPolicy setSslPolicy(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.SslPolicyReference content) throws java.io.IOException {
      SetSslPolicy result = new SetSslPolicy(project, targetSslProxy, content);
      initialize(result);
      return result;
    }

    public class SetSslPolicy extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetSslProxies/{targetSslProxy}/setSslPolicy";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Sets the SSL policy for TargetSslProxy. The SSL policy specifies the server-side support for
       * SSL features. This affects connections between clients and the SSL proxy load balancer. They do
       * not affect the connection between the load balancer and the backends.
       *
       * Create a request for the method "targetSslProxies.setSslPolicy".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetSslPolicy#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetSslPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetSslProxy Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63 characters
     *        long, and comply with RFC1035.
       * @param content the {@link com.google.api.services.compute.model.SslPolicyReference}
       * @since 1.13
       */
      protected SetSslPolicy(java.lang.String project, java.lang.String targetSslProxy, com.google.api.services.compute.model.SslPolicyReference content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetSslProxy = com.google.api.client.util.Preconditions.checkNotNull(targetSslProxy, "Required parameter targetSslProxy must be specified.");
      }

      @Override
      public SetSslPolicy setAlt(java.lang.String alt) {
        return (SetSslPolicy) super.setAlt(alt);
      }

      @Override
      public SetSslPolicy setFields(java.lang.String fields) {
        return (SetSslPolicy) super.setFields(fields);
      }

      @Override
      public SetSslPolicy setKey(java.lang.String key) {
        return (SetSslPolicy) super.setKey(key);
      }

      @Override
      public SetSslPolicy setOauthToken(java.lang.String oauthToken) {
        return (SetSslPolicy) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSslPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSslPolicy) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSslPolicy setQuotaUser(java.lang.String quotaUser) {
        return (SetSslPolicy) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSslPolicy setUserIp(java.lang.String userIp) {
        return (SetSslPolicy) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetSslPolicy setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63
       * characters long, and comply with RFC1035.
       */
      @com.google.api.client.util.Key
      private java.lang.String targetSslProxy;

      /** Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63 characters
     long, and comply with RFC1035.
       */
      public java.lang.String getTargetSslProxy() {
        return targetSslProxy;
      }

      /**
       * Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63
       * characters long, and comply with RFC1035.
       */
      public SetSslPolicy setTargetSslProxy(java.lang.String targetSslProxy) {
        this.targetSslProxy = targetSslProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetSslPolicy setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetSslPolicy set(String parameterName, Object value) {
        return (SetSslPolicy) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetTcpProxies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetTcpProxies.List request = compute.targetTcpProxies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetTcpProxies targetTcpProxies() {
    return new TargetTcpProxies();
  }

  /**
   * The "targetTcpProxies" collection of methods.
   */
  public class TargetTcpProxies {

    /**
     * Deletes the specified TargetTcpProxy resource.
     *
     * Create a request for the method "targetTcpProxies.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetTcpProxy Name of the TargetTcpProxy resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String targetTcpProxy) throws java.io.IOException {
      Delete result = new Delete(project, targetTcpProxy);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies/{targetTcpProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_TCP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified TargetTcpProxy resource.
       *
       * Create a request for the method "targetTcpProxies.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetTcpProxy Name of the TargetTcpProxy resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String targetTcpProxy) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetTcpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetTcpProxy, "Required parameter targetTcpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetTcpProxy resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetTcpProxy;

      /** Name of the TargetTcpProxy resource to delete.
       */
      public java.lang.String getTargetTcpProxy() {
        return targetTcpProxy;
      }

      /** Name of the TargetTcpProxy resource to delete. */
      public Delete setTargetTcpProxy(java.lang.String targetTcpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetTcpProxy = targetTcpProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified TargetTcpProxy resource. Gets a list of available target TCP proxies by
     * making a list() request.
     *
     * Create a request for the method "targetTcpProxies.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetTcpProxy Name of the TargetTcpProxy resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String targetTcpProxy) throws java.io.IOException {
      Get result = new Get(project, targetTcpProxy);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetTcpProxy> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies/{targetTcpProxy}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_TCP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified TargetTcpProxy resource. Gets a list of available target TCP proxies by
       * making a list() request.
       *
       * Create a request for the method "targetTcpProxies.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetTcpProxy Name of the TargetTcpProxy resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String targetTcpProxy) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetTcpProxy.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetTcpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetTcpProxy, "Required parameter targetTcpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetTcpProxy resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetTcpProxy;

      /** Name of the TargetTcpProxy resource to return.
       */
      public java.lang.String getTargetTcpProxy() {
        return targetTcpProxy;
      }

      /** Name of the TargetTcpProxy resource to return. */
      public Get setTargetTcpProxy(java.lang.String targetTcpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetTcpProxy = targetTcpProxy;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a TargetTcpProxy resource in the specified project using the data included in the
     * request.
     *
     * Create a request for the method "targetTcpProxies.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.TargetTcpProxy}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.TargetTcpProxy content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a TargetTcpProxy resource in the specified project using the data included in the
       * request.
       *
       * Create a request for the method "targetTcpProxies.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.TargetTcpProxy}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.TargetTcpProxy content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of TargetTcpProxy resources available to the specified project.
     *
     * Create a request for the method "targetTcpProxies.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetTcpProxyList> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of TargetTcpProxy resources available to the specified project.
       *
       * Create a request for the method "targetTcpProxies.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetTcpProxyList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Changes the BackendService for TargetTcpProxy.
     *
     * Create a request for the method "targetTcpProxies.setBackendService".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetBackendService#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetTcpProxy Name of the TargetTcpProxy resource whose BackendService resource is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetTcpProxiesSetBackendServiceRequest}
     * @return the request
     */
    public SetBackendService setBackendService(java.lang.String project, java.lang.String targetTcpProxy, com.google.api.services.compute.model.TargetTcpProxiesSetBackendServiceRequest content) throws java.io.IOException {
      SetBackendService result = new SetBackendService(project, targetTcpProxy, content);
      initialize(result);
      return result;
    }

    public class SetBackendService extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_TCP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the BackendService for TargetTcpProxy.
       *
       * Create a request for the method "targetTcpProxies.setBackendService".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetBackendService#execute()} method to invoke the remote operation.
       * <p> {@link SetBackendService#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetTcpProxy Name of the TargetTcpProxy resource whose BackendService resource is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetTcpProxiesSetBackendServiceRequest}
       * @since 1.13
       */
      protected SetBackendService(java.lang.String project, java.lang.String targetTcpProxy, com.google.api.services.compute.model.TargetTcpProxiesSetBackendServiceRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetTcpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetTcpProxy, "Required parameter targetTcpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetBackendService setAlt(java.lang.String alt) {
        return (SetBackendService) super.setAlt(alt);
      }

      @Override
      public SetBackendService setFields(java.lang.String fields) {
        return (SetBackendService) super.setFields(fields);
      }

      @Override
      public SetBackendService setKey(java.lang.String key) {
        return (SetBackendService) super.setKey(key);
      }

      @Override
      public SetBackendService setOauthToken(java.lang.String oauthToken) {
        return (SetBackendService) super.setOauthToken(oauthToken);
      }

      @Override
      public SetBackendService setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetBackendService) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetBackendService setQuotaUser(java.lang.String quotaUser) {
        return (SetBackendService) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetBackendService setUserIp(java.lang.String userIp) {
        return (SetBackendService) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetBackendService setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetTcpProxy resource whose BackendService resource is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetTcpProxy;

      /** Name of the TargetTcpProxy resource whose BackendService resource is to be set.
       */
      public java.lang.String getTargetTcpProxy() {
        return targetTcpProxy;
      }

      /** Name of the TargetTcpProxy resource whose BackendService resource is to be set. */
      public SetBackendService setTargetTcpProxy(java.lang.String targetTcpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetTcpProxy = targetTcpProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetBackendService setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetBackendService set(String parameterName, Object value) {
        return (SetBackendService) super.set(parameterName, value);
      }
    }
    /**
     * Changes the ProxyHeaderType for TargetTcpProxy.
     *
     * Create a request for the method "targetTcpProxies.setProxyHeader".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link SetProxyHeader#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param targetTcpProxy Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
     * @param content the {@link com.google.api.services.compute.model.TargetTcpProxiesSetProxyHeaderRequest}
     * @return the request
     */
    public SetProxyHeader setProxyHeader(java.lang.String project, java.lang.String targetTcpProxy, com.google.api.services.compute.model.TargetTcpProxiesSetProxyHeaderRequest content) throws java.io.IOException {
      SetProxyHeader result = new SetProxyHeader(project, targetTcpProxy, content);
      initialize(result);
      return result;
    }

    public class SetProxyHeader extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern TARGET_TCP_PROXY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Changes the ProxyHeaderType for TargetTcpProxy.
       *
       * Create a request for the method "targetTcpProxies.setProxyHeader".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link SetProxyHeader#execute()} method to invoke the remote operation.
       * <p> {@link SetProxyHeader#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param targetTcpProxy Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
       * @param content the {@link com.google.api.services.compute.model.TargetTcpProxiesSetProxyHeaderRequest}
       * @since 1.13
       */
      protected SetProxyHeader(java.lang.String project, java.lang.String targetTcpProxy, com.google.api.services.compute.model.TargetTcpProxiesSetProxyHeaderRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.targetTcpProxy = com.google.api.client.util.Preconditions.checkNotNull(targetTcpProxy, "Required parameter targetTcpProxy must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public SetProxyHeader setAlt(java.lang.String alt) {
        return (SetProxyHeader) super.setAlt(alt);
      }

      @Override
      public SetProxyHeader setFields(java.lang.String fields) {
        return (SetProxyHeader) super.setFields(fields);
      }

      @Override
      public SetProxyHeader setKey(java.lang.String key) {
        return (SetProxyHeader) super.setKey(key);
      }

      @Override
      public SetProxyHeader setOauthToken(java.lang.String oauthToken) {
        return (SetProxyHeader) super.setOauthToken(oauthToken);
      }

      @Override
      public SetProxyHeader setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetProxyHeader) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetProxyHeader setQuotaUser(java.lang.String quotaUser) {
        return (SetProxyHeader) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetProxyHeader setUserIp(java.lang.String userIp) {
        return (SetProxyHeader) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public SetProxyHeader setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the TargetTcpProxy resource whose ProxyHeader is to be set. */
      @com.google.api.client.util.Key
      private java.lang.String targetTcpProxy;

      /** Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
       */
      public java.lang.String getTargetTcpProxy() {
        return targetTcpProxy;
      }

      /** Name of the TargetTcpProxy resource whose ProxyHeader is to be set. */
      public SetProxyHeader setTargetTcpProxy(java.lang.String targetTcpProxy) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_TCP_PROXY_PATTERN.matcher(targetTcpProxy).matches(),
              "Parameter targetTcpProxy must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetTcpProxy = targetTcpProxy;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public SetProxyHeader setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public SetProxyHeader set(String parameterName, Object value) {
        return (SetProxyHeader) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the TargetVpnGateways collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.TargetVpnGateways.List request = compute.targetVpnGateways().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TargetVpnGateways targetVpnGateways() {
    return new TargetVpnGateways();
  }

  /**
   * The "targetVpnGateways" collection of methods.
   */
  public class TargetVpnGateways {

    /**
     * Retrieves an aggregated list of target VPN gateways.
     *
     * Create a request for the method "targetVpnGateways.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.TargetVpnGatewayAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/targetVpnGateways";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of target VPN gateways.
       *
       * Create a request for the method "targetVpnGateways.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetVpnGatewayAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified target VPN gateway.
     *
     * Create a request for the method "targetVpnGateways.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param targetVpnGateway Name of the target VPN gateway to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String targetVpnGateway) throws java.io.IOException {
      Delete result = new Delete(project, region, targetVpnGateway);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_VPN_GATEWAY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified target VPN gateway.
       *
       * Create a request for the method "targetVpnGateways.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param targetVpnGateway Name of the target VPN gateway to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String targetVpnGateway) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetVpnGateway = com.google.api.client.util.Preconditions.checkNotNull(targetVpnGateway, "Required parameter targetVpnGateway must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_VPN_GATEWAY_PATTERN.matcher(targetVpnGateway).matches(),
              "Parameter targetVpnGateway must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the target VPN gateway to delete. */
      @com.google.api.client.util.Key
      private java.lang.String targetVpnGateway;

      /** Name of the target VPN gateway to delete.
       */
      public java.lang.String getTargetVpnGateway() {
        return targetVpnGateway;
      }

      /** Name of the target VPN gateway to delete. */
      public Delete setTargetVpnGateway(java.lang.String targetVpnGateway) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_VPN_GATEWAY_PATTERN.matcher(targetVpnGateway).matches(),
              "Parameter targetVpnGateway must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetVpnGateway = targetVpnGateway;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified target VPN gateway. Gets a list of available target VPN gateways by making
     * a list() request.
     *
     * Create a request for the method "targetVpnGateways.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param targetVpnGateway Name of the target VPN gateway to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String targetVpnGateway) throws java.io.IOException {
      Get result = new Get(project, region, targetVpnGateway);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.TargetVpnGateway> {

      private static final String REST_PATH = "{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern TARGET_VPN_GATEWAY_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified target VPN gateway. Gets a list of available target VPN gateways by
       * making a list() request.
       *
       * Create a request for the method "targetVpnGateways.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param targetVpnGateway Name of the target VPN gateway to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String targetVpnGateway) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetVpnGateway.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetVpnGateway = com.google.api.client.util.Preconditions.checkNotNull(targetVpnGateway, "Required parameter targetVpnGateway must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_VPN_GATEWAY_PATTERN.matcher(targetVpnGateway).matches(),
              "Parameter targetVpnGateway must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the target VPN gateway to return. */
      @com.google.api.client.util.Key
      private java.lang.String targetVpnGateway;

      /** Name of the target VPN gateway to return.
       */
      public java.lang.String getTargetVpnGateway() {
        return targetVpnGateway;
      }

      /** Name of the target VPN gateway to return. */
      public Get setTargetVpnGateway(java.lang.String targetVpnGateway) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_VPN_GATEWAY_PATTERN.matcher(targetVpnGateway).matches(),
              "Parameter targetVpnGateway must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.targetVpnGateway = targetVpnGateway;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a target VPN gateway in the specified project and region using the data included in the
     * request.
     *
     * Create a request for the method "targetVpnGateways.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.TargetVpnGateway}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.TargetVpnGateway content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/targetVpnGateways";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a target VPN gateway in the specified project and region using the data included in the
       * request.
       *
       * Create a request for the method "targetVpnGateways.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.TargetVpnGateway}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.TargetVpnGateway content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of target VPN gateways available to the specified project and region.
     *
     * Create a request for the method "targetVpnGateways.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.TargetVpnGatewayList> {

      private static final String REST_PATH = "{project}/regions/{region}/targetVpnGateways";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of target VPN gateways available to the specified project and region.
       *
       * Create a request for the method "targetVpnGateways.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.TargetVpnGatewayList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the UrlMaps collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.UrlMaps.List request = compute.urlMaps().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public UrlMaps urlMaps() {
    return new UrlMaps();
  }

  /**
   * The "urlMaps" collection of methods.
   */
  public class UrlMaps {

    /**
     * Deletes the specified UrlMap resource.
     *
     * Create a request for the method "urlMaps.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String urlMap) throws java.io.IOException {
      Delete result = new Delete(project, urlMap);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified UrlMap resource.
       *
       * Create a request for the method "urlMaps.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String urlMap) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap resource to delete.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap resource to delete. */
      public Delete setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified UrlMap resource. Gets a list of available URL maps by making a list()
     * request.
     *
     * Create a request for the method "urlMaps.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String urlMap) throws java.io.IOException {
      Get result = new Get(project, urlMap);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.UrlMap> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified UrlMap resource. Gets a list of available URL maps by making a list()
       * request.
       *
       * Create a request for the method "urlMaps.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String urlMap) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.UrlMap.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap resource to return.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap resource to return. */
      public Get setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a UrlMap resource in the specified project using the data included in the request.
     *
     * Create a request for the method "urlMaps.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param content the {@link com.google.api.services.compute.model.UrlMap}
     * @return the request
     */
    public Insert insert(java.lang.String project, com.google.api.services.compute.model.UrlMap content) throws java.io.IOException {
      Insert result = new Insert(project, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/urlMaps";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Creates a UrlMap resource in the specified project using the data included in the request.
       *
       * Create a request for the method "urlMaps.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param content the {@link com.google.api.services.compute.model.UrlMap}
       * @since 1.13
       */
      protected Insert(java.lang.String project, com.google.api.services.compute.model.UrlMap content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Initiates a cache invalidation operation, invalidating the specified path, scoped to the
     * specified UrlMap.
     *
     * Create a request for the method "urlMaps.invalidateCache".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link InvalidateCache#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap scoping this request.
     * @param content the {@link com.google.api.services.compute.model.CacheInvalidationRule}
     * @return the request
     */
    public InvalidateCache invalidateCache(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.CacheInvalidationRule content) throws java.io.IOException {
      InvalidateCache result = new InvalidateCache(project, urlMap, content);
      initialize(result);
      return result;
    }

    public class InvalidateCache extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}/invalidateCache";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Initiates a cache invalidation operation, invalidating the specified path, scoped to the
       * specified UrlMap.
       *
       * Create a request for the method "urlMaps.invalidateCache".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link InvalidateCache#execute()} method to invoke the remote operation.
       * <p> {@link InvalidateCache#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap scoping this request.
       * @param content the {@link com.google.api.services.compute.model.CacheInvalidationRule}
       * @since 1.13
       */
      protected InvalidateCache(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.CacheInvalidationRule content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public InvalidateCache setAlt(java.lang.String alt) {
        return (InvalidateCache) super.setAlt(alt);
      }

      @Override
      public InvalidateCache setFields(java.lang.String fields) {
        return (InvalidateCache) super.setFields(fields);
      }

      @Override
      public InvalidateCache setKey(java.lang.String key) {
        return (InvalidateCache) super.setKey(key);
      }

      @Override
      public InvalidateCache setOauthToken(java.lang.String oauthToken) {
        return (InvalidateCache) super.setOauthToken(oauthToken);
      }

      @Override
      public InvalidateCache setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InvalidateCache) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InvalidateCache setQuotaUser(java.lang.String quotaUser) {
        return (InvalidateCache) super.setQuotaUser(quotaUser);
      }

      @Override
      public InvalidateCache setUserIp(java.lang.String userIp) {
        return (InvalidateCache) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public InvalidateCache setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap scoping this request. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap scoping this request.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap scoping this request. */
      public InvalidateCache setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public InvalidateCache setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public InvalidateCache set(String parameterName, Object value) {
        return (InvalidateCache) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of UrlMap resources available to the specified project.
     *
     * Create a request for the method "urlMaps.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.UrlMapList> {

      private static final String REST_PATH = "{project}/global/urlMaps";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of UrlMap resources available to the specified project.
       *
       * Create a request for the method "urlMaps.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.UrlMapList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Patches the specified UrlMap resource with the data included in the request. This method supports
     * PATCH semantics and uses the JSON merge patch format and processing rules.
     *
     * Create a request for the method "urlMaps.patch".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap resource to patch.
     * @param content the {@link com.google.api.services.compute.model.UrlMap}
     * @return the request
     */
    public Patch patch(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMap content) throws java.io.IOException {
      Patch result = new Patch(project, urlMap, content);
      initialize(result);
      return result;
    }

    public class Patch extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Patches the specified UrlMap resource with the data included in the request. This method
       * supports PATCH semantics and uses the JSON merge patch format and processing rules.
       *
       * Create a request for the method "urlMaps.patch".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap resource to patch.
       * @param content the {@link com.google.api.services.compute.model.UrlMap}
       * @since 1.13
       */
      protected Patch(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMap content) {
        super(Compute.this, "PATCH", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Patch setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap resource to patch. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap resource to patch.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap resource to patch. */
      public Patch setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Patch setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified UrlMap resource with the data included in the request.
     *
     * Create a request for the method "urlMaps.update".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap resource to update.
     * @param content the {@link com.google.api.services.compute.model.UrlMap}
     * @return the request
     */
    public Update update(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMap content) throws java.io.IOException {
      Update result = new Update(project, urlMap, content);
      initialize(result);
      return result;
    }

    public class Update extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Updates the specified UrlMap resource with the data included in the request.
       *
       * Create a request for the method "urlMaps.update".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap resource to update.
       * @param content the {@link com.google.api.services.compute.model.UrlMap}
       * @since 1.13
       */
      protected Update(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMap content) {
        super(Compute.this, "PUT", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Update setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap resource to update. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap resource to update.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap resource to update. */
      public Update setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Update setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be
     * run. Calling this method does NOT create the UrlMap.
     *
     * Create a request for the method "urlMaps.validate".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Validate#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param urlMap Name of the UrlMap resource to be validated as.
     * @param content the {@link com.google.api.services.compute.model.UrlMapsValidateRequest}
     * @return the request
     */
    public Validate validate(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMapsValidateRequest content) throws java.io.IOException {
      Validate result = new Validate(project, urlMap, content);
      initialize(result);
      return result;
    }

    public class Validate extends ComputeRequest<com.google.api.services.compute.model.UrlMapsValidateResponse> {

      private static final String REST_PATH = "{project}/global/urlMaps/{urlMap}/validate";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern URL_MAP_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be
       * run. Calling this method does NOT create the UrlMap.
       *
       * Create a request for the method "urlMaps.validate".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Validate#execute()} method to invoke the remote operation. <p>
       * {@link
       * Validate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param urlMap Name of the UrlMap resource to be validated as.
       * @param content the {@link com.google.api.services.compute.model.UrlMapsValidateRequest}
       * @since 1.13
       */
      protected Validate(java.lang.String project, java.lang.String urlMap, com.google.api.services.compute.model.UrlMapsValidateRequest content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.UrlMapsValidateResponse.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.urlMap = com.google.api.client.util.Preconditions.checkNotNull(urlMap, "Required parameter urlMap must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Validate setAlt(java.lang.String alt) {
        return (Validate) super.setAlt(alt);
      }

      @Override
      public Validate setFields(java.lang.String fields) {
        return (Validate) super.setFields(fields);
      }

      @Override
      public Validate setKey(java.lang.String key) {
        return (Validate) super.setKey(key);
      }

      @Override
      public Validate setOauthToken(java.lang.String oauthToken) {
        return (Validate) super.setOauthToken(oauthToken);
      }

      @Override
      public Validate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Validate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Validate setQuotaUser(java.lang.String quotaUser) {
        return (Validate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Validate setUserIp(java.lang.String userIp) {
        return (Validate) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Validate setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the UrlMap resource to be validated as. */
      @com.google.api.client.util.Key
      private java.lang.String urlMap;

      /** Name of the UrlMap resource to be validated as.
       */
      public java.lang.String getUrlMap() {
        return urlMap;
      }

      /** Name of the UrlMap resource to be validated as. */
      public Validate setUrlMap(java.lang.String urlMap) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(URL_MAP_PATTERN.matcher(urlMap).matches(),
              "Parameter urlMap must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.urlMap = urlMap;
        return this;
      }

      @Override
      public Validate set(String parameterName, Object value) {
        return (Validate) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the VpnTunnels collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.VpnTunnels.List request = compute.vpnTunnels().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public VpnTunnels vpnTunnels() {
    return new VpnTunnels();
  }

  /**
   * The "vpnTunnels" collection of methods.
   */
  public class VpnTunnels {

    /**
     * Retrieves an aggregated list of VPN tunnels.
     *
     * Create a request for the method "vpnTunnels.aggregatedList".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public AggregatedList aggregatedList(java.lang.String project) throws java.io.IOException {
      AggregatedList result = new AggregatedList(project);
      initialize(result);
      return result;
    }

    public class AggregatedList extends ComputeRequest<com.google.api.services.compute.model.VpnTunnelAggregatedList> {

      private static final String REST_PATH = "{project}/aggregated/vpnTunnels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves an aggregated list of VPN tunnels.
       *
       * Create a request for the method "vpnTunnels.aggregatedList".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link AggregatedList#execute()} method to invoke the remote operation.
       * <p> {@link AggregatedList#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected AggregatedList(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.VpnTunnelAggregatedList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AggregatedList setAlt(java.lang.String alt) {
        return (AggregatedList) super.setAlt(alt);
      }

      @Override
      public AggregatedList setFields(java.lang.String fields) {
        return (AggregatedList) super.setFields(fields);
      }

      @Override
      public AggregatedList setKey(java.lang.String key) {
        return (AggregatedList) super.setKey(key);
      }

      @Override
      public AggregatedList setOauthToken(java.lang.String oauthToken) {
        return (AggregatedList) super.setOauthToken(oauthToken);
      }

      @Override
      public AggregatedList setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AggregatedList) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AggregatedList setQuotaUser(java.lang.String quotaUser) {
        return (AggregatedList) super.setQuotaUser(quotaUser);
      }

      @Override
      public AggregatedList setUserIp(java.lang.String userIp) {
        return (AggregatedList) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public AggregatedList setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public AggregatedList setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public AggregatedList setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public AggregatedList setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public AggregatedList setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public AggregatedList set(String parameterName, Object value) {
        return (AggregatedList) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified VpnTunnel resource.
     *
     * Create a request for the method "vpnTunnels.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param vpnTunnel Name of the VpnTunnel resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String region, java.lang.String vpnTunnel) throws java.io.IOException {
      Delete result = new Delete(project, region, vpnTunnel);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/vpnTunnels/{vpnTunnel}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern VPN_TUNNEL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified VpnTunnel resource.
       *
       * Create a request for the method "vpnTunnels.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param vpnTunnel Name of the VpnTunnel resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String region, java.lang.String vpnTunnel) {
        super(Compute.this, "DELETE", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.vpnTunnel = com.google.api.client.util.Preconditions.checkNotNull(vpnTunnel, "Required parameter vpnTunnel must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(VPN_TUNNEL_PATTERN.matcher(vpnTunnel).matches(),
              "Parameter vpnTunnel must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Delete setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the VpnTunnel resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String vpnTunnel;

      /** Name of the VpnTunnel resource to delete.
       */
      public java.lang.String getVpnTunnel() {
        return vpnTunnel;
      }

      /** Name of the VpnTunnel resource to delete. */
      public Delete setVpnTunnel(java.lang.String vpnTunnel) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(VPN_TUNNEL_PATTERN.matcher(vpnTunnel).matches(),
              "Parameter vpnTunnel must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.vpnTunnel = vpnTunnel;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Delete setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the specified VpnTunnel resource. Gets a list of available VPN tunnels by making a list()
     * request.
     *
     * Create a request for the method "vpnTunnels.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param vpnTunnel Name of the VpnTunnel resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String region, java.lang.String vpnTunnel) throws java.io.IOException {
      Get result = new Get(project, region, vpnTunnel);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.VpnTunnel> {

      private static final String REST_PATH = "{project}/regions/{region}/vpnTunnels/{vpnTunnel}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern VPN_TUNNEL_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified VpnTunnel resource. Gets a list of available VPN tunnels by making a
       * list() request.
       *
       * Create a request for the method "vpnTunnels.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param vpnTunnel Name of the VpnTunnel resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String region, java.lang.String vpnTunnel) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.VpnTunnel.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.vpnTunnel = com.google.api.client.util.Preconditions.checkNotNull(vpnTunnel, "Required parameter vpnTunnel must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(VPN_TUNNEL_PATTERN.matcher(vpnTunnel).matches(),
              "Parameter vpnTunnel must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Get setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /** Name of the VpnTunnel resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String vpnTunnel;

      /** Name of the VpnTunnel resource to return.
       */
      public java.lang.String getVpnTunnel() {
        return vpnTunnel;
      }

      /** Name of the VpnTunnel resource to return. */
      public Get setVpnTunnel(java.lang.String vpnTunnel) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(VPN_TUNNEL_PATTERN.matcher(vpnTunnel).matches(),
              "Parameter vpnTunnel must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.vpnTunnel = vpnTunnel;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a VpnTunnel resource in the specified project and region using the data included in the
     * request.
     *
     * Create a request for the method "vpnTunnels.insert".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @param content the {@link com.google.api.services.compute.model.VpnTunnel}
     * @return the request
     */
    public Insert insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.VpnTunnel content) throws java.io.IOException {
      Insert result = new Insert(project, region, content);
      initialize(result);
      return result;
    }

    public class Insert extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/regions/{region}/vpnTunnels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Creates a VpnTunnel resource in the specified project and region using the data included in the
       * request.
       *
       * Create a request for the method "vpnTunnels.insert".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @param content the {@link com.google.api.services.compute.model.VpnTunnel}
       * @since 1.13
       */
      protected Insert(java.lang.String project, java.lang.String region, com.google.api.services.compute.model.VpnTunnel content) {
        super(Compute.this, "POST", REST_PATH, content, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Insert setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public Insert setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      @com.google.api.client.util.Key
      private java.lang.String requestId;

      /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
     your request, the server will know to ignore the request if it has already been completed.

     For example, consider a situation where you make an initial request and the request times out. If
     you make the request again with the same request ID, the server can check if original operation
     with the same request ID was received, and if so, will ignore the second request. This prevents
     clients from accidentally creating duplicate commitments.

     The request ID must be a valid UUID with the exception that zero UUID is not supported
     (00000000-0000-0000-0000-000000000000).
       */
      public java.lang.String getRequestId() {
        return requestId;
      }

      /**
       * An optional request ID to identify requests. Specify a unique request ID so that if you
       * must retry your request, the server will know to ignore the request if it has already been
       * completed.
       *
       * For example, consider a situation where you make an initial request and the request times
       * out. If you make the request again with the same request ID, the server can check if
       * original operation with the same request ID was received, and if so, will ignore the second
       * request. This prevents clients from accidentally creating duplicate commitments.
       *
       * The request ID must be a valid UUID with the exception that zero UUID is not supported
       * (00000000-0000-0000-0000-000000000000).
       */
      public Insert setRequestId(java.lang.String requestId) {
        this.requestId = requestId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of VpnTunnel resources contained in the specified project and region.
     *
     * Create a request for the method "vpnTunnels.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param region Name of the region for this request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String region) throws java.io.IOException {
      List result = new List(project, region);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.VpnTunnelList> {

      private static final String REST_PATH = "{project}/regions/{region}/vpnTunnels";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern REGION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of VpnTunnel resources contained in the specified project and region.
       *
       * Create a request for the method "vpnTunnels.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param region Name of the region for this request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String region) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.VpnTunnelList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the region for this request. */
      @com.google.api.client.util.Key
      private java.lang.String region;

      /** Name of the region for this request.
       */
      public java.lang.String getRegion() {
        return region;
      }

      /** Name of the region for this request. */
      public List setRegion(java.lang.String region) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
              "Parameter region must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.region = region;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ZoneOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.ZoneOperations.List request = compute.zoneOperations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ZoneOperations zoneOperations() {
    return new ZoneOperations();
  }

  /**
   * The "zoneOperations" collection of methods.
   */
  public class ZoneOperations {

    /**
     * Deletes the specified zone-specific Operations resource.
     *
     * Create a request for the method "zoneOperations.delete".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param operation Name of the Operations resource to delete.
     * @return the request
     */
    public Delete delete(java.lang.String project, java.lang.String zone, java.lang.String operation) throws java.io.IOException {
      Delete result = new Delete(project, zone, operation);
      initialize(result);
      return result;
    }

    public class Delete extends ComputeRequest<Void> {

      private static final String REST_PATH = "{project}/zones/{zone}/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Deletes the specified zone-specific Operations resource.
       *
       * Create a request for the method "zoneOperations.delete".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param operation Name of the Operations resource to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String project, java.lang.String zone, java.lang.String operation) {
        super(Compute.this, "DELETE", REST_PATH, null, Void.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Delete setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Delete setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the Operations resource to delete. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to delete.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to delete. */
      public Delete setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the specified zone-specific Operations resource.
     *
     * Create a request for the method "zoneOperations.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for this request.
     * @param operation Name of the Operations resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone, java.lang.String operation) throws java.io.IOException {
      Get result = new Get(project, zone, operation);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Operation> {

      private static final String REST_PATH = "{project}/zones/{zone}/operations/{operation}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      private final java.util.regex.Pattern OPERATION_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves the specified zone-specific Operations resource.
       *
       * Create a request for the method "zoneOperations.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for this request.
       * @param operation Name of the Operations resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone, java.lang.String operation) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Operation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = com.google.api.client.util.Preconditions.checkNotNull(operation, "Required parameter operation must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for this request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for this request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for this request. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /** Name of the Operations resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String operation;

      /** Name of the Operations resource to return.
       */
      public java.lang.String getOperation() {
        return operation;
      }

      /** Name of the Operations resource to return. */
      public Get setOperation(java.lang.String operation) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(OPERATION_PATTERN.matcher(operation).matches(),
              "Parameter operation must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.operation = operation;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of Operation resources contained within the specified zone.
     *
     * Create a request for the method "zoneOperations.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone for request.
     * @return the request
     */
    public List list(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      List result = new List(project, zone);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.OperationList> {

      private static final String REST_PATH = "{project}/zones/{zone}/operations";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Retrieves a list of Operation resources contained within the specified zone.
       *
       * Create a request for the method "zoneOperations.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone for request.
       * @since 1.13
       */
      protected List(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.OperationList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone for request. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone for request.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone for request. */
      public List setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Zones collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Compute compute = new Compute(...);}
   *   {@code Compute.Zones.List request = compute.zones().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Zones zones() {
    return new Zones();
  }

  /**
   * The "zones" collection of methods.
   */
  public class Zones {

    /**
     * Returns the specified Zone resource. Gets a list of available zones by making a list() request.
     *
     * Create a request for the method "zones.get".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @param zone Name of the zone resource to return.
     * @return the request
     */
    public Get get(java.lang.String project, java.lang.String zone) throws java.io.IOException {
      Get result = new Get(project, zone);
      initialize(result);
      return result;
    }

    public class Get extends ComputeRequest<com.google.api.services.compute.model.Zone> {

      private static final String REST_PATH = "{project}/zones/{zone}";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      private final java.util.regex.Pattern ZONE_PATTERN =
          java.util.regex.Pattern.compile("[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");

      /**
       * Returns the specified Zone resource. Gets a list of available zones by making a list() request.
       *
       * Create a request for the method "zones.get".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @param zone Name of the zone resource to return.
       * @since 1.13
       */
      protected Get(java.lang.String project, java.lang.String zone) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.Zone.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.zone = com.google.api.client.util.Preconditions.checkNotNull(zone, "Required parameter zone must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public Get setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /** Name of the zone resource to return. */
      @com.google.api.client.util.Key
      private java.lang.String zone;

      /** Name of the zone resource to return.
       */
      public java.lang.String getZone() {
        return zone;
      }

      /** Name of the zone resource to return. */
      public Get setZone(java.lang.String zone) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ZONE_PATTERN.matcher(zone).matches(),
              "Parameter zone must conform to the pattern " +
              "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?");
        }
        this.zone = zone;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of Zone resources available to the specified project.
     *
     * Create a request for the method "zones.list".
     *
     * This request holds the parameters needed by the compute server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param project Project ID for this request.
     * @return the request
     */
    public List list(java.lang.String project) throws java.io.IOException {
      List result = new List(project);
      initialize(result);
      return result;
    }

    public class List extends ComputeRequest<com.google.api.services.compute.model.ZoneList> {

      private static final String REST_PATH = "{project}/zones";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");

      /**
       * Retrieves the list of Zone resources available to the specified project.
       *
       * Create a request for the method "zones.list".
       *
       * This request holds the parameters needed by the the compute server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param project Project ID for this request.
       * @since 1.13
       */
      protected List(java.lang.String project) {
        super(Compute.this, "GET", REST_PATH, null, com.google.api.services.compute.model.ZoneList.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Project ID for this request. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Project ID for this request.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Project ID for this request. */
      public List setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))");
        }
        this.project = project;
        return this;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** A filter expression that filters resources listed in the response. The expression must specify the
     field name, a comparison operator, and the value that you want to use for filtering. The value must
     be a string, a number, or a boolean. The comparison operator must be either =, !=, >, or <.

     For example, if you are filtering Compute Engine instances, you can exclude instances named
     example-instance by specifying name != example-instance.

     You can also filter nested fields. For example, you could specify scheduling.automaticRestart =
     false to include instances only if they are not scheduled for automatic restarts. You can use
     filtering on nested fields to filter based on resource labels.

     To filter on multiple expressions, provide each separate expression within parentheses. For
     example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each
     expression is an AND expression. However, you can include AND and OR expressions explicitly. For
     example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
     (scheduling.automaticRestart = true).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * A filter expression that filters resources listed in the response. The expression must
       * specify the field name, a comparison operator, and the value that you want to use for
       * filtering. The value must be a string, a number, or a boolean. The comparison operator must
       * be either =, !=, >, or <.
       *
       * For example, if you are filtering Compute Engine instances, you can exclude instances named
       * example-instance by specifying name != example-instance.
       *
       * You can also filter nested fields. For example, you could specify
       * scheduling.automaticRestart = false to include instances only if they are not scheduled for
       * automatic restarts. You can use filtering on nested fields to filter based on resource
       * labels.
       *
       * To filter on multiple expressions, provide each separate expression within parentheses. For
       * example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default,
       * each expression is an AND expression. However, you can include AND and OR expressions
       * explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel
       * Broadwell") AND (scheduling.automaticRestart = true).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of results per page that should be returned. If the number of available results
     is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next
     page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
     500) [default: 500] [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of results per page that should be returned. If the number of available
       * results is larger than maxResults, Compute Engine returns a nextPageToken that can be used
       * to get the next page of results in subsequent list requests. Acceptable values are 0 to
       * 500, inclusive. (Default: 500)
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Sorts list results by a certain order. By default, results are returned in alphanumerical order
     based on the resource name.

     You can also sort results in descending order based on the creation timestamp using
     orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in
     reverse chronological order (newest result first). Use this to sort resources like operations so
     that the newest operation is returned first.

     Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * Sorts list results by a certain order. By default, results are returned in alphanumerical
       * order based on the resource name.
       *
       * You can also sort results in descending order based on the creation timestamp using
       * orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field
       * in reverse chronological order (newest result first). Use this to sort resources like
       * operations so that the newest operation is returned first.
       *
       * Currently, only sorting by name or creationTimestamp desc is supported.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
     request to get the next page of results.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous
       * list request to get the next page of results.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Compute}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Compute}. */
    @Override
    public Compute build() {
      return new Compute(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ComputeRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setComputeRequestInitializer(
        ComputeRequestInitializer computeRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(computeRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
