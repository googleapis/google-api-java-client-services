/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Custom information type based on a dictionary of words or phrases. This can be used to match
 * sensitive information specific to the data, such as a list of employee IDs or job titles.
 *
 * Dictionary words are case-insensitive and all characters other than letters and digits in the
 * unicode [Basic Multilingual
 * Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be
 * replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will
 * match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the
 * characters surrounding any match must be of a different type than the adjacent characters within
 * the word, so letters must be next to non-letters and digits next to non-digits. For example, the
 * dictionary word "jen" will match the first three letters of the text "jen123" but will return no
 * matches for "jennifer".
 *
 * Dictionary words containing a large number of characters that are not letters or digits may
 * result in unexpected findings because such characters are treated as whitespace. The
 * [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of
 * dictionaries. For dictionaries that do not fit within these constraints, consider using
 * `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2Dictionary extends com.google.api.client.json.GenericJson {

  /**
   * Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2CloudStoragePath cloudStoragePath;

  /**
   * List of words or phrases to search for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2WordList wordList;

  /**
   * Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudStoragePath getCloudStoragePath() {
    return cloudStoragePath;
  }

  /**
   * Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
   * @param cloudStoragePath cloudStoragePath or {@code null} for none
   */
  public GooglePrivacyDlpV2Dictionary setCloudStoragePath(GooglePrivacyDlpV2CloudStoragePath cloudStoragePath) {
    this.cloudStoragePath = cloudStoragePath;
    return this;
  }

  /**
   * List of words or phrases to search for.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2WordList getWordList() {
    return wordList;
  }

  /**
   * List of words or phrases to search for.
   * @param wordList wordList or {@code null} for none
   */
  public GooglePrivacyDlpV2Dictionary setWordList(GooglePrivacyDlpV2WordList wordList) {
    this.wordList = wordList;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2Dictionary set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2Dictionary) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2Dictionary clone() {
    return (GooglePrivacyDlpV2Dictionary) super.clone();
  }

}
