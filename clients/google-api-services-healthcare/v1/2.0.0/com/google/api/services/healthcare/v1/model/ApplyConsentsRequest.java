/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1.model;

/**
 * Request to apply the Consent resources for the specified FHIR store.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ApplyConsentsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Scope down to a list of patients.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PatientScope patientScope;

  /**
   * Optional. Scope down to patients whose most recent consent changes are in the time range. Can
   * only be used with a versioning store (i.e. when disable_resource_versioning is set to false).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeRange timeRange;

  /**
   * Optional. If true, the method only validates Consent resources to make sure they are supported.
   * When the operation completes, ApplyConsentsResponse is returned where `consent_apply_success`
   * and `consent_apply_failure` indicate supported and unsupported (or invalid) Consent resources,
   * respectively. Otherwise, the method propagates the aggregate consensual information to the
   * patient's resources. Upon success, `affected_resources` in the ApplyConsentsResponse indicates
   * the number of resources that may have consensual access changed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean validateOnly;

  /**
   * Optional. Scope down to a list of patients.
   * @return value or {@code null} for none
   */
  public PatientScope getPatientScope() {
    return patientScope;
  }

  /**
   * Optional. Scope down to a list of patients.
   * @param patientScope patientScope or {@code null} for none
   */
  public ApplyConsentsRequest setPatientScope(PatientScope patientScope) {
    this.patientScope = patientScope;
    return this;
  }

  /**
   * Optional. Scope down to patients whose most recent consent changes are in the time range. Can
   * only be used with a versioning store (i.e. when disable_resource_versioning is set to false).
   * @return value or {@code null} for none
   */
  public TimeRange getTimeRange() {
    return timeRange;
  }

  /**
   * Optional. Scope down to patients whose most recent consent changes are in the time range. Can
   * only be used with a versioning store (i.e. when disable_resource_versioning is set to false).
   * @param timeRange timeRange or {@code null} for none
   */
  public ApplyConsentsRequest setTimeRange(TimeRange timeRange) {
    this.timeRange = timeRange;
    return this;
  }

  /**
   * Optional. If true, the method only validates Consent resources to make sure they are supported.
   * When the operation completes, ApplyConsentsResponse is returned where `consent_apply_success`
   * and `consent_apply_failure` indicate supported and unsupported (or invalid) Consent resources,
   * respectively. Otherwise, the method propagates the aggregate consensual information to the
   * patient's resources. Upon success, `affected_resources` in the ApplyConsentsResponse indicates
   * the number of resources that may have consensual access changed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getValidateOnly() {
    return validateOnly;
  }

  /**
   * Optional. If true, the method only validates Consent resources to make sure they are supported.
   * When the operation completes, ApplyConsentsResponse is returned where `consent_apply_success`
   * and `consent_apply_failure` indicate supported and unsupported (or invalid) Consent resources,
   * respectively. Otherwise, the method propagates the aggregate consensual information to the
   * patient's resources. Upon success, `affected_resources` in the ApplyConsentsResponse indicates
   * the number of resources that may have consensual access changed.
   * @param validateOnly validateOnly or {@code null} for none
   */
  public ApplyConsentsRequest setValidateOnly(java.lang.Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  @Override
  public ApplyConsentsRequest set(String fieldName, Object value) {
    return (ApplyConsentsRequest) super.set(fieldName, value);
  }

  @Override
  public ApplyConsentsRequest clone() {
    return (ApplyConsentsRequest) super.clone();
  }

}
