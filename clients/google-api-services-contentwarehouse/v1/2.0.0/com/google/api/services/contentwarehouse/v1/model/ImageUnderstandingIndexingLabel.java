/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A single label with score and meta data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageUnderstandingIndexingLabel extends com.google.api.client.json.GenericJson {

  /**
   * Human readable text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String canonicalText;

  /**
   * KG entity id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityId;

  /**
   * Meta data for topicality, visible labels, attribute, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ImageUnderstandingIndexingMetaData> metaData;

  /**
   * Confidence score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float score;

  /**
   * Human readable text.
   * @return value or {@code null} for none
   */
  public java.lang.String getCanonicalText() {
    return canonicalText;
  }

  /**
   * Human readable text.
   * @param canonicalText canonicalText or {@code null} for none
   */
  public ImageUnderstandingIndexingLabel setCanonicalText(java.lang.String canonicalText) {
    this.canonicalText = canonicalText;
    return this;
  }

  /**
   * KG entity id.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityId() {
    return entityId;
  }

  /**
   * KG entity id.
   * @param entityId entityId or {@code null} for none
   */
  public ImageUnderstandingIndexingLabel setEntityId(java.lang.String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Meta data for topicality, visible labels, attribute, etc.
   * @return value or {@code null} for none
   */
  public java.util.List<ImageUnderstandingIndexingMetaData> getMetaData() {
    return metaData;
  }

  /**
   * Meta data for topicality, visible labels, attribute, etc.
   * @param metaData metaData or {@code null} for none
   */
  public ImageUnderstandingIndexingLabel setMetaData(java.util.List<ImageUnderstandingIndexingMetaData> metaData) {
    this.metaData = metaData;
    return this;
  }

  /**
   * Confidence score.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScore() {
    return score;
  }

  /**
   * Confidence score.
   * @param score score or {@code null} for none
   */
  public ImageUnderstandingIndexingLabel setScore(java.lang.Float score) {
    this.score = score;
    return this;
  }

  @Override
  public ImageUnderstandingIndexingLabel set(String fieldName, Object value) {
    return (ImageUnderstandingIndexingLabel) super.set(fieldName, value);
  }

  @Override
  public ImageUnderstandingIndexingLabel clone() {
    return (ImageUnderstandingIndexingLabel) super.clone();
  }

}
