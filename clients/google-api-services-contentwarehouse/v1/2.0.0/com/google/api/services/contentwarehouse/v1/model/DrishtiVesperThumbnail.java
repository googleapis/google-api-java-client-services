/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The attributes of a video thumbnail.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DrishtiVesperThumbnail extends com.google.api.client.json.GenericJson {

  /**
   * Thumbnail dense features
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> denseFeatures;

  /**
   * Thumbnail image as an encoded image. Deprecated, use encoded_thumbnails instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encodedImageString;

  /**
   * Thumbnail image as an encoded image with smaller resolution. Deprecated, use encoded_thumbnails
   * instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encodedImageStringSmall;

  /**
   * Encoded thumbnail images.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiVesperEncodedThumbnail> encodedThumbnails;

  static {
    // hack to force ProGuard to consider DrishtiVesperEncodedThumbnail used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(DrishtiVesperEncodedThumbnail.class);
  }

  /**
   * Thumbnail id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Text in video thumbnails that was detected by OCR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ocrText;

  /**
   * Thumbnail quality scores.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiVesperThumbnailQualityScore> qualityScores;

  /**
   * If true, this thumbnail should update default thumbnail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean shouldUpdateDefaultThumbnail;

  /**
   * Thumbnailer Version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String thumbnailerModelVersion;

  /**
   * Thumbnail timestamp in milliseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer timestampMs;

  /**
   * Thumbnail type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiVesperUserReportUserReportedThumbnail userReportedThumbnail;

  /**
   * All user reported thumbnails of interest.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DrishtiVesperUserReportUserReportedThumbnail> userReportedThumbnails;

  /**
   * Thumbnail version, i.e., the unix time in seconds when the thumbnail was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long version;

  /**
   * Thumbnail dense features
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getDenseFeatures() {
    return denseFeatures;
  }

  /**
   * Thumbnail dense features
   * @param denseFeatures denseFeatures or {@code null} for none
   */
  public DrishtiVesperThumbnail setDenseFeatures(java.util.List<java.lang.Float> denseFeatures) {
    this.denseFeatures = denseFeatures;
    return this;
  }

  /**
   * Thumbnail image as an encoded image. Deprecated, use encoded_thumbnails instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncodedImageString() {
    return encodedImageString;
  }

  /**
   * Thumbnail image as an encoded image. Deprecated, use encoded_thumbnails instead.
   * @param encodedImageString encodedImageString or {@code null} for none
   */
  public DrishtiVesperThumbnail setEncodedImageString(java.lang.String encodedImageString) {
    this.encodedImageString = encodedImageString;
    return this;
  }

  /**
   * Thumbnail image as an encoded image with smaller resolution. Deprecated, use encoded_thumbnails
   * instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncodedImageStringSmall() {
    return encodedImageStringSmall;
  }

  /**
   * Thumbnail image as an encoded image with smaller resolution. Deprecated, use encoded_thumbnails
   * instead.
   * @param encodedImageStringSmall encodedImageStringSmall or {@code null} for none
   */
  public DrishtiVesperThumbnail setEncodedImageStringSmall(java.lang.String encodedImageStringSmall) {
    this.encodedImageStringSmall = encodedImageStringSmall;
    return this;
  }

  /**
   * Encoded thumbnail images.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiVesperEncodedThumbnail> getEncodedThumbnails() {
    return encodedThumbnails;
  }

  /**
   * Encoded thumbnail images.
   * @param encodedThumbnails encodedThumbnails or {@code null} for none
   */
  public DrishtiVesperThumbnail setEncodedThumbnails(java.util.List<DrishtiVesperEncodedThumbnail> encodedThumbnails) {
    this.encodedThumbnails = encodedThumbnails;
    return this;
  }

  /**
   * Thumbnail id.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Thumbnail id.
   * @param id id or {@code null} for none
   */
  public DrishtiVesperThumbnail setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Text in video thumbnails that was detected by OCR.
   * @return value or {@code null} for none
   */
  public java.lang.String getOcrText() {
    return ocrText;
  }

  /**
   * Text in video thumbnails that was detected by OCR.
   * @param ocrText ocrText or {@code null} for none
   */
  public DrishtiVesperThumbnail setOcrText(java.lang.String ocrText) {
    this.ocrText = ocrText;
    return this;
  }

  /**
   * Thumbnail quality scores.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiVesperThumbnailQualityScore> getQualityScores() {
    return qualityScores;
  }

  /**
   * Thumbnail quality scores.
   * @param qualityScores qualityScores or {@code null} for none
   */
  public DrishtiVesperThumbnail setQualityScores(java.util.List<DrishtiVesperThumbnailQualityScore> qualityScores) {
    this.qualityScores = qualityScores;
    return this;
  }

  /**
   * If true, this thumbnail should update default thumbnail.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShouldUpdateDefaultThumbnail() {
    return shouldUpdateDefaultThumbnail;
  }

  /**
   * If true, this thumbnail should update default thumbnail.
   * @param shouldUpdateDefaultThumbnail shouldUpdateDefaultThumbnail or {@code null} for none
   */
  public DrishtiVesperThumbnail setShouldUpdateDefaultThumbnail(java.lang.Boolean shouldUpdateDefaultThumbnail) {
    this.shouldUpdateDefaultThumbnail = shouldUpdateDefaultThumbnail;
    return this;
  }

  /**
   * Thumbnailer Version.
   * @return value or {@code null} for none
   */
  public java.lang.String getThumbnailerModelVersion() {
    return thumbnailerModelVersion;
  }

  /**
   * Thumbnailer Version.
   * @param thumbnailerModelVersion thumbnailerModelVersion or {@code null} for none
   */
  public DrishtiVesperThumbnail setThumbnailerModelVersion(java.lang.String thumbnailerModelVersion) {
    this.thumbnailerModelVersion = thumbnailerModelVersion;
    return this;
  }

  /**
   * Thumbnail timestamp in milliseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTimestampMs() {
    return timestampMs;
  }

  /**
   * Thumbnail timestamp in milliseconds.
   * @param timestampMs timestampMs or {@code null} for none
   */
  public DrishtiVesperThumbnail setTimestampMs(java.lang.Integer timestampMs) {
    this.timestampMs = timestampMs;
    return this;
  }

  /**
   * Thumbnail type.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Thumbnail type.
   * @param type type or {@code null} for none
   */
  public DrishtiVesperThumbnail setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DrishtiVesperUserReportUserReportedThumbnail getUserReportedThumbnail() {
    return userReportedThumbnail;
  }

  /**
   * @param userReportedThumbnail userReportedThumbnail or {@code null} for none
   */
  public DrishtiVesperThumbnail setUserReportedThumbnail(DrishtiVesperUserReportUserReportedThumbnail userReportedThumbnail) {
    this.userReportedThumbnail = userReportedThumbnail;
    return this;
  }

  /**
   * All user reported thumbnails of interest.
   * @return value or {@code null} for none
   */
  public java.util.List<DrishtiVesperUserReportUserReportedThumbnail> getUserReportedThumbnails() {
    return userReportedThumbnails;
  }

  /**
   * All user reported thumbnails of interest.
   * @param userReportedThumbnails userReportedThumbnails or {@code null} for none
   */
  public DrishtiVesperThumbnail setUserReportedThumbnails(java.util.List<DrishtiVesperUserReportUserReportedThumbnail> userReportedThumbnails) {
    this.userReportedThumbnails = userReportedThumbnails;
    return this;
  }

  /**
   * Thumbnail version, i.e., the unix time in seconds when the thumbnail was created.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVersion() {
    return version;
  }

  /**
   * Thumbnail version, i.e., the unix time in seconds when the thumbnail was created.
   * @param version version or {@code null} for none
   */
  public DrishtiVesperThumbnail setVersion(java.lang.Long version) {
    this.version = version;
    return this;
  }

  @Override
  public DrishtiVesperThumbnail set(String fieldName, Object value) {
    return (DrishtiVesperThumbnail) super.set(fieldName, value);
  }

  @Override
  public DrishtiVesperThumbnail clone() {
    return (DrishtiVesperThumbnail) super.clone();
  }

}
