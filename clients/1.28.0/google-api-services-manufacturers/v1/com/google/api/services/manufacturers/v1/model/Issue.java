/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.manufacturers.v1.model;

/**
 * Product issue.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Manufacturer Center API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Issue extends com.google.api.client.json.GenericJson {

  /**
   * If present, the attribute that triggered the issue. For more information about attributes, see
   * https://support.google.com/manufacturers/answer/6124116.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String attribute;

  /**
   * Longer description of the issue focused on how to resolve it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The destination this issue applies to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destination;

  /**
   * What needs to happen to resolve the issue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resolution;

  /**
   * The severity of the issue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String severity;

  /**
   * The timestamp when this issue appeared.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestamp;

  /**
   * Short title describing the nature of the issue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”,
   * “IMAGE_NOT_SERVEABLE”, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * If present, the attribute that triggered the issue. For more information about attributes, see
   * https://support.google.com/manufacturers/answer/6124116.
   * @return value or {@code null} for none
   */
  public java.lang.String getAttribute() {
    return attribute;
  }

  /**
   * If present, the attribute that triggered the issue. For more information about attributes, see
   * https://support.google.com/manufacturers/answer/6124116.
   * @param attribute attribute or {@code null} for none
   */
  public Issue setAttribute(java.lang.String attribute) {
    this.attribute = attribute;
    return this;
  }

  /**
   * Longer description of the issue focused on how to resolve it.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Longer description of the issue focused on how to resolve it.
   * @param description description or {@code null} for none
   */
  public Issue setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The destination this issue applies to.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestination() {
    return destination;
  }

  /**
   * The destination this issue applies to.
   * @param destination destination or {@code null} for none
   */
  public Issue setDestination(java.lang.String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * What needs to happen to resolve the issue.
   * @return value or {@code null} for none
   */
  public java.lang.String getResolution() {
    return resolution;
  }

  /**
   * What needs to happen to resolve the issue.
   * @param resolution resolution or {@code null} for none
   */
  public Issue setResolution(java.lang.String resolution) {
    this.resolution = resolution;
    return this;
  }

  /**
   * The severity of the issue.
   * @return value or {@code null} for none
   */
  public java.lang.String getSeverity() {
    return severity;
  }

  /**
   * The severity of the issue.
   * @param severity severity or {@code null} for none
   */
  public Issue setSeverity(java.lang.String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * The timestamp when this issue appeared.
   * @return value or {@code null} for none
   */
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * The timestamp when this issue appeared.
   * @param timestamp timestamp or {@code null} for none
   */
  public Issue setTimestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Short title describing the nature of the issue.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Short title describing the nature of the issue.
   * @param title title or {@code null} for none
   */
  public Issue setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”,
   * “IMAGE_NOT_SERVEABLE”, etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”,
   * “IMAGE_NOT_SERVEABLE”, etc.
   * @param type type or {@code null} for none
   */
  public Issue setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Issue set(String fieldName, Object value) {
    return (Issue) super.set(fieldName, value);
  }

  @Override
  public Issue clone() {
    return (Issue) super.clone();
  }

}
