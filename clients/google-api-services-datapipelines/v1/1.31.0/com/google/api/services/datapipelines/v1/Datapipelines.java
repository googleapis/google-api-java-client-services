/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datapipelines.v1;

/**
 * Service definition for Datapipelines (v1).
 *
 * <p>
 * Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dataflow/docs/guides/data-pipelines" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DatapipelinesRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Datapipelines extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the Data pipelines API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://datapipelines.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://datapipelines.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Datapipelines(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Datapipelines(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Datapipelines datapipelines = new Datapipelines(...);}
   *   {@code Datapipelines.Projects.List request = datapipelines.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Datapipelines datapipelines = new Datapipelines(...);}
     *   {@code Datapipelines.Locations.List request = datapipelines.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
       *
       * Create a request for the method "locations.listPipelines".
       *
       * This request holds the parameters needed by the datapipelines server.  After setting any optional
       * parameters, call the {@link ListPipelines#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
       * @return the request
       */
      public ListPipelines listPipelines(java.lang.String parent) throws java.io.IOException {
        ListPipelines result = new ListPipelines(parent);
        initialize(result);
        return result;
      }

      public class ListPipelines extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1ListPipelinesResponse> {

        private static final String REST_PATH = "v1/{+parent}";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access
         * it.
         *
         * Create a request for the method "locations.listPipelines".
         *
         * This request holds the parameters needed by the the datapipelines server.  After setting any
         * optional parameters, call the {@link ListPipelines#execute()} method to invoke the remote
         * operation. <p> {@link ListPipelines#initialize(com.google.api.client.googleapis.services.Abstra
         * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param parent Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
         * @since 1.13
         */
        protected ListPipelines(java.lang.String parent) {
          super(Datapipelines.this, "GET", REST_PATH, null, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1ListPipelinesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public ListPipelines set$Xgafv(java.lang.String $Xgafv) {
          return (ListPipelines) super.set$Xgafv($Xgafv);
        }

        @Override
        public ListPipelines setAccessToken(java.lang.String accessToken) {
          return (ListPipelines) super.setAccessToken(accessToken);
        }

        @Override
        public ListPipelines setAlt(java.lang.String alt) {
          return (ListPipelines) super.setAlt(alt);
        }

        @Override
        public ListPipelines setCallback(java.lang.String callback) {
          return (ListPipelines) super.setCallback(callback);
        }

        @Override
        public ListPipelines setFields(java.lang.String fields) {
          return (ListPipelines) super.setFields(fields);
        }

        @Override
        public ListPipelines setKey(java.lang.String key) {
          return (ListPipelines) super.setKey(key);
        }

        @Override
        public ListPipelines setOauthToken(java.lang.String oauthToken) {
          return (ListPipelines) super.setOauthToken(oauthToken);
        }

        @Override
        public ListPipelines setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ListPipelines) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ListPipelines setQuotaUser(java.lang.String quotaUser) {
          return (ListPipelines) super.setQuotaUser(quotaUser);
        }

        @Override
        public ListPipelines setUploadType(java.lang.String uploadType) {
          return (ListPipelines) super.setUploadType(uploadType);
        }

        @Override
        public ListPipelines setUploadProtocol(java.lang.String uploadProtocol) {
          return (ListPipelines) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
         */
        public ListPipelines setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * An expression for filtering the results of the request. If unspecified, all pipelines
         * will be returned. Multiple filters can be applied and must be comma separated. Fields
         * eligible for filtering are: + `type`: The type of the pipeline (streaming or batch).
         * Allowed values are `ALL`, `BATCH`, and `STREAMING`. + `status`: The activity status of
         * the pipeline. Allowed values are `ALL`, `ACTIVE`, `ARCHIVED`, and `PAUSED`. For example,
         * to limit results to active batch processing pipelines: type:BATCH,status:ACTIVE
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** An expression for filtering the results of the request. If unspecified, all pipelines will be
       returned. Multiple filters can be applied and must be comma separated. Fields eligible for
       filtering are: + `type`: The type of the pipeline (streaming or batch). Allowed values are `ALL`,
       `BATCH`, and `STREAMING`. + `status`: The activity status of the pipeline. Allowed values are
       `ALL`, `ACTIVE`, `ARCHIVED`, and `PAUSED`. For example, to limit results to active batch processing
       pipelines: type:BATCH,status:ACTIVE
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * An expression for filtering the results of the request. If unspecified, all pipelines
         * will be returned. Multiple filters can be applied and must be comma separated. Fields
         * eligible for filtering are: + `type`: The type of the pipeline (streaming or batch).
         * Allowed values are `ALL`, `BATCH`, and `STREAMING`. + `status`: The activity status of
         * the pipeline. Allowed values are `ALL`, `ACTIVE`, `ARCHIVED`, and `PAUSED`. For example,
         * to limit results to active batch processing pipelines: type:BATCH,status:ACTIVE
         */
        public ListPipelines setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * The maximum number of entities to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, the max limit is yet to be determined
         * by the backend implementation.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entities to return. The service may return fewer than this value, even if
       there are additional pages. If unspecified, the max limit is yet to be determined by the backend
       implementation.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of entities to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, the max limit is yet to be determined
         * by the backend implementation.
         */
        public ListPipelines setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListPipelines` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListPipelines` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListPipelines` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListPipelines` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListPipelines` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListPipelines` must
         * match the call that provided the page token.
         */
        public ListPipelines setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public ListPipelines set(String parameterName, Object value) {
          return (ListPipelines) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Pipelines collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Datapipelines datapipelines = new Datapipelines(...);}
       *   {@code Datapipelines.Pipelines.List request = datapipelines.pipelines().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Pipelines pipelines() {
        return new Pipelines();
      }

      /**
       * The "pipelines" collection of methods.
       */
      public class Pipelines {

        /**
         * Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses
         * the scheduler information to create an internal scheduler that runs jobs periodically. If the
         * internal scheduler is not configured, you can use RunPipeline to run jobs.
         *
         * Create a request for the method "pipelines.create".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
         * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline> {

          private static final String REST_PATH = "v1/{+parent}/pipelines";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines
           * uses the scheduler information to create an internal scheduler that runs jobs periodically. If
           * the internal scheduler is not configured, you can use RunPipeline to run jobs.
           *
           * Create a request for the method "pipelines.create".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline content) {
            super(Datapipelines.this, "POST", REST_PATH, content, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.
         *
         * Create a request for the method "pipelines.delete".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");

          /**
           * Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.
           *
           * Create a request for the method "pipelines.delete".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Datapipelines.this, "DELETE", REST_PATH, null, com.google.api.services.datapipelines.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The pipeline name. For example:
         `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a
         * "FORBIDDEN" error if the caller doesn't have permission to access it.
         *
         * Create a request for the method "pipelines.get".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");

          /**
           * Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a
           * "FORBIDDEN" error if the caller doesn't have permission to access it.
           *
           * Create a request for the method "pipelines.get".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Datapipelines.this, "GET", REST_PATH, null, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The pipeline name. For example:
         `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the
         * pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the
         * UpdatePipeline request until you receive a successful response.
         *
         * Create a request for the method "pipelines.patch".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. *
         *        `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and
         *        periods (.). For more information, see [Identifying projects](https://cloud.google.com
         *        /resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID`
         *        is the canonical ID for the pipeline's location. The list of available locations can be
         *        obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data
         *        Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App
         *        Engine application, so it's only available in [App Engine
         *        regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of
         *        the pipeline. Must be unique for the selected project and location.
         * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");

          /**
           * Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the
           * pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the
           * UpdatePipeline request until you receive a successful response.
           *
           * Create a request for the method "pipelines.patch".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. *
         *        `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and
         *        periods (.). For more information, see [Identifying projects](https://cloud.google.com
         *        /resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID`
         *        is the canonical ID for the pipeline's location. The list of available locations can be
         *        obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data
         *        Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App
         *        Engine application, so it's only available in [App Engine
         *        regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of
         *        the pipeline. Must be unique for the selected project and location.
           * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline content) {
            super(Datapipelines.this, "PATCH", REST_PATH, content, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can
           * contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.).
           * For more information, see [Identifying projects](https://cloud.google.com/resource-
           * manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the
           * canonical ID for the pipeline's location. The list of available locations can be
           * obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data
           * Pipelines service is not available in all regions. It depends on Cloud Scheduler, an
           * App Engine application, so it's only available in [App Engine
           * regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of
           * the pipeline. Must be unique for the selected project and location.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
         * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and
         periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-
         manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID
         for the pipeline's location. The list of available locations can be obtained by calling
         `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not
         available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only
         available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID`
         is the ID of the pipeline. Must be unique for the selected project and location.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can
           * contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.).
           * For more information, see [Identifying projects](https://cloud.google.com/resource-
           * manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the
           * canonical ID for the pipeline's location. The list of available locations can be
           * obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data
           * Pipelines service is not available in all regions. It depends on Cloud Scheduler, an
           * App Engine application, so it's only available in [App Engine
           * regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of
           * the pipeline. Must be unique for the selected project and location.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Creates a job for the specified pipeline directly. You can use this method when the internal
         * scheduler is not configured and you want to trigger the job directly or through an external
         * system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error if
         * the user doesn't have permission to access the pipeline or run jobs for the pipeline.
         *
         * Create a request for the method "pipelines.run".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Run#execute()} method to invoke the remote operation.
         *
         * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
         * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineRequest}
         * @return the request
         */
        public Run run(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineRequest content) throws java.io.IOException {
          Run result = new Run(name, content);
          initialize(result);
          return result;
        }

        public class Run extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineResponse> {

          private static final String REST_PATH = "v1/{+name}:run";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");

          /**
           * Creates a job for the specified pipeline directly. You can use this method when the internal
           * scheduler is not configured and you want to trigger the job directly or through an external
           * system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error
           * if the user doesn't have permission to access the pipeline or run jobs for the pipeline.
           *
           * Create a request for the method "pipelines.run".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Run#execute()} method to invoke the remote operation. <p>
           * {@link Run#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineRequest}
           * @since 1.13
           */
          protected Run(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineRequest content) {
            super(Datapipelines.this, "POST", REST_PATH, content, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1RunPipelineResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
          }

          @Override
          public Run set$Xgafv(java.lang.String $Xgafv) {
            return (Run) super.set$Xgafv($Xgafv);
          }

          @Override
          public Run setAccessToken(java.lang.String accessToken) {
            return (Run) super.setAccessToken(accessToken);
          }

          @Override
          public Run setAlt(java.lang.String alt) {
            return (Run) super.setAlt(alt);
          }

          @Override
          public Run setCallback(java.lang.String callback) {
            return (Run) super.setCallback(callback);
          }

          @Override
          public Run setFields(java.lang.String fields) {
            return (Run) super.setFields(fields);
          }

          @Override
          public Run setKey(java.lang.String key) {
            return (Run) super.setKey(key);
          }

          @Override
          public Run setOauthToken(java.lang.String oauthToken) {
            return (Run) super.setOauthToken(oauthToken);
          }

          @Override
          public Run setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Run) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Run setQuotaUser(java.lang.String quotaUser) {
            return (Run) super.setQuotaUser(quotaUser);
          }

          @Override
          public Run setUploadType(java.lang.String uploadType) {
            return (Run) super.setUploadType(uploadType);
          }

          @Override
          public Run setUploadProtocol(java.lang.String uploadProtocol) {
            return (Run) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The pipeline name. For example:
         `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public Run setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Run set(String parameterName, Object value) {
            return (Run) super.set(parameterName, value);
          }
        }
        /**
         * Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's deleted,
         * and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is retained.
         *
         * Create a request for the method "pipelines.stop".
         *
         * This request holds the parameters needed by the datapipelines server.  After setting any optional
         * parameters, call the {@link Stop#execute()} method to invoke the remote operation.
         *
         * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
         * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1StopPipelineRequest}
         * @return the request
         */
        public Stop stop(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1StopPipelineRequest content) throws java.io.IOException {
          Stop result = new Stop(name, content);
          initialize(result);
          return result;
        }

        public class Stop extends DatapipelinesRequest<com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline> {

          private static final String REST_PATH = "v1/{+name}:stop";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");

          /**
           * Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's
           * deleted, and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is
           * retained.
           *
           * Create a request for the method "pipelines.stop".
           *
           * This request holds the parameters needed by the the datapipelines server.  After setting any
           * optional parameters, call the {@link Stop#execute()} method to invoke the remote operation. <p>
           * {@link Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The pipeline name. For example:
         *        `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           * @param content the {@link com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1StopPipelineRequest}
           * @since 1.13
           */
          protected Stop(java.lang.String name, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1StopPipelineRequest content) {
            super(Datapipelines.this, "POST", REST_PATH, content, com.google.api.services.datapipelines.v1.model.GoogleCloudDatapipelinesV1Pipeline.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
          }

          @Override
          public Stop set$Xgafv(java.lang.String $Xgafv) {
            return (Stop) super.set$Xgafv($Xgafv);
          }

          @Override
          public Stop setAccessToken(java.lang.String accessToken) {
            return (Stop) super.setAccessToken(accessToken);
          }

          @Override
          public Stop setAlt(java.lang.String alt) {
            return (Stop) super.setAlt(alt);
          }

          @Override
          public Stop setCallback(java.lang.String callback) {
            return (Stop) super.setCallback(callback);
          }

          @Override
          public Stop setFields(java.lang.String fields) {
            return (Stop) super.setFields(fields);
          }

          @Override
          public Stop setKey(java.lang.String key) {
            return (Stop) super.setKey(key);
          }

          @Override
          public Stop setOauthToken(java.lang.String oauthToken) {
            return (Stop) super.setOauthToken(oauthToken);
          }

          @Override
          public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Stop) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Stop setQuotaUser(java.lang.String quotaUser) {
            return (Stop) super.setQuotaUser(quotaUser);
          }

          @Override
          public Stop setUploadType(java.lang.String uploadType) {
            return (Stop) super.setUploadType(uploadType);
          }

          @Override
          public Stop setUploadProtocol(java.lang.String uploadProtocol) {
            return (Stop) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The pipeline name. For example:
         `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The pipeline name. For example:
           * `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.
           */
          public Stop setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/pipelines/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Stop set(String parameterName, Object value) {
            return (Stop) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Datapipelines}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Datapipelines}. */
    @Override
    public Datapipelines build() {
      return new Datapipelines(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DatapipelinesRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDatapipelinesRequestInitializer(
        DatapipelinesRequestInitializer datapipelinesRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(datapipelinesRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
