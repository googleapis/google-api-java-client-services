/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.directory.model;

/**
 * Public API: Resources.calendars
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CalendarResource extends com.google.api.client.json.GenericJson {

  /**
   * Unique ID for the building a resource is located in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildingId;

  /**
   * Capacity of a resource, number of seats in a room.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer capacity;

  /**
   * ETag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etags;

  /**
   * Instances of features for the calendar resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Object featureInstances;

  /**
   * Name of the floor a resource is located on.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String floorName;

  /**
   * Name of the section within a floor a resource is located in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String floorSection;

  /**
   * The read-only auto-generated name of the calendar resource which includes metadata about the
   * resource such as building name, floor, capacity, etc. For example, "NYC-2-Training Room 1A
   * (16)".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String generatedResourceName;

  /**
   * The type of the resource. For calendar resources, the value is
   * `admin#directory#resources#calendars#CalendarResource`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to
   * CATEGORY_UNKNOWN.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceCategory;

  /**
   * Description of the resource, visible only to admins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceDescription;

  /**
   * The read-only email for the calendar resource. Generated as part of creating a new calendar
   * resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceEmail;

  /**
   * The unique ID for the calendar resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceId;

  /**
   * The name of the calendar resource. For example, "Training Room 1A".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceName;

  /**
   * The type of the calendar resource, intended for non-room resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceType;

  /**
   * Description of the resource, visible to users and admins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userVisibleDescription;

  /**
   * Unique ID for the building a resource is located in.
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildingId() {
    return buildingId;
  }

  /**
   * Unique ID for the building a resource is located in.
   * @param buildingId buildingId or {@code null} for none
   */
  public CalendarResource setBuildingId(java.lang.String buildingId) {
    this.buildingId = buildingId;
    return this;
  }

  /**
   * Capacity of a resource, number of seats in a room.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCapacity() {
    return capacity;
  }

  /**
   * Capacity of a resource, number of seats in a room.
   * @param capacity capacity or {@code null} for none
   */
  public CalendarResource setCapacity(java.lang.Integer capacity) {
    this.capacity = capacity;
    return this;
  }

  /**
   * ETag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtags() {
    return etags;
  }

  /**
   * ETag of the resource.
   * @param etags etags or {@code null} for none
   */
  public CalendarResource setEtags(java.lang.String etags) {
    this.etags = etags;
    return this;
  }

  /**
   * Instances of features for the calendar resource.
   * @return value or {@code null} for none
   */
  public java.lang.Object getFeatureInstances() {
    return featureInstances;
  }

  /**
   * Instances of features for the calendar resource.
   * @param featureInstances featureInstances or {@code null} for none
   */
  public CalendarResource setFeatureInstances(java.lang.Object featureInstances) {
    this.featureInstances = featureInstances;
    return this;
  }

  /**
   * Name of the floor a resource is located on.
   * @return value or {@code null} for none
   */
  public java.lang.String getFloorName() {
    return floorName;
  }

  /**
   * Name of the floor a resource is located on.
   * @param floorName floorName or {@code null} for none
   */
  public CalendarResource setFloorName(java.lang.String floorName) {
    this.floorName = floorName;
    return this;
  }

  /**
   * Name of the section within a floor a resource is located in.
   * @return value or {@code null} for none
   */
  public java.lang.String getFloorSection() {
    return floorSection;
  }

  /**
   * Name of the section within a floor a resource is located in.
   * @param floorSection floorSection or {@code null} for none
   */
  public CalendarResource setFloorSection(java.lang.String floorSection) {
    this.floorSection = floorSection;
    return this;
  }

  /**
   * The read-only auto-generated name of the calendar resource which includes metadata about the
   * resource such as building name, floor, capacity, etc. For example, "NYC-2-Training Room 1A
   * (16)".
   * @return value or {@code null} for none
   */
  public java.lang.String getGeneratedResourceName() {
    return generatedResourceName;
  }

  /**
   * The read-only auto-generated name of the calendar resource which includes metadata about the
   * resource such as building name, floor, capacity, etc. For example, "NYC-2-Training Room 1A
   * (16)".
   * @param generatedResourceName generatedResourceName or {@code null} for none
   */
  public CalendarResource setGeneratedResourceName(java.lang.String generatedResourceName) {
    this.generatedResourceName = generatedResourceName;
    return this;
  }

  /**
   * The type of the resource. For calendar resources, the value is
   * `admin#directory#resources#calendars#CalendarResource`.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The type of the resource. For calendar resources, the value is
   * `admin#directory#resources#calendars#CalendarResource`.
   * @param kind kind or {@code null} for none
   */
  public CalendarResource setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to
   * CATEGORY_UNKNOWN.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceCategory() {
    return resourceCategory;
  }

  /**
   * The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to
   * CATEGORY_UNKNOWN.
   * @param resourceCategory resourceCategory or {@code null} for none
   */
  public CalendarResource setResourceCategory(java.lang.String resourceCategory) {
    this.resourceCategory = resourceCategory;
    return this;
  }

  /**
   * Description of the resource, visible only to admins.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceDescription() {
    return resourceDescription;
  }

  /**
   * Description of the resource, visible only to admins.
   * @param resourceDescription resourceDescription or {@code null} for none
   */
  public CalendarResource setResourceDescription(java.lang.String resourceDescription) {
    this.resourceDescription = resourceDescription;
    return this;
  }

  /**
   * The read-only email for the calendar resource. Generated as part of creating a new calendar
   * resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceEmail() {
    return resourceEmail;
  }

  /**
   * The read-only email for the calendar resource. Generated as part of creating a new calendar
   * resource.
   * @param resourceEmail resourceEmail or {@code null} for none
   */
  public CalendarResource setResourceEmail(java.lang.String resourceEmail) {
    this.resourceEmail = resourceEmail;
    return this;
  }

  /**
   * The unique ID for the calendar resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * The unique ID for the calendar resource.
   * @param resourceId resourceId or {@code null} for none
   */
  public CalendarResource setResourceId(java.lang.String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * The name of the calendar resource. For example, "Training Room 1A".
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceName() {
    return resourceName;
  }

  /**
   * The name of the calendar resource. For example, "Training Room 1A".
   * @param resourceName resourceName or {@code null} for none
   */
  public CalendarResource setResourceName(java.lang.String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * The type of the calendar resource, intended for non-room resources.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * The type of the calendar resource, intended for non-room resources.
   * @param resourceType resourceType or {@code null} for none
   */
  public CalendarResource setResourceType(java.lang.String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Description of the resource, visible to users and admins.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserVisibleDescription() {
    return userVisibleDescription;
  }

  /**
   * Description of the resource, visible to users and admins.
   * @param userVisibleDescription userVisibleDescription or {@code null} for none
   */
  public CalendarResource setUserVisibleDescription(java.lang.String userVisibleDescription) {
    this.userVisibleDescription = userVisibleDescription;
    return this;
  }

  @Override
  public CalendarResource set(String fieldName, Object value) {
    return (CalendarResource) super.set(fieldName, value);
  }

  @Override
  public CalendarResource clone() {
    return (CalendarResource) super.clone();
  }

}
