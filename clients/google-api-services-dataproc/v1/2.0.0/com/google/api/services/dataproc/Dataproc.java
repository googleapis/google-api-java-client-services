/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc;

/**
 * Service definition for Dataproc (v1).
 *
 * <p>
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dataproc/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DataprocRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Dataproc extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Cloud Dataproc API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://dataproc.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://dataproc.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Dataproc(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Dataproc(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Dataproc dataproc = new Dataproc(...);}
   *   {@code Dataproc.Projects.List request = dataproc.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dataproc dataproc = new Dataproc(...);}
     *   {@code Dataproc.Locations.List request = dataproc.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the AutoscalingPolicies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.AutoscalingPolicies.List request = dataproc.autoscalingPolicies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutoscalingPolicies autoscalingPolicies() {
        return new AutoscalingPolicies();
      }

      /**
       * The "autoscalingPolicies" collection of methods.
       */
      public class AutoscalingPolicies {

        /**
         * Creates new autoscaling policy.
         *
         * Create a request for the method "autoscalingPolicies.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.AutoscalingPolicy content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+parent}/autoscalingPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates new autoscaling policy.
           *
           * Create a request for the method "autoscalingPolicies.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.AutoscalingPolicy content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.create, the resource name of the location has
           * the following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The "resource name" of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.autoscalingPolicies.create, the resource name of the region has the following
         format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.create,
         the resource name of the location has the following format:
         projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.create, the resource name of the location has
           * the following format: projects/{project_id}/locations/{location}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by
         * one or more clusters.
         *
         * Create a request for the method "autoscalingPolicies.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by
           * one or more clusters.
           *
           * Create a request for the method "autoscalingPolicies.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.autoscalingPolicies.delete, the resource name of the policy has the following
         format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies.delete, the resource name of the policy has the following
         format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves autoscaling policy.
         *
         * Create a request for the method "autoscalingPolicies.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.get, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.get, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Retrieves autoscaling policy.
           *
           * Create a request for the method "autoscalingPolicies.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.get, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.get, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.get,
         the resource name of the policy has the following format:
         projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies.get, the resource name of the policy has the following
         format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "autoscalingPolicies.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "autoscalingPolicies.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists autoscaling policies in the project.
         *
         * Create a request for the method "autoscalingPolicies.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.list, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListAutoscalingPoliciesResponse> {

          private static final String REST_PATH = "v1/{+parent}/autoscalingPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists autoscaling policies in the project.
           *
           * Create a request for the method "autoscalingPolicies.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.list, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListAutoscalingPoliciesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The "resource name" of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.list,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.autoscalingPolicies.list, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of results to return in each response. Must be less than
           * or equal to 1000. Defaults to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of results to return in each response. Must be less than or equal to
         1000. Defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of results to return in each response. Must be less than
           * or equal to 1000. Defaults to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The page token, returned by a previous call, to request the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "autoscalingPolicies.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "autoscalingPolicies.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "autoscalingPolicies.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "autoscalingPolicies.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be
         * full replacements.
         *
         * Create a request for the method "autoscalingPolicies.update".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         *        projects.locations.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.dataproc.model.AutoscalingPolicy content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will
           * be full replacements.
           *
           * Create a request for the method "autoscalingPolicies.update".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         *        projects.locations.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.dataproc.model.AutoscalingPolicy content) {
            super(Dataproc.this, "PUT", REST_PATH, content, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies, the resource name of the policy has the following
           * format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the
         resource name of the policy has the following format:
         projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies, the resource name of the policy has the following format:
         projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies, the resource name of the policy has the following
           * format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Batches collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Batches.List request = dataproc.batches().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Batches batches() {
        return new Batches();
      }

      /**
       * The "batches" collection of methods.
       */
      public class Batches {

        /**
         * Analyze a Batch for possible recommendations and insights.
         *
         * Create a request for the method "batches.analyze".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Analyze#execute()} method to invoke the remote operation.
         *
         * @param name Required. The fully qualified name of the batch to analyze in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
         * @param content the {@link com.google.api.services.dataproc.model.AnalyzeBatchRequest}
         * @return the request
         */
        public Analyze analyze(java.lang.String name, com.google.api.services.dataproc.model.AnalyzeBatchRequest content) throws java.io.IOException {
          Analyze result = new Analyze(name, content);
          initialize(result);
          return result;
        }

        public class Analyze extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:analyze";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+$");

          /**
           * Analyze a Batch for possible recommendations and insights.
           *
           * Create a request for the method "batches.analyze".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Analyze#execute()} method to invoke the remote operation.
           * <p> {@link
           * Analyze#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The fully qualified name of the batch to analyze in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           * @param content the {@link com.google.api.services.dataproc.model.AnalyzeBatchRequest}
           * @since 1.13
           */
          protected Analyze(java.lang.String name, com.google.api.services.dataproc.model.AnalyzeBatchRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
          }

          @Override
          public Analyze set$Xgafv(java.lang.String $Xgafv) {
            return (Analyze) super.set$Xgafv($Xgafv);
          }

          @Override
          public Analyze setAccessToken(java.lang.String accessToken) {
            return (Analyze) super.setAccessToken(accessToken);
          }

          @Override
          public Analyze setAlt(java.lang.String alt) {
            return (Analyze) super.setAlt(alt);
          }

          @Override
          public Analyze setCallback(java.lang.String callback) {
            return (Analyze) super.setCallback(callback);
          }

          @Override
          public Analyze setFields(java.lang.String fields) {
            return (Analyze) super.setFields(fields);
          }

          @Override
          public Analyze setKey(java.lang.String key) {
            return (Analyze) super.setKey(key);
          }

          @Override
          public Analyze setOauthToken(java.lang.String oauthToken) {
            return (Analyze) super.setOauthToken(oauthToken);
          }

          @Override
          public Analyze setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Analyze) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Analyze setQuotaUser(java.lang.String quotaUser) {
            return (Analyze) super.setQuotaUser(quotaUser);
          }

          @Override
          public Analyze setUploadType(java.lang.String uploadType) {
            return (Analyze) super.setUploadType(uploadType);
          }

          @Override
          public Analyze setUploadProtocol(java.lang.String uploadProtocol) {
            return (Analyze) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the batch to analyze in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The fully qualified name of the batch to analyze in the format
         "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The fully qualified name of the batch to analyze in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public Analyze setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Analyze set(String parameterName, Object value) {
            return (Analyze) super.set(parameterName, value);
          }
        }
        /**
         * Creates a batch workload that executes asynchronously.
         *
         * Create a request for the method "batches.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this batch will be created.
         * @param content the {@link com.google.api.services.dataproc.model.Batch}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.Batch content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/batches";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a batch workload that executes asynchronously.
           *
           * Create a request for the method "batches.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this batch will be created.
           * @param content the {@link com.google.api.services.dataproc.model.Batch}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.Batch content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource where this batch will be created. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this batch will be created.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource where this batch will be created. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The ID to use for the batch, which will become the final component of the
           * batch's resource name.This value must be 4-63 characters. Valid characters are
           * /[a-z][0-9]-/.
           */
          @com.google.api.client.util.Key
          private java.lang.String batchId;

          /** Optional. The ID to use for the batch, which will become the final component of the batch's
         resource name.This value must be 4-63 characters. Valid characters are /[a-z][0-9]-/.
           */
          public java.lang.String getBatchId() {
            return batchId;
          }

          /**
           * Optional. The ID to use for the batch, which will become the final component of the
           * batch's resource name.This value must be 4-63 characters. Valid characters are
           * /[a-z][0-9]-/.
           */
          public Create setBatchId(java.lang.String batchId) {
            this.batchId = batchId;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * CreateBatchRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.d
           * ataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest)s with the same request_id, the
           * second request is ignored and the Operation that corresponds to the first Batch created
           * and stored in the backend is returned.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the service receives two CreateBatchRequest
         (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.datapro
         c.v1.CreateBatchRequest)s with the same request_id, the second request is ignored and the Operation
         that corresponds to the first Batch created and stored in the backend is returned.Recommendation:
         Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value
         must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
         length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * CreateBatchRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.d
           * ataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest)s with the same request_id, the
           * second request is ignored and the Operation that corresponds to the first Batch created
           * and stored in the backend is returned.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the batch workload resource. If the batch is not in a CANCELLED, SUCCEEDED or FAILED
         * State, the delete operation fails and the response returns FAILED_PRECONDITION.
         *
         * Create a request for the method "batches.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The fully qualified name of the batch to retrieve in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+$");

          /**
           * Deletes the batch workload resource. If the batch is not in a CANCELLED, SUCCEEDED or FAILED
           * State, the delete operation fails and the response returns FAILED_PRECONDITION.
           *
           * Create a request for the method "batches.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the batch to retrieve in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The fully qualified name of the batch to retrieve in the format
         "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The fully qualified name of the batch to retrieve in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the batch workload resource representation.
         *
         * Create a request for the method "batches.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The fully qualified name of the batch to retrieve in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Batch> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+$");

          /**
           * Gets the batch workload resource representation.
           *
           * Create a request for the method "batches.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
         *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Batch.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the batch to retrieve in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The fully qualified name of the batch to retrieve in the format
         "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The fully qualified name of the batch to retrieve in the format
           * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists batch workloads.
         *
         * Create a request for the method "batches.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of batches.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListBatchesResponse> {

          private static final String REST_PATH = "v1/{+parent}/batches";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists batch workloads.
           *
           * Create a request for the method "batches.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of batches.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListBatchesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of batches. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of batches.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of batches. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A filter for the batches to return in the response.A filter is a logical
           * expression constraining the values of various fields in each batch resource. Filters
           * are case sensitive, and may contain multiple clauses combined with logical operators
           * (AND/OR). Supported fields are batch_id, batch_uuid, state, create_time, and
           * labels.e.g. state = RUNNING and create_time < "2023-01-01T00:00:00Z" filters for
           * batches in state RUNNING that were created before 2023-01-01. state = RUNNING and
           * labels.environment=production filters for batches in state in a RUNNING state that have
           * a production environment label.See https://google.aip.dev/assets/misc/ebnf-
           * filtering.txt for a detailed description of the filter syntax and a list of supported
           * comparisons.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter for the batches to return in the response.A filter is a logical expression
         constraining the values of various fields in each batch resource. Filters are case sensitive, and
         may contain multiple clauses combined with logical operators (AND/OR). Supported fields are
         batch_id, batch_uuid, state, create_time, and labels.e.g. state = RUNNING and create_time <
         "2023-01-01T00:00:00Z" filters for batches in state RUNNING that were created before 2023-01-01.
         state = RUNNING and labels.environment=production filters for batches in state in a RUNNING state
         that have a production environment label.See https://google.aip.dev/assets/misc/ebnf-filtering.txt
         for a detailed description of the filter syntax and a list of supported comparisons.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter for the batches to return in the response.A filter is a logical
           * expression constraining the values of various fields in each batch resource. Filters
           * are case sensitive, and may contain multiple clauses combined with logical operators
           * (AND/OR). Supported fields are batch_id, batch_uuid, state, create_time, and
           * labels.e.g. state = RUNNING and create_time < "2023-01-01T00:00:00Z" filters for
           * batches in state RUNNING that were created before 2023-01-01. state = RUNNING and
           * labels.environment=production filters for batches in state in a RUNNING state that have
           * a production environment label.See https://google.aip.dev/assets/misc/ebnf-
           * filtering.txt for a detailed description of the filter syntax and a list of supported
           * comparisons.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Field(s) on which to sort the list of batches.Currently the only supported
           * sort orders are unspecified (empty) and create_time desc to sort by most recently
           * created batches first.See https://google.aip.dev/132#ordering for more details.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Field(s) on which to sort the list of batches.Currently the only supported sort orders
         are unspecified (empty) and create_time desc to sort by most recently created batches first.See
         https://google.aip.dev/132#ordering for more details.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Field(s) on which to sort the list of batches.Currently the only supported
           * sort orders are unspecified (empty) and create_time desc to sort by most recently
           * created batches first.See https://google.aip.dev/132#ordering for more details.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of batches to return in each response. The service may
           * return fewer than this value. The default page size is 20; the maximum page size is
           * 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of batches to return in each response. The service may return fewer
         than this value. The default page size is 20; the maximum page size is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of batches to return in each response. The service may
           * return fewer than this value. The default page size is 20; the maximum page size is
           * 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token received from a previous ListBatches call. Provide this token to
           * retrieve the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token received from a previous ListBatches call. Provide this token to retrieve
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token received from a previous ListBatches call. Provide this token to
           * retrieve the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the SparkApplications collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dataproc dataproc = new Dataproc(...);}
         *   {@code Dataproc.SparkApplications.List request = dataproc.sparkApplications().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SparkApplications sparkApplications() {
          return new SparkApplications();
        }

        /**
         * The "sparkApplications" collection of methods.
         */
        public class SparkApplications {

          /**
           * Obtain high level information corresponding to a single Spark Application.
           *
           * Create a request for the method "sparkApplications.access".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Access#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public Access access(java.lang.String name) throws java.io.IOException {
            Access result = new Access(name);
            initialize(result);
            return result;
          }

          public class Access extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationResponse> {

            private static final String REST_PATH = "v1/{+name}:access";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain high level information corresponding to a single Spark Application.
             *
             * Create a request for the method "sparkApplications.access".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Access#execute()} method to invoke the remote operation.
             * <p> {@link
             * Access#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected Access(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Access set$Xgafv(java.lang.String $Xgafv) {
              return (Access) super.set$Xgafv($Xgafv);
            }

            @Override
            public Access setAccessToken(java.lang.String accessToken) {
              return (Access) super.setAccessToken(accessToken);
            }

            @Override
            public Access setAlt(java.lang.String alt) {
              return (Access) super.setAlt(alt);
            }

            @Override
            public Access setCallback(java.lang.String callback) {
              return (Access) super.setCallback(callback);
            }

            @Override
            public Access setFields(java.lang.String fields) {
              return (Access) super.setFields(fields);
            }

            @Override
            public Access setKey(java.lang.String key) {
              return (Access) super.setKey(key);
            }

            @Override
            public Access setOauthToken(java.lang.String oauthToken) {
              return (Access) super.setOauthToken(oauthToken);
            }

            @Override
            public Access setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Access) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Access setQuotaUser(java.lang.String quotaUser) {
              return (Access) super.setQuotaUser(quotaUser);
            }

            @Override
            public Access setUploadType(java.lang.String uploadType) {
              return (Access) super.setUploadType(uploadType);
            }

            @Override
            public Access setUploadProtocol(java.lang.String uploadProtocol) {
              return (Access) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public Access setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public Access setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public Access set(String parameterName, Object value) {
              return (Access) super.set(parameterName, value);
            }
          }
          /**
           * Obtain environment details for a Spark Application
           *
           * Create a request for the method "sparkApplications.accessEnvironmentInfo".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessEnvironmentInfo#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessEnvironmentInfo accessEnvironmentInfo(java.lang.String name) throws java.io.IOException {
            AccessEnvironmentInfo result = new AccessEnvironmentInfo(name);
            initialize(result);
            return result;
          }

          public class AccessEnvironmentInfo extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationEnvironmentInfoResponse> {

            private static final String REST_PATH = "v1/{+name}:accessEnvironmentInfo";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain environment details for a Spark Application
             *
             * Create a request for the method "sparkApplications.accessEnvironmentInfo".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessEnvironmentInfo#execute()} method to invoke the
             * remote operation. <p> {@link AccessEnvironmentInfo#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessEnvironmentInfo(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationEnvironmentInfoResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessEnvironmentInfo set$Xgafv(java.lang.String $Xgafv) {
              return (AccessEnvironmentInfo) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessEnvironmentInfo setAccessToken(java.lang.String accessToken) {
              return (AccessEnvironmentInfo) super.setAccessToken(accessToken);
            }

            @Override
            public AccessEnvironmentInfo setAlt(java.lang.String alt) {
              return (AccessEnvironmentInfo) super.setAlt(alt);
            }

            @Override
            public AccessEnvironmentInfo setCallback(java.lang.String callback) {
              return (AccessEnvironmentInfo) super.setCallback(callback);
            }

            @Override
            public AccessEnvironmentInfo setFields(java.lang.String fields) {
              return (AccessEnvironmentInfo) super.setFields(fields);
            }

            @Override
            public AccessEnvironmentInfo setKey(java.lang.String key) {
              return (AccessEnvironmentInfo) super.setKey(key);
            }

            @Override
            public AccessEnvironmentInfo setOauthToken(java.lang.String oauthToken) {
              return (AccessEnvironmentInfo) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessEnvironmentInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessEnvironmentInfo) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessEnvironmentInfo setQuotaUser(java.lang.String quotaUser) {
              return (AccessEnvironmentInfo) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessEnvironmentInfo setUploadType(java.lang.String uploadType) {
              return (AccessEnvironmentInfo) super.setUploadType(uploadType);
            }

            @Override
            public AccessEnvironmentInfo setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessEnvironmentInfo) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessEnvironmentInfo setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessEnvironmentInfo setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessEnvironmentInfo set(String parameterName, Object value) {
              return (AccessEnvironmentInfo) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark job for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessJob".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessJob#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessJob accessJob(java.lang.String name) throws java.io.IOException {
            AccessJob result = new AccessJob(name);
            initialize(result);
            return result;
          }

          public class AccessJob extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationJobResponse> {

            private static final String REST_PATH = "v1/{+name}:accessJob";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark job for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessJob".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessJob#execute()} method to invoke the remote
             * operation. <p> {@link
             * AccessJob#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessJob(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationJobResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessJob set$Xgafv(java.lang.String $Xgafv) {
              return (AccessJob) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessJob setAccessToken(java.lang.String accessToken) {
              return (AccessJob) super.setAccessToken(accessToken);
            }

            @Override
            public AccessJob setAlt(java.lang.String alt) {
              return (AccessJob) super.setAlt(alt);
            }

            @Override
            public AccessJob setCallback(java.lang.String callback) {
              return (AccessJob) super.setCallback(callback);
            }

            @Override
            public AccessJob setFields(java.lang.String fields) {
              return (AccessJob) super.setFields(fields);
            }

            @Override
            public AccessJob setKey(java.lang.String key) {
              return (AccessJob) super.setKey(key);
            }

            @Override
            public AccessJob setOauthToken(java.lang.String oauthToken) {
              return (AccessJob) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessJob setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessJob) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessJob setQuotaUser(java.lang.String quotaUser) {
              return (AccessJob) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessJob setUploadType(java.lang.String uploadType) {
              return (AccessJob) super.setUploadType(uploadType);
            }

            @Override
            public AccessJob setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessJob) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessJob setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Job ID to fetch data for. */
            @com.google.api.client.util.Key
            private java.lang.Long jobId;

            /** Required. Job ID to fetch data for.
             */
            public java.lang.Long getJobId() {
              return jobId;
            }

            /** Required. Job ID to fetch data for. */
            public AccessJob setJobId(java.lang.Long jobId) {
              this.jobId = jobId;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessJob setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessJob set(String parameterName, Object value) {
              return (AccessJob) super.set(parameterName, value);
            }
          }
          /**
           * Obtain Spark Plan Graph for a Spark Application SQL execution. Limits the number of clusters
           * returned as part of the graph to 10000.
           *
           * Create a request for the method "sparkApplications.accessSqlPlan".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessSqlPlan#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessSqlPlan accessSqlPlan(java.lang.String name) throws java.io.IOException {
            AccessSqlPlan result = new AccessSqlPlan(name);
            initialize(result);
            return result;
          }

          public class AccessSqlPlan extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationSqlSparkPlanGraphResponse> {

            private static final String REST_PATH = "v1/{+name}:accessSqlPlan";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain Spark Plan Graph for a Spark Application SQL execution. Limits the number of clusters
             * returned as part of the graph to 10000.
             *
             * Create a request for the method "sparkApplications.accessSqlPlan".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessSqlPlan#execute()} method to invoke the remote
             * operation. <p> {@link AccessSqlPlan#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessSqlPlan(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationSqlSparkPlanGraphResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessSqlPlan set$Xgafv(java.lang.String $Xgafv) {
              return (AccessSqlPlan) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessSqlPlan setAccessToken(java.lang.String accessToken) {
              return (AccessSqlPlan) super.setAccessToken(accessToken);
            }

            @Override
            public AccessSqlPlan setAlt(java.lang.String alt) {
              return (AccessSqlPlan) super.setAlt(alt);
            }

            @Override
            public AccessSqlPlan setCallback(java.lang.String callback) {
              return (AccessSqlPlan) super.setCallback(callback);
            }

            @Override
            public AccessSqlPlan setFields(java.lang.String fields) {
              return (AccessSqlPlan) super.setFields(fields);
            }

            @Override
            public AccessSqlPlan setKey(java.lang.String key) {
              return (AccessSqlPlan) super.setKey(key);
            }

            @Override
            public AccessSqlPlan setOauthToken(java.lang.String oauthToken) {
              return (AccessSqlPlan) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessSqlPlan setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessSqlPlan) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessSqlPlan setQuotaUser(java.lang.String quotaUser) {
              return (AccessSqlPlan) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessSqlPlan setUploadType(java.lang.String uploadType) {
              return (AccessSqlPlan) super.setUploadType(uploadType);
            }

            @Override
            public AccessSqlPlan setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessSqlPlan) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessSqlPlan setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Execution ID */
            @com.google.api.client.util.Key
            private java.lang.Long executionId;

            /** Required. Execution ID
             */
            public java.lang.Long getExecutionId() {
              return executionId;
            }

            /** Required. Execution ID */
            public AccessSqlPlan setExecutionId(java.lang.Long executionId) {
              this.executionId = executionId;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessSqlPlan setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessSqlPlan set(String parameterName, Object value) {
              return (AccessSqlPlan) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a particular SQL Query for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessSqlQuery".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessSqlQuery#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessSqlQuery accessSqlQuery(java.lang.String name) throws java.io.IOException {
            AccessSqlQuery result = new AccessSqlQuery(name);
            initialize(result);
            return result;
          }

          public class AccessSqlQuery extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationSqlQueryResponse> {

            private static final String REST_PATH = "v1/{+name}:accessSqlQuery";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a particular SQL Query for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessSqlQuery".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessSqlQuery#execute()} method to invoke the remote
             * operation. <p> {@link AccessSqlQuery#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessSqlQuery(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationSqlQueryResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessSqlQuery set$Xgafv(java.lang.String $Xgafv) {
              return (AccessSqlQuery) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessSqlQuery setAccessToken(java.lang.String accessToken) {
              return (AccessSqlQuery) super.setAccessToken(accessToken);
            }

            @Override
            public AccessSqlQuery setAlt(java.lang.String alt) {
              return (AccessSqlQuery) super.setAlt(alt);
            }

            @Override
            public AccessSqlQuery setCallback(java.lang.String callback) {
              return (AccessSqlQuery) super.setCallback(callback);
            }

            @Override
            public AccessSqlQuery setFields(java.lang.String fields) {
              return (AccessSqlQuery) super.setFields(fields);
            }

            @Override
            public AccessSqlQuery setKey(java.lang.String key) {
              return (AccessSqlQuery) super.setKey(key);
            }

            @Override
            public AccessSqlQuery setOauthToken(java.lang.String oauthToken) {
              return (AccessSqlQuery) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessSqlQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessSqlQuery) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessSqlQuery setQuotaUser(java.lang.String quotaUser) {
              return (AccessSqlQuery) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessSqlQuery setUploadType(java.lang.String uploadType) {
              return (AccessSqlQuery) super.setUploadType(uploadType);
            }

            @Override
            public AccessSqlQuery setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessSqlQuery) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessSqlQuery setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean details;

            /** Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to hide.
             */
            public java.lang.Boolean getDetails() {
              return details;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            public AccessSqlQuery setDetails(java.lang.Boolean details) {
              this.details = details;
              return this;
            }

            /** Required. Execution ID */
            @com.google.api.client.util.Key
            private java.lang.Long executionId;

            /** Required. Execution ID
             */
            public java.lang.Long getExecutionId() {
              return executionId;
            }

            /** Required. Execution ID */
            public AccessSqlQuery setExecutionId(java.lang.Long executionId) {
              this.executionId = executionId;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessSqlQuery setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            @com.google.api.client.util.Key
            private java.lang.Boolean planDescription;

            /** Optional. Enables/ disables physical plan description on demand
             */
            public java.lang.Boolean getPlanDescription() {
              return planDescription;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            public AccessSqlQuery setPlanDescription(java.lang.Boolean planDescription) {
              this.planDescription = planDescription;
              return this;
            }

            @Override
            public AccessSqlQuery set(String parameterName, Object value) {
              return (AccessSqlQuery) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark stage attempt for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessStageAttempt".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessStageAttempt#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessStageAttempt accessStageAttempt(java.lang.String name) throws java.io.IOException {
            AccessStageAttempt result = new AccessStageAttempt(name);
            initialize(result);
            return result;
          }

          public class AccessStageAttempt extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationStageAttemptResponse> {

            private static final String REST_PATH = "v1/{+name}:accessStageAttempt";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark stage attempt for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessStageAttempt".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessStageAttempt#execute()} method to invoke the remote
             * operation. <p> {@link AccessStageAttempt#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessStageAttempt(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationStageAttemptResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessStageAttempt set$Xgafv(java.lang.String $Xgafv) {
              return (AccessStageAttempt) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessStageAttempt setAccessToken(java.lang.String accessToken) {
              return (AccessStageAttempt) super.setAccessToken(accessToken);
            }

            @Override
            public AccessStageAttempt setAlt(java.lang.String alt) {
              return (AccessStageAttempt) super.setAlt(alt);
            }

            @Override
            public AccessStageAttempt setCallback(java.lang.String callback) {
              return (AccessStageAttempt) super.setCallback(callback);
            }

            @Override
            public AccessStageAttempt setFields(java.lang.String fields) {
              return (AccessStageAttempt) super.setFields(fields);
            }

            @Override
            public AccessStageAttempt setKey(java.lang.String key) {
              return (AccessStageAttempt) super.setKey(key);
            }

            @Override
            public AccessStageAttempt setOauthToken(java.lang.String oauthToken) {
              return (AccessStageAttempt) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessStageAttempt setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessStageAttempt) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessStageAttempt setQuotaUser(java.lang.String quotaUser) {
              return (AccessStageAttempt) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessStageAttempt setUploadType(java.lang.String uploadType) {
              return (AccessStageAttempt) super.setUploadType(uploadType);
            }

            @Override
            public AccessStageAttempt setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessStageAttempt) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessStageAttempt setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessStageAttempt setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public AccessStageAttempt setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public AccessStageAttempt setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public AccessStageAttempt setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public AccessStageAttempt set(String parameterName, Object value) {
              return (AccessStageAttempt) super.set(parameterName, value);
            }
          }
          /**
           * Obtain RDD operation graph for a Spark Application Stage. Limits the number of clusters returned
           * as part of the graph to 10000.
           *
           * Create a request for the method "sparkApplications.accessStageRddGraph".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessStageRddGraph#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public AccessStageRddGraph accessStageRddGraph(java.lang.String name) throws java.io.IOException {
            AccessStageRddGraph result = new AccessStageRddGraph(name);
            initialize(result);
            return result;
          }

          public class AccessStageRddGraph extends DataprocRequest<com.google.api.services.dataproc.model.AccessSparkApplicationStageRddOperationGraphResponse> {

            private static final String REST_PATH = "v1/{+name}:accessStageRddGraph";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain RDD operation graph for a Spark Application Stage. Limits the number of clusters
             * returned as part of the graph to 10000.
             *
             * Create a request for the method "sparkApplications.accessStageRddGraph".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessStageRddGraph#execute()} method to invoke the remote
             * operation. <p> {@link AccessStageRddGraph#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected AccessStageRddGraph(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSparkApplicationStageRddOperationGraphResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessStageRddGraph set$Xgafv(java.lang.String $Xgafv) {
              return (AccessStageRddGraph) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessStageRddGraph setAccessToken(java.lang.String accessToken) {
              return (AccessStageRddGraph) super.setAccessToken(accessToken);
            }

            @Override
            public AccessStageRddGraph setAlt(java.lang.String alt) {
              return (AccessStageRddGraph) super.setAlt(alt);
            }

            @Override
            public AccessStageRddGraph setCallback(java.lang.String callback) {
              return (AccessStageRddGraph) super.setCallback(callback);
            }

            @Override
            public AccessStageRddGraph setFields(java.lang.String fields) {
              return (AccessStageRddGraph) super.setFields(fields);
            }

            @Override
            public AccessStageRddGraph setKey(java.lang.String key) {
              return (AccessStageRddGraph) super.setKey(key);
            }

            @Override
            public AccessStageRddGraph setOauthToken(java.lang.String oauthToken) {
              return (AccessStageRddGraph) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessStageRddGraph setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessStageRddGraph) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessStageRddGraph setQuotaUser(java.lang.String quotaUser) {
              return (AccessStageRddGraph) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessStageRddGraph setUploadType(java.lang.String uploadType) {
              return (AccessStageRddGraph) super.setUploadType(uploadType);
            }

            @Override
            public AccessStageRddGraph setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessStageRddGraph) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public AccessStageRddGraph setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public AccessStageRddGraph setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public AccessStageRddGraph setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public AccessStageRddGraph set(String parameterName, Object value) {
              return (AccessStageRddGraph) super.set(parameterName, value);
            }
          }
          /**
           * Obtain high level information and list of Spark Applications corresponding to a batch
           *
           * Create a request for the method "sparkApplications.search".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Search#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
           * @return the request
           */
          public Search search(java.lang.String parent) throws java.io.IOException {
            Search result = new Search(parent);
            initialize(result);
            return result;
          }

          public class Search extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationsResponse> {

            private static final String REST_PATH = "v1/{+parent}/sparkApplications:search";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+$");

            /**
             * Obtain high level information and list of Spark Applications corresponding to a batch
             *
             * Create a request for the method "sparkApplications.search".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
             * <p> {@link
             * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
             * @since 1.13
             */
            protected Search(java.lang.String parent) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Search set$Xgafv(java.lang.String $Xgafv) {
              return (Search) super.set$Xgafv($Xgafv);
            }

            @Override
            public Search setAccessToken(java.lang.String accessToken) {
              return (Search) super.setAccessToken(accessToken);
            }

            @Override
            public Search setAlt(java.lang.String alt) {
              return (Search) super.setAlt(alt);
            }

            @Override
            public Search setCallback(java.lang.String callback) {
              return (Search) super.setCallback(callback);
            }

            @Override
            public Search setFields(java.lang.String fields) {
              return (Search) super.setFields(fields);
            }

            @Override
            public Search setKey(java.lang.String key) {
              return (Search) super.setKey(key);
            }

            @Override
            public Search setOauthToken(java.lang.String oauthToken) {
              return (Search) super.setOauthToken(oauthToken);
            }

            @Override
            public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Search) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Search setQuotaUser(java.lang.String quotaUser) {
              return (Search) super.setQuotaUser(quotaUser);
            }

            @Override
            public Search setUploadType(java.lang.String uploadType) {
              return (Search) super.setUploadType(uploadType);
            }

            @Override
            public Search setUploadProtocol(java.lang.String uploadProtocol) {
              return (Search) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format
             * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format
             * "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID"
             */
            public Search setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. Search only applications in the chosen state. */
            @com.google.api.client.util.Key
            private java.lang.String applicationStatus;

            /** Optional. Search only applications in the chosen state.
             */
            public java.lang.String getApplicationStatus() {
              return applicationStatus;
            }

            /** Optional. Search only applications in the chosen state. */
            public Search setApplicationStatus(java.lang.String applicationStatus) {
              this.applicationStatus = applicationStatus;
              return this;
            }

            /** Optional. Latest end timestamp to list. */
            @com.google.api.client.util.Key
            private String maxEndTime;

            /** Optional. Latest end timestamp to list.
             */
            public String getMaxEndTime() {
              return maxEndTime;
            }

            /** Optional. Latest end timestamp to list. */
            public Search setMaxEndTime(String maxEndTime) {
              this.maxEndTime = maxEndTime;
              return this;
            }

            /** Optional. Latest start timestamp to list. */
            @com.google.api.client.util.Key
            private String maxTime;

            /** Optional. Latest start timestamp to list.
             */
            public String getMaxTime() {
              return maxTime;
            }

            /** Optional. Latest start timestamp to list. */
            public Search setMaxTime(String maxTime) {
              this.maxTime = maxTime;
              return this;
            }

            /** Optional. Earliest end timestamp to list. */
            @com.google.api.client.util.Key
            private String minEndTime;

            /** Optional. Earliest end timestamp to list.
             */
            public String getMinEndTime() {
              return minEndTime;
            }

            /** Optional. Earliest end timestamp to list. */
            public Search setMinEndTime(String minEndTime) {
              this.minEndTime = minEndTime;
              return this;
            }

            /** Optional. Earliest start timestamp to list. */
            @com.google.api.client.util.Key
            private String minTime;

            /** Optional. Earliest start timestamp to list.
             */
            public String getMinTime() {
              return minTime;
            }

            /** Optional. Earliest start timestamp to list. */
            public Search setMinTime(String minTime) {
              this.minTime = minTime;
              return this;
            }

            /**
             * Optional. Maximum number of applications to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of applications to return in each response. The service may return fewer
           than this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of applications to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public Search setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplications call. Provide
             * this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSparkApplications call. Provide this token to
           retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplications call. Provide
             * this token to retrieve the subsequent page.
             */
            public Search setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public Search set(String parameterName, Object value) {
              return (Search) super.set(parameterName, value);
            }
          }
          /**
           * Obtain executor summary with respect to a spark stage attempt.
           *
           * Create a request for the method "sparkApplications.searchExecutorStageSummary".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchExecutorStageSummary#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchExecutorStageSummary searchExecutorStageSummary(java.lang.String name) throws java.io.IOException {
            SearchExecutorStageSummary result = new SearchExecutorStageSummary(name);
            initialize(result);
            return result;
          }

          public class SearchExecutorStageSummary extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationExecutorStageSummaryResponse> {

            private static final String REST_PATH = "v1/{+name}:searchExecutorStageSummary";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain executor summary with respect to a spark stage attempt.
             *
             * Create a request for the method "sparkApplications.searchExecutorStageSummary".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchExecutorStageSummary#execute()} method to invoke the
             * remote operation. <p> {@link SearchExecutorStageSummary#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchExecutorStageSummary(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationExecutorStageSummaryResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchExecutorStageSummary set$Xgafv(java.lang.String $Xgafv) {
              return (SearchExecutorStageSummary) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchExecutorStageSummary setAccessToken(java.lang.String accessToken) {
              return (SearchExecutorStageSummary) super.setAccessToken(accessToken);
            }

            @Override
            public SearchExecutorStageSummary setAlt(java.lang.String alt) {
              return (SearchExecutorStageSummary) super.setAlt(alt);
            }

            @Override
            public SearchExecutorStageSummary setCallback(java.lang.String callback) {
              return (SearchExecutorStageSummary) super.setCallback(callback);
            }

            @Override
            public SearchExecutorStageSummary setFields(java.lang.String fields) {
              return (SearchExecutorStageSummary) super.setFields(fields);
            }

            @Override
            public SearchExecutorStageSummary setKey(java.lang.String key) {
              return (SearchExecutorStageSummary) super.setKey(key);
            }

            @Override
            public SearchExecutorStageSummary setOauthToken(java.lang.String oauthToken) {
              return (SearchExecutorStageSummary) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchExecutorStageSummary setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchExecutorStageSummary) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchExecutorStageSummary setQuotaUser(java.lang.String quotaUser) {
              return (SearchExecutorStageSummary) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchExecutorStageSummary setUploadType(java.lang.String uploadType) {
              return (SearchExecutorStageSummary) super.setUploadType(uploadType);
            }

            @Override
            public SearchExecutorStageSummary setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchExecutorStageSummary) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchExecutorStageSummary setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of executors to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchExecutorStageSummary setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous AccessSparkApplicationExecutorsList
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous AccessSparkApplicationExecutorsList call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous AccessSparkApplicationExecutorsList
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchExecutorStageSummary setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchExecutorStageSummary setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public SearchExecutorStageSummary setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public SearchExecutorStageSummary setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public SearchExecutorStageSummary set(String parameterName, Object value) {
              return (SearchExecutorStageSummary) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to executors for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchExecutors".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchExecutors#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchExecutors searchExecutors(java.lang.String name) throws java.io.IOException {
            SearchExecutors result = new SearchExecutors(name);
            initialize(result);
            return result;
          }

          public class SearchExecutors extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationExecutorsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchExecutors";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to executors for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchExecutors".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchExecutors#execute()} method to invoke the remote
             * operation. <p> {@link SearchExecutors#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchExecutors(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationExecutorsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchExecutors set$Xgafv(java.lang.String $Xgafv) {
              return (SearchExecutors) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchExecutors setAccessToken(java.lang.String accessToken) {
              return (SearchExecutors) super.setAccessToken(accessToken);
            }

            @Override
            public SearchExecutors setAlt(java.lang.String alt) {
              return (SearchExecutors) super.setAlt(alt);
            }

            @Override
            public SearchExecutors setCallback(java.lang.String callback) {
              return (SearchExecutors) super.setCallback(callback);
            }

            @Override
            public SearchExecutors setFields(java.lang.String fields) {
              return (SearchExecutors) super.setFields(fields);
            }

            @Override
            public SearchExecutors setKey(java.lang.String key) {
              return (SearchExecutors) super.setKey(key);
            }

            @Override
            public SearchExecutors setOauthToken(java.lang.String oauthToken) {
              return (SearchExecutors) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchExecutors setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchExecutors) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchExecutors setQuotaUser(java.lang.String quotaUser) {
              return (SearchExecutors) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchExecutors setUploadType(java.lang.String uploadType) {
              return (SearchExecutors) super.setUploadType(uploadType);
            }

            @Override
            public SearchExecutors setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchExecutors) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchExecutors setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            @com.google.api.client.util.Key
            private java.lang.String executorStatus;

            /** Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            public java.lang.String getExecutorStatus() {
              return executorStatus;
            }

            /**
             * Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            public SearchExecutors setExecutorStatus(java.lang.String executorStatus) {
              this.executorStatus = executorStatus;
              return this;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of executors to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchExecutors setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous AccessSparkApplicationExecutorsList
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous AccessSparkApplicationExecutorsList call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous AccessSparkApplicationExecutorsList
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchExecutors setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchExecutors setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SearchExecutors set(String parameterName, Object value) {
              return (SearchExecutors) super.set(parameterName, value);
            }
          }
          /**
           * Obtain list of spark jobs corresponding to a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchJobs".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchJobs#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchJobs searchJobs(java.lang.String name) throws java.io.IOException {
            SearchJobs result = new SearchJobs(name);
            initialize(result);
            return result;
          }

          public class SearchJobs extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationJobsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchJobs";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain list of spark jobs corresponding to a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchJobs".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchJobs#execute()} method to invoke the remote
             * operation. <p> {@link
             * SearchJobs#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchJobs(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationJobsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchJobs set$Xgafv(java.lang.String $Xgafv) {
              return (SearchJobs) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchJobs setAccessToken(java.lang.String accessToken) {
              return (SearchJobs) super.setAccessToken(accessToken);
            }

            @Override
            public SearchJobs setAlt(java.lang.String alt) {
              return (SearchJobs) super.setAlt(alt);
            }

            @Override
            public SearchJobs setCallback(java.lang.String callback) {
              return (SearchJobs) super.setCallback(callback);
            }

            @Override
            public SearchJobs setFields(java.lang.String fields) {
              return (SearchJobs) super.setFields(fields);
            }

            @Override
            public SearchJobs setKey(java.lang.String key) {
              return (SearchJobs) super.setKey(key);
            }

            @Override
            public SearchJobs setOauthToken(java.lang.String oauthToken) {
              return (SearchJobs) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchJobs setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchJobs) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchJobs setQuotaUser(java.lang.String quotaUser) {
              return (SearchJobs) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchJobs setUploadType(java.lang.String uploadType) {
              return (SearchJobs) super.setUploadType(uploadType);
            }

            @Override
            public SearchJobs setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchJobs) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchJobs setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. List only jobs in the specific state. */
            @com.google.api.client.util.Key
            private java.lang.String jobStatus;

            /** Optional. List only jobs in the specific state.
             */
            public java.lang.String getJobStatus() {
              return jobStatus;
            }

            /** Optional. List only jobs in the specific state. */
            public SearchJobs setJobStatus(java.lang.String jobStatus) {
              this.jobStatus = jobStatus;
              return this;
            }

            /**
             * Optional. Maximum number of jobs to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of jobs to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of jobs to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchJobs setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationJobs call.
             * Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSparkApplicationJobs call. Provide this token
           to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationJobs call.
             * Provide this token to retrieve the subsequent page.
             */
            public SearchJobs setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchJobs setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SearchJobs set(String parameterName, Object value) {
              return (SearchJobs) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to SQL Queries for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchSqlQueries".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchSqlQueries#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchSqlQueries searchSqlQueries(java.lang.String name) throws java.io.IOException {
            SearchSqlQueries result = new SearchSqlQueries(name);
            initialize(result);
            return result;
          }

          public class SearchSqlQueries extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationSqlQueriesResponse> {

            private static final String REST_PATH = "v1/{+name}:searchSqlQueries";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to SQL Queries for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchSqlQueries".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchSqlQueries#execute()} method to invoke the remote
             * operation. <p> {@link SearchSqlQueries#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchSqlQueries(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationSqlQueriesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchSqlQueries set$Xgafv(java.lang.String $Xgafv) {
              return (SearchSqlQueries) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchSqlQueries setAccessToken(java.lang.String accessToken) {
              return (SearchSqlQueries) super.setAccessToken(accessToken);
            }

            @Override
            public SearchSqlQueries setAlt(java.lang.String alt) {
              return (SearchSqlQueries) super.setAlt(alt);
            }

            @Override
            public SearchSqlQueries setCallback(java.lang.String callback) {
              return (SearchSqlQueries) super.setCallback(callback);
            }

            @Override
            public SearchSqlQueries setFields(java.lang.String fields) {
              return (SearchSqlQueries) super.setFields(fields);
            }

            @Override
            public SearchSqlQueries setKey(java.lang.String key) {
              return (SearchSqlQueries) super.setKey(key);
            }

            @Override
            public SearchSqlQueries setOauthToken(java.lang.String oauthToken) {
              return (SearchSqlQueries) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchSqlQueries setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchSqlQueries) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchSqlQueries setQuotaUser(java.lang.String quotaUser) {
              return (SearchSqlQueries) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchSqlQueries setUploadType(java.lang.String uploadType) {
              return (SearchSqlQueries) super.setUploadType(uploadType);
            }

            @Override
            public SearchSqlQueries setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchSqlQueries) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchSqlQueries setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean details;

            /** Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to hide.
             */
            public java.lang.Boolean getDetails() {
              return details;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            public SearchSqlQueries setDetails(java.lang.Boolean details) {
              this.details = details;
              return this;
            }

            /**
             * Optional. Maximum number of queries to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of queries to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of queries to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchSqlQueries setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationSqlQueries
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSparkApplicationSqlQueries call. Provide this
           token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationSqlQueries
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchSqlQueries setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchSqlQueries setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            @com.google.api.client.util.Key
            private java.lang.Boolean planDescription;

            /** Optional. Enables/ disables physical plan description on demand
             */
            public java.lang.Boolean getPlanDescription() {
              return planDescription;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            public SearchSqlQueries setPlanDescription(java.lang.Boolean planDescription) {
              this.planDescription = planDescription;
              return this;
            }

            @Override
            public SearchSqlQueries set(String parameterName, Object value) {
              return (SearchSqlQueries) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to tasks for a spark stage attempt for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStageAttemptTasks".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStageAttemptTasks#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchStageAttemptTasks searchStageAttemptTasks(java.lang.String name) throws java.io.IOException {
            SearchStageAttemptTasks result = new SearchStageAttemptTasks(name);
            initialize(result);
            return result;
          }

          public class SearchStageAttemptTasks extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationStageAttemptTasksResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStageAttemptTasks";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to tasks for a spark stage attempt for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStageAttemptTasks".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStageAttemptTasks#execute()} method to invoke the
             * remote operation. <p> {@link SearchStageAttemptTasks#initialize(com.google.api.client.googleapi
             * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchStageAttemptTasks(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationStageAttemptTasksResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStageAttemptTasks set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStageAttemptTasks) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStageAttemptTasks setAccessToken(java.lang.String accessToken) {
              return (SearchStageAttemptTasks) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStageAttemptTasks setAlt(java.lang.String alt) {
              return (SearchStageAttemptTasks) super.setAlt(alt);
            }

            @Override
            public SearchStageAttemptTasks setCallback(java.lang.String callback) {
              return (SearchStageAttemptTasks) super.setCallback(callback);
            }

            @Override
            public SearchStageAttemptTasks setFields(java.lang.String fields) {
              return (SearchStageAttemptTasks) super.setFields(fields);
            }

            @Override
            public SearchStageAttemptTasks setKey(java.lang.String key) {
              return (SearchStageAttemptTasks) super.setKey(key);
            }

            @Override
            public SearchStageAttemptTasks setOauthToken(java.lang.String oauthToken) {
              return (SearchStageAttemptTasks) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStageAttemptTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStageAttemptTasks) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStageAttemptTasks setQuotaUser(java.lang.String quotaUser) {
              return (SearchStageAttemptTasks) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStageAttemptTasks setUploadType(java.lang.String uploadType) {
              return (SearchStageAttemptTasks) super.setUploadType(uploadType);
            }

            @Override
            public SearchStageAttemptTasks setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStageAttemptTasks) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchStageAttemptTasks setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of tasks to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of tasks to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of tasks to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchStageAttemptTasks setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous ListSparkApplicationStageAttemptTasks
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous ListSparkApplicationStageAttemptTasks call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous ListSparkApplicationStageAttemptTasks
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchStageAttemptTasks setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchStageAttemptTasks setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Sort the tasks by runtime. */
            @com.google.api.client.util.Key
            private java.lang.Boolean sortRuntime;

            /** Optional. Sort the tasks by runtime.
             */
            public java.lang.Boolean getSortRuntime() {
              return sortRuntime;
            }

            /** Optional. Sort the tasks by runtime. */
            public SearchStageAttemptTasks setSortRuntime(java.lang.Boolean sortRuntime) {
              this.sortRuntime = sortRuntime;
              return this;
            }

            /** Optional. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Optional. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Optional. Stage Attempt ID */
            public SearchStageAttemptTasks setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Optional. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Optional. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Optional. Stage ID */
            public SearchStageAttemptTasks setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /** Optional. List only tasks in the state. */
            @com.google.api.client.util.Key
            private java.lang.String taskStatus;

            /** Optional. List only tasks in the state.
             */
            public java.lang.String getTaskStatus() {
              return taskStatus;
            }

            /** Optional. List only tasks in the state. */
            public SearchStageAttemptTasks setTaskStatus(java.lang.String taskStatus) {
              this.taskStatus = taskStatus;
              return this;
            }

            @Override
            public SearchStageAttemptTasks set(String parameterName, Object value) {
              return (SearchStageAttemptTasks) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark stage attempts for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStageAttempts".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStageAttempts#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchStageAttempts searchStageAttempts(java.lang.String name) throws java.io.IOException {
            SearchStageAttempts result = new SearchStageAttempts(name);
            initialize(result);
            return result;
          }

          public class SearchStageAttempts extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationStageAttemptsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStageAttempts";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark stage attempts for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStageAttempts".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStageAttempts#execute()} method to invoke the remote
             * operation. <p> {@link SearchStageAttempts#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchStageAttempts(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationStageAttemptsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStageAttempts set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStageAttempts) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStageAttempts setAccessToken(java.lang.String accessToken) {
              return (SearchStageAttempts) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStageAttempts setAlt(java.lang.String alt) {
              return (SearchStageAttempts) super.setAlt(alt);
            }

            @Override
            public SearchStageAttempts setCallback(java.lang.String callback) {
              return (SearchStageAttempts) super.setCallback(callback);
            }

            @Override
            public SearchStageAttempts setFields(java.lang.String fields) {
              return (SearchStageAttempts) super.setFields(fields);
            }

            @Override
            public SearchStageAttempts setKey(java.lang.String key) {
              return (SearchStageAttempts) super.setKey(key);
            }

            @Override
            public SearchStageAttempts setOauthToken(java.lang.String oauthToken) {
              return (SearchStageAttempts) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStageAttempts setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStageAttempts) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStageAttempts setQuotaUser(java.lang.String quotaUser) {
              return (SearchStageAttempts) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStageAttempts setUploadType(java.lang.String uploadType) {
              return (SearchStageAttempts) super.setUploadType(uploadType);
            }

            @Override
            public SearchStageAttempts setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStageAttempts) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchStageAttempts setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to
             * return in each response. The service may return fewer than this. The default page
             * size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to return in each
           response. The service may return fewer than this. The default page size is 10; the maximum page
           size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to
             * return in each response. The service may return fewer than this. The default page
             * size is 10; the maximum page size is 100.
             */
            public SearchStageAttempts setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationStageAttempts
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSparkApplicationStageAttempts call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSparkApplicationStageAttempts
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchStageAttempts setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchStageAttempts setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage ID for which attempts are to be fetched */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID for which attempts are to be fetched
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID for which attempts are to be fetched */
            public SearchStageAttempts setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public SearchStageAttempts setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public SearchStageAttempts set(String parameterName, Object value) {
              return (SearchStageAttempts) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to stages for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStages".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStages#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SearchStages searchStages(java.lang.String name) throws java.io.IOException {
            SearchStages result = new SearchStages(name);
            initialize(result);
            return result;
          }

          public class SearchStages extends DataprocRequest<com.google.api.services.dataproc.model.SearchSparkApplicationStagesResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStages";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to stages for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStages".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStages#execute()} method to invoke the remote
             * operation. <p> {@link
             * SearchStages#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SearchStages(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSparkApplicationStagesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStages set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStages) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStages setAccessToken(java.lang.String accessToken) {
              return (SearchStages) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStages setAlt(java.lang.String alt) {
              return (SearchStages) super.setAlt(alt);
            }

            @Override
            public SearchStages setCallback(java.lang.String callback) {
              return (SearchStages) super.setCallback(callback);
            }

            @Override
            public SearchStages setFields(java.lang.String fields) {
              return (SearchStages) super.setFields(fields);
            }

            @Override
            public SearchStages setKey(java.lang.String key) {
              return (SearchStages) super.setKey(key);
            }

            @Override
            public SearchStages setOauthToken(java.lang.String oauthToken) {
              return (SearchStages) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStages setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStages) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStages setQuotaUser(java.lang.String quotaUser) {
              return (SearchStages) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStages setUploadType(java.lang.String uploadType) {
              return (SearchStages) super.setUploadType(uploadType);
            }

            @Override
            public SearchStages setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStages) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SearchStages setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of stages (paging based on stage_id) to return in each
             * response. The service may return fewer than this. The default page size is 10; the
             * maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of stages (paging based on stage_id) to return in each response. The
           service may return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of stages (paging based on stage_id) to return in each
             * response. The service may return fewer than this. The default page size is 10; the
             * maximum page size is 100.
             */
            public SearchStages setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous FetchSparkApplicationStagesList call.
             * Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous FetchSparkApplicationStagesList call. Provide this
           token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous FetchSparkApplicationStagesList call.
             * Provide this token to retrieve the subsequent page.
             */
            public SearchStages setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SearchStages setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. List only stages in the given state. */
            @com.google.api.client.util.Key
            private java.lang.String stageStatus;

            /** Optional. List only stages in the given state.
             */
            public java.lang.String getStageStatus() {
              return stageStatus;
            }

            /** Optional. List only stages in the given state. */
            public SearchStages setStageStatus(java.lang.String stageStatus) {
              this.stageStatus = stageStatus;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public SearchStages setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public SearchStages set(String parameterName, Object value) {
              return (SearchStages) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Executor Summary for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeExecutors".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeExecutors#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SummarizeExecutors summarizeExecutors(java.lang.String name) throws java.io.IOException {
            SummarizeExecutors result = new SummarizeExecutors(name);
            initialize(result);
            return result;
          }

          public class SummarizeExecutors extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSparkApplicationExecutorsResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeExecutors";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Executor Summary for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeExecutors".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeExecutors#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeExecutors#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SummarizeExecutors(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSparkApplicationExecutorsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeExecutors set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeExecutors) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeExecutors setAccessToken(java.lang.String accessToken) {
              return (SummarizeExecutors) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeExecutors setAlt(java.lang.String alt) {
              return (SummarizeExecutors) super.setAlt(alt);
            }

            @Override
            public SummarizeExecutors setCallback(java.lang.String callback) {
              return (SummarizeExecutors) super.setCallback(callback);
            }

            @Override
            public SummarizeExecutors setFields(java.lang.String fields) {
              return (SummarizeExecutors) super.setFields(fields);
            }

            @Override
            public SummarizeExecutors setKey(java.lang.String key) {
              return (SummarizeExecutors) super.setKey(key);
            }

            @Override
            public SummarizeExecutors setOauthToken(java.lang.String oauthToken) {
              return (SummarizeExecutors) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeExecutors setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeExecutors) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeExecutors setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeExecutors) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeExecutors setUploadType(java.lang.String uploadType) {
              return (SummarizeExecutors) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeExecutors setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeExecutors) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SummarizeExecutors setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SummarizeExecutors setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeExecutors set(String parameterName, Object value) {
              return (SummarizeExecutors) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Jobs for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeJobs".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeJobs#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SummarizeJobs summarizeJobs(java.lang.String name) throws java.io.IOException {
            SummarizeJobs result = new SummarizeJobs(name);
            initialize(result);
            return result;
          }

          public class SummarizeJobs extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSparkApplicationJobsResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeJobs";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Jobs for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeJobs".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeJobs#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeJobs#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SummarizeJobs(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSparkApplicationJobsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeJobs set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeJobs) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeJobs setAccessToken(java.lang.String accessToken) {
              return (SummarizeJobs) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeJobs setAlt(java.lang.String alt) {
              return (SummarizeJobs) super.setAlt(alt);
            }

            @Override
            public SummarizeJobs setCallback(java.lang.String callback) {
              return (SummarizeJobs) super.setCallback(callback);
            }

            @Override
            public SummarizeJobs setFields(java.lang.String fields) {
              return (SummarizeJobs) super.setFields(fields);
            }

            @Override
            public SummarizeJobs setKey(java.lang.String key) {
              return (SummarizeJobs) super.setKey(key);
            }

            @Override
            public SummarizeJobs setOauthToken(java.lang.String oauthToken) {
              return (SummarizeJobs) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeJobs setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeJobs) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeJobs setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeJobs) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeJobs setUploadType(java.lang.String uploadType) {
              return (SummarizeJobs) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeJobs setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeJobs) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SummarizeJobs setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SummarizeJobs setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeJobs set(String parameterName, Object value) {
              return (SummarizeJobs) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Tasks for a Spark Application Stage Attempt
           *
           * Create a request for the method "sparkApplications.summarizeStageAttemptTasks".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeStageAttemptTasks#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SummarizeStageAttemptTasks summarizeStageAttemptTasks(java.lang.String name) throws java.io.IOException {
            SummarizeStageAttemptTasks result = new SummarizeStageAttemptTasks(name);
            initialize(result);
            return result;
          }

          public class SummarizeStageAttemptTasks extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSparkApplicationStageAttemptTasksResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeStageAttemptTasks";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Tasks for a Spark Application Stage Attempt
             *
             * Create a request for the method "sparkApplications.summarizeStageAttemptTasks".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeStageAttemptTasks#execute()} method to invoke the
             * remote operation. <p> {@link SummarizeStageAttemptTasks#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SummarizeStageAttemptTasks(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSparkApplicationStageAttemptTasksResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeStageAttemptTasks set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeStageAttemptTasks) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeStageAttemptTasks setAccessToken(java.lang.String accessToken) {
              return (SummarizeStageAttemptTasks) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeStageAttemptTasks setAlt(java.lang.String alt) {
              return (SummarizeStageAttemptTasks) super.setAlt(alt);
            }

            @Override
            public SummarizeStageAttemptTasks setCallback(java.lang.String callback) {
              return (SummarizeStageAttemptTasks) super.setCallback(callback);
            }

            @Override
            public SummarizeStageAttemptTasks setFields(java.lang.String fields) {
              return (SummarizeStageAttemptTasks) super.setFields(fields);
            }

            @Override
            public SummarizeStageAttemptTasks setKey(java.lang.String key) {
              return (SummarizeStageAttemptTasks) super.setKey(key);
            }

            @Override
            public SummarizeStageAttemptTasks setOauthToken(java.lang.String oauthToken) {
              return (SummarizeStageAttemptTasks) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeStageAttemptTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeStageAttemptTasks) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeStageAttemptTasks setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeStageAttemptTasks) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeStageAttemptTasks setUploadType(java.lang.String uploadType) {
              return (SummarizeStageAttemptTasks) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeStageAttemptTasks setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeStageAttemptTasks) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SummarizeStageAttemptTasks setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SummarizeStageAttemptTasks setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public SummarizeStageAttemptTasks setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public SummarizeStageAttemptTasks setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public SummarizeStageAttemptTasks set(String parameterName, Object value) {
              return (SummarizeStageAttemptTasks) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Stages for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeStages".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeStages#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @return the request
           */
          public SummarizeStages summarizeStages(java.lang.String name) throws java.io.IOException {
            SummarizeStages result = new SummarizeStages(name);
            initialize(result);
            return result;
          }

          public class SummarizeStages extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSparkApplicationStagesResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeStages";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Stages for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeStages".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeStages#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeStages#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the batch to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @since 1.13
             */
            protected SummarizeStages(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSparkApplicationStagesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeStages set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeStages) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeStages setAccessToken(java.lang.String accessToken) {
              return (SummarizeStages) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeStages setAlt(java.lang.String alt) {
              return (SummarizeStages) super.setAlt(alt);
            }

            @Override
            public SummarizeStages setCallback(java.lang.String callback) {
              return (SummarizeStages) super.setCallback(callback);
            }

            @Override
            public SummarizeStages setFields(java.lang.String fields) {
              return (SummarizeStages) super.setFields(fields);
            }

            @Override
            public SummarizeStages setKey(java.lang.String key) {
              return (SummarizeStages) super.setKey(key);
            }

            @Override
            public SummarizeStages setOauthToken(java.lang.String oauthToken) {
              return (SummarizeStages) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeStages setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeStages) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeStages setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeStages) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeStages setUploadType(java.lang.String uploadType) {
              return (SummarizeStages) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeStages setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeStages) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the batch to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the batch to retrieve in the format "projects/P
             * ROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID
             * "
             */
            public SummarizeStages setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Batch) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Batch) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Batch) resource reference. */
            public SummarizeStages setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeStages set(String parameterName, Object value) {
              return (SummarizeStages) super.set(parameterName, value);
            }
          }
          /**
           * Write wrapper objects from dataplane to spanner
           *
           * Create a request for the method "sparkApplications.write".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Write#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the spark application to write data about in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
           * @param content the {@link com.google.api.services.dataproc.model.WriteSparkApplicationContextRequest}
           * @return the request
           */
          public Write write(java.lang.String name, com.google.api.services.dataproc.model.WriteSparkApplicationContextRequest content) throws java.io.IOException {
            Write result = new Write(name, content);
            initialize(result);
            return result;
          }

          public class Write extends DataprocRequest<com.google.api.services.dataproc.model.WriteSparkApplicationContextResponse> {

            private static final String REST_PATH = "v1/{+name}:write";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");

            /**
             * Write wrapper objects from dataplane to spanner
             *
             * Create a request for the method "sparkApplications.write".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
             * <p> {@link
             * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the spark application to write data about in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICAT
           *        ION_ID"
             * @param content the {@link com.google.api.services.dataproc.model.WriteSparkApplicationContextRequest}
             * @since 1.13
             */
            protected Write(java.lang.String name, com.google.api.services.dataproc.model.WriteSparkApplicationContextRequest content) {
              super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.WriteSparkApplicationContextResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public Write set$Xgafv(java.lang.String $Xgafv) {
              return (Write) super.set$Xgafv($Xgafv);
            }

            @Override
            public Write setAccessToken(java.lang.String accessToken) {
              return (Write) super.setAccessToken(accessToken);
            }

            @Override
            public Write setAlt(java.lang.String alt) {
              return (Write) super.setAlt(alt);
            }

            @Override
            public Write setCallback(java.lang.String callback) {
              return (Write) super.setCallback(callback);
            }

            @Override
            public Write setFields(java.lang.String fields) {
              return (Write) super.setFields(fields);
            }

            @Override
            public Write setKey(java.lang.String key) {
              return (Write) super.setKey(key);
            }

            @Override
            public Write setOauthToken(java.lang.String oauthToken) {
              return (Write) super.setOauthToken(oauthToken);
            }

            @Override
            public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Write) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Write setQuotaUser(java.lang.String quotaUser) {
              return (Write) super.setQuotaUser(quotaUser);
            }

            @Override
            public Write setUploadType(java.lang.String uploadType) {
              return (Write) super.setUploadType(uploadType);
            }

            @Override
            public Write setUploadProtocol(java.lang.String uploadProtocol) {
              return (Write) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the spark application to write data about in
             * the format "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkAppli
             * cations/APPLICATION_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the spark application to write data about in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the spark application to write data about in
             * the format "projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID/sparkAppli
             * cations/APPLICATION_ID"
             */
            public Write setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/batches/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Write set(String parameterName, Object value) {
              return (Write) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Operations.List request = dataproc.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * Code.CANCELLED.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * Code.CANCELLED.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(Dataproc.this, "POST", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns google.rpc.Code.UNIMPLEMENTED.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns google.rpc.Code.UNIMPLEMENTED.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns UNIMPLEMENTED.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns UNIMPLEMENTED.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SessionTemplates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.SessionTemplates.List request = dataproc.sessionTemplates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SessionTemplates sessionTemplates() {
        return new SessionTemplates();
      }

      /**
       * The "sessionTemplates" collection of methods.
       */
      public class SessionTemplates {

        /**
         * Create a session template synchronously.
         *
         * Create a request for the method "sessionTemplates.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this session template will be created.
         * @param content the {@link com.google.api.services.dataproc.model.SessionTemplate}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.SessionTemplate content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.SessionTemplate> {

          private static final String REST_PATH = "v1/{+parent}/sessionTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a session template synchronously.
           *
           * Create a request for the method "sessionTemplates.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this session template will be created.
           * @param content the {@link com.google.api.services.dataproc.model.SessionTemplate}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.SessionTemplate content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.SessionTemplate.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource where this session template will be created. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this session template will be created.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource where this session template will be created. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a session template.
         *
         * Create a request for the method "sessionTemplates.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the session template resource to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");

          /**
           * Deletes a session template.
           *
           * Create a request for the method "sessionTemplates.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the session template resource to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the session template resource to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the session template resource to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the session template resource to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the resource representation for a session template.
         *
         * Create a request for the method "sessionTemplates.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the session template to retrieve.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.SessionTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");

          /**
           * Gets the resource representation for a session template.
           *
           * Create a request for the method "sessionTemplates.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the session template to retrieve.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SessionTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the session template to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the session template to retrieve.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the session template to retrieve. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists session templates.
         *
         * Create a request for the method "sessionTemplates.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent that owns this collection of session templates.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListSessionTemplatesResponse> {

          private static final String REST_PATH = "v1/{+parent}/sessionTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists session templates.
           *
           * Create a request for the method "sessionTemplates.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent that owns this collection of session templates.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListSessionTemplatesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent that owns this collection of session templates. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent that owns this collection of session templates.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent that owns this collection of session templates. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A filter for the session templates to return in the response. Filters are
           * case sensitive and have the following syntax:field = value AND field = value ...
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter for the session templates to return in the response. Filters are case sensitive
         and have the following syntax:field = value AND field = value ...
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter for the session templates to return in the response. Filters are
           * case sensitive and have the following syntax:field = value AND field = value ...
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of sessions to return in each response. The service may
           * return fewer than this value.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of sessions to return in each response. The service may return fewer
         than this value.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of sessions to return in each response. The service may
           * return fewer than this value.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token received from a previous ListSessions call. Provide this token
           * to retrieve the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token received from a previous ListSessions call. Provide this token to retrieve
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token received from a previous ListSessions call. Provide this token
           * to retrieve the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the session template synchronously.
         *
         * Create a request for the method "sessionTemplates.patch".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the session template.
         * @param content the {@link com.google.api.services.dataproc.model.SessionTemplate}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.dataproc.model.SessionTemplate content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataprocRequest<com.google.api.services.dataproc.model.SessionTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");

          /**
           * Updates the session template synchronously.
           *
           * Create a request for the method "sessionTemplates.patch".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the session template.
           * @param content the {@link com.google.api.services.dataproc.model.SessionTemplate}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.dataproc.model.SessionTemplate content) {
            super(Dataproc.this, "PATCH", REST_PATH, content, com.google.api.services.dataproc.model.SessionTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the session template. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the session template.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the session template. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessionTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sessions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Sessions.List request = dataproc.sessions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sessions sessions() {
        return new Sessions();
      }

      /**
       * The "sessions" collection of methods.
       */
      public class Sessions {

        /**
         * Create an interactive session asynchronously.
         *
         * Create a request for the method "sessions.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this session will be created.
         * @param content the {@link com.google.api.services.dataproc.model.Session}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.Session content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/sessions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create an interactive session asynchronously.
           *
           * Create a request for the method "sessions.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this session will be created.
           * @param content the {@link com.google.api.services.dataproc.model.Session}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.Session content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource where this session will be created. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this session will be created.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource where this session will be created. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * CreateSessionRequests (https://cloud.google.com/dataproc/docs/reference/rpc/google.clou
           * d.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest)s with the same ID, the
           * second request is ignored, and the first Session is created and stored in the
           * backend.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the service receives two
         CreateSessionRequests (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v
         1#google.cloud.dataproc.v1.CreateSessionRequest)s with the same ID, the second request is ignored,
         and the first Session is created and stored in the backend.Recommendation: Set this value to a UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters
         (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * CreateSessionRequests (https://cloud.google.com/dataproc/docs/reference/rpc/google.clou
           * d.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest)s with the same ID, the
           * second request is ignored, and the first Session is created and stored in the
           * backend.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. The ID to use for the session, which becomes the final component of the
           * session's resource name.This value must be 4-63 characters. Valid characters are
           * /a-z-/.
           */
          @com.google.api.client.util.Key
          private java.lang.String sessionId;

          /** Required. The ID to use for the session, which becomes the final component of the session's
         resource name.This value must be 4-63 characters. Valid characters are /a-z-/.
           */
          public java.lang.String getSessionId() {
            return sessionId;
          }

          /**
           * Required. The ID to use for the session, which becomes the final component of the
           * session's resource name.This value must be 4-63 characters. Valid characters are
           * /a-z-/.
           */
          public Create setSessionId(java.lang.String sessionId) {
            this.sessionId = sessionId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the interactive session resource. If the session is not in terminal state, it is
         * terminated, and then deleted.
         *
         * Create a request for the method "sessions.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the session resource to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");

          /**
           * Deletes the interactive session resource. If the session is not in terminal state, it is
           * terminated, and then deleted.
           *
           * Create a request for the method "sessions.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the session resource to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the session resource to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the session resource to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the session resource to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * DeleteSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.DeleteSessionRequest)s with the same ID, the
           * second request is ignored.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the service receives two
         DeleteSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1
         #google.cloud.dataproc.v1.DeleteSessionRequest)s with the same ID, the second request is
         ignored.Recommendation: Set this value to a UUID
         (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters
         (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the service receives two
           * DeleteSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.DeleteSessionRequest)s with the same ID, the
           * second request is ignored.Recommendation: Set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain
           * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
           * length is 40 characters.
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the resource representation for an interactive session.
         *
         * Create a request for the method "sessions.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the session to retrieve.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Session> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");

          /**
           * Gets the resource representation for an interactive session.
           *
           * Create a request for the method "sessions.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the session to retrieve.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Session.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the session to retrieve. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the session to retrieve.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the session to retrieve. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists interactive sessions.
         *
         * Create a request for the method "sessions.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of sessions.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListSessionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/sessions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists interactive sessions.
           *
           * Create a request for the method "sessions.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of sessions.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListSessionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of sessions. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of sessions.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of sessions. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A filter for the sessions to return in the response.A filter is a logical
           * expression constraining the values of various fields in each session resource. Filters
           * are case sensitive, and may contain multiple clauses combined with logical operators
           * (AND, OR). Supported fields are session_id, session_uuid, state, create_time, and
           * labels.Example: state = ACTIVE and create_time < "2023-01-01T00:00:00Z" is a filter for
           * sessions in an ACTIVE state that were created before 2023-01-01. state = ACTIVE and
           * labels.environment=production is a filter for sessions in an ACTIVE state that have a
           * production environment label.See https://google.aip.dev/assets/misc/ebnf-filtering.txt
           * for a detailed description of the filter syntax and a list of supported comparators.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter for the sessions to return in the response.A filter is a logical expression
         constraining the values of various fields in each session resource. Filters are case sensitive, and
         may contain multiple clauses combined with logical operators (AND, OR). Supported fields are
         session_id, session_uuid, state, create_time, and labels.Example: state = ACTIVE and create_time <
         "2023-01-01T00:00:00Z" is a filter for sessions in an ACTIVE state that were created before
         2023-01-01. state = ACTIVE and labels.environment=production is a filter for sessions in an ACTIVE
         state that have a production environment label.See https://google.aip.dev/assets/misc/ebnf-
         filtering.txt for a detailed description of the filter syntax and a list of supported comparators.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter for the sessions to return in the response.A filter is a logical
           * expression constraining the values of various fields in each session resource. Filters
           * are case sensitive, and may contain multiple clauses combined with logical operators
           * (AND, OR). Supported fields are session_id, session_uuid, state, create_time, and
           * labels.Example: state = ACTIVE and create_time < "2023-01-01T00:00:00Z" is a filter for
           * sessions in an ACTIVE state that were created before 2023-01-01. state = ACTIVE and
           * labels.environment=production is a filter for sessions in an ACTIVE state that have a
           * production environment label.See https://google.aip.dev/assets/misc/ebnf-filtering.txt
           * for a detailed description of the filter syntax and a list of supported comparators.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of sessions to return in each response. The service may
           * return fewer than this value.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of sessions to return in each response. The service may return fewer
         than this value.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of sessions to return in each response. The service may
           * return fewer than this value.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token received from a previous ListSessions call. Provide this token
           * to retrieve the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token received from a previous ListSessions call. Provide this token to retrieve
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token received from a previous ListSessions call. Provide this token
           * to retrieve the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Terminates the interactive session.
         *
         * Create a request for the method "sessions.terminate".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Terminate#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the session resource to terminate.
         * @param content the {@link com.google.api.services.dataproc.model.TerminateSessionRequest}
         * @return the request
         */
        public Terminate terminate(java.lang.String name, com.google.api.services.dataproc.model.TerminateSessionRequest content) throws java.io.IOException {
          Terminate result = new Terminate(name, content);
          initialize(result);
          return result;
        }

        public class Terminate extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:terminate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");

          /**
           * Terminates the interactive session.
           *
           * Create a request for the method "sessions.terminate".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Terminate#execute()} method to invoke the remote
           * operation. <p> {@link
           * Terminate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the session resource to terminate.
           * @param content the {@link com.google.api.services.dataproc.model.TerminateSessionRequest}
           * @since 1.13
           */
          protected Terminate(java.lang.String name, com.google.api.services.dataproc.model.TerminateSessionRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
          }

          @Override
          public Terminate set$Xgafv(java.lang.String $Xgafv) {
            return (Terminate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Terminate setAccessToken(java.lang.String accessToken) {
            return (Terminate) super.setAccessToken(accessToken);
          }

          @Override
          public Terminate setAlt(java.lang.String alt) {
            return (Terminate) super.setAlt(alt);
          }

          @Override
          public Terminate setCallback(java.lang.String callback) {
            return (Terminate) super.setCallback(callback);
          }

          @Override
          public Terminate setFields(java.lang.String fields) {
            return (Terminate) super.setFields(fields);
          }

          @Override
          public Terminate setKey(java.lang.String key) {
            return (Terminate) super.setKey(key);
          }

          @Override
          public Terminate setOauthToken(java.lang.String oauthToken) {
            return (Terminate) super.setOauthToken(oauthToken);
          }

          @Override
          public Terminate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Terminate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Terminate setQuotaUser(java.lang.String quotaUser) {
            return (Terminate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Terminate setUploadType(java.lang.String uploadType) {
            return (Terminate) super.setUploadType(uploadType);
          }

          @Override
          public Terminate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Terminate) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the session resource to terminate. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the session resource to terminate.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the session resource to terminate. */
          public Terminate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Terminate set(String parameterName, Object value) {
            return (Terminate) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the SparkApplications collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dataproc dataproc = new Dataproc(...);}
         *   {@code Dataproc.SparkApplications.List request = dataproc.sparkApplications().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SparkApplications sparkApplications() {
          return new SparkApplications();
        }

        /**
         * The "sparkApplications" collection of methods.
         */
        public class SparkApplications {

          /**
           * Obtain high level information corresponding to a single Spark Application.
           *
           * Create a request for the method "sparkApplications.access".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Access#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public Access access(java.lang.String name) throws java.io.IOException {
            Access result = new Access(name);
            initialize(result);
            return result;
          }

          public class Access extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationResponse> {

            private static final String REST_PATH = "v1/{+name}:access";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain high level information corresponding to a single Spark Application.
             *
             * Create a request for the method "sparkApplications.access".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Access#execute()} method to invoke the remote operation.
             * <p> {@link
             * Access#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected Access(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Access set$Xgafv(java.lang.String $Xgafv) {
              return (Access) super.set$Xgafv($Xgafv);
            }

            @Override
            public Access setAccessToken(java.lang.String accessToken) {
              return (Access) super.setAccessToken(accessToken);
            }

            @Override
            public Access setAlt(java.lang.String alt) {
              return (Access) super.setAlt(alt);
            }

            @Override
            public Access setCallback(java.lang.String callback) {
              return (Access) super.setCallback(callback);
            }

            @Override
            public Access setFields(java.lang.String fields) {
              return (Access) super.setFields(fields);
            }

            @Override
            public Access setKey(java.lang.String key) {
              return (Access) super.setKey(key);
            }

            @Override
            public Access setOauthToken(java.lang.String oauthToken) {
              return (Access) super.setOauthToken(oauthToken);
            }

            @Override
            public Access setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Access) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Access setQuotaUser(java.lang.String quotaUser) {
              return (Access) super.setQuotaUser(quotaUser);
            }

            @Override
            public Access setUploadType(java.lang.String uploadType) {
              return (Access) super.setUploadType(uploadType);
            }

            @Override
            public Access setUploadProtocol(java.lang.String uploadProtocol) {
              return (Access) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public Access setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public Access setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public Access set(String parameterName, Object value) {
              return (Access) super.set(parameterName, value);
            }
          }
          /**
           * Obtain environment details for a Spark Application
           *
           * Create a request for the method "sparkApplications.accessEnvironmentInfo".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessEnvironmentInfo#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessEnvironmentInfo accessEnvironmentInfo(java.lang.String name) throws java.io.IOException {
            AccessEnvironmentInfo result = new AccessEnvironmentInfo(name);
            initialize(result);
            return result;
          }

          public class AccessEnvironmentInfo extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationEnvironmentInfoResponse> {

            private static final String REST_PATH = "v1/{+name}:accessEnvironmentInfo";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain environment details for a Spark Application
             *
             * Create a request for the method "sparkApplications.accessEnvironmentInfo".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessEnvironmentInfo#execute()} method to invoke the
             * remote operation. <p> {@link AccessEnvironmentInfo#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessEnvironmentInfo(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationEnvironmentInfoResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessEnvironmentInfo set$Xgafv(java.lang.String $Xgafv) {
              return (AccessEnvironmentInfo) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessEnvironmentInfo setAccessToken(java.lang.String accessToken) {
              return (AccessEnvironmentInfo) super.setAccessToken(accessToken);
            }

            @Override
            public AccessEnvironmentInfo setAlt(java.lang.String alt) {
              return (AccessEnvironmentInfo) super.setAlt(alt);
            }

            @Override
            public AccessEnvironmentInfo setCallback(java.lang.String callback) {
              return (AccessEnvironmentInfo) super.setCallback(callback);
            }

            @Override
            public AccessEnvironmentInfo setFields(java.lang.String fields) {
              return (AccessEnvironmentInfo) super.setFields(fields);
            }

            @Override
            public AccessEnvironmentInfo setKey(java.lang.String key) {
              return (AccessEnvironmentInfo) super.setKey(key);
            }

            @Override
            public AccessEnvironmentInfo setOauthToken(java.lang.String oauthToken) {
              return (AccessEnvironmentInfo) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessEnvironmentInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessEnvironmentInfo) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessEnvironmentInfo setQuotaUser(java.lang.String quotaUser) {
              return (AccessEnvironmentInfo) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessEnvironmentInfo setUploadType(java.lang.String uploadType) {
              return (AccessEnvironmentInfo) super.setUploadType(uploadType);
            }

            @Override
            public AccessEnvironmentInfo setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessEnvironmentInfo) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessEnvironmentInfo setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessEnvironmentInfo setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessEnvironmentInfo set(String parameterName, Object value) {
              return (AccessEnvironmentInfo) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark job for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessJob".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessJob#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessJob accessJob(java.lang.String name) throws java.io.IOException {
            AccessJob result = new AccessJob(name);
            initialize(result);
            return result;
          }

          public class AccessJob extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationJobResponse> {

            private static final String REST_PATH = "v1/{+name}:accessJob";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark job for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessJob".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessJob#execute()} method to invoke the remote
             * operation. <p> {@link
             * AccessJob#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessJob(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationJobResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessJob set$Xgafv(java.lang.String $Xgafv) {
              return (AccessJob) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessJob setAccessToken(java.lang.String accessToken) {
              return (AccessJob) super.setAccessToken(accessToken);
            }

            @Override
            public AccessJob setAlt(java.lang.String alt) {
              return (AccessJob) super.setAlt(alt);
            }

            @Override
            public AccessJob setCallback(java.lang.String callback) {
              return (AccessJob) super.setCallback(callback);
            }

            @Override
            public AccessJob setFields(java.lang.String fields) {
              return (AccessJob) super.setFields(fields);
            }

            @Override
            public AccessJob setKey(java.lang.String key) {
              return (AccessJob) super.setKey(key);
            }

            @Override
            public AccessJob setOauthToken(java.lang.String oauthToken) {
              return (AccessJob) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessJob setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessJob) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessJob setQuotaUser(java.lang.String quotaUser) {
              return (AccessJob) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessJob setUploadType(java.lang.String uploadType) {
              return (AccessJob) super.setUploadType(uploadType);
            }

            @Override
            public AccessJob setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessJob) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessJob setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Job ID to fetch data for. */
            @com.google.api.client.util.Key
            private java.lang.Long jobId;

            /** Required. Job ID to fetch data for.
             */
            public java.lang.Long getJobId() {
              return jobId;
            }

            /** Required. Job ID to fetch data for. */
            public AccessJob setJobId(java.lang.Long jobId) {
              this.jobId = jobId;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessJob setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessJob set(String parameterName, Object value) {
              return (AccessJob) super.set(parameterName, value);
            }
          }
          /**
           * Obtain Spark Plan Graph for a Spark Application SQL execution. Limits the number of clusters
           * returned as part of the graph to 10000.
           *
           * Create a request for the method "sparkApplications.accessSqlPlan".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessSqlPlan#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessSqlPlan accessSqlPlan(java.lang.String name) throws java.io.IOException {
            AccessSqlPlan result = new AccessSqlPlan(name);
            initialize(result);
            return result;
          }

          public class AccessSqlPlan extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationSqlSparkPlanGraphResponse> {

            private static final String REST_PATH = "v1/{+name}:accessSqlPlan";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain Spark Plan Graph for a Spark Application SQL execution. Limits the number of clusters
             * returned as part of the graph to 10000.
             *
             * Create a request for the method "sparkApplications.accessSqlPlan".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessSqlPlan#execute()} method to invoke the remote
             * operation. <p> {@link AccessSqlPlan#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessSqlPlan(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationSqlSparkPlanGraphResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessSqlPlan set$Xgafv(java.lang.String $Xgafv) {
              return (AccessSqlPlan) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessSqlPlan setAccessToken(java.lang.String accessToken) {
              return (AccessSqlPlan) super.setAccessToken(accessToken);
            }

            @Override
            public AccessSqlPlan setAlt(java.lang.String alt) {
              return (AccessSqlPlan) super.setAlt(alt);
            }

            @Override
            public AccessSqlPlan setCallback(java.lang.String callback) {
              return (AccessSqlPlan) super.setCallback(callback);
            }

            @Override
            public AccessSqlPlan setFields(java.lang.String fields) {
              return (AccessSqlPlan) super.setFields(fields);
            }

            @Override
            public AccessSqlPlan setKey(java.lang.String key) {
              return (AccessSqlPlan) super.setKey(key);
            }

            @Override
            public AccessSqlPlan setOauthToken(java.lang.String oauthToken) {
              return (AccessSqlPlan) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessSqlPlan setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessSqlPlan) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessSqlPlan setQuotaUser(java.lang.String quotaUser) {
              return (AccessSqlPlan) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessSqlPlan setUploadType(java.lang.String uploadType) {
              return (AccessSqlPlan) super.setUploadType(uploadType);
            }

            @Override
            public AccessSqlPlan setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessSqlPlan) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessSqlPlan setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Execution ID */
            @com.google.api.client.util.Key
            private java.lang.Long executionId;

            /** Required. Execution ID
             */
            public java.lang.Long getExecutionId() {
              return executionId;
            }

            /** Required. Execution ID */
            public AccessSqlPlan setExecutionId(java.lang.Long executionId) {
              this.executionId = executionId;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessSqlPlan setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public AccessSqlPlan set(String parameterName, Object value) {
              return (AccessSqlPlan) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a particular SQL Query for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessSqlQuery".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessSqlQuery#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessSqlQuery accessSqlQuery(java.lang.String name) throws java.io.IOException {
            AccessSqlQuery result = new AccessSqlQuery(name);
            initialize(result);
            return result;
          }

          public class AccessSqlQuery extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationSqlQueryResponse> {

            private static final String REST_PATH = "v1/{+name}:accessSqlQuery";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a particular SQL Query for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessSqlQuery".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessSqlQuery#execute()} method to invoke the remote
             * operation. <p> {@link AccessSqlQuery#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessSqlQuery(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationSqlQueryResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessSqlQuery set$Xgafv(java.lang.String $Xgafv) {
              return (AccessSqlQuery) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessSqlQuery setAccessToken(java.lang.String accessToken) {
              return (AccessSqlQuery) super.setAccessToken(accessToken);
            }

            @Override
            public AccessSqlQuery setAlt(java.lang.String alt) {
              return (AccessSqlQuery) super.setAlt(alt);
            }

            @Override
            public AccessSqlQuery setCallback(java.lang.String callback) {
              return (AccessSqlQuery) super.setCallback(callback);
            }

            @Override
            public AccessSqlQuery setFields(java.lang.String fields) {
              return (AccessSqlQuery) super.setFields(fields);
            }

            @Override
            public AccessSqlQuery setKey(java.lang.String key) {
              return (AccessSqlQuery) super.setKey(key);
            }

            @Override
            public AccessSqlQuery setOauthToken(java.lang.String oauthToken) {
              return (AccessSqlQuery) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessSqlQuery setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessSqlQuery) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessSqlQuery setQuotaUser(java.lang.String quotaUser) {
              return (AccessSqlQuery) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessSqlQuery setUploadType(java.lang.String uploadType) {
              return (AccessSqlQuery) super.setUploadType(uploadType);
            }

            @Override
            public AccessSqlQuery setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessSqlQuery) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessSqlQuery setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean details;

            /** Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to hide.
             */
            public java.lang.Boolean getDetails() {
              return details;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            public AccessSqlQuery setDetails(java.lang.Boolean details) {
              this.details = details;
              return this;
            }

            /** Required. Execution ID */
            @com.google.api.client.util.Key
            private java.lang.Long executionId;

            /** Required. Execution ID
             */
            public java.lang.Long getExecutionId() {
              return executionId;
            }

            /** Required. Execution ID */
            public AccessSqlQuery setExecutionId(java.lang.Long executionId) {
              this.executionId = executionId;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessSqlQuery setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            @com.google.api.client.util.Key
            private java.lang.Boolean planDescription;

            /** Optional. Enables/ disables physical plan description on demand
             */
            public java.lang.Boolean getPlanDescription() {
              return planDescription;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            public AccessSqlQuery setPlanDescription(java.lang.Boolean planDescription) {
              this.planDescription = planDescription;
              return this;
            }

            @Override
            public AccessSqlQuery set(String parameterName, Object value) {
              return (AccessSqlQuery) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark stage attempt for a Spark Application.
           *
           * Create a request for the method "sparkApplications.accessStageAttempt".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessStageAttempt#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessStageAttempt accessStageAttempt(java.lang.String name) throws java.io.IOException {
            AccessStageAttempt result = new AccessStageAttempt(name);
            initialize(result);
            return result;
          }

          public class AccessStageAttempt extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationStageAttemptResponse> {

            private static final String REST_PATH = "v1/{+name}:accessStageAttempt";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark stage attempt for a Spark Application.
             *
             * Create a request for the method "sparkApplications.accessStageAttempt".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessStageAttempt#execute()} method to invoke the remote
             * operation. <p> {@link AccessStageAttempt#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessStageAttempt(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationStageAttemptResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessStageAttempt set$Xgafv(java.lang.String $Xgafv) {
              return (AccessStageAttempt) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessStageAttempt setAccessToken(java.lang.String accessToken) {
              return (AccessStageAttempt) super.setAccessToken(accessToken);
            }

            @Override
            public AccessStageAttempt setAlt(java.lang.String alt) {
              return (AccessStageAttempt) super.setAlt(alt);
            }

            @Override
            public AccessStageAttempt setCallback(java.lang.String callback) {
              return (AccessStageAttempt) super.setCallback(callback);
            }

            @Override
            public AccessStageAttempt setFields(java.lang.String fields) {
              return (AccessStageAttempt) super.setFields(fields);
            }

            @Override
            public AccessStageAttempt setKey(java.lang.String key) {
              return (AccessStageAttempt) super.setKey(key);
            }

            @Override
            public AccessStageAttempt setOauthToken(java.lang.String oauthToken) {
              return (AccessStageAttempt) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessStageAttempt setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessStageAttempt) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessStageAttempt setQuotaUser(java.lang.String quotaUser) {
              return (AccessStageAttempt) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessStageAttempt setUploadType(java.lang.String uploadType) {
              return (AccessStageAttempt) super.setUploadType(uploadType);
            }

            @Override
            public AccessStageAttempt setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessStageAttempt) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessStageAttempt setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessStageAttempt setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public AccessStageAttempt setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public AccessStageAttempt setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public AccessStageAttempt setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public AccessStageAttempt set(String parameterName, Object value) {
              return (AccessStageAttempt) super.set(parameterName, value);
            }
          }
          /**
           * Obtain RDD operation graph for a Spark Application Stage. Limits the number of clusters returned
           * as part of the graph to 10000.
           *
           * Create a request for the method "sparkApplications.accessStageRddGraph".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link AccessStageRddGraph#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public AccessStageRddGraph accessStageRddGraph(java.lang.String name) throws java.io.IOException {
            AccessStageRddGraph result = new AccessStageRddGraph(name);
            initialize(result);
            return result;
          }

          public class AccessStageRddGraph extends DataprocRequest<com.google.api.services.dataproc.model.AccessSessionSparkApplicationStageRddOperationGraphResponse> {

            private static final String REST_PATH = "v1/{+name}:accessStageRddGraph";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain RDD operation graph for a Spark Application Stage. Limits the number of clusters
             * returned as part of the graph to 10000.
             *
             * Create a request for the method "sparkApplications.accessStageRddGraph".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link AccessStageRddGraph#execute()} method to invoke the remote
             * operation. <p> {@link AccessStageRddGraph#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected AccessStageRddGraph(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AccessSessionSparkApplicationStageRddOperationGraphResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AccessStageRddGraph set$Xgafv(java.lang.String $Xgafv) {
              return (AccessStageRddGraph) super.set$Xgafv($Xgafv);
            }

            @Override
            public AccessStageRddGraph setAccessToken(java.lang.String accessToken) {
              return (AccessStageRddGraph) super.setAccessToken(accessToken);
            }

            @Override
            public AccessStageRddGraph setAlt(java.lang.String alt) {
              return (AccessStageRddGraph) super.setAlt(alt);
            }

            @Override
            public AccessStageRddGraph setCallback(java.lang.String callback) {
              return (AccessStageRddGraph) super.setCallback(callback);
            }

            @Override
            public AccessStageRddGraph setFields(java.lang.String fields) {
              return (AccessStageRddGraph) super.setFields(fields);
            }

            @Override
            public AccessStageRddGraph setKey(java.lang.String key) {
              return (AccessStageRddGraph) super.setKey(key);
            }

            @Override
            public AccessStageRddGraph setOauthToken(java.lang.String oauthToken) {
              return (AccessStageRddGraph) super.setOauthToken(oauthToken);
            }

            @Override
            public AccessStageRddGraph setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AccessStageRddGraph) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AccessStageRddGraph setQuotaUser(java.lang.String quotaUser) {
              return (AccessStageRddGraph) super.setQuotaUser(quotaUser);
            }

            @Override
            public AccessStageRddGraph setUploadType(java.lang.String uploadType) {
              return (AccessStageRddGraph) super.setUploadType(uploadType);
            }

            @Override
            public AccessStageRddGraph setUploadProtocol(java.lang.String uploadProtocol) {
              return (AccessStageRddGraph) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public AccessStageRddGraph setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public AccessStageRddGraph setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public AccessStageRddGraph setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public AccessStageRddGraph set(String parameterName, Object value) {
              return (AccessStageRddGraph) super.set(parameterName, value);
            }
          }
          /**
           * Obtain high level information and list of Spark Applications corresponding to a batch
           *
           * Create a request for the method "sparkApplications.search".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Search#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID"
           * @return the request
           */
          public Search search(java.lang.String parent) throws java.io.IOException {
            Search result = new Search(parent);
            initialize(result);
            return result;
          }

          public class Search extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationsResponse> {

            private static final String REST_PATH = "v1/{+parent}/sparkApplications:search";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");

            /**
             * Obtain high level information and list of Spark Applications corresponding to a batch
             *
             * Create a request for the method "sparkApplications.search".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
             * <p> {@link
             * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID"
             * @since 1.13
             */
            protected Search(java.lang.String parent) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Search set$Xgafv(java.lang.String $Xgafv) {
              return (Search) super.set$Xgafv($Xgafv);
            }

            @Override
            public Search setAccessToken(java.lang.String accessToken) {
              return (Search) super.setAccessToken(accessToken);
            }

            @Override
            public Search setAlt(java.lang.String alt) {
              return (Search) super.setAlt(alt);
            }

            @Override
            public Search setCallback(java.lang.String callback) {
              return (Search) super.setCallback(callback);
            }

            @Override
            public Search setFields(java.lang.String fields) {
              return (Search) super.setFields(fields);
            }

            @Override
            public Search setKey(java.lang.String key) {
              return (Search) super.setKey(key);
            }

            @Override
            public Search setOauthToken(java.lang.String oauthToken) {
              return (Search) super.setOauthToken(oauthToken);
            }

            @Override
            public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Search) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Search setQuotaUser(java.lang.String quotaUser) {
              return (Search) super.setQuotaUser(quotaUser);
            }

            @Override
            public Search setUploadType(java.lang.String uploadType) {
              return (Search) super.setUploadType(uploadType);
            }

            @Override
            public Search setUploadProtocol(java.lang.String uploadProtocol) {
              return (Search) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format
             * "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The fully qualified name of the session to retrieve in the format
           "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID"
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format
             * "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID"
             */
            public Search setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. Search only applications in the chosen state. */
            @com.google.api.client.util.Key
            private java.lang.String applicationStatus;

            /** Optional. Search only applications in the chosen state.
             */
            public java.lang.String getApplicationStatus() {
              return applicationStatus;
            }

            /** Optional. Search only applications in the chosen state. */
            public Search setApplicationStatus(java.lang.String applicationStatus) {
              this.applicationStatus = applicationStatus;
              return this;
            }

            /** Optional. Latest end timestamp to list. */
            @com.google.api.client.util.Key
            private String maxEndTime;

            /** Optional. Latest end timestamp to list.
             */
            public String getMaxEndTime() {
              return maxEndTime;
            }

            /** Optional. Latest end timestamp to list. */
            public Search setMaxEndTime(String maxEndTime) {
              this.maxEndTime = maxEndTime;
              return this;
            }

            /** Optional. Latest start timestamp to list. */
            @com.google.api.client.util.Key
            private String maxTime;

            /** Optional. Latest start timestamp to list.
             */
            public String getMaxTime() {
              return maxTime;
            }

            /** Optional. Latest start timestamp to list. */
            public Search setMaxTime(String maxTime) {
              this.maxTime = maxTime;
              return this;
            }

            /** Optional. Earliest end timestamp to list. */
            @com.google.api.client.util.Key
            private String minEndTime;

            /** Optional. Earliest end timestamp to list.
             */
            public String getMinEndTime() {
              return minEndTime;
            }

            /** Optional. Earliest end timestamp to list. */
            public Search setMinEndTime(String minEndTime) {
              this.minEndTime = minEndTime;
              return this;
            }

            /** Optional. Earliest start timestamp to list. */
            @com.google.api.client.util.Key
            private String minTime;

            /** Optional. Earliest start timestamp to list.
             */
            public String getMinTime() {
              return minTime;
            }

            /** Optional. Earliest start timestamp to list. */
            public Search setMinTime(String minTime) {
              this.minTime = minTime;
              return this;
            }

            /**
             * Optional. Maximum number of applications to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of applications to return in each response. The service may return fewer
           than this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of applications to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public Search setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplications call.
             * Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplications call. Provide this
           token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplications call.
             * Provide this token to retrieve the subsequent page.
             */
            public Search setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public Search set(String parameterName, Object value) {
              return (Search) super.set(parameterName, value);
            }
          }
          /**
           * Obtain executor summary with respect to a spark stage attempt.
           *
           * Create a request for the method "sparkApplications.searchExecutorStageSummary".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchExecutorStageSummary#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchExecutorStageSummary searchExecutorStageSummary(java.lang.String name) throws java.io.IOException {
            SearchExecutorStageSummary result = new SearchExecutorStageSummary(name);
            initialize(result);
            return result;
          }

          public class SearchExecutorStageSummary extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationExecutorStageSummaryResponse> {

            private static final String REST_PATH = "v1/{+name}:searchExecutorStageSummary";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain executor summary with respect to a spark stage attempt.
             *
             * Create a request for the method "sparkApplications.searchExecutorStageSummary".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchExecutorStageSummary#execute()} method to invoke the
             * remote operation. <p> {@link SearchExecutorStageSummary#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchExecutorStageSummary(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationExecutorStageSummaryResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchExecutorStageSummary set$Xgafv(java.lang.String $Xgafv) {
              return (SearchExecutorStageSummary) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchExecutorStageSummary setAccessToken(java.lang.String accessToken) {
              return (SearchExecutorStageSummary) super.setAccessToken(accessToken);
            }

            @Override
            public SearchExecutorStageSummary setAlt(java.lang.String alt) {
              return (SearchExecutorStageSummary) super.setAlt(alt);
            }

            @Override
            public SearchExecutorStageSummary setCallback(java.lang.String callback) {
              return (SearchExecutorStageSummary) super.setCallback(callback);
            }

            @Override
            public SearchExecutorStageSummary setFields(java.lang.String fields) {
              return (SearchExecutorStageSummary) super.setFields(fields);
            }

            @Override
            public SearchExecutorStageSummary setKey(java.lang.String key) {
              return (SearchExecutorStageSummary) super.setKey(key);
            }

            @Override
            public SearchExecutorStageSummary setOauthToken(java.lang.String oauthToken) {
              return (SearchExecutorStageSummary) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchExecutorStageSummary setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchExecutorStageSummary) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchExecutorStageSummary setQuotaUser(java.lang.String quotaUser) {
              return (SearchExecutorStageSummary) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchExecutorStageSummary setUploadType(java.lang.String uploadType) {
              return (SearchExecutorStageSummary) super.setUploadType(uploadType);
            }

            @Override
            public SearchExecutorStageSummary setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchExecutorStageSummary) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchExecutorStageSummary setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of executors to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchExecutorStageSummary setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationExecutorStageSummary call. Provide this token to
             * retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationExecutorStageSummary
           call. Provide this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationExecutorStageSummary call. Provide this token to
             * retrieve the subsequent page.
             */
            public SearchExecutorStageSummary setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchExecutorStageSummary setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public SearchExecutorStageSummary setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public SearchExecutorStageSummary setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public SearchExecutorStageSummary set(String parameterName, Object value) {
              return (SearchExecutorStageSummary) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to executors for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchExecutors".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchExecutors#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchExecutors searchExecutors(java.lang.String name) throws java.io.IOException {
            SearchExecutors result = new SearchExecutors(name);
            initialize(result);
            return result;
          }

          public class SearchExecutors extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationExecutorsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchExecutors";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to executors for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchExecutors".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchExecutors#execute()} method to invoke the remote
             * operation. <p> {@link SearchExecutors#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchExecutors(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationExecutorsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchExecutors set$Xgafv(java.lang.String $Xgafv) {
              return (SearchExecutors) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchExecutors setAccessToken(java.lang.String accessToken) {
              return (SearchExecutors) super.setAccessToken(accessToken);
            }

            @Override
            public SearchExecutors setAlt(java.lang.String alt) {
              return (SearchExecutors) super.setAlt(alt);
            }

            @Override
            public SearchExecutors setCallback(java.lang.String callback) {
              return (SearchExecutors) super.setCallback(callback);
            }

            @Override
            public SearchExecutors setFields(java.lang.String fields) {
              return (SearchExecutors) super.setFields(fields);
            }

            @Override
            public SearchExecutors setKey(java.lang.String key) {
              return (SearchExecutors) super.setKey(key);
            }

            @Override
            public SearchExecutors setOauthToken(java.lang.String oauthToken) {
              return (SearchExecutors) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchExecutors setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchExecutors) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchExecutors setQuotaUser(java.lang.String quotaUser) {
              return (SearchExecutors) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchExecutors setUploadType(java.lang.String uploadType) {
              return (SearchExecutors) super.setUploadType(uploadType);
            }

            @Override
            public SearchExecutors setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchExecutors) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchExecutors setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            @com.google.api.client.util.Key
            private java.lang.String executorStatus;

            /** Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            public java.lang.String getExecutorStatus() {
              return executorStatus;
            }

            /**
             * Optional. Filter to select whether active/ dead or all executors should be selected.
             */
            public SearchExecutors setExecutorStatus(java.lang.String executorStatus) {
              this.executorStatus = executorStatus;
              return this;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of executors to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of executors to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchExecutors setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationExecutors call. Provide this token to retrieve the
             * subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationExecutors call.
           Provide this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationExecutors call. Provide this token to retrieve the
             * subsequent page.
             */
            public SearchExecutors setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchExecutors setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SearchExecutors set(String parameterName, Object value) {
              return (SearchExecutors) super.set(parameterName, value);
            }
          }
          /**
           * Obtain list of spark jobs corresponding to a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchJobs".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchJobs#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchJobs searchJobs(java.lang.String name) throws java.io.IOException {
            SearchJobs result = new SearchJobs(name);
            initialize(result);
            return result;
          }

          public class SearchJobs extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationJobsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchJobs";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain list of spark jobs corresponding to a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchJobs".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchJobs#execute()} method to invoke the remote
             * operation. <p> {@link
             * SearchJobs#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchJobs(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationJobsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchJobs set$Xgafv(java.lang.String $Xgafv) {
              return (SearchJobs) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchJobs setAccessToken(java.lang.String accessToken) {
              return (SearchJobs) super.setAccessToken(accessToken);
            }

            @Override
            public SearchJobs setAlt(java.lang.String alt) {
              return (SearchJobs) super.setAlt(alt);
            }

            @Override
            public SearchJobs setCallback(java.lang.String callback) {
              return (SearchJobs) super.setCallback(callback);
            }

            @Override
            public SearchJobs setFields(java.lang.String fields) {
              return (SearchJobs) super.setFields(fields);
            }

            @Override
            public SearchJobs setKey(java.lang.String key) {
              return (SearchJobs) super.setKey(key);
            }

            @Override
            public SearchJobs setOauthToken(java.lang.String oauthToken) {
              return (SearchJobs) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchJobs setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchJobs) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchJobs setQuotaUser(java.lang.String quotaUser) {
              return (SearchJobs) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchJobs setUploadType(java.lang.String uploadType) {
              return (SearchJobs) super.setUploadType(uploadType);
            }

            @Override
            public SearchJobs setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchJobs) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchJobs setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. List only jobs in the specific state. */
            @com.google.api.client.util.Key
            private java.lang.String jobStatus;

            /** Optional. List only jobs in the specific state.
             */
            public java.lang.String getJobStatus() {
              return jobStatus;
            }

            /** Optional. List only jobs in the specific state. */
            public SearchJobs setJobStatus(java.lang.String jobStatus) {
              this.jobStatus = jobStatus;
              return this;
            }

            /**
             * Optional. Maximum number of jobs to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of jobs to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of jobs to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchJobs setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplicationJobs
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationJobs call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplicationJobs
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchJobs setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchJobs setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SearchJobs set(String parameterName, Object value) {
              return (SearchJobs) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to SQL Queries for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchSqlQueries".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchSqlQueries#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchSqlQueries searchSqlQueries(java.lang.String name) throws java.io.IOException {
            SearchSqlQueries result = new SearchSqlQueries(name);
            initialize(result);
            return result;
          }

          public class SearchSqlQueries extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationSqlQueriesResponse> {

            private static final String REST_PATH = "v1/{+name}:searchSqlQueries";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to SQL Queries for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchSqlQueries".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchSqlQueries#execute()} method to invoke the remote
             * operation. <p> {@link SearchSqlQueries#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchSqlQueries(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationSqlQueriesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchSqlQueries set$Xgafv(java.lang.String $Xgafv) {
              return (SearchSqlQueries) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchSqlQueries setAccessToken(java.lang.String accessToken) {
              return (SearchSqlQueries) super.setAccessToken(accessToken);
            }

            @Override
            public SearchSqlQueries setAlt(java.lang.String alt) {
              return (SearchSqlQueries) super.setAlt(alt);
            }

            @Override
            public SearchSqlQueries setCallback(java.lang.String callback) {
              return (SearchSqlQueries) super.setCallback(callback);
            }

            @Override
            public SearchSqlQueries setFields(java.lang.String fields) {
              return (SearchSqlQueries) super.setFields(fields);
            }

            @Override
            public SearchSqlQueries setKey(java.lang.String key) {
              return (SearchSqlQueries) super.setKey(key);
            }

            @Override
            public SearchSqlQueries setOauthToken(java.lang.String oauthToken) {
              return (SearchSqlQueries) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchSqlQueries setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchSqlQueries) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchSqlQueries setQuotaUser(java.lang.String quotaUser) {
              return (SearchSqlQueries) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchSqlQueries setUploadType(java.lang.String uploadType) {
              return (SearchSqlQueries) super.setUploadType(uploadType);
            }

            @Override
            public SearchSqlQueries setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchSqlQueries) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchSqlQueries setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean details;

            /** Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to hide.
             */
            public java.lang.Boolean getDetails() {
              return details;
            }

            /**
             * Optional. Lists/ hides details of Spark plan nodes. True is set to list and false to
             * hide.
             */
            public SearchSqlQueries setDetails(java.lang.Boolean details) {
              this.details = details;
              return this;
            }

            /**
             * Optional. Maximum number of queries to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of queries to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of queries to return in each response. The service may
             * return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchSqlQueries setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationSqlQueries call. Provide this token to retrieve the
             * subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationSqlQueries call.
           Provide this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationSqlQueries call. Provide this token to retrieve the
             * subsequent page.
             */
            public SearchSqlQueries setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchSqlQueries setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            @com.google.api.client.util.Key
            private java.lang.Boolean planDescription;

            /** Optional. Enables/ disables physical plan description on demand
             */
            public java.lang.Boolean getPlanDescription() {
              return planDescription;
            }

            /** Optional. Enables/ disables physical plan description on demand */
            public SearchSqlQueries setPlanDescription(java.lang.Boolean planDescription) {
              this.planDescription = planDescription;
              return this;
            }

            @Override
            public SearchSqlQueries set(String parameterName, Object value) {
              return (SearchSqlQueries) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to tasks for a spark stage attempt for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStageAttemptTasks".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStageAttemptTasks#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchStageAttemptTasks searchStageAttemptTasks(java.lang.String name) throws java.io.IOException {
            SearchStageAttemptTasks result = new SearchStageAttemptTasks(name);
            initialize(result);
            return result;
          }

          public class SearchStageAttemptTasks extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationStageAttemptTasksResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStageAttemptTasks";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to tasks for a spark stage attempt for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStageAttemptTasks".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStageAttemptTasks#execute()} method to invoke the
             * remote operation. <p> {@link SearchStageAttemptTasks#initialize(com.google.api.client.googleapi
             * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchStageAttemptTasks(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationStageAttemptTasksResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStageAttemptTasks set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStageAttemptTasks) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStageAttemptTasks setAccessToken(java.lang.String accessToken) {
              return (SearchStageAttemptTasks) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStageAttemptTasks setAlt(java.lang.String alt) {
              return (SearchStageAttemptTasks) super.setAlt(alt);
            }

            @Override
            public SearchStageAttemptTasks setCallback(java.lang.String callback) {
              return (SearchStageAttemptTasks) super.setCallback(callback);
            }

            @Override
            public SearchStageAttemptTasks setFields(java.lang.String fields) {
              return (SearchStageAttemptTasks) super.setFields(fields);
            }

            @Override
            public SearchStageAttemptTasks setKey(java.lang.String key) {
              return (SearchStageAttemptTasks) super.setKey(key);
            }

            @Override
            public SearchStageAttemptTasks setOauthToken(java.lang.String oauthToken) {
              return (SearchStageAttemptTasks) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStageAttemptTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStageAttemptTasks) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStageAttemptTasks setQuotaUser(java.lang.String quotaUser) {
              return (SearchStageAttemptTasks) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStageAttemptTasks setUploadType(java.lang.String uploadType) {
              return (SearchStageAttemptTasks) super.setUploadType(uploadType);
            }

            @Override
            public SearchStageAttemptTasks setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStageAttemptTasks) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchStageAttemptTasks setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of tasks to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of tasks to return in each response. The service may return fewer than
           this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of tasks to return in each response. The service may return
             * fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public SearchStageAttemptTasks setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationStageAttemptTasks call. Provide this token to retrieve
             * the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationStageAttemptTasks
           call. Provide this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationStageAttemptTasks call. Provide this token to retrieve
             * the subsequent page.
             */
            public SearchStageAttemptTasks setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchStageAttemptTasks setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. Sort the tasks by runtime. */
            @com.google.api.client.util.Key
            private java.lang.Boolean sortRuntime;

            /** Optional. Sort the tasks by runtime.
             */
            public java.lang.Boolean getSortRuntime() {
              return sortRuntime;
            }

            /** Optional. Sort the tasks by runtime. */
            public SearchStageAttemptTasks setSortRuntime(java.lang.Boolean sortRuntime) {
              this.sortRuntime = sortRuntime;
              return this;
            }

            /** Optional. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Optional. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Optional. Stage Attempt ID */
            public SearchStageAttemptTasks setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Optional. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Optional. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Optional. Stage ID */
            public SearchStageAttemptTasks setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /** Optional. List only tasks in the state. */
            @com.google.api.client.util.Key
            private java.lang.String taskStatus;

            /** Optional. List only tasks in the state.
             */
            public java.lang.String getTaskStatus() {
              return taskStatus;
            }

            /** Optional. List only tasks in the state. */
            public SearchStageAttemptTasks setTaskStatus(java.lang.String taskStatus) {
              this.taskStatus = taskStatus;
              return this;
            }

            @Override
            public SearchStageAttemptTasks set(String parameterName, Object value) {
              return (SearchStageAttemptTasks) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to a spark stage attempts for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStageAttempts".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStageAttempts#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchStageAttempts searchStageAttempts(java.lang.String name) throws java.io.IOException {
            SearchStageAttempts result = new SearchStageAttempts(name);
            initialize(result);
            return result;
          }

          public class SearchStageAttempts extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationStageAttemptsResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStageAttempts";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to a spark stage attempts for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStageAttempts".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStageAttempts#execute()} method to invoke the remote
             * operation. <p> {@link SearchStageAttempts#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchStageAttempts(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationStageAttemptsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStageAttempts set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStageAttempts) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStageAttempts setAccessToken(java.lang.String accessToken) {
              return (SearchStageAttempts) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStageAttempts setAlt(java.lang.String alt) {
              return (SearchStageAttempts) super.setAlt(alt);
            }

            @Override
            public SearchStageAttempts setCallback(java.lang.String callback) {
              return (SearchStageAttempts) super.setCallback(callback);
            }

            @Override
            public SearchStageAttempts setFields(java.lang.String fields) {
              return (SearchStageAttempts) super.setFields(fields);
            }

            @Override
            public SearchStageAttempts setKey(java.lang.String key) {
              return (SearchStageAttempts) super.setKey(key);
            }

            @Override
            public SearchStageAttempts setOauthToken(java.lang.String oauthToken) {
              return (SearchStageAttempts) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStageAttempts setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStageAttempts) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStageAttempts setQuotaUser(java.lang.String quotaUser) {
              return (SearchStageAttempts) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStageAttempts setUploadType(java.lang.String uploadType) {
              return (SearchStageAttempts) super.setUploadType(uploadType);
            }

            @Override
            public SearchStageAttempts setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStageAttempts) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchStageAttempts setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to
             * return in each response. The service may return fewer than this. The default page
             * size is 10; the maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to return in each
           response. The service may return fewer than this. The default page size is 10; the maximum page
           size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of stage attempts (paging based on stage_attempt_id) to
             * return in each response. The service may return fewer than this. The default page
             * size is 10; the maximum page size is 100.
             */
            public SearchStageAttempts setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationStageAttempts call. Provide this token to retrieve the
             * subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationStageAttempts call.
           Provide this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous
             * SearchSessionSparkApplicationStageAttempts call. Provide this token to retrieve the
             * subsequent page.
             */
            public SearchStageAttempts setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchStageAttempts setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage ID for which attempts are to be fetched */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID for which attempts are to be fetched
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID for which attempts are to be fetched */
            public SearchStageAttempts setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public SearchStageAttempts setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public SearchStageAttempts set(String parameterName, Object value) {
              return (SearchStageAttempts) super.set(parameterName, value);
            }
          }
          /**
           * Obtain data corresponding to stages for a Spark Application.
           *
           * Create a request for the method "sparkApplications.searchStages".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SearchStages#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SearchStages searchStages(java.lang.String name) throws java.io.IOException {
            SearchStages result = new SearchStages(name);
            initialize(result);
            return result;
          }

          public class SearchStages extends DataprocRequest<com.google.api.services.dataproc.model.SearchSessionSparkApplicationStagesResponse> {

            private static final String REST_PATH = "v1/{+name}:searchStages";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain data corresponding to stages for a Spark Application.
             *
             * Create a request for the method "sparkApplications.searchStages".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SearchStages#execute()} method to invoke the remote
             * operation. <p> {@link
             * SearchStages#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SearchStages(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SearchSessionSparkApplicationStagesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchStages set$Xgafv(java.lang.String $Xgafv) {
              return (SearchStages) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchStages setAccessToken(java.lang.String accessToken) {
              return (SearchStages) super.setAccessToken(accessToken);
            }

            @Override
            public SearchStages setAlt(java.lang.String alt) {
              return (SearchStages) super.setAlt(alt);
            }

            @Override
            public SearchStages setCallback(java.lang.String callback) {
              return (SearchStages) super.setCallback(callback);
            }

            @Override
            public SearchStages setFields(java.lang.String fields) {
              return (SearchStages) super.setFields(fields);
            }

            @Override
            public SearchStages setKey(java.lang.String key) {
              return (SearchStages) super.setKey(key);
            }

            @Override
            public SearchStages setOauthToken(java.lang.String oauthToken) {
              return (SearchStages) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchStages setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchStages) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchStages setQuotaUser(java.lang.String quotaUser) {
              return (SearchStages) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchStages setUploadType(java.lang.String uploadType) {
              return (SearchStages) super.setUploadType(uploadType);
            }

            @Override
            public SearchStages setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchStages) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SearchStages setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. Maximum number of stages (paging based on stage_id) to return in each
             * response. The service may return fewer than this. The default page size is 10; the
             * maximum page size is 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of stages (paging based on stage_id) to return in each response. The
           service may return fewer than this. The default page size is 10; the maximum page size is 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of stages (paging based on stage_id) to return in each
             * response. The service may return fewer than this. The default page size is 10; the
             * maximum page size is 100.
             */
            public SearchStages setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplicationStages
             * call. Provide this token to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token received from a previous SearchSessionSparkApplicationStages call. Provide
           this token to retrieve the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token received from a previous SearchSessionSparkApplicationStages
             * call. Provide this token to retrieve the subsequent page.
             */
            public SearchStages setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SearchStages setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Optional. List only stages in the given state. */
            @com.google.api.client.util.Key
            private java.lang.String stageStatus;

            /** Optional. List only stages in the given state.
             */
            public java.lang.String getStageStatus() {
              return stageStatus;
            }

            /** Optional. List only stages in the given state. */
            public SearchStages setStageStatus(java.lang.String stageStatus) {
              this.stageStatus = stageStatus;
              return this;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            @com.google.api.client.util.Key
            private String summaryMetricsMask;

            /** Optional. The list of summary metrics fields to include. Empty list will default to skip all
           summary metrics fields. Example, if the response should include TaskQuantileMetrics, the request
           should have task_quantile_metrics in summary_metrics_mask field
             */
            public String getSummaryMetricsMask() {
              return summaryMetricsMask;
            }

            /**
             * Optional. The list of summary metrics fields to include. Empty list will default to
             * skip all summary metrics fields. Example, if the response should include
             * TaskQuantileMetrics, the request should have task_quantile_metrics in
             * summary_metrics_mask field
             */
            public SearchStages setSummaryMetricsMask(String summaryMetricsMask) {
              this.summaryMetricsMask = summaryMetricsMask;
              return this;
            }

            @Override
            public SearchStages set(String parameterName, Object value) {
              return (SearchStages) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Executor Summary for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeExecutors".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeExecutors#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SummarizeExecutors summarizeExecutors(java.lang.String name) throws java.io.IOException {
            SummarizeExecutors result = new SummarizeExecutors(name);
            initialize(result);
            return result;
          }

          public class SummarizeExecutors extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationExecutorsResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeExecutors";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Executor Summary for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeExecutors".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeExecutors#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeExecutors#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SummarizeExecutors(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationExecutorsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeExecutors set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeExecutors) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeExecutors setAccessToken(java.lang.String accessToken) {
              return (SummarizeExecutors) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeExecutors setAlt(java.lang.String alt) {
              return (SummarizeExecutors) super.setAlt(alt);
            }

            @Override
            public SummarizeExecutors setCallback(java.lang.String callback) {
              return (SummarizeExecutors) super.setCallback(callback);
            }

            @Override
            public SummarizeExecutors setFields(java.lang.String fields) {
              return (SummarizeExecutors) super.setFields(fields);
            }

            @Override
            public SummarizeExecutors setKey(java.lang.String key) {
              return (SummarizeExecutors) super.setKey(key);
            }

            @Override
            public SummarizeExecutors setOauthToken(java.lang.String oauthToken) {
              return (SummarizeExecutors) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeExecutors setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeExecutors) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeExecutors setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeExecutors) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeExecutors setUploadType(java.lang.String uploadType) {
              return (SummarizeExecutors) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeExecutors setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeExecutors) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SummarizeExecutors setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SummarizeExecutors setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeExecutors set(String parameterName, Object value) {
              return (SummarizeExecutors) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Jobs for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeJobs".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeJobs#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SummarizeJobs summarizeJobs(java.lang.String name) throws java.io.IOException {
            SummarizeJobs result = new SummarizeJobs(name);
            initialize(result);
            return result;
          }

          public class SummarizeJobs extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationJobsResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeJobs";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Jobs for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeJobs".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeJobs#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeJobs#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SummarizeJobs(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationJobsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeJobs set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeJobs) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeJobs setAccessToken(java.lang.String accessToken) {
              return (SummarizeJobs) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeJobs setAlt(java.lang.String alt) {
              return (SummarizeJobs) super.setAlt(alt);
            }

            @Override
            public SummarizeJobs setCallback(java.lang.String callback) {
              return (SummarizeJobs) super.setCallback(callback);
            }

            @Override
            public SummarizeJobs setFields(java.lang.String fields) {
              return (SummarizeJobs) super.setFields(fields);
            }

            @Override
            public SummarizeJobs setKey(java.lang.String key) {
              return (SummarizeJobs) super.setKey(key);
            }

            @Override
            public SummarizeJobs setOauthToken(java.lang.String oauthToken) {
              return (SummarizeJobs) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeJobs setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeJobs) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeJobs setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeJobs) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeJobs setUploadType(java.lang.String uploadType) {
              return (SummarizeJobs) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeJobs setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeJobs) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SummarizeJobs setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SummarizeJobs setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeJobs set(String parameterName, Object value) {
              return (SummarizeJobs) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Tasks for a Spark Application Stage Attempt
           *
           * Create a request for the method "sparkApplications.summarizeStageAttemptTasks".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeStageAttemptTasks#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SummarizeStageAttemptTasks summarizeStageAttemptTasks(java.lang.String name) throws java.io.IOException {
            SummarizeStageAttemptTasks result = new SummarizeStageAttemptTasks(name);
            initialize(result);
            return result;
          }

          public class SummarizeStageAttemptTasks extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationStageAttemptTasksResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeStageAttemptTasks";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Tasks for a Spark Application Stage Attempt
             *
             * Create a request for the method "sparkApplications.summarizeStageAttemptTasks".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeStageAttemptTasks#execute()} method to invoke the
             * remote operation. <p> {@link SummarizeStageAttemptTasks#initialize(com.google.api.client.google
             * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
             * immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SummarizeStageAttemptTasks(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationStageAttemptTasksResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeStageAttemptTasks set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeStageAttemptTasks) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeStageAttemptTasks setAccessToken(java.lang.String accessToken) {
              return (SummarizeStageAttemptTasks) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeStageAttemptTasks setAlt(java.lang.String alt) {
              return (SummarizeStageAttemptTasks) super.setAlt(alt);
            }

            @Override
            public SummarizeStageAttemptTasks setCallback(java.lang.String callback) {
              return (SummarizeStageAttemptTasks) super.setCallback(callback);
            }

            @Override
            public SummarizeStageAttemptTasks setFields(java.lang.String fields) {
              return (SummarizeStageAttemptTasks) super.setFields(fields);
            }

            @Override
            public SummarizeStageAttemptTasks setKey(java.lang.String key) {
              return (SummarizeStageAttemptTasks) super.setKey(key);
            }

            @Override
            public SummarizeStageAttemptTasks setOauthToken(java.lang.String oauthToken) {
              return (SummarizeStageAttemptTasks) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeStageAttemptTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeStageAttemptTasks) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeStageAttemptTasks setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeStageAttemptTasks) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeStageAttemptTasks setUploadType(java.lang.String uploadType) {
              return (SummarizeStageAttemptTasks) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeStageAttemptTasks setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeStageAttemptTasks) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SummarizeStageAttemptTasks setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SummarizeStageAttemptTasks setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            /** Required. Stage Attempt ID */
            @com.google.api.client.util.Key
            private java.lang.Integer stageAttemptId;

            /** Required. Stage Attempt ID
             */
            public java.lang.Integer getStageAttemptId() {
              return stageAttemptId;
            }

            /** Required. Stage Attempt ID */
            public SummarizeStageAttemptTasks setStageAttemptId(java.lang.Integer stageAttemptId) {
              this.stageAttemptId = stageAttemptId;
              return this;
            }

            /** Required. Stage ID */
            @com.google.api.client.util.Key
            private java.lang.Long stageId;

            /** Required. Stage ID
             */
            public java.lang.Long getStageId() {
              return stageId;
            }

            /** Required. Stage ID */
            public SummarizeStageAttemptTasks setStageId(java.lang.Long stageId) {
              this.stageId = stageId;
              return this;
            }

            @Override
            public SummarizeStageAttemptTasks set(String parameterName, Object value) {
              return (SummarizeStageAttemptTasks) super.set(parameterName, value);
            }
          }
          /**
           * Obtain summary of Stages for a Spark Application
           *
           * Create a request for the method "sparkApplications.summarizeStages".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link SummarizeStages#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @return the request
           */
          public SummarizeStages summarizeStages(java.lang.String name) throws java.io.IOException {
            SummarizeStages result = new SummarizeStages(name);
            initialize(result);
            return result;
          }

          public class SummarizeStages extends DataprocRequest<com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationStagesResponse> {

            private static final String REST_PATH = "v1/{+name}:summarizeStages";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Obtain summary of Stages for a Spark Application
             *
             * Create a request for the method "sparkApplications.summarizeStages".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link SummarizeStages#execute()} method to invoke the remote
             * operation. <p> {@link SummarizeStages#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The fully qualified name of the session to retrieve in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @since 1.13
             */
            protected SummarizeStages(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.SummarizeSessionSparkApplicationStagesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SummarizeStages set$Xgafv(java.lang.String $Xgafv) {
              return (SummarizeStages) super.set$Xgafv($Xgafv);
            }

            @Override
            public SummarizeStages setAccessToken(java.lang.String accessToken) {
              return (SummarizeStages) super.setAccessToken(accessToken);
            }

            @Override
            public SummarizeStages setAlt(java.lang.String alt) {
              return (SummarizeStages) super.setAlt(alt);
            }

            @Override
            public SummarizeStages setCallback(java.lang.String callback) {
              return (SummarizeStages) super.setCallback(callback);
            }

            @Override
            public SummarizeStages setFields(java.lang.String fields) {
              return (SummarizeStages) super.setFields(fields);
            }

            @Override
            public SummarizeStages setKey(java.lang.String key) {
              return (SummarizeStages) super.setKey(key);
            }

            @Override
            public SummarizeStages setOauthToken(java.lang.String oauthToken) {
              return (SummarizeStages) super.setOauthToken(oauthToken);
            }

            @Override
            public SummarizeStages setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SummarizeStages) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SummarizeStages setQuotaUser(java.lang.String quotaUser) {
              return (SummarizeStages) super.setQuotaUser(quotaUser);
            }

            @Override
            public SummarizeStages setUploadType(java.lang.String uploadType) {
              return (SummarizeStages) super.setUploadType(uploadType);
            }

            @Override
            public SummarizeStages setUploadProtocol(java.lang.String uploadProtocol) {
              return (SummarizeStages) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the session to retrieve in the format "projects/PROJECT_ID/lo
           cations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the session to retrieve in the format "projects
             * /PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATI
             * ON_ID"
             */
            public SummarizeStages setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. Parent (Session) resource reference. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent (Session) resource reference.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent (Session) resource reference. */
            public SummarizeStages setParent(java.lang.String parent) {
              this.parent = parent;
              return this;
            }

            @Override
            public SummarizeStages set(String parameterName, Object value) {
              return (SummarizeStages) super.set(parameterName, value);
            }
          }
          /**
           * Write wrapper objects from dataplane to spanner
           *
           * Create a request for the method "sparkApplications.write".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Write#execute()} method to invoke the remote operation.
           *
           * @param name Required. The fully qualified name of the spark application to write data about in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
           * @param content the {@link com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextRequest}
           * @return the request
           */
          public Write write(java.lang.String name, com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextRequest content) throws java.io.IOException {
            Write result = new Write(name, content);
            initialize(result);
            return result;
          }

          public class Write extends DataprocRequest<com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextResponse> {

            private static final String REST_PATH = "v1/{+name}:write";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");

            /**
             * Write wrapper objects from dataplane to spanner
             *
             * Create a request for the method "sparkApplications.write".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Write#execute()} method to invoke the remote operation.
             * <p> {@link
             * Write#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The fully qualified name of the spark application to write data about in the format
           *        "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLI
           *        CATION_ID"
             * @param content the {@link com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextRequest}
             * @since 1.13
             */
            protected Write(java.lang.String name, com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextRequest content) {
              super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.WriteSessionSparkApplicationContextResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
            }

            @Override
            public Write set$Xgafv(java.lang.String $Xgafv) {
              return (Write) super.set$Xgafv($Xgafv);
            }

            @Override
            public Write setAccessToken(java.lang.String accessToken) {
              return (Write) super.setAccessToken(accessToken);
            }

            @Override
            public Write setAlt(java.lang.String alt) {
              return (Write) super.setAlt(alt);
            }

            @Override
            public Write setCallback(java.lang.String callback) {
              return (Write) super.setCallback(callback);
            }

            @Override
            public Write setFields(java.lang.String fields) {
              return (Write) super.setFields(fields);
            }

            @Override
            public Write setKey(java.lang.String key) {
              return (Write) super.setKey(key);
            }

            @Override
            public Write setOauthToken(java.lang.String oauthToken) {
              return (Write) super.setOauthToken(oauthToken);
            }

            @Override
            public Write setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Write) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Write setQuotaUser(java.lang.String quotaUser) {
              return (Write) super.setQuotaUser(quotaUser);
            }

            @Override
            public Write setUploadType(java.lang.String uploadType) {
              return (Write) super.setUploadType(uploadType);
            }

            @Override
            public Write setUploadProtocol(java.lang.String uploadProtocol) {
              return (Write) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The fully qualified name of the spark application to write data about in
             * the format "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkAp
             * plications/APPLICATION_ID"
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The fully qualified name of the spark application to write data about in the format "proj
           ects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkApplications/APPLICATION_ID"
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The fully qualified name of the spark application to write data about in
             * the format "projects/PROJECT_ID/locations/DATAPROC_REGION/sessions/SESSION_ID/sparkAp
             * plications/APPLICATION_ID"
             */
            public Write setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sessions/[^/]+/sparkApplications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Write set(String parameterName, Object value) {
              return (Write) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the WorkflowTemplates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.WorkflowTemplates.List request = dataproc.workflowTemplates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public WorkflowTemplates workflowTemplates() {
        return new WorkflowTemplates();
      }

      /**
       * The "workflowTemplates" collection of methods.
       */
      public class WorkflowTemplates {

        /**
         * Creates new workflow template.
         *
         * Create a request for the method "workflowTemplates.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates new workflow template.
           *
           * Create a request for the method "workflowTemplates.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.create, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.create,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.workflowTemplates.create, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.create, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a workflow template. It does not cancel in-progress workflows.
         *
         * Create a request for the method "workflowTemplates.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.delete, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Deletes a workflow template. It does not cancel in-progress workflows.
           *
           * Create a request for the method "workflowTemplates.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.delete, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.delete, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.delete,
         the resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.instantiate, the resource name of the template has the
         following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.delete, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The version of workflow template to delete. If specified, will only delete
           * the template if the current server version matches specified version.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer version;

          /** Optional. The version of workflow template to delete. If specified, will only delete the template
         if the current server version matches specified version.
           */
          public java.lang.Integer getVersion() {
            return version;
          }

          /**
           * Optional. The version of workflow template to delete. If specified, will only delete
           * the template if the current server version matches specified version.
           */
          public Delete setVersion(java.lang.Integer version) {
            this.version = version;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the latest workflow template.Can retrieve previously instantiated template by
         * specifying optional version parameter.
         *
         * Create a request for the method "workflowTemplates.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.get, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.get, the resource name of the template has the
         *        following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Retrieves the latest workflow template.Can retrieve previously instantiated template by
           * specifying optional version parameter.
           *
           * Create a request for the method "workflowTemplates.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.get, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.get, the resource name of the template has the
         *        following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.get,
         the resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.get, the resource name of the template has the following
         format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The version of workflow template to retrieve. Only previously instantiated
           * versions can be retrieved.If unspecified, retrieves the current version.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer version;

          /** Optional. The version of workflow template to retrieve. Only previously instantiated versions can
         be retrieved.If unspecified, retrieves the current version.
           */
          public java.lang.Integer getVersion() {
            return version;
          }

          /**
           * Optional. The version of workflow template to retrieve. Only previously instantiated
           * versions can be retrieved.If unspecified, retrieves the current version.
           */
          public Get setVersion(java.lang.Integer version) {
            this.version = version;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "workflowTemplates.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "workflowTemplates.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Instantiates a template and begins execution.The returned Operation can be used to track
         * execution of workflow by polling operations.get. The Operation will complete when entire workflow
         * is finished.The running workflow can be aborted via operations.cancel. This will cause any
         * inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata
         * will be WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata).
         * Also see Using WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
         * successful completion, Operation.response will be Empty.
         *
         * Create a request for the method "workflowTemplates.instantiate".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Instantiate#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.instantiate, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @param content the {@link com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest}
         * @return the request
         */
        public Instantiate instantiate(java.lang.String name, com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest content) throws java.io.IOException {
          Instantiate result = new Instantiate(name, content);
          initialize(result);
          return result;
        }

        public class Instantiate extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:instantiate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Instantiates a template and begins execution.The returned Operation can be used to track
           * execution of workflow by polling operations.get. The Operation will complete when entire
           * workflow is finished.The running workflow can be aborted via operations.cancel. This will cause
           * any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The
           * Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/r
           * pc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata
           * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
           * successful completion, Operation.response will be Empty.
           *
           * Create a request for the method "workflowTemplates.instantiate".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Instantiate#execute()} method to invoke the remote
           * operation. <p> {@link
           * Instantiate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.instantiate, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @param content the {@link com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest}
           * @since 1.13
           */
          protected Instantiate(java.lang.String name, com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Instantiate set$Xgafv(java.lang.String $Xgafv) {
            return (Instantiate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Instantiate setAccessToken(java.lang.String accessToken) {
            return (Instantiate) super.setAccessToken(accessToken);
          }

          @Override
          public Instantiate setAlt(java.lang.String alt) {
            return (Instantiate) super.setAlt(alt);
          }

          @Override
          public Instantiate setCallback(java.lang.String callback) {
            return (Instantiate) super.setCallback(callback);
          }

          @Override
          public Instantiate setFields(java.lang.String fields) {
            return (Instantiate) super.setFields(fields);
          }

          @Override
          public Instantiate setKey(java.lang.String key) {
            return (Instantiate) super.setKey(key);
          }

          @Override
          public Instantiate setOauthToken(java.lang.String oauthToken) {
            return (Instantiate) super.setOauthToken(oauthToken);
          }

          @Override
          public Instantiate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Instantiate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Instantiate setQuotaUser(java.lang.String quotaUser) {
            return (Instantiate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Instantiate setUploadType(java.lang.String uploadType) {
            return (Instantiate) super.setUploadType(uploadType);
          }

          @Override
          public Instantiate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Instantiate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.workflowTemplates.instantiate, the resource name of the template has the following
         format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.instantiate, the resource name of the template has the
         following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Instantiate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Instantiate set(String parameterName, Object value) {
            return (Instantiate) super.set(parameterName, value);
          }
        }
        /**
         * Instantiates a template and begins execution.This method is equivalent to executing the sequence
         * CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned
         * Operation can be used to track execution of workflow by polling operations.get. The Operation
         * will complete when entire workflow is finished.The running workflow can be aborted via
         * operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters
         * to be deleted.The Operation.metadata will be WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata).
         * Also see Using WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
         * successful completion, Operation.response will be Empty.
         *
         * Create a request for the method "workflowTemplates.instantiateInline".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link InstantiateInline#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,instantiateinline, the resource name of the region has
         *        the following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.instantiateinline, the resource name of the location
         *        has the following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public InstantiateInline instantiateInline(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          InstantiateInline result = new InstantiateInline(parent, content);
          initialize(result);
          return result;
        }

        public class InstantiateInline extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates:instantiateInline";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Instantiates a template and begins execution.This method is equivalent to executing the
           * sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The
           * returned Operation can be used to track execution of workflow by polling operations.get. The
           * Operation will complete when entire workflow is finished.The running workflow can be aborted
           * via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned
           * clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.co
           * m/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using
           * WorkflowMetadata
           * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
           * successful completion, Operation.response will be Empty.
           *
           * Create a request for the method "workflowTemplates.instantiateInline".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link InstantiateInline#execute()} method to invoke the remote
           * operation. <p> {@link InstantiateInline#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,instantiateinline, the resource name of the region has
         *        the following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.instantiateinline, the resource name of the location
         *        has the following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected InstantiateInline(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public InstantiateInline set$Xgafv(java.lang.String $Xgafv) {
            return (InstantiateInline) super.set$Xgafv($Xgafv);
          }

          @Override
          public InstantiateInline setAccessToken(java.lang.String accessToken) {
            return (InstantiateInline) super.setAccessToken(accessToken);
          }

          @Override
          public InstantiateInline setAlt(java.lang.String alt) {
            return (InstantiateInline) super.setAlt(alt);
          }

          @Override
          public InstantiateInline setCallback(java.lang.String callback) {
            return (InstantiateInline) super.setCallback(callback);
          }

          @Override
          public InstantiateInline setFields(java.lang.String fields) {
            return (InstantiateInline) super.setFields(fields);
          }

          @Override
          public InstantiateInline setKey(java.lang.String key) {
            return (InstantiateInline) super.setKey(key);
          }

          @Override
          public InstantiateInline setOauthToken(java.lang.String oauthToken) {
            return (InstantiateInline) super.setOauthToken(oauthToken);
          }

          @Override
          public InstantiateInline setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (InstantiateInline) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public InstantiateInline setQuotaUser(java.lang.String quotaUser) {
            return (InstantiateInline) super.setQuotaUser(quotaUser);
          }

          @Override
          public InstantiateInline setUploadType(java.lang.String uploadType) {
            return (InstantiateInline) super.setUploadType(uploadType);
          }

          @Override
          public InstantiateInline setUploadProtocol(java.lang.String uploadProtocol) {
            return (InstantiateInline) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,instantiateinline, the resource name of the region
           * has the following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.instantiateinline, the resource name of the
           * location has the following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.workflowTemplates,instantiateinline, the resource name of the region has the
         following format: projects/{project_id}/regions/{region} For
         projects.locations.workflowTemplates.instantiateinline, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,instantiateinline, the resource name of the region
           * has the following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.instantiateinline, the resource name of the
           * location has the following format: projects/{project_id}/locations/{location}
           */
          public InstantiateInline setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A tag that prevents multiple concurrent workflow instances with the same tag
           * from running. This mitigates risk of concurrent instances started due to retries.It is
           * recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A tag that prevents multiple concurrent workflow instances with the same tag from
         running. This mitigates risk of concurrent instances started due to retries.It is recommended to
         always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
         tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
         maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A tag that prevents multiple concurrent workflow instances with the same tag
           * from running. This mitigates risk of concurrent instances started due to retries.It is
           * recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          public InstantiateInline setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public InstantiateInline set(String parameterName, Object value) {
            return (InstantiateInline) super.set(parameterName, value);
          }
        }
        /**
         * Lists workflows that match the specified filter in the request.
         *
         * Create a request for the method "workflowTemplates.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,list, the resource name of the region has the following
         *        format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListWorkflowTemplatesResponse> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists workflows that match the specified filter in the request.
           *
           * Create a request for the method "workflowTemplates.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,list, the resource name of the region has the following
         *        format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListWorkflowTemplatesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,list,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.workflowTemplates.list, the resource name of the location has the following
         format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The maximum number of results to return in each response. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of results to return in each response.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The maximum number of results to return in each response. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The page token, returned by a previous call, to request the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "workflowTemplates.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "workflowTemplates.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "workflowTemplates.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "workflowTemplates.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Updates (replaces) workflow template. The updated template must contain version that matches the
         * current server version.
         *
         * Create a request for the method "workflowTemplates.update".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         *        projects.locations.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Updates (replaces) workflow template. The updated template must contain version that matches
           * the current server version.
           *
           * Create a request for the method "workflowTemplates.update".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         *        projects.locations.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "PUT", REST_PATH, content, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates, the resource name of the template has the following
           * format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the
         resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates, the resource name of the template has the following format:
         projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates, the resource name of the template has the following
           * format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Regions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Dataproc dataproc = new Dataproc(...);}
     *   {@code Dataproc.Regions.List request = dataproc.regions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Regions regions() {
      return new Regions();
    }

    /**
     * The "regions" collection of methods.
     */
    public class Regions {

      /**
       * An accessor for creating requests from the AutoscalingPolicies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.AutoscalingPolicies.List request = dataproc.autoscalingPolicies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutoscalingPolicies autoscalingPolicies() {
        return new AutoscalingPolicies();
      }

      /**
       * The "autoscalingPolicies" collection of methods.
       */
      public class AutoscalingPolicies {

        /**
         * Creates new autoscaling policy.
         *
         * Create a request for the method "autoscalingPolicies.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.AutoscalingPolicy content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+parent}/autoscalingPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+$");

          /**
           * Creates new autoscaling policy.
           *
           * Create a request for the method "autoscalingPolicies.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.AutoscalingPolicy content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.create, the resource name of the location has
           * the following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The "resource name" of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.autoscalingPolicies.create, the resource name of the region has the following
         format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.create,
         the resource name of the location has the following format:
         projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.create, the resource name of the location has
           * the following format: projects/{project_id}/locations/{location}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by
         * one or more clusters.
         *
         * Create a request for the method "autoscalingPolicies.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by
           * one or more clusters.
           *
           * Create a request for the method "autoscalingPolicies.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.autoscalingPolicies.delete, the resource name of the policy has the following
         format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies.delete, the resource name of the policy has the following
         format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.delete, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves autoscaling policy.
         *
         * Create a request for the method "autoscalingPolicies.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.get, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.get, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Retrieves autoscaling policy.
           *
           * Create a request for the method "autoscalingPolicies.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.get, the resource name of the policy has the
         *        following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}
         *        For projects.locations.autoscalingPolicies.get, the resource name of the policy has the
         *        following format:
         *        projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.get,
         the resource name of the policy has the following format:
         projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies.get, the resource name of the policy has the following
         format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies.get, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "autoscalingPolicies.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "autoscalingPolicies.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists autoscaling policies in the project.
         *
         * Create a request for the method "autoscalingPolicies.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.list, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListAutoscalingPoliciesResponse> {

          private static final String REST_PATH = "v1/{+parent}/autoscalingPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+$");

          /**
           * Lists autoscaling policies in the project.
           *
           * Create a request for the method "autoscalingPolicies.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The "resource name" of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies.list, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.autoscalingPolicies.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListAutoscalingPoliciesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The "resource name" of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.list,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.autoscalingPolicies.list, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The "resource name" of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies.list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.autoscalingPolicies.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of results to return in each response. Must be less than
           * or equal to 1000. Defaults to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of results to return in each response. Must be less than or equal to
         1000. Defaults to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of results to return in each response. Must be less than
           * or equal to 1000. Defaults to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The page token, returned by a previous call, to request the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "autoscalingPolicies.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "autoscalingPolicies.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "autoscalingPolicies.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "autoscalingPolicies.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be
         * full replacements.
         *
         * Create a request for the method "autoscalingPolicies.update".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         *        projects.locations.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
         * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.dataproc.model.AutoscalingPolicy content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends DataprocRequest<com.google.api.services.dataproc.model.AutoscalingPolicy> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");

          /**
           * Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will
           * be full replacements.
           *
           * Create a request for the method "autoscalingPolicies.update".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The "resource name" of the autoscaling policy, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         *        projects.locations.autoscalingPolicies, the resource name of the policy has the following
         *        format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           * @param content the {@link com.google.api.services.dataproc.model.AutoscalingPolicy}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.dataproc.model.AutoscalingPolicy content) {
            super(Dataproc.this, "PUT", REST_PATH, content, com.google.api.services.dataproc.model.AutoscalingPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies, the resource name of the policy has the following
           * format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The "resource name" of the autoscaling policy, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the
         resource name of the policy has the following format:
         projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
         projects.locations.autoscalingPolicies, the resource name of the policy has the following format:
         projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The "resource name" of the autoscaling policy, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.autoscalingPolicies, the resource name of the policy has the following
           * format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For
           * projects.locations.autoscalingPolicies, the resource name of the policy has the
           * following format:
           * projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Clusters collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Clusters.List request = dataproc.clusters().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Clusters clusters() {
        return new Clusters();
      }

      /**
       * The "clusters" collection of methods.
       */
      public class Clusters {

        /**
         * Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationme
         * tadata).
         *
         * Create a request for the method "clusters.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param content the {@link com.google.api.services.dataproc.model.Cluster}
         * @return the request
         */
        public Create create(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.Cluster content) throws java.io.IOException {
          Create result = new Create(projectId, region, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters";

          /**
           * Creates a cluster in a project. The returned Operation.metadata will be
           * ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dat
           * aproc.v1#clusteroperationmetadata).
           *
           * Create a request for the method "clusters.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param content the {@link com.google.api.services.dataproc.model.Cluster}
           * @since 1.13
           */
          protected Create(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.Cluster content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          public Create setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Create setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Optional. Failure action when primary worker creation fails. */
          @com.google.api.client.util.Key
          private java.lang.String actionOnFailedPrimaryWorkers;

          /** Optional. Failure action when primary worker creation fails.
           */
          public java.lang.String getActionOnFailedPrimaryWorkers() {
            return actionOnFailedPrimaryWorkers;
          }

          /** Optional. Failure action when primary worker creation fails. */
          public Create setActionOnFailedPrimaryWorkers(java.lang.String actionOnFailedPrimaryWorkers) {
            this.actionOnFailedPrimaryWorkers = actionOnFailedPrimaryWorkers;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * CreateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the server receives two CreateClusterRequest
         (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.datapro
         c.v1.CreateClusterRequest)s with the same id, then the second request will be ignored and the first
         google.longrunning.Operation created and stored in the backend is returned.It is recommended to
         always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
         ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
         maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * CreateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationme
         * tadata).
         *
         * Create a request for the method "clusters.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @return the request
         */
        public Delete delete(java.lang.String projectId, java.lang.String region, java.lang.String clusterName) throws java.io.IOException {
          Delete result = new Delete(projectId, region, clusterName);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}";

          /**
           * Deletes a cluster in a project. The returned Operation.metadata will be
           * ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dat
           * aproc.v1#clusteroperationmetadata).
           *
           * Create a request for the method "clusters.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @since 1.13
           */
          protected Delete(java.lang.String projectId, java.lang.String region, java.lang.String clusterName) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          public Delete setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Delete setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Delete setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          /**
           * Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND)
           * if cluster with specified UUID does not exist.
           */
          @com.google.api.client.util.Key
          private java.lang.String clusterUuid;

          /** Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND) if cluster
         with specified UUID does not exist.
           */
          public java.lang.String getClusterUuid() {
            return clusterUuid;
          }

          /**
           * Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND)
           * if cluster with specified UUID does not exist.
           */
          public Delete setClusterUuid(java.lang.String clusterUuid) {
            this.clusterUuid = clusterUuid;
            return this;
          }

          /**
           * Optional. The graceful termination timeout for the deletion of the cluster. Indicate
           * the time the request will wait to complete the running jobs on the cluster before its
           * forceful deletion. Default value is 0 indicating that the user has not enabled the
           * graceful termination. Value can be between 60 second and 6 Hours, in case the graceful
           * termination is enabled. (There is no separate flag to check the enabling or disabling
           * of graceful termination, it can be checked by the values in the field).
           */
          @com.google.api.client.util.Key
          private String gracefulTerminationTimeout;

          /** Optional. The graceful termination timeout for the deletion of the cluster. Indicate the time the
         request will wait to complete the running jobs on the cluster before its forceful deletion. Default
         value is 0 indicating that the user has not enabled the graceful termination. Value can be between
         60 second and 6 Hours, in case the graceful termination is enabled. (There is no separate flag to
         check the enabling or disabling of graceful termination, it can be checked by the values in the
         field).
           */
          public String getGracefulTerminationTimeout() {
            return gracefulTerminationTimeout;
          }

          /**
           * Optional. The graceful termination timeout for the deletion of the cluster. Indicate
           * the time the request will wait to complete the running jobs on the cluster before its
           * forceful deletion. Default value is 0 indicating that the user has not enabled the
           * graceful termination. Value can be between 60 second and 6 Hours, in case the graceful
           * termination is enabled. (There is no separate flag to check the enabling or disabling
           * of graceful termination, it can be checked by the values in the field).
           */
          public Delete setGracefulTerminationTimeout(String gracefulTerminationTimeout) {
            this.gracefulTerminationTimeout = gracefulTerminationTimeout;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * DeleteClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the server receives two DeleteClusterRequest
         (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.datapro
         c.v1.DeleteClusterRequest)s with the same id, then the second request will be ignored and the first
         google.longrunning.Operation created and stored in the backend is returned.It is recommended to
         always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
         ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
         maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * DeleteClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets cluster diagnostic information. The returned Operation.metadata will be
         * ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.datap
         * roc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains
         * DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.datapro
         * c.v1#diagnoseclusterresults).
         *
         * Create a request for the method "clusters.diagnose".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Diagnose#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @param content the {@link com.google.api.services.dataproc.model.DiagnoseClusterRequest}
         * @return the request
         */
        public Diagnose diagnose(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.DiagnoseClusterRequest content) throws java.io.IOException {
          Diagnose result = new Diagnose(projectId, region, clusterName, content);
          initialize(result);
          return result;
        }

        public class Diagnose extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose";

          /**
           * Gets cluster diagnostic information. The returned Operation.metadata will be
           * ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dat
           * aproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains
           * DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.datap
           * roc.v1#diagnoseclusterresults).
           *
           * Create a request for the method "clusters.diagnose".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Diagnose#execute()} method to invoke the remote operation.
           * <p> {@link
           * Diagnose#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @param content the {@link com.google.api.services.dataproc.model.DiagnoseClusterRequest}
           * @since 1.13
           */
          protected Diagnose(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.DiagnoseClusterRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Diagnose set$Xgafv(java.lang.String $Xgafv) {
            return (Diagnose) super.set$Xgafv($Xgafv);
          }

          @Override
          public Diagnose setAccessToken(java.lang.String accessToken) {
            return (Diagnose) super.setAccessToken(accessToken);
          }

          @Override
          public Diagnose setAlt(java.lang.String alt) {
            return (Diagnose) super.setAlt(alt);
          }

          @Override
          public Diagnose setCallback(java.lang.String callback) {
            return (Diagnose) super.setCallback(callback);
          }

          @Override
          public Diagnose setFields(java.lang.String fields) {
            return (Diagnose) super.setFields(fields);
          }

          @Override
          public Diagnose setKey(java.lang.String key) {
            return (Diagnose) super.setKey(key);
          }

          @Override
          public Diagnose setOauthToken(java.lang.String oauthToken) {
            return (Diagnose) super.setOauthToken(oauthToken);
          }

          @Override
          public Diagnose setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Diagnose) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Diagnose setQuotaUser(java.lang.String quotaUser) {
            return (Diagnose) super.setQuotaUser(quotaUser);
          }

          @Override
          public Diagnose setUploadType(java.lang.String uploadType) {
            return (Diagnose) super.setUploadType(uploadType);
          }

          @Override
          public Diagnose setUploadProtocol(java.lang.String uploadProtocol) {
            return (Diagnose) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          public Diagnose setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Diagnose setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Diagnose setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          @Override
          public Diagnose set(String parameterName, Object value) {
            return (Diagnose) super.set(parameterName, value);
          }
        }
        /**
         * Gets the resource representation for a cluster in a project.
         *
         * Create a request for the method "clusters.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @return the request
         */
        public Get get(java.lang.String projectId, java.lang.String region, java.lang.String clusterName) throws java.io.IOException {
          Get result = new Get(projectId, region, clusterName);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Cluster> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}";

          /**
           * Gets the resource representation for a cluster in a project.
           *
           * Create a request for the method "clusters.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @since 1.13
           */
          protected Get(java.lang.String projectId, java.lang.String region, java.lang.String clusterName) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Cluster.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          public Get setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Get setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Get setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "clusters.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "clusters.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a
         * personal auth cluster assigned to the user who is issuing the RPC.
         *
         * Create a request for the method "clusters.injectCredentials".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link InjectCredentials#execute()} method to invoke the remote operation.
         *
         * @param project Required. The ID of the Google Cloud Platform project the cluster belongs to, of the form projects/.
         * @param region Required. The region containing the cluster, of the form regions/.
         * @param cluster Required. The cluster, in the form clusters/.
         * @param content the {@link com.google.api.services.dataproc.model.InjectCredentialsRequest}
         * @return the request
         */
        public InjectCredentials injectCredentials(java.lang.String project, java.lang.String region, java.lang.String cluster, com.google.api.services.dataproc.model.InjectCredentialsRequest content) throws java.io.IOException {
          InjectCredentials result = new InjectCredentials(project, region, cluster, content);
          initialize(result);
          return result;
        }

        public class InjectCredentials extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+project}/{+region}/{+cluster}:injectCredentials";

          private final java.util.regex.Pattern PROJECT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+$");

          private final java.util.regex.Pattern REGION_PATTERN =
              java.util.regex.Pattern.compile("^regions/[^/]+$");

          private final java.util.regex.Pattern CLUSTER_PATTERN =
              java.util.regex.Pattern.compile("^clusters/[^/]+$");

          /**
           * Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a
           * personal auth cluster assigned to the user who is issuing the RPC.
           *
           * Create a request for the method "clusters.injectCredentials".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link InjectCredentials#execute()} method to invoke the remote
           * operation. <p> {@link InjectCredentials#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param project Required. The ID of the Google Cloud Platform project the cluster belongs to, of the form projects/.
           * @param region Required. The region containing the cluster, of the form regions/.
           * @param cluster Required. The cluster, in the form clusters/.
           * @param content the {@link com.google.api.services.dataproc.model.InjectCredentialsRequest}
           * @since 1.13
           */
          protected InjectCredentials(java.lang.String project, java.lang.String region, java.lang.String cluster, com.google.api.services.dataproc.model.InjectCredentialsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                  "Parameter project must conform to the pattern " +
                  "^projects/[^/]+$");
            }
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
                  "Parameter region must conform to the pattern " +
                  "^regions/[^/]+$");
            }
            this.cluster = com.google.api.client.util.Preconditions.checkNotNull(cluster, "Required parameter cluster must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CLUSTER_PATTERN.matcher(cluster).matches(),
                  "Parameter cluster must conform to the pattern " +
                  "^clusters/[^/]+$");
            }
          }

          @Override
          public InjectCredentials set$Xgafv(java.lang.String $Xgafv) {
            return (InjectCredentials) super.set$Xgafv($Xgafv);
          }

          @Override
          public InjectCredentials setAccessToken(java.lang.String accessToken) {
            return (InjectCredentials) super.setAccessToken(accessToken);
          }

          @Override
          public InjectCredentials setAlt(java.lang.String alt) {
            return (InjectCredentials) super.setAlt(alt);
          }

          @Override
          public InjectCredentials setCallback(java.lang.String callback) {
            return (InjectCredentials) super.setCallback(callback);
          }

          @Override
          public InjectCredentials setFields(java.lang.String fields) {
            return (InjectCredentials) super.setFields(fields);
          }

          @Override
          public InjectCredentials setKey(java.lang.String key) {
            return (InjectCredentials) super.setKey(key);
          }

          @Override
          public InjectCredentials setOauthToken(java.lang.String oauthToken) {
            return (InjectCredentials) super.setOauthToken(oauthToken);
          }

          @Override
          public InjectCredentials setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (InjectCredentials) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public InjectCredentials setQuotaUser(java.lang.String quotaUser) {
            return (InjectCredentials) super.setQuotaUser(quotaUser);
          }

          @Override
          public InjectCredentials setUploadType(java.lang.String uploadType) {
            return (InjectCredentials) super.setUploadType(uploadType);
          }

          @Override
          public InjectCredentials setUploadProtocol(java.lang.String uploadProtocol) {
            return (InjectCredentials) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The ID of the Google Cloud Platform project the cluster belongs to, of the
           * form projects/.
           */
          @com.google.api.client.util.Key
          private java.lang.String project;

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to, of the form
         projects/.
           */
          public java.lang.String getProject() {
            return project;
          }

          /**
           * Required. The ID of the Google Cloud Platform project the cluster belongs to, of the
           * form projects/.
           */
          public InjectCredentials setProject(java.lang.String project) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                  "Parameter project must conform to the pattern " +
                  "^projects/[^/]+$");
            }
            this.project = project;
            return this;
          }

          /** Required. The region containing the cluster, of the form regions/. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The region containing the cluster, of the form regions/.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The region containing the cluster, of the form regions/. */
          public InjectCredentials setRegion(java.lang.String region) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(REGION_PATTERN.matcher(region).matches(),
                  "Parameter region must conform to the pattern " +
                  "^regions/[^/]+$");
            }
            this.region = region;
            return this;
          }

          /** Required. The cluster, in the form clusters/. */
          @com.google.api.client.util.Key
          private java.lang.String cluster;

          /** Required. The cluster, in the form clusters/.
           */
          public java.lang.String getCluster() {
            return cluster;
          }

          /** Required. The cluster, in the form clusters/. */
          public InjectCredentials setCluster(java.lang.String cluster) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(CLUSTER_PATTERN.matcher(cluster).matches(),
                  "Parameter cluster must conform to the pattern " +
                  "^clusters/[^/]+$");
            }
            this.cluster = cluster;
            return this;
          }

          @Override
          public InjectCredentials set(String parameterName, Object value) {
            return (InjectCredentials) super.set(parameterName, value);
          }
        }
        /**
         * Lists all regions/{region}/clusters in a project alphabetically.
         *
         * Create a request for the method "clusters.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @return the request
         */
        public List list(java.lang.String projectId, java.lang.String region) throws java.io.IOException {
          List result = new List(projectId, region);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListClustersResponse> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters";

          /**
           * Lists all regions/{region}/clusters in a project alphabetically.
           *
           * Create a request for the method "clusters.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @since 1.13
           */
          protected List(java.lang.String projectId, java.lang.String region) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListClustersResponse.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the cluster belongs to. */
          public List setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public List setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /**
           * Optional. A filter constraining the clusters to list. Filters are case-sensitive and
           * have the following syntax:field = value AND field = value ...where field is one of
           * status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to
           * match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING,
           * RUNNING, ERROR, DELETING, UPDATING, STOPPING, or STOPPED. ACTIVE contains the CREATING,
           * UPDATING, and RUNNING states. INACTIVE contains the DELETING, ERROR, STOPPING, and
           * STOPPED states. clusterName is the name of the cluster provided at creation time. Only
           * the logical AND operator is supported; space-separated items are treated as having an
           * implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster
           * AND labels.env = staging AND labels.starred = *
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the
         following syntax:field = value AND field = value ...where field is one of status.state,
         clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values.
         status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING,
         UPDATING, STOPPING, or STOPPED. ACTIVE contains the CREATING, UPDATING, and RUNNING states.
         INACTIVE contains the DELETING, ERROR, STOPPING, and STOPPED states. clusterName is the name of the
         cluster provided at creation time. Only the logical AND operator is supported; space-separated
         items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND
         clusterName = mycluster AND labels.env = staging AND labels.starred = *
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter constraining the clusters to list. Filters are case-sensitive and
           * have the following syntax:field = value AND field = value ...where field is one of
           * status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to
           * match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING,
           * RUNNING, ERROR, DELETING, UPDATING, STOPPING, or STOPPED. ACTIVE contains the CREATING,
           * UPDATING, and RUNNING states. INACTIVE contains the DELETING, ERROR, STOPPING, and
           * STOPPED states. clusterName is the name of the cluster provided at creation time. Only
           * the logical AND operator is supported; space-separated items are treated as having an
           * implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster
           * AND labels.env = staging AND labels.starred = *
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. The standard List page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The standard List page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The standard List page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. The standard List page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The standard List page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. The standard List page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationme
         * tadata). The cluster must be in a RUNNING state or an error is returned.
         *
         * Create a request for the method "clusters.patch".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @param content the {@link com.google.api.services.dataproc.model.Cluster}
         * @return the request
         */
        public Patch patch(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.Cluster content) throws java.io.IOException {
          Patch result = new Patch(projectId, region, clusterName, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}";

          /**
           * Updates a cluster in a project. The returned Operation.metadata will be
           * ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dat
           * aproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is
           * returned.
           *
           * Create a request for the method "clusters.patch".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @param content the {@link com.google.api.services.dataproc.model.Cluster}
           * @since 1.13
           */
          protected Patch(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.Cluster content) {
            super(Dataproc.this, "PATCH", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          public Patch setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Patch setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Patch setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          /**
           * Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning allows
           * removing nodes from the cluster without interrupting jobs in progress. Timeout
           * specifies how long to wait for jobs in progress to finish before forcefully removing
           * nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful
           * decommission), and the maximum allowed timeout is 1 day. (see JSON representation of
           * Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only
           * supported on Dataproc image versions 1.2 and higher.
           */
          @com.google.api.client.util.Key
          private String gracefulDecommissionTimeout;

          /** Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning allows removing nodes
         from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs
         in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default
         timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON
         representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only
         supported on Dataproc image versions 1.2 and higher.
           */
          public String getGracefulDecommissionTimeout() {
            return gracefulDecommissionTimeout;
          }

          /**
           * Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning allows
           * removing nodes from the cluster without interrupting jobs in progress. Timeout
           * specifies how long to wait for jobs in progress to finish before forcefully removing
           * nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful
           * decommission), and the maximum allowed timeout is 1 day. (see JSON representation of
           * Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only
           * supported on Dataproc image versions 1.2 and higher.
           */
          public Patch setGracefulDecommissionTimeout(String gracefulDecommissionTimeout) {
            this.gracefulDecommissionTimeout = gracefulDecommissionTimeout;
            return this;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * UpdateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A unique ID used to identify the request. If the server receives two UpdateClusterRequest
         (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.datapro
         c.v1.UpdateClusterRequest)s with the same id, then the second request will be ignored and the first
         google.longrunning.Operation created and stored in the backend is returned.It is recommended to
         always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
         ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
         maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A unique ID used to identify the request. If the server receives two
           * UpdateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud
           * .dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest)s with the same id, then the
           * second request will be ignored and the first google.longrunning.Operation created and
           * stored in the backend is returned.It is recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. Specifies the path, relative to Cluster, of the field to update. For example,
           * to change the number of workers in a cluster to 5, the update_mask parameter would be
           * specified as config.worker_config.num_instances, and the PATCH request body would
           * specify the new value, as follows: { "config":{ "workerConfig":{ "numInstances":"5" } }
           * } Similarly, to change the number of preemptible workers in a cluster to 5, the
           * update_mask parameter would be config.secondary_worker_config.num_instances, and the
           * PATCH request body would be set as follows: { "config":{ "secondaryWorkerConfig":{
           * "numInstances":"5" } } } *Note:* Currently, only the following fields can be updated:
           * *Mask* *Purpose* *labels* Update labels *config.worker_config.num_instances* Resize
           * primary worker group *config.secondary_worker_config.num_instances* Resize secondary
           * worker group config.autoscaling_config.policy_uri Use, stop using, or change
           * autoscaling policies
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Specifies the path, relative to Cluster, of the field to update. For example, to change
         the number of workers in a cluster to 5, the update_mask parameter would be specified as
         config.worker_config.num_instances, and the PATCH request body would specify the new value, as
         follows: { "config":{ "workerConfig":{ "numInstances":"5" } } } Similarly, to change the number of
         preemptible workers in a cluster to 5, the update_mask parameter would be
         config.secondary_worker_config.num_instances, and the PATCH request body would be set as follows: {
         "config":{ "secondaryWorkerConfig":{ "numInstances":"5" } } } *Note:* Currently, only the following
         fields can be updated: *Mask* *Purpose* *labels* Update labels *config.worker_config.num_instances*
         Resize primary worker group *config.secondary_worker_config.num_instances* Resize secondary worker
         group config.autoscaling_config.policy_uri Use, stop using, or change autoscaling policies
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Specifies the path, relative to Cluster, of the field to update. For example,
           * to change the number of workers in a cluster to 5, the update_mask parameter would be
           * specified as config.worker_config.num_instances, and the PATCH request body would
           * specify the new value, as follows: { "config":{ "workerConfig":{ "numInstances":"5" } }
           * } Similarly, to change the number of preemptible workers in a cluster to 5, the
           * update_mask parameter would be config.secondary_worker_config.num_instances, and the
           * PATCH request body would be set as follows: { "config":{ "secondaryWorkerConfig":{
           * "numInstances":"5" } } } *Note:* Currently, only the following fields can be updated:
           * *Mask* *Purpose* *labels* Update labels *config.worker_config.num_instances* Resize
           * primary worker group *config.secondary_worker_config.num_instances* Resize secondary
           * worker group config.autoscaling_config.policy_uri Use, stop using, or change
           * autoscaling policies
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Repairs a cluster.
         *
         * Create a request for the method "clusters.repair".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Repair#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @param content the {@link com.google.api.services.dataproc.model.RepairClusterRequest}
         * @return the request
         */
        public Repair repair(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.RepairClusterRequest content) throws java.io.IOException {
          Repair result = new Repair(projectId, region, clusterName, content);
          initialize(result);
          return result;
        }

        public class Repair extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair";

          /**
           * Repairs a cluster.
           *
           * Create a request for the method "clusters.repair".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Repair#execute()} method to invoke the remote operation.
           * <p> {@link
           * Repair#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @param content the {@link com.google.api.services.dataproc.model.RepairClusterRequest}
           * @since 1.13
           */
          protected Repair(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.RepairClusterRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Repair set$Xgafv(java.lang.String $Xgafv) {
            return (Repair) super.set$Xgafv($Xgafv);
          }

          @Override
          public Repair setAccessToken(java.lang.String accessToken) {
            return (Repair) super.setAccessToken(accessToken);
          }

          @Override
          public Repair setAlt(java.lang.String alt) {
            return (Repair) super.setAlt(alt);
          }

          @Override
          public Repair setCallback(java.lang.String callback) {
            return (Repair) super.setCallback(callback);
          }

          @Override
          public Repair setFields(java.lang.String fields) {
            return (Repair) super.setFields(fields);
          }

          @Override
          public Repair setKey(java.lang.String key) {
            return (Repair) super.setKey(key);
          }

          @Override
          public Repair setOauthToken(java.lang.String oauthToken) {
            return (Repair) super.setOauthToken(oauthToken);
          }

          @Override
          public Repair setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Repair) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Repair setQuotaUser(java.lang.String quotaUser) {
            return (Repair) super.setQuotaUser(quotaUser);
          }

          @Override
          public Repair setUploadType(java.lang.String uploadType) {
            return (Repair) super.setUploadType(uploadType);
          }

          @Override
          public Repair setUploadProtocol(java.lang.String uploadProtocol) {
            return (Repair) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          public Repair setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Repair setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Repair setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          @Override
          public Repair set(String parameterName, Object value) {
            return (Repair) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "clusters.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "clusters.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Starts a cluster in a project.
         *
         * Create a request for the method "clusters.start".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Start#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @param content the {@link com.google.api.services.dataproc.model.StartClusterRequest}
         * @return the request
         */
        public Start start(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.StartClusterRequest content) throws java.io.IOException {
          Start result = new Start(projectId, region, clusterName, content);
          initialize(result);
          return result;
        }

        public class Start extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start";

          /**
           * Starts a cluster in a project.
           *
           * Create a request for the method "clusters.start".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
           * <p> {@link
           * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @param content the {@link com.google.api.services.dataproc.model.StartClusterRequest}
           * @since 1.13
           */
          protected Start(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.StartClusterRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Start set$Xgafv(java.lang.String $Xgafv) {
            return (Start) super.set$Xgafv($Xgafv);
          }

          @Override
          public Start setAccessToken(java.lang.String accessToken) {
            return (Start) super.setAccessToken(accessToken);
          }

          @Override
          public Start setAlt(java.lang.String alt) {
            return (Start) super.setAlt(alt);
          }

          @Override
          public Start setCallback(java.lang.String callback) {
            return (Start) super.setCallback(callback);
          }

          @Override
          public Start setFields(java.lang.String fields) {
            return (Start) super.setFields(fields);
          }

          @Override
          public Start setKey(java.lang.String key) {
            return (Start) super.setKey(key);
          }

          @Override
          public Start setOauthToken(java.lang.String oauthToken) {
            return (Start) super.setOauthToken(oauthToken);
          }

          @Override
          public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Start) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Start setQuotaUser(java.lang.String quotaUser) {
            return (Start) super.setQuotaUser(quotaUser);
          }

          @Override
          public Start setUploadType(java.lang.String uploadType) {
            return (Start) super.setUploadType(uploadType);
          }

          @Override
          public Start setUploadProtocol(java.lang.String uploadProtocol) {
            return (Start) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          public Start setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Start setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Start setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          @Override
          public Start set(String parameterName, Object value) {
            return (Start) super.set(parameterName, value);
          }
        }
        /**
         * Stops a cluster in a project.
         *
         * Create a request for the method "clusters.stop".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Stop#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param clusterName Required. The cluster name.
         * @param content the {@link com.google.api.services.dataproc.model.StopClusterRequest}
         * @return the request
         */
        public Stop stop(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.StopClusterRequest content) throws java.io.IOException {
          Stop result = new Stop(projectId, region, clusterName, content);
          initialize(result);
          return result;
        }

        public class Stop extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop";

          /**
           * Stops a cluster in a project.
           *
           * Create a request for the method "clusters.stop".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Stop#execute()} method to invoke the remote operation. <p>
           * {@link Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project the cluster belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param clusterName Required. The cluster name.
           * @param content the {@link com.google.api.services.dataproc.model.StopClusterRequest}
           * @since 1.13
           */
          protected Stop(java.lang.String projectId, java.lang.String region, java.lang.String clusterName, com.google.api.services.dataproc.model.StopClusterRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.clusterName = com.google.api.client.util.Preconditions.checkNotNull(clusterName, "Required parameter clusterName must be specified.");
          }

          @Override
          public Stop set$Xgafv(java.lang.String $Xgafv) {
            return (Stop) super.set$Xgafv($Xgafv);
          }

          @Override
          public Stop setAccessToken(java.lang.String accessToken) {
            return (Stop) super.setAccessToken(accessToken);
          }

          @Override
          public Stop setAlt(java.lang.String alt) {
            return (Stop) super.setAlt(alt);
          }

          @Override
          public Stop setCallback(java.lang.String callback) {
            return (Stop) super.setCallback(callback);
          }

          @Override
          public Stop setFields(java.lang.String fields) {
            return (Stop) super.setFields(fields);
          }

          @Override
          public Stop setKey(java.lang.String key) {
            return (Stop) super.setKey(key);
          }

          @Override
          public Stop setOauthToken(java.lang.String oauthToken) {
            return (Stop) super.setOauthToken(oauthToken);
          }

          @Override
          public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Stop) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Stop setQuotaUser(java.lang.String quotaUser) {
            return (Stop) super.setQuotaUser(quotaUser);
          }

          @Override
          public Stop setUploadType(java.lang.String uploadType) {
            return (Stop) super.setUploadType(uploadType);
          }

          @Override
          public Stop setUploadProtocol(java.lang.String uploadProtocol) {
            return (Stop) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project the cluster belongs to. */
          public Stop setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Stop setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The cluster name. */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Required. The cluster name.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /** Required. The cluster name. */
          public Stop setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          @Override
          public Stop set(String parameterName, Object value) {
            return (Stop) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "clusters.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "clusters.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the NodeGroups collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Dataproc dataproc = new Dataproc(...);}
         *   {@code Dataproc.NodeGroups.List request = dataproc.nodeGroups().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public NodeGroups nodeGroups() {
          return new NodeGroups();
        }

        /**
         * The "nodeGroups" collection of methods.
         */
        public class NodeGroups {

          /**
           * Creates a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata
           * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperation
           * metadata).
           *
           * Create a request for the method "nodeGroups.create".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource where this node group will be created. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}
           * @param content the {@link com.google.api.services.dataproc.model.NodeGroup}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.dataproc.model.NodeGroup content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/nodeGroups";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");

            /**
             * Creates a node group in a cluster. The returned Operation.metadata is
             * NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.d
             * ataproc.v1#nodegroupoperationmetadata).
             *
             * Create a request for the method "nodeGroups.create".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource where this node group will be created. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}
             * @param content the {@link com.google.api.services.dataproc.model.NodeGroup}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.dataproc.model.NodeGroup content) {
              super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent resource where this node group will be created. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource where this node group will be created. Format:
           projects/{project}/regions/{region}/clusters/{cluster}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent resource where this node group will be created. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. An optional node group ID. Generated if not specified.The ID must contain
             * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot
             * begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String nodeGroupId;

            /** Optional. An optional node group ID. Generated if not specified.The ID must contain only letters
           (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or
           hyphen. Must consist of from 3 to 33 characters.
             */
            public java.lang.String getNodeGroupId() {
              return nodeGroupId;
            }

            /**
             * Optional. An optional node group ID. Generated if not specified.The ID must contain
             * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot
             * begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
             */
            public Create setNodeGroupId(java.lang.String nodeGroupId) {
              this.nodeGroupId = nodeGroupId;
              return this;
            }

            /** Optional. operation id of the parent operation sending the create request */
            @com.google.api.client.util.Key
            private java.lang.String parentOperationId;

            /** Optional. operation id of the parent operation sending the create request
             */
            public java.lang.String getParentOperationId() {
              return parentOperationId;
            }

            /** Optional. operation id of the parent operation sending the create request */
            public Create setParentOperationId(java.lang.String parentOperationId) {
              this.parentOperationId = parentOperationId;
              return this;
            }

            /**
             * Optional. A unique ID used to identify the request. If the server receives two
             * CreateNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.c
             * loud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequest) with the same ID,
             * the second request is ignored and the first google.longrunning.Operation created and
             * stored in the backend is returned.Recommendation: Set this value to a UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain
             * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
             * length is 40 characters.
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A unique ID used to identify the request. If the server receives two
           CreateNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.
           v1#google.cloud.dataproc.v1.CreateNodeGroupRequest) with the same ID, the second request is ignored
           and the first google.longrunning.Operation created and stored in the backend is
           returned.Recommendation: Set this value to a UUID
           (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters
           (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A unique ID used to identify the request. If the server receives two
             * CreateNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.c
             * loud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequest) with the same ID,
             * the second request is ignored and the first google.longrunning.Operation created and
             * stored in the backend is returned.Recommendation: Set this value to a UUID
             * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain
             * only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum
             * length is 40 characters.
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Gets the resource representation for a node group in a cluster.
           *
           * Create a request for the method "nodeGroups.get".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the node group to retrieve. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DataprocRequest<com.google.api.services.dataproc.model.NodeGroup> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");

            /**
             * Gets the resource representation for a node group in a cluster.
             *
             * Create a request for the method "nodeGroups.get".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the node group to retrieve. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.NodeGroup.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the node group to retrieve. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the node group to retrieve. Format:
           projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the node group to retrieve. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Repair nodes in a node group.
           *
           * Create a request for the method "nodeGroups.repair".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Repair#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the node group to resize. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
           * @param content the {@link com.google.api.services.dataproc.model.RepairNodeGroupRequest}
           * @return the request
           */
          public Repair repair(java.lang.String name, com.google.api.services.dataproc.model.RepairNodeGroupRequest content) throws java.io.IOException {
            Repair result = new Repair(name, content);
            initialize(result);
            return result;
          }

          public class Repair extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:repair";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");

            /**
             * Repair nodes in a node group.
             *
             * Create a request for the method "nodeGroups.repair".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Repair#execute()} method to invoke the remote operation.
             * <p> {@link
             * Repair#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the node group to resize. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             * @param content the {@link com.google.api.services.dataproc.model.RepairNodeGroupRequest}
             * @since 1.13
             */
            protected Repair(java.lang.String name, com.google.api.services.dataproc.model.RepairNodeGroupRequest content) {
              super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
            }

            @Override
            public Repair set$Xgafv(java.lang.String $Xgafv) {
              return (Repair) super.set$Xgafv($Xgafv);
            }

            @Override
            public Repair setAccessToken(java.lang.String accessToken) {
              return (Repair) super.setAccessToken(accessToken);
            }

            @Override
            public Repair setAlt(java.lang.String alt) {
              return (Repair) super.setAlt(alt);
            }

            @Override
            public Repair setCallback(java.lang.String callback) {
              return (Repair) super.setCallback(callback);
            }

            @Override
            public Repair setFields(java.lang.String fields) {
              return (Repair) super.setFields(fields);
            }

            @Override
            public Repair setKey(java.lang.String key) {
              return (Repair) super.setKey(key);
            }

            @Override
            public Repair setOauthToken(java.lang.String oauthToken) {
              return (Repair) super.setOauthToken(oauthToken);
            }

            @Override
            public Repair setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Repair) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Repair setQuotaUser(java.lang.String quotaUser) {
              return (Repair) super.setQuotaUser(quotaUser);
            }

            @Override
            public Repair setUploadType(java.lang.String uploadType) {
              return (Repair) super.setUploadType(uploadType);
            }

            @Override
            public Repair setUploadProtocol(java.lang.String uploadProtocol) {
              return (Repair) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the node group to resize. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the node group to resize. Format:
           projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the node group to resize. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public Repair setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Repair set(String parameterName, Object value) {
              return (Repair) super.set(parameterName, value);
            }
          }
          /**
           * Resizes a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata
           * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperation
           * metadata).
           *
           * Create a request for the method "nodeGroups.resize".
           *
           * This request holds the parameters needed by the dataproc server.  After setting any optional
           * parameters, call the {@link Resize#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the node group to resize. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
           * @param content the {@link com.google.api.services.dataproc.model.ResizeNodeGroupRequest}
           * @return the request
           */
          public Resize resize(java.lang.String name, com.google.api.services.dataproc.model.ResizeNodeGroupRequest content) throws java.io.IOException {
            Resize result = new Resize(name, content);
            initialize(result);
            return result;
          }

          public class Resize extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:resize";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");

            /**
             * Resizes a node group in a cluster. The returned Operation.metadata is
             * NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.d
             * ataproc.v1#nodegroupoperationmetadata).
             *
             * Create a request for the method "nodeGroups.resize".
             *
             * This request holds the parameters needed by the the dataproc server.  After setting any
             * optional parameters, call the {@link Resize#execute()} method to invoke the remote operation.
             * <p> {@link
             * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the node group to resize. Format:
           *        projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             * @param content the {@link com.google.api.services.dataproc.model.ResizeNodeGroupRequest}
             * @since 1.13
             */
            protected Resize(java.lang.String name, com.google.api.services.dataproc.model.ResizeNodeGroupRequest content) {
              super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
            }

            @Override
            public Resize set$Xgafv(java.lang.String $Xgafv) {
              return (Resize) super.set$Xgafv($Xgafv);
            }

            @Override
            public Resize setAccessToken(java.lang.String accessToken) {
              return (Resize) super.setAccessToken(accessToken);
            }

            @Override
            public Resize setAlt(java.lang.String alt) {
              return (Resize) super.setAlt(alt);
            }

            @Override
            public Resize setCallback(java.lang.String callback) {
              return (Resize) super.setCallback(callback);
            }

            @Override
            public Resize setFields(java.lang.String fields) {
              return (Resize) super.setFields(fields);
            }

            @Override
            public Resize setKey(java.lang.String key) {
              return (Resize) super.setKey(key);
            }

            @Override
            public Resize setOauthToken(java.lang.String oauthToken) {
              return (Resize) super.setOauthToken(oauthToken);
            }

            @Override
            public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Resize) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Resize setQuotaUser(java.lang.String quotaUser) {
              return (Resize) super.setQuotaUser(quotaUser);
            }

            @Override
            public Resize setUploadType(java.lang.String uploadType) {
              return (Resize) super.setUploadType(uploadType);
            }

            @Override
            public Resize setUploadProtocol(java.lang.String uploadProtocol) {
              return (Resize) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the node group to resize. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the node group to resize. Format:
           projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the node group to resize. Format:
             * projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}
             */
            public Resize setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/regions/[^/]+/clusters/[^/]+/nodeGroups/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Resize set(String parameterName, Object value) {
              return (Resize) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Jobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Jobs.List request = dataproc.jobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Jobs jobs() {
        return new Jobs();
      }

      /**
       * The "jobs" collection of methods.
       */
      public class Jobs {

        /**
         * Starts a job cancellation request. To access the job resource after cancellation, call
         * regions/{region}/jobs.list
         * (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or
         * regions/{region}/jobs.get
         * (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).
         *
         * Create a request for the method "jobs.cancel".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param jobId Required. The job ID.
         * @param content the {@link com.google.api.services.dataproc.model.CancelJobRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String projectId, java.lang.String region, java.lang.String jobId, com.google.api.services.dataproc.model.CancelJobRequest content) throws java.io.IOException {
          Cancel result = new Cancel(projectId, region, jobId, content);
          initialize(result);
          return result;
        }

        public class Cancel extends DataprocRequest<com.google.api.services.dataproc.model.Job> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel";

          /**
           * Starts a job cancellation request. To access the job resource after cancellation, call
           * regions/{region}/jobs.list
           * (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or
           * regions/{region}/jobs.get
           * (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).
           *
           * Create a request for the method "jobs.cancel".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param jobId Required. The job ID.
           * @param content the {@link com.google.api.services.dataproc.model.CancelJobRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String projectId, java.lang.String region, java.lang.String jobId, com.google.api.services.dataproc.model.CancelJobRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Job.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.jobId = com.google.api.client.util.Preconditions.checkNotNull(jobId, "Required parameter jobId must be specified.");
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public Cancel setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Cancel setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The job ID. */
          @com.google.api.client.util.Key
          private java.lang.String jobId;

          /** Required. The job ID.
           */
          public java.lang.String getJobId() {
            return jobId;
          }

          /** Required. The job ID. */
          public Cancel setJobId(java.lang.String jobId) {
            this.jobId = jobId;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the job from the project. If the job is active, the delete fails, and the response
         * returns FAILED_PRECONDITION.
         *
         * Create a request for the method "jobs.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param jobId Required. The job ID.
         * @return the request
         */
        public Delete delete(java.lang.String projectId, java.lang.String region, java.lang.String jobId) throws java.io.IOException {
          Delete result = new Delete(projectId, region, jobId);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs/{jobId}";

          /**
           * Deletes the job from the project. If the job is active, the delete fails, and the response
           * returns FAILED_PRECONDITION.
           *
           * Create a request for the method "jobs.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param jobId Required. The job ID.
           * @since 1.13
           */
          protected Delete(java.lang.String projectId, java.lang.String region, java.lang.String jobId) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.jobId = com.google.api.client.util.Preconditions.checkNotNull(jobId, "Required parameter jobId must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public Delete setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Delete setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The job ID. */
          @com.google.api.client.util.Key
          private java.lang.String jobId;

          /** Required. The job ID.
           */
          public java.lang.String getJobId() {
            return jobId;
          }

          /** Required. The job ID. */
          public Delete setJobId(java.lang.String jobId) {
            this.jobId = jobId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the resource representation for a job in a project.
         *
         * Create a request for the method "jobs.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param jobId Required. The job ID.
         * @return the request
         */
        public Get get(java.lang.String projectId, java.lang.String region, java.lang.String jobId) throws java.io.IOException {
          Get result = new Get(projectId, region, jobId);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Job> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs/{jobId}";

          /**
           * Gets the resource representation for a job in a project.
           *
           * Create a request for the method "jobs.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param jobId Required. The job ID.
           * @since 1.13
           */
          protected Get(java.lang.String projectId, java.lang.String region, java.lang.String jobId) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Job.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.jobId = com.google.api.client.util.Preconditions.checkNotNull(jobId, "Required parameter jobId must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public Get setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Get setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The job ID. */
          @com.google.api.client.util.Key
          private java.lang.String jobId;

          /** Required. The job ID.
           */
          public java.lang.String getJobId() {
            return jobId;
          }

          /** Required. The job ID. */
          public Get setJobId(java.lang.String jobId) {
            this.jobId = jobId;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "jobs.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "jobs.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists regions/{region}/jobs in a project.
         *
         * Create a request for the method "jobs.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @return the request
         */
        public List list(java.lang.String projectId, java.lang.String region) throws java.io.IOException {
          List result = new List(projectId, region);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListJobsResponse> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs";

          /**
           * Lists regions/{region}/jobs in a project.
           *
           * Create a request for the method "jobs.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @since 1.13
           */
          protected List(java.lang.String projectId, java.lang.String region) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListJobsResponse.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public List setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public List setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /**
           * Optional. If set, the returned jobs list includes only jobs that were submitted to the
           * named cluster.
           */
          @com.google.api.client.util.Key
          private java.lang.String clusterName;

          /** Optional. If set, the returned jobs list includes only jobs that were submitted to the named
         cluster.
           */
          public java.lang.String getClusterName() {
            return clusterName;
          }

          /**
           * Optional. If set, the returned jobs list includes only jobs that were submitted to the
           * named cluster.
           */
          public List setClusterName(java.lang.String clusterName) {
            this.clusterName = clusterName;
            return this;
          }

          /**
           * Optional. A filter constraining the jobs to list. Filters are case-sensitive and have
           * the following syntax:field = value AND field = value ...where field is status.state or
           * labels.[KEY], and [KEY] is a label key. value can be * to match all values.
           * status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is
           * supported; space-separated items are treated as having an implicit AND operator.Example
           * filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following
         syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is
         a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE.
         Only the logical AND operator is supported; space-separated items are treated as having an implicit
         AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter constraining the jobs to list. Filters are case-sensitive and have
           * the following syntax:field = value AND field = value ...where field is status.state or
           * labels.[KEY], and [KEY] is a label key. value can be * to match all values.
           * status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is
           * supported; space-separated items are treated as having an implicit AND operator.Example
           * filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specifies enumerated categories of jobs to list. (default = match ALL
           * jobs).If filter is provided, jobStateMatcher will be ignored.
           */
          @com.google.api.client.util.Key
          private java.lang.String jobStateMatcher;

          /** Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is
         provided, jobStateMatcher will be ignored.
           */
          public java.lang.String getJobStateMatcher() {
            return jobStateMatcher;
          }

          /**
           * Optional. Specifies enumerated categories of jobs to list. (default = match ALL
           * jobs).If filter is provided, jobStateMatcher will be ignored.
           */
          public List setJobStateMatcher(java.lang.String jobStateMatcher) {
            this.jobStateMatcher = jobStateMatcher;
            return this;
          }

          /** Optional. The number of results to return in each response. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The number of results to return in each response.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The number of results to return in each response. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The page token, returned by a previous call, to request the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a job in a project.
         *
         * Create a request for the method "jobs.patch".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param jobId Required. The job ID.
         * @param content the {@link com.google.api.services.dataproc.model.Job}
         * @return the request
         */
        public Patch patch(java.lang.String projectId, java.lang.String region, java.lang.String jobId, com.google.api.services.dataproc.model.Job content) throws java.io.IOException {
          Patch result = new Patch(projectId, region, jobId, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataprocRequest<com.google.api.services.dataproc.model.Job> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs/{jobId}";

          /**
           * Updates a job in a project.
           *
           * Create a request for the method "jobs.patch".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param jobId Required. The job ID.
           * @param content the {@link com.google.api.services.dataproc.model.Job}
           * @since 1.13
           */
          protected Patch(java.lang.String projectId, java.lang.String region, java.lang.String jobId, com.google.api.services.dataproc.model.Job content) {
            super(Dataproc.this, "PATCH", REST_PATH, content, com.google.api.services.dataproc.model.Job.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
            this.jobId = com.google.api.client.util.Preconditions.checkNotNull(jobId, "Required parameter jobId must be specified.");
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public Patch setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Patch setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          /** Required. The job ID. */
          @com.google.api.client.util.Key
          private java.lang.String jobId;

          /** Required. The job ID.
           */
          public java.lang.String getJobId() {
            return jobId;
          }

          /** Required. The job ID. */
          public Patch setJobId(java.lang.String jobId) {
            this.jobId = jobId;
            return this;
          }

          /**
           * Required. Specifies the path, relative to Job, of the field to update. For example, to
           * update the labels of a Job the update_mask parameter would be specified as labels, and
           * the PATCH request body would specify the new value. *Note:* Currently, labels is the
           * only field that can be updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Specifies the path, relative to Job, of the field to update. For example, to update the
         labels of a Job the update_mask parameter would be specified as labels, and the PATCH request body
         would specify the new value. *Note:* Currently, labels is the only field that can be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Specifies the path, relative to Job, of the field to update. For example, to
           * update the labels of a Job the update_mask parameter would be specified as labels, and
           * the PATCH request body would specify the new value. *Note:* Currently, labels is the
           * only field that can be updated.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "jobs.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "jobs.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Submits a job to a cluster.
         *
         * Create a request for the method "jobs.submit".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Submit#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param content the {@link com.google.api.services.dataproc.model.SubmitJobRequest}
         * @return the request
         */
        public Submit submit(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.SubmitJobRequest content) throws java.io.IOException {
          Submit result = new Submit(projectId, region, content);
          initialize(result);
          return result;
        }

        public class Submit extends DataprocRequest<com.google.api.services.dataproc.model.Job> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs:submit";

          /**
           * Submits a job to a cluster.
           *
           * Create a request for the method "jobs.submit".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Submit#execute()} method to invoke the remote operation.
           * <p> {@link
           * Submit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param content the {@link com.google.api.services.dataproc.model.SubmitJobRequest}
           * @since 1.13
           */
          protected Submit(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.SubmitJobRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Job.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
          }

          @Override
          public Submit set$Xgafv(java.lang.String $Xgafv) {
            return (Submit) super.set$Xgafv($Xgafv);
          }

          @Override
          public Submit setAccessToken(java.lang.String accessToken) {
            return (Submit) super.setAccessToken(accessToken);
          }

          @Override
          public Submit setAlt(java.lang.String alt) {
            return (Submit) super.setAlt(alt);
          }

          @Override
          public Submit setCallback(java.lang.String callback) {
            return (Submit) super.setCallback(callback);
          }

          @Override
          public Submit setFields(java.lang.String fields) {
            return (Submit) super.setFields(fields);
          }

          @Override
          public Submit setKey(java.lang.String key) {
            return (Submit) super.setKey(key);
          }

          @Override
          public Submit setOauthToken(java.lang.String oauthToken) {
            return (Submit) super.setOauthToken(oauthToken);
          }

          @Override
          public Submit setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Submit) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Submit setQuotaUser(java.lang.String quotaUser) {
            return (Submit) super.setQuotaUser(quotaUser);
          }

          @Override
          public Submit setUploadType(java.lang.String uploadType) {
            return (Submit) super.setUploadType(uploadType);
          }

          @Override
          public Submit setUploadProtocol(java.lang.String uploadProtocol) {
            return (Submit) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public Submit setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public Submit setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          @Override
          public Submit set(String parameterName, Object value) {
            return (Submit) super.set(parameterName, value);
          }
        }
        /**
         * Submits job to a cluster.
         *
         * Create a request for the method "jobs.submitAsOperation".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SubmitAsOperation#execute()} method to invoke the remote operation.
         *
         * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
         * @param region Required. The Dataproc region in which to handle the request.
         * @param content the {@link com.google.api.services.dataproc.model.SubmitJobRequest}
         * @return the request
         */
        public SubmitAsOperation submitAsOperation(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.SubmitJobRequest content) throws java.io.IOException {
          SubmitAsOperation result = new SubmitAsOperation(projectId, region, content);
          initialize(result);
          return result;
        }

        public class SubmitAsOperation extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation";

          /**
           * Submits job to a cluster.
           *
           * Create a request for the method "jobs.submitAsOperation".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SubmitAsOperation#execute()} method to invoke the remote
           * operation. <p> {@link SubmitAsOperation#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param projectId Required. The ID of the Google Cloud Platform project that the job belongs to.
           * @param region Required. The Dataproc region in which to handle the request.
           * @param content the {@link com.google.api.services.dataproc.model.SubmitJobRequest}
           * @since 1.13
           */
          protected SubmitAsOperation(java.lang.String projectId, java.lang.String region, com.google.api.services.dataproc.model.SubmitJobRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
            this.region = com.google.api.client.util.Preconditions.checkNotNull(region, "Required parameter region must be specified.");
          }

          @Override
          public SubmitAsOperation set$Xgafv(java.lang.String $Xgafv) {
            return (SubmitAsOperation) super.set$Xgafv($Xgafv);
          }

          @Override
          public SubmitAsOperation setAccessToken(java.lang.String accessToken) {
            return (SubmitAsOperation) super.setAccessToken(accessToken);
          }

          @Override
          public SubmitAsOperation setAlt(java.lang.String alt) {
            return (SubmitAsOperation) super.setAlt(alt);
          }

          @Override
          public SubmitAsOperation setCallback(java.lang.String callback) {
            return (SubmitAsOperation) super.setCallback(callback);
          }

          @Override
          public SubmitAsOperation setFields(java.lang.String fields) {
            return (SubmitAsOperation) super.setFields(fields);
          }

          @Override
          public SubmitAsOperation setKey(java.lang.String key) {
            return (SubmitAsOperation) super.setKey(key);
          }

          @Override
          public SubmitAsOperation setOauthToken(java.lang.String oauthToken) {
            return (SubmitAsOperation) super.setOauthToken(oauthToken);
          }

          @Override
          public SubmitAsOperation setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SubmitAsOperation) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SubmitAsOperation setQuotaUser(java.lang.String quotaUser) {
            return (SubmitAsOperation) super.setQuotaUser(quotaUser);
          }

          @Override
          public SubmitAsOperation setUploadType(java.lang.String uploadType) {
            return (SubmitAsOperation) super.setUploadType(uploadType);
          }

          @Override
          public SubmitAsOperation setUploadProtocol(java.lang.String uploadProtocol) {
            return (SubmitAsOperation) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String projectId;

          /** Required. The ID of the Google Cloud Platform project that the job belongs to.
           */
          public java.lang.String getProjectId() {
            return projectId;
          }

          /** Required. The ID of the Google Cloud Platform project that the job belongs to. */
          public SubmitAsOperation setProjectId(java.lang.String projectId) {
            this.projectId = projectId;
            return this;
          }

          /** Required. The Dataproc region in which to handle the request. */
          @com.google.api.client.util.Key
          private java.lang.String region;

          /** Required. The Dataproc region in which to handle the request.
           */
          public java.lang.String getRegion() {
            return region;
          }

          /** Required. The Dataproc region in which to handle the request. */
          public SubmitAsOperation setRegion(java.lang.String region) {
            this.region = region;
            return this;
          }

          @Override
          public SubmitAsOperation set(String parameterName, Object value) {
            return (SubmitAsOperation) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "jobs.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "jobs.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.Operations.List request = dataproc.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * Code.CANCELLED.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * Code.CANCELLED.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(Dataproc.this, "POST", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns google.rpc.Code.UNIMPLEMENTED.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns google.rpc.Code.UNIMPLEMENTED.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "operations.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "operations.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns UNIMPLEMENTED.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns UNIMPLEMENTED.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "operations.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "operations.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "operations.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/operations/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "operations.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/operations/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the WorkflowTemplates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Dataproc dataproc = new Dataproc(...);}
       *   {@code Dataproc.WorkflowTemplates.List request = dataproc.workflowTemplates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public WorkflowTemplates workflowTemplates() {
        return new WorkflowTemplates();
      }

      /**
       * The "workflowTemplates" collection of methods.
       */
      public class WorkflowTemplates {

        /**
         * Creates new workflow template.
         *
         * Create a request for the method "workflowTemplates.create".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+$");

          /**
           * Creates new workflow template.
           *
           * Create a request for the method "workflowTemplates.create".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.create, the resource name of the region has the
         *        following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.create, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.create, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.create,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.workflowTemplates.create, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.create, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.create, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a workflow template. It does not cancel in-progress workflows.
         *
         * Create a request for the method "workflowTemplates.delete".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.delete, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataprocRequest<com.google.api.services.dataproc.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Deletes a workflow template. It does not cancel in-progress workflows.
           *
           * Create a request for the method "workflowTemplates.delete".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.delete, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Dataproc.this, "DELETE", REST_PATH, null, com.google.api.services.dataproc.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.delete, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.delete,
         the resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.instantiate, the resource name of the template has the
         following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.delete, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The version of workflow template to delete. If specified, will only delete
           * the template if the current server version matches specified version.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer version;

          /** Optional. The version of workflow template to delete. If specified, will only delete the template
         if the current server version matches specified version.
           */
          public java.lang.Integer getVersion() {
            return version;
          }

          /**
           * Optional. The version of workflow template to delete. If specified, will only delete
           * the template if the current server version matches specified version.
           */
          public Delete setVersion(java.lang.Integer version) {
            this.version = version;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves the latest workflow template.Can retrieve previously instantiated template by
         * specifying optional version parameter.
         *
         * Create a request for the method "workflowTemplates.get".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.get, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.get, the resource name of the template has the
         *        following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Retrieves the latest workflow template.Can retrieve previously instantiated template by
           * specifying optional version parameter.
           *
           * Create a request for the method "workflowTemplates.get".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.get, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.get, the resource name of the template has the
         *        following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.get,
         the resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.get, the resource name of the template has the following
         format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.get, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The version of workflow template to retrieve. Only previously instantiated
           * versions can be retrieved.If unspecified, retrieves the current version.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer version;

          /** Optional. The version of workflow template to retrieve. Only previously instantiated versions can
         be retrieved.If unspecified, retrieves the current version.
           */
          public java.lang.Integer getVersion() {
            return version;
          }

          /**
           * Optional. The version of workflow template to retrieve. Only previously instantiated
           * versions can be retrieved.If unspecified, retrieves the current version.
           */
          public Get setVersion(java.lang.Integer version) {
            this.version = version;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "workflowTemplates.getIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "workflowTemplates.getIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.GetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Instantiates a template and begins execution.The returned Operation can be used to track
         * execution of workflow by polling operations.get. The Operation will complete when entire workflow
         * is finished.The running workflow can be aborted via operations.cancel. This will cause any
         * inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata
         * will be WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata).
         * Also see Using WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
         * successful completion, Operation.response will be Empty.
         *
         * Create a request for the method "workflowTemplates.instantiate".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Instantiate#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.instantiate, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @param content the {@link com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest}
         * @return the request
         */
        public Instantiate instantiate(java.lang.String name, com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest content) throws java.io.IOException {
          Instantiate result = new Instantiate(name, content);
          initialize(result);
          return result;
        }

        public class Instantiate extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:instantiate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Instantiates a template and begins execution.The returned Operation can be used to track
           * execution of workflow by polling operations.get. The Operation will complete when entire
           * workflow is finished.The running workflow can be aborted via operations.cancel. This will cause
           * any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The
           * Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/r
           * pc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata
           * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
           * successful completion, Operation.response will be Empty.
           *
           * Create a request for the method "workflowTemplates.instantiate".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Instantiate#execute()} method to invoke the remote
           * operation. <p> {@link
           * Instantiate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates.instantiate, the resource name of the template has the
         *        following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id}
         *        For projects.locations.workflowTemplates.instantiate, the resource name of the template
         *        has the following format:
         *        projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @param content the {@link com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest}
           * @since 1.13
           */
          protected Instantiate(java.lang.String name, com.google.api.services.dataproc.model.InstantiateWorkflowTemplateRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Instantiate set$Xgafv(java.lang.String $Xgafv) {
            return (Instantiate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Instantiate setAccessToken(java.lang.String accessToken) {
            return (Instantiate) super.setAccessToken(accessToken);
          }

          @Override
          public Instantiate setAlt(java.lang.String alt) {
            return (Instantiate) super.setAlt(alt);
          }

          @Override
          public Instantiate setCallback(java.lang.String callback) {
            return (Instantiate) super.setCallback(callback);
          }

          @Override
          public Instantiate setFields(java.lang.String fields) {
            return (Instantiate) super.setFields(fields);
          }

          @Override
          public Instantiate setKey(java.lang.String key) {
            return (Instantiate) super.setKey(key);
          }

          @Override
          public Instantiate setOauthToken(java.lang.String oauthToken) {
            return (Instantiate) super.setOauthToken(oauthToken);
          }

          @Override
          public Instantiate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Instantiate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Instantiate setQuotaUser(java.lang.String quotaUser) {
            return (Instantiate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Instantiate setUploadType(java.lang.String uploadType) {
            return (Instantiate) super.setUploadType(uploadType);
          }

          @Override
          public Instantiate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Instantiate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.workflowTemplates.instantiate, the resource name of the template has the following
         format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates.instantiate, the resource name of the template has the
         following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates.instantiate, the resource name of the template has
           * the following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Instantiate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Instantiate set(String parameterName, Object value) {
            return (Instantiate) super.set(parameterName, value);
          }
        }
        /**
         * Instantiates a template and begins execution.This method is equivalent to executing the sequence
         * CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned
         * Operation can be used to track execution of workflow by polling operations.get. The Operation
         * will complete when entire workflow is finished.The running workflow can be aborted via
         * operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters
         * to be deleted.The Operation.metadata will be WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata).
         * Also see Using WorkflowMetadata
         * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
         * successful completion, Operation.response will be Empty.
         *
         * Create a request for the method "workflowTemplates.instantiateInline".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link InstantiateInline#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,instantiateinline, the resource name of the region has
         *        the following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.instantiateinline, the resource name of the location
         *        has the following format: projects/{project_id}/locations/{location}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public InstantiateInline instantiateInline(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          InstantiateInline result = new InstantiateInline(parent, content);
          initialize(result);
          return result;
        }

        public class InstantiateInline extends DataprocRequest<com.google.api.services.dataproc.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates:instantiateInline";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+$");

          /**
           * Instantiates a template and begins execution.This method is equivalent to executing the
           * sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The
           * returned Operation can be used to track execution of workflow by polling operations.get. The
           * Operation will complete when entire workflow is finished.The running workflow can be aborted
           * via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned
           * clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.co
           * m/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using
           * WorkflowMetadata
           * (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On
           * successful completion, Operation.response will be Empty.
           *
           * Create a request for the method "workflowTemplates.instantiateInline".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link InstantiateInline#execute()} method to invoke the remote
           * operation. <p> {@link InstantiateInline#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,instantiateinline, the resource name of the region has
         *        the following format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.instantiateinline, the resource name of the location
         *        has the following format: projects/{project_id}/locations/{location}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected InstantiateInline(java.lang.String parent, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
          }

          @Override
          public InstantiateInline set$Xgafv(java.lang.String $Xgafv) {
            return (InstantiateInline) super.set$Xgafv($Xgafv);
          }

          @Override
          public InstantiateInline setAccessToken(java.lang.String accessToken) {
            return (InstantiateInline) super.setAccessToken(accessToken);
          }

          @Override
          public InstantiateInline setAlt(java.lang.String alt) {
            return (InstantiateInline) super.setAlt(alt);
          }

          @Override
          public InstantiateInline setCallback(java.lang.String callback) {
            return (InstantiateInline) super.setCallback(callback);
          }

          @Override
          public InstantiateInline setFields(java.lang.String fields) {
            return (InstantiateInline) super.setFields(fields);
          }

          @Override
          public InstantiateInline setKey(java.lang.String key) {
            return (InstantiateInline) super.setKey(key);
          }

          @Override
          public InstantiateInline setOauthToken(java.lang.String oauthToken) {
            return (InstantiateInline) super.setOauthToken(oauthToken);
          }

          @Override
          public InstantiateInline setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (InstantiateInline) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public InstantiateInline setQuotaUser(java.lang.String quotaUser) {
            return (InstantiateInline) super.setQuotaUser(quotaUser);
          }

          @Override
          public InstantiateInline setUploadType(java.lang.String uploadType) {
            return (InstantiateInline) super.setUploadType(uploadType);
          }

          @Override
          public InstantiateInline setUploadProtocol(java.lang.String uploadProtocol) {
            return (InstantiateInline) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,instantiateinline, the resource name of the region
           * has the following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.instantiateinline, the resource name of the
           * location has the following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For
         projects.regions.workflowTemplates,instantiateinline, the resource name of the region has the
         following format: projects/{project_id}/regions/{region} For
         projects.locations.workflowTemplates.instantiateinline, the resource name of the location has the
         following format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,instantiateinline, the resource name of the region
           * has the following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.instantiateinline, the resource name of the
           * location has the following format: projects/{project_id}/locations/{location}
           */
          public InstantiateInline setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A tag that prevents multiple concurrent workflow instances with the same tag
           * from running. This mitigates risk of concurrent instances started due to retries.It is
           * recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A tag that prevents multiple concurrent workflow instances with the same tag from
         running. This mitigates risk of concurrent instances started due to retries.It is recommended to
         always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The
         tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The
         maximum length is 40 characters.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A tag that prevents multiple concurrent workflow instances with the same tag
           * from running. This mitigates risk of concurrent instances started due to retries.It is
           * recommended to always set this value to a UUID
           * (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only
           * letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length
           * is 40 characters.
           */
          public InstantiateInline setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public InstantiateInline set(String parameterName, Object value) {
            return (InstantiateInline) super.set(parameterName, value);
          }
        }
        /**
         * Lists workflows that match the specified filter in the request.
         *
         * Create a request for the method "workflowTemplates.list".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,list, the resource name of the region has the following
         *        format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataprocRequest<com.google.api.services.dataproc.model.ListWorkflowTemplatesResponse> {

          private static final String REST_PATH = "v1/{+parent}/workflowTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+$");

          /**
           * Lists workflows that match the specified filter in the request.
           *
           * Create a request for the method "workflowTemplates.list".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the region or location, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates,list, the resource name of the region has the following
         *        format: projects/{project_id}/regions/{region} For
         *        projects.locations.workflowTemplates.list, the resource name of the location has the
         *        following format: projects/{project_id}/locations/{location}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Dataproc.this, "GET", REST_PATH, null, com.google.api.services.dataproc.model.ListWorkflowTemplatesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the region or location, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,list,
         the resource name of the region has the following format: projects/{project_id}/regions/{region}
         For projects.locations.workflowTemplates.list, the resource name of the location has the following
         format: projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the region or location, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates,list, the resource name of the region has the
           * following format: projects/{project_id}/regions/{region} For
           * projects.locations.workflowTemplates.list, the resource name of the location has the
           * following format: projects/{project_id}/locations/{location}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The maximum number of results to return in each response. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of results to return in each response.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Optional. The maximum number of results to return in each response. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The page token, returned by a previous call, to request the next page of results.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The page token, returned by a previous call, to request the next page of
           * results.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy.Can return
         * NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
         *
         * Create a request for the method "workflowTemplates.setIamPolicy".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataprocRequest<com.google.api.services.dataproc.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy.Can
           * return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
           *
           * Create a request for the method "workflowTemplates.setIamPolicy".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.dataproc.model.SetIamPolicyRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See Resource names
           * (https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           * this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "workflowTemplates.testIamPermissions".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
         * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataprocRequest<com.google.api.services.dataproc.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation
           * is designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "workflowTemplates.testIamPermissions".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See Resource names
         *        (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         *        field.
           * @param content the {@link com.google.api.services.dataproc.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.dataproc.model.TestIamPermissionsRequest content) {
            super(Dataproc.this, "POST", REST_PATH, content, com.google.api.services.dataproc.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See Resource names
         (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See Resource
           * names (https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }
        /**
         * Updates (replaces) workflow template. The updated template must contain version that matches the
         * current server version.
         *
         * Create a request for the method "workflowTemplates.update".
         *
         * This request holds the parameters needed by the dataproc server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         *        projects.locations.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
         * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.dataproc.model.WorkflowTemplate content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends DataprocRequest<com.google.api.services.dataproc.model.WorkflowTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");

          /**
           * Updates (replaces) workflow template. The updated template must contain version that matches
           * the current server version.
           *
           * Create a request for the method "workflowTemplates.update".
           *
           * This request holds the parameters needed by the the dataproc server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of the workflow template, as described in
         *        https://cloud.google.com/apis/design/resource_names. For
         *        projects.regions.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         *        projects.locations.workflowTemplates, the resource name of the template has the following
         *        format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           * @param content the {@link com.google.api.services.dataproc.model.WorkflowTemplate}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.dataproc.model.WorkflowTemplate content) {
            super(Dataproc.this, "PUT", REST_PATH, content, com.google.api.services.dataproc.model.WorkflowTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates, the resource name of the template has the following
           * format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of the workflow template, as described in
         https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the
         resource name of the template has the following format:
         projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
         projects.locations.workflowTemplates, the resource name of the template has the following format:
         projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The resource name of the workflow template, as described in
           * https://cloud.google.com/apis/design/resource_names. For
           * projects.regions.workflowTemplates, the resource name of the template has the following
           * format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For
           * projects.locations.workflowTemplates, the resource name of the template has the
           * following format:
           * projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Dataproc}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Dataproc}. */
    @Override
    public Dataproc build() {
      return new Dataproc(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DataprocRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDataprocRequestInitializer(
        DataprocRequestInitializer dataprocRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dataprocRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
