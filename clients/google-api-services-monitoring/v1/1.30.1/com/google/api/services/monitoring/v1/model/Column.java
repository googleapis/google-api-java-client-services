/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Defines the layout properties and content for a column.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Column extends com.google.api.client.json.GenericJson {

  /**
   * The relative weight of this column. The column weight is used to adjust the width of columns on
   * the screen (relative to peers). Greater the weight, greater the width of the column on the
   * screen. If omitted, a value of 1 is used while rendering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long weight;

  /**
   * The display widgets arranged vertically in this column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Widget> widgets;

  /**
   * The relative weight of this column. The column weight is used to adjust the width of columns on
   * the screen (relative to peers). Greater the weight, greater the width of the column on the
   * screen. If omitted, a value of 1 is used while rendering.
   * @return value or {@code null} for none
   */
  public java.lang.Long getWeight() {
    return weight;
  }

  /**
   * The relative weight of this column. The column weight is used to adjust the width of columns on
   * the screen (relative to peers). Greater the weight, greater the width of the column on the
   * screen. If omitted, a value of 1 is used while rendering.
   * @param weight weight or {@code null} for none
   */
  public Column setWeight(java.lang.Long weight) {
    this.weight = weight;
    return this;
  }

  /**
   * The display widgets arranged vertically in this column.
   * @return value or {@code null} for none
   */
  public java.util.List<Widget> getWidgets() {
    return widgets;
  }

  /**
   * The display widgets arranged vertically in this column.
   * @param widgets widgets or {@code null} for none
   */
  public Column setWidgets(java.util.List<Widget> widgets) {
    this.widgets = widgets;
    return this;
  }

  @Override
  public Column set(String fieldName, Object value) {
    return (Column) super.set(fieldName, value);
  }

  @Override
  public Column clone() {
    return (Column) super.clone();
  }

}
