/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.authorizedbuyersmarketplace.v1.model;

/**
 * A finalized deal is a snapshot of the deal when both buyer and seller accept the deal. The buyer
 * or seller can update the deal after it's been finalized and renegotiate on the deal targeting,
 * terms and other fields, while at the same time the finalized snapshot of the deal can still be
 * retrieved using this API. The finalized deal contains a copy of the deal as it existed when most
 * recently finalized, as well as fields related to deal serving such as pause/resume status, RTB
 * metrics, and more.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Authorized Buyers Marketplace API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FinalizedDeal extends com.google.api.client.json.GenericJson {

  /**
   * A copy of the Deal made upon finalization. During renegotiation, this will reflect the last
   * finalized deal before renegotiation was initiated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Deal deal;

  /**
   * Information related to deal pausing for the deal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DealPausingInfo dealPausingInfo;

  /**
   * Serving status of the deal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dealServingStatus;

  /**
   * The resource name of the finalized deal. Format:
   * `buyers/{accountId}/finalizeddeals/{finalizedDealId}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Whether the Programmatic Guaranteed deal is ready for serving.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean readyToServe;

  /**
   * Real-time bidding metrics for this deal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RtbMetrics rtbMetrics;

  /**
   * A copy of the Deal made upon finalization. During renegotiation, this will reflect the last
   * finalized deal before renegotiation was initiated.
   * @return value or {@code null} for none
   */
  public Deal getDeal() {
    return deal;
  }

  /**
   * A copy of the Deal made upon finalization. During renegotiation, this will reflect the last
   * finalized deal before renegotiation was initiated.
   * @param deal deal or {@code null} for none
   */
  public FinalizedDeal setDeal(Deal deal) {
    this.deal = deal;
    return this;
  }

  /**
   * Information related to deal pausing for the deal.
   * @return value or {@code null} for none
   */
  public DealPausingInfo getDealPausingInfo() {
    return dealPausingInfo;
  }

  /**
   * Information related to deal pausing for the deal.
   * @param dealPausingInfo dealPausingInfo or {@code null} for none
   */
  public FinalizedDeal setDealPausingInfo(DealPausingInfo dealPausingInfo) {
    this.dealPausingInfo = dealPausingInfo;
    return this;
  }

  /**
   * Serving status of the deal.
   * @return value or {@code null} for none
   */
  public java.lang.String getDealServingStatus() {
    return dealServingStatus;
  }

  /**
   * Serving status of the deal.
   * @param dealServingStatus dealServingStatus or {@code null} for none
   */
  public FinalizedDeal setDealServingStatus(java.lang.String dealServingStatus) {
    this.dealServingStatus = dealServingStatus;
    return this;
  }

  /**
   * The resource name of the finalized deal. Format:
   * `buyers/{accountId}/finalizeddeals/{finalizedDealId}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the finalized deal. Format:
   * `buyers/{accountId}/finalizeddeals/{finalizedDealId}`
   * @param name name or {@code null} for none
   */
  public FinalizedDeal setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Whether the Programmatic Guaranteed deal is ready for serving.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReadyToServe() {
    return readyToServe;
  }

  /**
   * Whether the Programmatic Guaranteed deal is ready for serving.
   * @param readyToServe readyToServe or {@code null} for none
   */
  public FinalizedDeal setReadyToServe(java.lang.Boolean readyToServe) {
    this.readyToServe = readyToServe;
    return this;
  }

  /**
   * Real-time bidding metrics for this deal.
   * @return value or {@code null} for none
   */
  public RtbMetrics getRtbMetrics() {
    return rtbMetrics;
  }

  /**
   * Real-time bidding metrics for this deal.
   * @param rtbMetrics rtbMetrics or {@code null} for none
   */
  public FinalizedDeal setRtbMetrics(RtbMetrics rtbMetrics) {
    this.rtbMetrics = rtbMetrics;
    return this;
  }

  @Override
  public FinalizedDeal set(String fieldName, Object value) {
    return (FinalizedDeal) super.set(fieldName, value);
  }

  @Override
  public FinalizedDeal clone() {
    return (FinalizedDeal) super.clone();
  }

}
