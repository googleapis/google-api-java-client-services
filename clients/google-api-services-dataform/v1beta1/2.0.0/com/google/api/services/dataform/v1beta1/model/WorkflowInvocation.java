/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataform.v1beta1.model;

/**
 * Represents a single invocation of a compilation result.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataform API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WorkflowInvocation extends com.google.api.client.json.GenericJson {

  /**
   * Immutable. The name of the compilation result to use for this invocation. Must be in the format
   * `projects/locations/repositories/compilationResults`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String compilationResult;

  /**
   * Output only. Only set if the repository has a KMS Key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataEncryptionState dataEncryptionState;

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String internalMetadata;

  /**
   * Immutable. If left unset, a default InvocationConfig will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InvocationConfig invocationConfig;

  /**
   * Output only. This workflow invocation's timing details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Interval invocationTiming;

  /**
   * Output only. The workflow invocation's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The resolved compilation result that was used to create this invocation. Will be
   * in the format `projects/locations/repositories/compilationResults`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resolvedCompilationResult;

  /**
   * Output only. This workflow invocation's current state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Immutable. The name of the workflow config to invoke. Must be in the format
   * `projects/locations/repositories/workflowConfigs`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workflowConfig;

  /**
   * Immutable. The name of the compilation result to use for this invocation. Must be in the format
   * `projects/locations/repositories/compilationResults`.
   * @return value or {@code null} for none
   */
  public java.lang.String getCompilationResult() {
    return compilationResult;
  }

  /**
   * Immutable. The name of the compilation result to use for this invocation. Must be in the format
   * `projects/locations/repositories/compilationResults`.
   * @param compilationResult compilationResult or {@code null} for none
   */
  public WorkflowInvocation setCompilationResult(java.lang.String compilationResult) {
    this.compilationResult = compilationResult;
    return this;
  }

  /**
   * Output only. Only set if the repository has a KMS Key.
   * @return value or {@code null} for none
   */
  public DataEncryptionState getDataEncryptionState() {
    return dataEncryptionState;
  }

  /**
   * Output only. Only set if the repository has a KMS Key.
   * @param dataEncryptionState dataEncryptionState or {@code null} for none
   */
  public WorkflowInvocation setDataEncryptionState(DataEncryptionState dataEncryptionState) {
    this.dataEncryptionState = dataEncryptionState;
    return this;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @return value or {@code null} for none
   */
  public java.lang.String getInternalMetadata() {
    return internalMetadata;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @param internalMetadata internalMetadata or {@code null} for none
   */
  public WorkflowInvocation setInternalMetadata(java.lang.String internalMetadata) {
    this.internalMetadata = internalMetadata;
    return this;
  }

  /**
   * Immutable. If left unset, a default InvocationConfig will be used.
   * @return value or {@code null} for none
   */
  public InvocationConfig getInvocationConfig() {
    return invocationConfig;
  }

  /**
   * Immutable. If left unset, a default InvocationConfig will be used.
   * @param invocationConfig invocationConfig or {@code null} for none
   */
  public WorkflowInvocation setInvocationConfig(InvocationConfig invocationConfig) {
    this.invocationConfig = invocationConfig;
    return this;
  }

  /**
   * Output only. This workflow invocation's timing details.
   * @return value or {@code null} for none
   */
  public Interval getInvocationTiming() {
    return invocationTiming;
  }

  /**
   * Output only. This workflow invocation's timing details.
   * @param invocationTiming invocationTiming or {@code null} for none
   */
  public WorkflowInvocation setInvocationTiming(Interval invocationTiming) {
    this.invocationTiming = invocationTiming;
    return this;
  }

  /**
   * Output only. The workflow invocation's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The workflow invocation's name.
   * @param name name or {@code null} for none
   */
  public WorkflowInvocation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The resolved compilation result that was used to create this invocation. Will be
   * in the format `projects/locations/repositories/compilationResults`.
   * @return value or {@code null} for none
   */
  public java.lang.String getResolvedCompilationResult() {
    return resolvedCompilationResult;
  }

  /**
   * Output only. The resolved compilation result that was used to create this invocation. Will be
   * in the format `projects/locations/repositories/compilationResults`.
   * @param resolvedCompilationResult resolvedCompilationResult or {@code null} for none
   */
  public WorkflowInvocation setResolvedCompilationResult(java.lang.String resolvedCompilationResult) {
    this.resolvedCompilationResult = resolvedCompilationResult;
    return this;
  }

  /**
   * Output only. This workflow invocation's current state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. This workflow invocation's current state.
   * @param state state or {@code null} for none
   */
  public WorkflowInvocation setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Immutable. The name of the workflow config to invoke. Must be in the format
   * `projects/locations/repositories/workflowConfigs`.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkflowConfig() {
    return workflowConfig;
  }

  /**
   * Immutable. The name of the workflow config to invoke. Must be in the format
   * `projects/locations/repositories/workflowConfigs`.
   * @param workflowConfig workflowConfig or {@code null} for none
   */
  public WorkflowInvocation setWorkflowConfig(java.lang.String workflowConfig) {
    this.workflowConfig = workflowConfig;
    return this;
  }

  @Override
  public WorkflowInvocation set(String fieldName, Object value) {
    return (WorkflowInvocation) super.set(fieldName, value);
  }

  @Override
  public WorkflowInvocation clone() {
    return (WorkflowInvocation) super.clone();
  }

}
