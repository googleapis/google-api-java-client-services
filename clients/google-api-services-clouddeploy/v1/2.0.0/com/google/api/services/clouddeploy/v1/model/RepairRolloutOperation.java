/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * Contains the information for an automated `repair rollout` operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepairRolloutOperation extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The index of the current repair action in the repair sequence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long currentRepairPhaseIndex;

  /**
   * Output only. The job ID for the Job to repair.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jobId;

  /**
   * Output only. The phase ID of the phase that includes the job being repaired.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phaseId;

  /**
   * Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts
   * or single rollback attempt.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepairPhase> repairPhases;

  static {
    // hack to force ProGuard to consider RepairPhase used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepairPhase.class);
  }

  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rollout;

  /**
   * Output only. The index of the current repair action in the repair sequence.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCurrentRepairPhaseIndex() {
    return currentRepairPhaseIndex;
  }

  /**
   * Output only. The index of the current repair action in the repair sequence.
   * @param currentRepairPhaseIndex currentRepairPhaseIndex or {@code null} for none
   */
  public RepairRolloutOperation setCurrentRepairPhaseIndex(java.lang.Long currentRepairPhaseIndex) {
    this.currentRepairPhaseIndex = currentRepairPhaseIndex;
    return this;
  }

  /**
   * Output only. The job ID for the Job to repair.
   * @return value or {@code null} for none
   */
  public java.lang.String getJobId() {
    return jobId;
  }

  /**
   * Output only. The job ID for the Job to repair.
   * @param jobId jobId or {@code null} for none
   */
  public RepairRolloutOperation setJobId(java.lang.String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * Output only. The phase ID of the phase that includes the job being repaired.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhaseId() {
    return phaseId;
  }

  /**
   * Output only. The phase ID of the phase that includes the job being repaired.
   * @param phaseId phaseId or {@code null} for none
   */
  public RepairRolloutOperation setPhaseId(java.lang.String phaseId) {
    this.phaseId = phaseId;
    return this;
  }

  /**
   * Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts
   * or single rollback attempt.
   * @return value or {@code null} for none
   */
  public java.util.List<RepairPhase> getRepairPhases() {
    return repairPhases;
  }

  /**
   * Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts
   * or single rollback attempt.
   * @param repairPhases repairPhases or {@code null} for none
   */
  public RepairRolloutOperation setRepairPhases(java.util.List<RepairPhase> repairPhases) {
    this.repairPhases = repairPhases;
    return this;
  }

  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRollout() {
    return rollout;
  }

  /**
   * Output only. The name of the rollout that initiates the `AutomationRun`.
   * @param rollout rollout or {@code null} for none
   */
  public RepairRolloutOperation setRollout(java.lang.String rollout) {
    this.rollout = rollout;
    return this;
  }

  @Override
  public RepairRolloutOperation set(String fieldName, Object value) {
    return (RepairRolloutOperation) super.set(fieldName, value);
  }

  @Override
  public RepairRolloutOperation clone() {
    return (RepairRolloutOperation) super.clone();
  }

}
