/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager.model;

/**
 * Represents a Google Tag Destination
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Tag Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Destination extends com.google.api.client.json.GenericJson {

  /**
   * GTM Account ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountId;

  /**
   * GTM Container ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerId;

  /**
   * Measurement ID of destination linked to a GTM Container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationId;

  /**
   * The Destination link ID uniquely identifies the Destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationLinkId;

  /**
   * The fingerprint of the Google Tag Destination as computed at storage time. This value is
   * recomputed whenever the destination is modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fingerprint;

  /**
   * Destination display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Destination's API relative path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Auto generated link to the tag manager UI
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tagManagerUrl;

  /**
   * GTM Account ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountId() {
    return accountId;
  }

  /**
   * GTM Account ID.
   * @param accountId accountId or {@code null} for none
   */
  public Destination setAccountId(java.lang.String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * GTM Container ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerId() {
    return containerId;
  }

  /**
   * GTM Container ID.
   * @param containerId containerId or {@code null} for none
   */
  public Destination setContainerId(java.lang.String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * Measurement ID of destination linked to a GTM Container.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationId() {
    return destinationId;
  }

  /**
   * Measurement ID of destination linked to a GTM Container.
   * @param destinationId destinationId or {@code null} for none
   */
  public Destination setDestinationId(java.lang.String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * The Destination link ID uniquely identifies the Destination.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationLinkId() {
    return destinationLinkId;
  }

  /**
   * The Destination link ID uniquely identifies the Destination.
   * @param destinationLinkId destinationLinkId or {@code null} for none
   */
  public Destination setDestinationLinkId(java.lang.String destinationLinkId) {
    this.destinationLinkId = destinationLinkId;
    return this;
  }

  /**
   * The fingerprint of the Google Tag Destination as computed at storage time. This value is
   * recomputed whenever the destination is modified.
   * @return value or {@code null} for none
   */
  public java.lang.String getFingerprint() {
    return fingerprint;
  }

  /**
   * The fingerprint of the Google Tag Destination as computed at storage time. This value is
   * recomputed whenever the destination is modified.
   * @param fingerprint fingerprint or {@code null} for none
   */
  public Destination setFingerprint(java.lang.String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

  /**
   * Destination display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Destination display name.
   * @param name name or {@code null} for none
   */
  public Destination setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Destination's API relative path.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Destination's API relative path.
   * @param path path or {@code null} for none
   */
  public Destination setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Auto generated link to the tag manager UI
   * @return value or {@code null} for none
   */
  public java.lang.String getTagManagerUrl() {
    return tagManagerUrl;
  }

  /**
   * Auto generated link to the tag manager UI
   * @param tagManagerUrl tagManagerUrl or {@code null} for none
   */
  public Destination setTagManagerUrl(java.lang.String tagManagerUrl) {
    this.tagManagerUrl = tagManagerUrl;
    return this;
  }

  @Override
  public Destination set(String fieldName, Object value) {
    return (Destination) super.set(fieldName, value);
  }

  @Override
  public Destination clone() {
    return (Destination) super.clone();
  }

}
