/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and
 * Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the
 * Persistent cluster as Ray nodes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1RaySpec extends com.google.api.client.json.GenericJson {

  /**
   * Optional. This will be used to indicate which resource pool will serve as the Ray head node(the
   * first node within that pool). Will use the machine from the first workerpool as the head node
   * by default if this field isn't set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String headNodeResourcePoolId;

  /**
   * Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or
   * Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-
   * ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required.
   * Use this field if you need all the resource pools to have the same Ray image. Otherwise, use
   * the {@code resource_pool_images} field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUri;

  /**
   * Optional. Use if you want to mount to any NFS storages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1beta1NfsMount> nfsMounts;

  static {
    // hack to force ProGuard to consider GoogleCloudAiplatformV1beta1NfsMount used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudAiplatformV1beta1NfsMount.class);
  }

  /**
   * Optional. OSS Ray logging configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1RayLogsSpec rayLogsSpec;

  /**
   * Optional. Ray metrics configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1RayMetricSpec rayMetricSpec;

  /**
   * Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if
   * user need to use different images for different head/worker pools. This map needs to cover all
   * the resource pool ids. Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1":
   * "worker image" "ray_worker_node_pool2": "another worker image" }
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> resourcePoolImages;

  /**
   * Optional. This will be used to indicate which resource pool will serve as the Ray head node(the
   * first node within that pool). Will use the machine from the first workerpool as the head node
   * by default if this field isn't set.
   * @return value or {@code null} for none
   */
  public java.lang.String getHeadNodeResourcePoolId() {
    return headNodeResourcePoolId;
  }

  /**
   * Optional. This will be used to indicate which resource pool will serve as the Ray head node(the
   * first node within that pool). Will use the machine from the first workerpool as the head node
   * by default if this field isn't set.
   * @param headNodeResourcePoolId headNodeResourcePoolId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setHeadNodeResourcePoolId(java.lang.String headNodeResourcePoolId) {
    this.headNodeResourcePoolId = headNodeResourcePoolId;
    return this;
  }

  /**
   * Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or
   * Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-
   * ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required.
   * Use this field if you need all the resource pools to have the same Ray image. Otherwise, use
   * the {@code resource_pool_images} field.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUri() {
    return imageUri;
  }

  /**
   * Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or
   * Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-
   * ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required.
   * Use this field if you need all the resource pools to have the same Ray image. Otherwise, use
   * the {@code resource_pool_images} field.
   * @param imageUri imageUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setImageUri(java.lang.String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

  /**
   * Optional. Use if you want to mount to any NFS storages.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1beta1NfsMount> getNfsMounts() {
    return nfsMounts;
  }

  /**
   * Optional. Use if you want to mount to any NFS storages.
   * @param nfsMounts nfsMounts or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setNfsMounts(java.util.List<GoogleCloudAiplatformV1beta1NfsMount> nfsMounts) {
    this.nfsMounts = nfsMounts;
    return this;
  }

  /**
   * Optional. OSS Ray logging configurations.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RayLogsSpec getRayLogsSpec() {
    return rayLogsSpec;
  }

  /**
   * Optional. OSS Ray logging configurations.
   * @param rayLogsSpec rayLogsSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setRayLogsSpec(GoogleCloudAiplatformV1beta1RayLogsSpec rayLogsSpec) {
    this.rayLogsSpec = rayLogsSpec;
    return this;
  }

  /**
   * Optional. Ray metrics configurations.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RayMetricSpec getRayMetricSpec() {
    return rayMetricSpec;
  }

  /**
   * Optional. Ray metrics configurations.
   * @param rayMetricSpec rayMetricSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setRayMetricSpec(GoogleCloudAiplatformV1beta1RayMetricSpec rayMetricSpec) {
    this.rayMetricSpec = rayMetricSpec;
    return this;
  }

  /**
   * Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if
   * user need to use different images for different head/worker pools. This map needs to cover all
   * the resource pool ids. Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1":
   * "worker image" "ray_worker_node_pool2": "another worker image" }
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getResourcePoolImages() {
    return resourcePoolImages;
  }

  /**
   * Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if
   * user need to use different images for different head/worker pools. This map needs to cover all
   * the resource pool ids. Example: { "ray_head_node_pool": "head image" "ray_worker_node_pool1":
   * "worker image" "ray_worker_node_pool2": "another worker image" }
   * @param resourcePoolImages resourcePoolImages or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RaySpec setResourcePoolImages(java.util.Map<String, java.lang.String> resourcePoolImages) {
    this.resourcePoolImages = resourcePoolImages;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1RaySpec set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1RaySpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1RaySpec clone() {
    return (GoogleCloudAiplatformV1beta1RaySpec) super.clone();
  }

}
