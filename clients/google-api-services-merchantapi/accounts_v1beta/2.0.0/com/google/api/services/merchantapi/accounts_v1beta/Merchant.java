/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta;

/**
 * Service definition for Merchant (accounts_v1beta).
 *
 * <p>
 * Programmatically manage your Merchant Center Accounts.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.devsite.corp.google.com/merchant/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MerchantRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Merchant extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Merchant API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://merchantapi.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://merchantapi.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Merchant(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Merchant(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.Accounts.List request = merchantapi.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Creates a standalone Merchant Center account with additional configuration. Adds the user that
     * makes the request as an admin for the new account.
     *
     * Create a request for the method "accounts.createAndConfigure".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link CreateAndConfigure#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.CreateAndConfigureAccountRequest}
     * @return the request
     */
    public CreateAndConfigure createAndConfigure(com.google.api.services.merchantapi.accounts_v1beta.model.CreateAndConfigureAccountRequest content) throws java.io.IOException {
      CreateAndConfigure result = new CreateAndConfigure(content);
      initialize(result);
      return result;
    }

    public class CreateAndConfigure extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Account> {

      private static final String REST_PATH = "accounts/v1beta/accounts:createAndConfigure";

      /**
       * Creates a standalone Merchant Center account with additional configuration. Adds the user that
       * makes the request as an admin for the new account.
       *
       * Create a request for the method "accounts.createAndConfigure".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link CreateAndConfigure#execute()} method to invoke the remote
       * operation. <p> {@link CreateAndConfigure#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.CreateAndConfigureAccountRequest}
       * @since 1.13
       */
      protected CreateAndConfigure(com.google.api.services.merchantapi.accounts_v1beta.model.CreateAndConfigureAccountRequest content) {
        super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Account.class);
      }

      @Override
      public CreateAndConfigure set$Xgafv(java.lang.String $Xgafv) {
        return (CreateAndConfigure) super.set$Xgafv($Xgafv);
      }

      @Override
      public CreateAndConfigure setAccessToken(java.lang.String accessToken) {
        return (CreateAndConfigure) super.setAccessToken(accessToken);
      }

      @Override
      public CreateAndConfigure setAlt(java.lang.String alt) {
        return (CreateAndConfigure) super.setAlt(alt);
      }

      @Override
      public CreateAndConfigure setCallback(java.lang.String callback) {
        return (CreateAndConfigure) super.setCallback(callback);
      }

      @Override
      public CreateAndConfigure setFields(java.lang.String fields) {
        return (CreateAndConfigure) super.setFields(fields);
      }

      @Override
      public CreateAndConfigure setKey(java.lang.String key) {
        return (CreateAndConfigure) super.setKey(key);
      }

      @Override
      public CreateAndConfigure setOauthToken(java.lang.String oauthToken) {
        return (CreateAndConfigure) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateAndConfigure setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateAndConfigure) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateAndConfigure setQuotaUser(java.lang.String quotaUser) {
        return (CreateAndConfigure) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateAndConfigure setUploadType(java.lang.String uploadType) {
        return (CreateAndConfigure) super.setUploadType(uploadType);
      }

      @Override
      public CreateAndConfigure setUploadProtocol(java.lang.String uploadProtocol) {
        return (CreateAndConfigure) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public CreateAndConfigure set(String parameterName, Object value) {
        return (CreateAndConfigure) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the specified account regardless of its type: standalone, MCA or sub-account. Deleting an
     * MCA leads to the deletion of all of its sub-accounts. Executing this method requires admin
     * access. The deletion succeeds only if the account does not provide services to any other account
     * and has no processed offers. You can use the `force` parameter to override this.
     *
     * Create a request for the method "accounts.delete".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the account to delete. Format: `accounts/{account}`
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Empty> {

      private static final String REST_PATH = "accounts/v1beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Deletes the specified account regardless of its type: standalone, MCA or sub-account. Deleting
       * an MCA leads to the deletion of all of its sub-accounts. Executing this method requires admin
       * access. The deletion succeeds only if the account does not provide services to any other
       * account and has no processed offers. You can use the `force` parameter to override this.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the account to delete. Format: `accounts/{account}`
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the account to delete. Format: `accounts/{account}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the account to delete. Format: `accounts/{account}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the account to delete. Format: `accounts/{account}` */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. If set to `true`, the account is deleted even if it provides services to other
       * accounts or has processed offers.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean force;

      /** Optional. If set to `true`, the account is deleted even if it provides services to other accounts
     or has processed offers.
       */
      public java.lang.Boolean getForce() {
        return force;
      }

      /**
       * Optional. If set to `true`, the account is deleted even if it provides services to other
       * accounts or has processed offers.
       */
      public Delete setForce(java.lang.Boolean force) {
        this.force = force;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an account from your Merchant Center account. After inserting, updating, or deleting an
     * account, it may take several minutes before changes take effect.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the account to retrieve. Format: `accounts/{account}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Account> {

      private static final String REST_PATH = "accounts/v1beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Retrieves an account from your Merchant Center account. After inserting, updating, or deleting
       * an account, it may take several minutes before changes take effect.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the account to retrieve. Format: `accounts/{account}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Account.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the account to retrieve. Format: `accounts/{account}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the account to retrieve. Format: `accounts/{account}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the account to retrieve. Format: `accounts/{account}` */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists accounts accessible to the calling user and matching the constraints of the request such as
     * page size or filters. This is not just listing the sub-accounts of an MCA, but all accounts the
     * calling user has access to including other MCAs, linked accounts, standalone accounts and so on.
     * If no filter is provided, then it returns accounts the user is directly added to. This method is
     * eventually consistent, meaning changes such as creating, updating an account or a change of
     * relationships between accounts may not show up in the results immediately. Instead, these changes
     * propagate over a short period, after which the updated information can match the associated
     * predicates. That means, that searching by account name might not return a recently changed
     * account even though it satisfies the predicate.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListAccountsResponse> {

      private static final String REST_PATH = "accounts/v1beta/accounts";

      /**
       * Lists accounts accessible to the calling user and matching the constraints of the request such
       * as page size or filters. This is not just listing the sub-accounts of an MCA, but all accounts
       * the calling user has access to including other MCAs, linked accounts, standalone accounts and
       * so on. If no filter is provided, then it returns accounts the user is directly added to. This
       * method is eventually consistent, meaning changes such as creating, updating an account or a
       * change of relationships between accounts may not show up in the results immediately. Instead,
       * these changes propagate over a short period, after which the updated information can match the
       * associated predicates. That means, that searching by account name might not return a recently
       * changed account even though it satisfies the predicate.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListAccountsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Optional. Returns only accounts that match the
       * [filter](/merchant/api/guides/accounts/filter). For more details, see the [filter syntax
       * reference](/merchant/api/guides/accounts/filter-syntax).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. Returns only accounts that match the [filter](/merchant/api/guides/accounts/filter). For
     more details, see the [filter syntax reference](/merchant/api/guides/accounts/filter-syntax).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Optional. Returns only accounts that match the
       * [filter](/merchant/api/guides/accounts/filter). For more details, see the [filter syntax
       * reference](/merchant/api/guides/accounts/filter-syntax).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 250 accounts are returned. The maximum value is 500; values
       * above 500 are coerced to 500.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Optional. The maximum number of accounts to return. The service may return fewer than this value.
     If unspecified, at most 250 accounts are returned. The maximum value is 500; values above 500 are
     coerced to 500.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 250 accounts are returned. The maximum value is 500; values
       * above 500 are coerced to 500.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccounts` must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListAccounts` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccounts` must match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * List all sub-accounts for a given multi client account. This is a convenience wrapper for the
     * more powerful `ListAccounts` method. This method will produce the same results as calling
     * `ListsAccounts` with the following filter: `relationship(providerId={parent} AND
     * service(type="ACCOUNT_AGGREGATION"))`
     *
     * Create a request for the method "accounts.listSubaccounts".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link ListSubaccounts#execute()} method to invoke the remote operation.
     *
     * @param provider Required. The aggregation service provider. Format: `providers/{providerId}`
     * @return the request
     */
    public ListSubaccounts listSubaccounts(java.lang.String provider) throws java.io.IOException {
      ListSubaccounts result = new ListSubaccounts(provider);
      initialize(result);
      return result;
    }

    public class ListSubaccounts extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListSubAccountsResponse> {

      private static final String REST_PATH = "accounts/v1beta/{+provider}:listSubaccounts";

      private final java.util.regex.Pattern PROVIDER_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * List all sub-accounts for a given multi client account. This is a convenience wrapper for the
       * more powerful `ListAccounts` method. This method will produce the same results as calling
       * `ListsAccounts` with the following filter: `relationship(providerId={parent} AND
       * service(type="ACCOUNT_AGGREGATION"))`
       *
       * Create a request for the method "accounts.listSubaccounts".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link ListSubaccounts#execute()} method to invoke the remote
       * operation. <p> {@link ListSubaccounts#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param provider Required. The aggregation service provider. Format: `providers/{providerId}`
       * @since 1.13
       */
      protected ListSubaccounts(java.lang.String provider) {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListSubAccountsResponse.class);
        this.provider = com.google.api.client.util.Preconditions.checkNotNull(provider, "Required parameter provider must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROVIDER_PATTERN.matcher(provider).matches(),
              "Parameter provider must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListSubaccounts set$Xgafv(java.lang.String $Xgafv) {
        return (ListSubaccounts) super.set$Xgafv($Xgafv);
      }

      @Override
      public ListSubaccounts setAccessToken(java.lang.String accessToken) {
        return (ListSubaccounts) super.setAccessToken(accessToken);
      }

      @Override
      public ListSubaccounts setAlt(java.lang.String alt) {
        return (ListSubaccounts) super.setAlt(alt);
      }

      @Override
      public ListSubaccounts setCallback(java.lang.String callback) {
        return (ListSubaccounts) super.setCallback(callback);
      }

      @Override
      public ListSubaccounts setFields(java.lang.String fields) {
        return (ListSubaccounts) super.setFields(fields);
      }

      @Override
      public ListSubaccounts setKey(java.lang.String key) {
        return (ListSubaccounts) super.setKey(key);
      }

      @Override
      public ListSubaccounts setOauthToken(java.lang.String oauthToken) {
        return (ListSubaccounts) super.setOauthToken(oauthToken);
      }

      @Override
      public ListSubaccounts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListSubaccounts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListSubaccounts setQuotaUser(java.lang.String quotaUser) {
        return (ListSubaccounts) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListSubaccounts setUploadType(java.lang.String uploadType) {
        return (ListSubaccounts) super.setUploadType(uploadType);
      }

      @Override
      public ListSubaccounts setUploadProtocol(java.lang.String uploadProtocol) {
        return (ListSubaccounts) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The aggregation service provider. Format: `providers/{providerId}` */
      @com.google.api.client.util.Key
      private java.lang.String provider;

      /** Required. The aggregation service provider. Format: `providers/{providerId}`
       */
      public java.lang.String getProvider() {
        return provider;
      }

      /** Required. The aggregation service provider. Format: `providers/{providerId}` */
      public ListSubaccounts setProvider(java.lang.String provider) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROVIDER_PATTERN.matcher(provider).matches(),
              "Parameter provider must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.provider = provider;
        return this;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 250 accounts are returned. The maximum value is 500; values
       * above 500 are coerced to 500.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Optional. The maximum number of accounts to return. The service may return fewer than this value.
     If unspecified, at most 250 accounts are returned. The maximum value is 500; values above 500 are
     coerced to 500.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 250 accounts are returned. The maximum value is 500; values
       * above 500 are coerced to 500.
       */
      public ListSubaccounts setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccounts` must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListAccounts` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. A page token, received from a previous `ListAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccounts` must match the call that provided the page token.
       */
      public ListSubaccounts setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListSubaccounts set(String parameterName, Object value) {
        return (ListSubaccounts) super.set(parameterName, value);
      }
    }
    /**
     * Updates an account regardless of its type: standalone, MCA or sub-account. Executing this method
     * requires admin access.
     *
     * Create a request for the method "accounts.patch".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Identifier. The resource name of the account. Format: `accounts/{account}`
     * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Account}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Account content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Account> {

      private static final String REST_PATH = "accounts/v1beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Updates an account regardless of its type: standalone, MCA or sub-account. Executing this
       * method requires admin access.
       *
       * Create a request for the method "accounts.patch".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Identifier. The resource name of the account. Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Account}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Account content) {
        super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Account.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Identifier. The resource name of the account. Format: `accounts/{account}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Identifier. The resource name of the account. Format: `accounts/{account}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Identifier. The resource name of the account. Format: `accounts/{account}` */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. List of fields being updated. The following fields are supported (in both
       * `snake_case` and `lowerCamelCase`): - `account_name` - `adult_content` - `language_code` -
       * `time_zone`
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. List of fields being updated. The following fields are supported (in both `snake_case`
     and `lowerCamelCase`): - `account_name` - `adult_content` - `language_code` - `time_zone`
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Optional. List of fields being updated. The following fields are supported (in both
       * `snake_case` and `lowerCamelCase`): - `account_name` - `adult_content` - `language_code` -
       * `time_zone`
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AutofeedSettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.AutofeedSettings.List request = merchantapi.autofeedSettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AutofeedSettings autofeedSettings() {
      return new AutofeedSettings();
    }

    /**
     * The "autofeedSettings" collection of methods.
     */
    public class AutofeedSettings {

      /**
       * Retrieves the autofeed settings of an account.
       *
       * Create a request for the method "autofeedSettings.getAutofeedSettings".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetAutofeedSettings#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the autofeed settings. Format: `accounts/{account}/autofeedSettings`
       * @return the request
       */
      public GetAutofeedSettings getAutofeedSettings(java.lang.String name) throws java.io.IOException {
        GetAutofeedSettings result = new GetAutofeedSettings(name);
        initialize(result);
        return result;
      }

      public class GetAutofeedSettings extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/autofeedSettings$");

        /**
         * Retrieves the autofeed settings of an account.
         *
         * Create a request for the method "autofeedSettings.getAutofeedSettings".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetAutofeedSettings#execute()} method to invoke the remote
         * operation. <p> {@link GetAutofeedSettings#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The resource name of the autofeed settings. Format: `accounts/{account}/autofeedSettings`
         * @since 1.13
         */
        protected GetAutofeedSettings(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/autofeedSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAutofeedSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetAutofeedSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAutofeedSettings setAccessToken(java.lang.String accessToken) {
          return (GetAutofeedSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetAutofeedSettings setAlt(java.lang.String alt) {
          return (GetAutofeedSettings) super.setAlt(alt);
        }

        @Override
        public GetAutofeedSettings setCallback(java.lang.String callback) {
          return (GetAutofeedSettings) super.setCallback(callback);
        }

        @Override
        public GetAutofeedSettings setFields(java.lang.String fields) {
          return (GetAutofeedSettings) super.setFields(fields);
        }

        @Override
        public GetAutofeedSettings setKey(java.lang.String key) {
          return (GetAutofeedSettings) super.setKey(key);
        }

        @Override
        public GetAutofeedSettings setOauthToken(java.lang.String oauthToken) {
          return (GetAutofeedSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAutofeedSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAutofeedSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAutofeedSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetAutofeedSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAutofeedSettings setUploadType(java.lang.String uploadType) {
          return (GetAutofeedSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetAutofeedSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAutofeedSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the autofeed settings. Format:
         * `accounts/{account}/autofeedSettings`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the autofeed settings. Format: `accounts/{account}/autofeedSettings`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the autofeed settings. Format:
         * `accounts/{account}/autofeedSettings`
         */
        public GetAutofeedSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/autofeedSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetAutofeedSettings set(String parameterName, Object value) {
          return (GetAutofeedSettings) super.set(parameterName, value);
        }
      }
      /**
       * Updates the autofeed settings of an account.
       *
       * Create a request for the method "autofeedSettings.updateAutofeedSettings".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link UpdateAutofeedSettings#execute()} method to invoke the remote
       * operation.
       *
       * @param name Identifier. The resource name of the autofeed settings. Format:
       *        `accounts/{account}/autofeedSettings`.
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings}
       * @return the request
       */
      public UpdateAutofeedSettings updateAutofeedSettings(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings content) throws java.io.IOException {
        UpdateAutofeedSettings result = new UpdateAutofeedSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateAutofeedSettings extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/autofeedSettings$");

        /**
         * Updates the autofeed settings of an account.
         *
         * Create a request for the method "autofeedSettings.updateAutofeedSettings".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link UpdateAutofeedSettings#execute()} method to invoke the
         * remote operation. <p> {@link UpdateAutofeedSettings#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Identifier. The resource name of the autofeed settings. Format:
       *        `accounts/{account}/autofeedSettings`.
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings}
         * @since 1.13
         */
        protected UpdateAutofeedSettings(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.AutofeedSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/autofeedSettings$");
          }
        }

        @Override
        public UpdateAutofeedSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateAutofeedSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateAutofeedSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateAutofeedSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateAutofeedSettings setAlt(java.lang.String alt) {
          return (UpdateAutofeedSettings) super.setAlt(alt);
        }

        @Override
        public UpdateAutofeedSettings setCallback(java.lang.String callback) {
          return (UpdateAutofeedSettings) super.setCallback(callback);
        }

        @Override
        public UpdateAutofeedSettings setFields(java.lang.String fields) {
          return (UpdateAutofeedSettings) super.setFields(fields);
        }

        @Override
        public UpdateAutofeedSettings setKey(java.lang.String key) {
          return (UpdateAutofeedSettings) super.setKey(key);
        }

        @Override
        public UpdateAutofeedSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateAutofeedSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateAutofeedSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateAutofeedSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateAutofeedSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateAutofeedSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateAutofeedSettings setUploadType(java.lang.String uploadType) {
          return (UpdateAutofeedSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateAutofeedSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateAutofeedSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the autofeed settings. Format:
         * `accounts/{account}/autofeedSettings`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the autofeed settings. Format:
       `accounts/{account}/autofeedSettings`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the autofeed settings. Format:
         * `accounts/{account}/autofeedSettings`.
         */
        public UpdateAutofeedSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/autofeedSettings$");
          }
          this.name = name;
          return this;
        }

        /** Required. List of fields being updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. List of fields being updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. List of fields being updated. */
        public UpdateAutofeedSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateAutofeedSettings set(String parameterName, Object value) {
          return (UpdateAutofeedSettings) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the BusinessIdentity collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.BusinessIdentity.List request = merchantapi.businessIdentity().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public BusinessIdentity businessIdentity() {
      return new BusinessIdentity();
    }

    /**
     * The "businessIdentity" collection of methods.
     */
    public class BusinessIdentity {

      /**
       * Retrieves the business identity of an account.
       *
       * Create a request for the method "businessIdentity.getBusinessIdentity".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetBusinessIdentity#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the business identity. Format: `accounts/{account}/businessIdentity`
       * @return the request
       */
      public GetBusinessIdentity getBusinessIdentity(java.lang.String name) throws java.io.IOException {
        GetBusinessIdentity result = new GetBusinessIdentity(name);
        initialize(result);
        return result;
      }

      public class GetBusinessIdentity extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/businessIdentity$");

        /**
         * Retrieves the business identity of an account.
         *
         * Create a request for the method "businessIdentity.getBusinessIdentity".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetBusinessIdentity#execute()} method to invoke the remote
         * operation. <p> {@link GetBusinessIdentity#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The resource name of the business identity. Format: `accounts/{account}/businessIdentity`
         * @since 1.13
         */
        protected GetBusinessIdentity(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessIdentity$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetBusinessIdentity set$Xgafv(java.lang.String $Xgafv) {
          return (GetBusinessIdentity) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetBusinessIdentity setAccessToken(java.lang.String accessToken) {
          return (GetBusinessIdentity) super.setAccessToken(accessToken);
        }

        @Override
        public GetBusinessIdentity setAlt(java.lang.String alt) {
          return (GetBusinessIdentity) super.setAlt(alt);
        }

        @Override
        public GetBusinessIdentity setCallback(java.lang.String callback) {
          return (GetBusinessIdentity) super.setCallback(callback);
        }

        @Override
        public GetBusinessIdentity setFields(java.lang.String fields) {
          return (GetBusinessIdentity) super.setFields(fields);
        }

        @Override
        public GetBusinessIdentity setKey(java.lang.String key) {
          return (GetBusinessIdentity) super.setKey(key);
        }

        @Override
        public GetBusinessIdentity setOauthToken(java.lang.String oauthToken) {
          return (GetBusinessIdentity) super.setOauthToken(oauthToken);
        }

        @Override
        public GetBusinessIdentity setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetBusinessIdentity) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetBusinessIdentity setQuotaUser(java.lang.String quotaUser) {
          return (GetBusinessIdentity) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetBusinessIdentity setUploadType(java.lang.String uploadType) {
          return (GetBusinessIdentity) super.setUploadType(uploadType);
        }

        @Override
        public GetBusinessIdentity setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetBusinessIdentity) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the business identity. Format:
         * `accounts/{account}/businessIdentity`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the business identity. Format: `accounts/{account}/businessIdentity`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the business identity. Format:
         * `accounts/{account}/businessIdentity`
         */
        public GetBusinessIdentity setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessIdentity$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetBusinessIdentity set(String parameterName, Object value) {
          return (GetBusinessIdentity) super.set(parameterName, value);
        }
      }
      /**
       * Updates the business identity of an account. Executing this method requires admin access.
       *
       * Create a request for the method "businessIdentity.updateBusinessIdentity".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link UpdateBusinessIdentity#execute()} method to invoke the remote
       * operation.
       *
       * @param name Identifier. The resource name of the business identity. Format:
       *        `accounts/{account}/businessIdentity`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity}
       * @return the request
       */
      public UpdateBusinessIdentity updateBusinessIdentity(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity content) throws java.io.IOException {
        UpdateBusinessIdentity result = new UpdateBusinessIdentity(name, content);
        initialize(result);
        return result;
      }

      public class UpdateBusinessIdentity extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/businessIdentity$");

        /**
         * Updates the business identity of an account. Executing this method requires admin access.
         *
         * Create a request for the method "businessIdentity.updateBusinessIdentity".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link UpdateBusinessIdentity#execute()} method to invoke the
         * remote operation. <p> {@link UpdateBusinessIdentity#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Identifier. The resource name of the business identity. Format:
       *        `accounts/{account}/businessIdentity`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity}
         * @since 1.13
         */
        protected UpdateBusinessIdentity(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessIdentity.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessIdentity$");
          }
        }

        @Override
        public UpdateBusinessIdentity set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateBusinessIdentity) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateBusinessIdentity setAccessToken(java.lang.String accessToken) {
          return (UpdateBusinessIdentity) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateBusinessIdentity setAlt(java.lang.String alt) {
          return (UpdateBusinessIdentity) super.setAlt(alt);
        }

        @Override
        public UpdateBusinessIdentity setCallback(java.lang.String callback) {
          return (UpdateBusinessIdentity) super.setCallback(callback);
        }

        @Override
        public UpdateBusinessIdentity setFields(java.lang.String fields) {
          return (UpdateBusinessIdentity) super.setFields(fields);
        }

        @Override
        public UpdateBusinessIdentity setKey(java.lang.String key) {
          return (UpdateBusinessIdentity) super.setKey(key);
        }

        @Override
        public UpdateBusinessIdentity setOauthToken(java.lang.String oauthToken) {
          return (UpdateBusinessIdentity) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateBusinessIdentity setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateBusinessIdentity) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateBusinessIdentity setQuotaUser(java.lang.String quotaUser) {
          return (UpdateBusinessIdentity) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateBusinessIdentity setUploadType(java.lang.String uploadType) {
          return (UpdateBusinessIdentity) super.setUploadType(uploadType);
        }

        @Override
        public UpdateBusinessIdentity setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateBusinessIdentity) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the business identity. Format:
         * `accounts/{account}/businessIdentity`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the business identity. Format:
       `accounts/{account}/businessIdentity`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the business identity. Format:
         * `accounts/{account}/businessIdentity`
         */
        public UpdateBusinessIdentity setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessIdentity$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `black_owned` - `latino_owned` -
         * `promotions_consent` - `small_business` - `veteran_owned` - `women_owned`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. List of fields being updated. The following fields are supported (in both `snake_case`
       and `lowerCamelCase`): - `black_owned` - `latino_owned` - `promotions_consent` - `small_business` -
       `veteran_owned` - `women_owned`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `black_owned` - `latino_owned` -
         * `promotions_consent` - `small_business` - `veteran_owned` - `women_owned`
         */
        public UpdateBusinessIdentity setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateBusinessIdentity set(String parameterName, Object value) {
          return (UpdateBusinessIdentity) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the BusinessInfo collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.BusinessInfo.List request = merchantapi.businessInfo().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public BusinessInfo businessInfo() {
      return new BusinessInfo();
    }

    /**
     * The "businessInfo" collection of methods.
     */
    public class BusinessInfo {

      /**
       * Retrieves the business info of an account.
       *
       * Create a request for the method "businessInfo.getBusinessInfo".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetBusinessInfo#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the business info. Format: `accounts/{account}/businessInfo`
       * @return the request
       */
      public GetBusinessInfo getBusinessInfo(java.lang.String name) throws java.io.IOException {
        GetBusinessInfo result = new GetBusinessInfo(name);
        initialize(result);
        return result;
      }

      public class GetBusinessInfo extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/businessInfo$");

        /**
         * Retrieves the business info of an account.
         *
         * Create a request for the method "businessInfo.getBusinessInfo".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetBusinessInfo#execute()} method to invoke the remote
         * operation. <p> {@link GetBusinessInfo#initialize(com.google.api.client.googleapis.services.Abst
         * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name Required. The resource name of the business info. Format: `accounts/{account}/businessInfo`
         * @since 1.13
         */
        protected GetBusinessInfo(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessInfo$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetBusinessInfo set$Xgafv(java.lang.String $Xgafv) {
          return (GetBusinessInfo) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetBusinessInfo setAccessToken(java.lang.String accessToken) {
          return (GetBusinessInfo) super.setAccessToken(accessToken);
        }

        @Override
        public GetBusinessInfo setAlt(java.lang.String alt) {
          return (GetBusinessInfo) super.setAlt(alt);
        }

        @Override
        public GetBusinessInfo setCallback(java.lang.String callback) {
          return (GetBusinessInfo) super.setCallback(callback);
        }

        @Override
        public GetBusinessInfo setFields(java.lang.String fields) {
          return (GetBusinessInfo) super.setFields(fields);
        }

        @Override
        public GetBusinessInfo setKey(java.lang.String key) {
          return (GetBusinessInfo) super.setKey(key);
        }

        @Override
        public GetBusinessInfo setOauthToken(java.lang.String oauthToken) {
          return (GetBusinessInfo) super.setOauthToken(oauthToken);
        }

        @Override
        public GetBusinessInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetBusinessInfo) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetBusinessInfo setQuotaUser(java.lang.String quotaUser) {
          return (GetBusinessInfo) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetBusinessInfo setUploadType(java.lang.String uploadType) {
          return (GetBusinessInfo) super.setUploadType(uploadType);
        }

        @Override
        public GetBusinessInfo setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetBusinessInfo) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the business info. Format:
         * `accounts/{account}/businessInfo`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the business info. Format: `accounts/{account}/businessInfo`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the business info. Format:
         * `accounts/{account}/businessInfo`
         */
        public GetBusinessInfo setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessInfo$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetBusinessInfo set(String parameterName, Object value) {
          return (GetBusinessInfo) super.set(parameterName, value);
        }
      }
      /**
       * Updates the business info of an account. Executing this method requires admin access.
       *
       * Create a request for the method "businessInfo.updateBusinessInfo".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link UpdateBusinessInfo#execute()} method to invoke the remote operation.
       *
       * @param name Identifier. The resource name of the business info. Format: `accounts/{account}/businessInfo`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo}
       * @return the request
       */
      public UpdateBusinessInfo updateBusinessInfo(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo content) throws java.io.IOException {
        UpdateBusinessInfo result = new UpdateBusinessInfo(name, content);
        initialize(result);
        return result;
      }

      public class UpdateBusinessInfo extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/businessInfo$");

        /**
         * Updates the business info of an account. Executing this method requires admin access.
         *
         * Create a request for the method "businessInfo.updateBusinessInfo".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link UpdateBusinessInfo#execute()} method to invoke the remote
         * operation. <p> {@link UpdateBusinessInfo#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Identifier. The resource name of the business info. Format: `accounts/{account}/businessInfo`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo}
         * @since 1.13
         */
        protected UpdateBusinessInfo(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.BusinessInfo.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessInfo$");
          }
        }

        @Override
        public UpdateBusinessInfo set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateBusinessInfo) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateBusinessInfo setAccessToken(java.lang.String accessToken) {
          return (UpdateBusinessInfo) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateBusinessInfo setAlt(java.lang.String alt) {
          return (UpdateBusinessInfo) super.setAlt(alt);
        }

        @Override
        public UpdateBusinessInfo setCallback(java.lang.String callback) {
          return (UpdateBusinessInfo) super.setCallback(callback);
        }

        @Override
        public UpdateBusinessInfo setFields(java.lang.String fields) {
          return (UpdateBusinessInfo) super.setFields(fields);
        }

        @Override
        public UpdateBusinessInfo setKey(java.lang.String key) {
          return (UpdateBusinessInfo) super.setKey(key);
        }

        @Override
        public UpdateBusinessInfo setOauthToken(java.lang.String oauthToken) {
          return (UpdateBusinessInfo) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateBusinessInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateBusinessInfo) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateBusinessInfo setQuotaUser(java.lang.String quotaUser) {
          return (UpdateBusinessInfo) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateBusinessInfo setUploadType(java.lang.String uploadType) {
          return (UpdateBusinessInfo) super.setUploadType(uploadType);
        }

        @Override
        public UpdateBusinessInfo setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateBusinessInfo) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the business info. Format:
         * `accounts/{account}/businessInfo`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the business info. Format: `accounts/{account}/businessInfo`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the business info. Format:
         * `accounts/{account}/businessInfo`
         */
        public UpdateBusinessInfo setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/businessInfo$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `address` - `customer_service` -
         * `korean_business_registration_number`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. List of fields being updated. The following fields are supported (in both `snake_case`
       and `lowerCamelCase`): - `address` - `customer_service` - `korean_business_registration_number`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `address` - `customer_service` -
         * `korean_business_registration_number`
         */
        public UpdateBusinessInfo setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateBusinessInfo set(String parameterName, Object value) {
          return (UpdateBusinessInfo) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the EmailPreferences collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.EmailPreferences.List request = merchantapi.emailPreferences().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public EmailPreferences emailPreferences() {
      return new EmailPreferences();
    }

    /**
     * The "emailPreferences" collection of methods.
     */
    public class EmailPreferences {

      /**
       * Returns the email preferences for a Merchant Center account user. This service only permits
       * retrieving and updating email preferences for the authenticated user. Use the
       * name=accounts/users/me/emailPreferences alias to get preferences for the authenticated user.
       *
       * Create a request for the method "emailPreferences.getEmailPreferences".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetEmailPreferences#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the `EmailPreferences` resource. Format:
       *        `accounts/{account}/users/{email}/emailPreferences`
       * @return the request
       */
      public GetEmailPreferences getEmailPreferences(java.lang.String name) throws java.io.IOException {
        GetEmailPreferences result = new GetEmailPreferences(name);
        initialize(result);
        return result;
      }

      public class GetEmailPreferences extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/users/[^/]+/emailPreferences$");

        /**
         * Returns the email preferences for a Merchant Center account user. This service only permits
         * retrieving and updating email preferences for the authenticated user. Use the
         * name=accounts/users/me/emailPreferences alias to get preferences for the authenticated user.
         *
         * Create a request for the method "emailPreferences.getEmailPreferences".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetEmailPreferences#execute()} method to invoke the remote
         * operation. <p> {@link GetEmailPreferences#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the `EmailPreferences` resource. Format:
       *        `accounts/{account}/users/{email}/emailPreferences`
         * @since 1.13
         */
        protected GetEmailPreferences(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+/emailPreferences$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEmailPreferences set$Xgafv(java.lang.String $Xgafv) {
          return (GetEmailPreferences) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEmailPreferences setAccessToken(java.lang.String accessToken) {
          return (GetEmailPreferences) super.setAccessToken(accessToken);
        }

        @Override
        public GetEmailPreferences setAlt(java.lang.String alt) {
          return (GetEmailPreferences) super.setAlt(alt);
        }

        @Override
        public GetEmailPreferences setCallback(java.lang.String callback) {
          return (GetEmailPreferences) super.setCallback(callback);
        }

        @Override
        public GetEmailPreferences setFields(java.lang.String fields) {
          return (GetEmailPreferences) super.setFields(fields);
        }

        @Override
        public GetEmailPreferences setKey(java.lang.String key) {
          return (GetEmailPreferences) super.setKey(key);
        }

        @Override
        public GetEmailPreferences setOauthToken(java.lang.String oauthToken) {
          return (GetEmailPreferences) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEmailPreferences setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEmailPreferences) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEmailPreferences setQuotaUser(java.lang.String quotaUser) {
          return (GetEmailPreferences) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEmailPreferences setUploadType(java.lang.String uploadType) {
          return (GetEmailPreferences) super.setUploadType(uploadType);
        }

        @Override
        public GetEmailPreferences setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEmailPreferences) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the `EmailPreferences` resource. Format:
         * `accounts/{account}/users/{email}/emailPreferences`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the `EmailPreferences` resource. Format:
       `accounts/{account}/users/{email}/emailPreferences`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the `EmailPreferences` resource. Format:
         * `accounts/{account}/users/{email}/emailPreferences`
         */
        public GetEmailPreferences setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+/emailPreferences$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEmailPreferences set(String parameterName, Object value) {
          return (GetEmailPreferences) super.set(parameterName, value);
        }
      }
      /**
       * Updates the email preferences for a Merchant Center account user. MCA users should specify the
       * MCA account rather than a sub-account of the MCA. Preferences which are not explicitly selected
       * in the update mask will not be updated. It is invalid for updates to specify an UNCONFIRMED opt-
       * in status value. Use the name=accounts/users/me/emailPreferences alias to update preferences for
       * the authenticated user.
       *
       * Create a request for the method "emailPreferences.updateEmailPreferences".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link UpdateEmailPreferences#execute()} method to invoke the remote
       * operation.
       *
       * @param name Identifier. The name of the EmailPreferences. The endpoint is only supported for the authenticated
       *        user.
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences}
       * @return the request
       */
      public UpdateEmailPreferences updateEmailPreferences(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences content) throws java.io.IOException {
        UpdateEmailPreferences result = new UpdateEmailPreferences(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEmailPreferences extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/users/[^/]+/emailPreferences$");

        /**
         * Updates the email preferences for a Merchant Center account user. MCA users should specify the
         * MCA account rather than a sub-account of the MCA. Preferences which are not explicitly selected
         * in the update mask will not be updated. It is invalid for updates to specify an UNCONFIRMED
         * opt-in status value. Use the name=accounts/users/me/emailPreferences alias to update
         * preferences for the authenticated user.
         *
         * Create a request for the method "emailPreferences.updateEmailPreferences".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link UpdateEmailPreferences#execute()} method to invoke the
         * remote operation. <p> {@link UpdateEmailPreferences#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Identifier. The name of the EmailPreferences. The endpoint is only supported for the authenticated
       *        user.
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences}
         * @since 1.13
         */
        protected UpdateEmailPreferences(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.EmailPreferences.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+/emailPreferences$");
          }
        }

        @Override
        public UpdateEmailPreferences set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEmailPreferences) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEmailPreferences setAccessToken(java.lang.String accessToken) {
          return (UpdateEmailPreferences) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEmailPreferences setAlt(java.lang.String alt) {
          return (UpdateEmailPreferences) super.setAlt(alt);
        }

        @Override
        public UpdateEmailPreferences setCallback(java.lang.String callback) {
          return (UpdateEmailPreferences) super.setCallback(callback);
        }

        @Override
        public UpdateEmailPreferences setFields(java.lang.String fields) {
          return (UpdateEmailPreferences) super.setFields(fields);
        }

        @Override
        public UpdateEmailPreferences setKey(java.lang.String key) {
          return (UpdateEmailPreferences) super.setKey(key);
        }

        @Override
        public UpdateEmailPreferences setOauthToken(java.lang.String oauthToken) {
          return (UpdateEmailPreferences) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEmailPreferences setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEmailPreferences) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEmailPreferences setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEmailPreferences) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEmailPreferences setUploadType(java.lang.String uploadType) {
          return (UpdateEmailPreferences) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEmailPreferences setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEmailPreferences) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The name of the EmailPreferences. The endpoint is only supported for the
         * authenticated user.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The name of the EmailPreferences. The endpoint is only supported for the authenticated
       user.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The name of the EmailPreferences. The endpoint is only supported for the
         * authenticated user.
         */
        public UpdateEmailPreferences setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+/emailPreferences$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `news_and_tips`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. List of fields being updated. The following fields are supported (in both `snake_case`
       and `lowerCamelCase`): - `news_and_tips`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `news_and_tips`
         */
        public UpdateEmailPreferences setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateEmailPreferences set(String parameterName, Object value) {
          return (UpdateEmailPreferences) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Homepage collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Homepage.List request = merchantapi.homepage().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Homepage homepage() {
      return new Homepage();
    }

    /**
     * The "homepage" collection of methods.
     */
    public class Homepage {

      /**
       * Claims a store's homepage. Executing this method requires admin access. If the homepage is
       * already claimed, this will recheck the verification (unless the merchant is exempted from
       * claiming, which also exempts from verification) and return a successful response. If ownership
       * can no longer be verified, it will return an error, but it won't clear the claim. In case of
       * failure, a canonical error message will be returned: * PERMISSION_DENIED: user doesn't have the
       * necessary permissions on this MC account; * FAILED_PRECONDITION: - The account is not a Merchant
       * Center account; - MC account doesn't have a homepage; - claiming failed (in this case the error
       * message will contain more details).
       *
       * Create a request for the method "homepage.claim".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Claim#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the homepage to claim. Format: `accounts/{account}/homepage`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.ClaimHomepageRequest}
       * @return the request
       */
      public Claim claim(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.ClaimHomepageRequest content) throws java.io.IOException {
        Claim result = new Claim(name, content);
        initialize(result);
        return result;
      }

      public class Claim extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Homepage> {

        private static final String REST_PATH = "accounts/v1beta/{+name}:claim";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/homepage$");

        /**
         * Claims a store's homepage. Executing this method requires admin access. If the homepage is
         * already claimed, this will recheck the verification (unless the merchant is exempted from
         * claiming, which also exempts from verification) and return a successful response. If ownership
         * can no longer be verified, it will return an error, but it won't clear the claim. In case of
         * failure, a canonical error message will be returned: * PERMISSION_DENIED: user doesn't have the
         * necessary permissions on this MC account; * FAILED_PRECONDITION: - The account is not a
         * Merchant Center account; - MC account doesn't have a homepage; - claiming failed (in this case
         * the error message will contain more details).
         *
         * Create a request for the method "homepage.claim".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Claim#execute()} method to invoke the remote operation.
         * <p> {@link
         * Claim#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the homepage to claim. Format: `accounts/{account}/homepage`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.ClaimHomepageRequest}
         * @since 1.13
         */
        protected Claim(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.ClaimHomepageRequest content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
        }

        @Override
        public Claim set$Xgafv(java.lang.String $Xgafv) {
          return (Claim) super.set$Xgafv($Xgafv);
        }

        @Override
        public Claim setAccessToken(java.lang.String accessToken) {
          return (Claim) super.setAccessToken(accessToken);
        }

        @Override
        public Claim setAlt(java.lang.String alt) {
          return (Claim) super.setAlt(alt);
        }

        @Override
        public Claim setCallback(java.lang.String callback) {
          return (Claim) super.setCallback(callback);
        }

        @Override
        public Claim setFields(java.lang.String fields) {
          return (Claim) super.setFields(fields);
        }

        @Override
        public Claim setKey(java.lang.String key) {
          return (Claim) super.setKey(key);
        }

        @Override
        public Claim setOauthToken(java.lang.String oauthToken) {
          return (Claim) super.setOauthToken(oauthToken);
        }

        @Override
        public Claim setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Claim) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Claim setQuotaUser(java.lang.String quotaUser) {
          return (Claim) super.setQuotaUser(quotaUser);
        }

        @Override
        public Claim setUploadType(java.lang.String uploadType) {
          return (Claim) super.setUploadType(uploadType);
        }

        @Override
        public Claim setUploadProtocol(java.lang.String uploadProtocol) {
          return (Claim) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the homepage to claim. Format: `accounts/{account}/homepage` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the homepage to claim. Format: `accounts/{account}/homepage`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the homepage to claim. Format: `accounts/{account}/homepage` */
        public Claim setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Claim set(String parameterName, Object value) {
          return (Claim) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a store's homepage.
       *
       * Create a request for the method "homepage.getHomepage".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetHomepage#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the homepage to retrieve. Format: `accounts/{account}/homepage`
       * @return the request
       */
      public GetHomepage getHomepage(java.lang.String name) throws java.io.IOException {
        GetHomepage result = new GetHomepage(name);
        initialize(result);
        return result;
      }

      public class GetHomepage extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Homepage> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/homepage$");

        /**
         * Retrieves a store's homepage.
         *
         * Create a request for the method "homepage.getHomepage".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetHomepage#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetHomepage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the homepage to retrieve. Format: `accounts/{account}/homepage`
         * @since 1.13
         */
        protected GetHomepage(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetHomepage set$Xgafv(java.lang.String $Xgafv) {
          return (GetHomepage) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetHomepage setAccessToken(java.lang.String accessToken) {
          return (GetHomepage) super.setAccessToken(accessToken);
        }

        @Override
        public GetHomepage setAlt(java.lang.String alt) {
          return (GetHomepage) super.setAlt(alt);
        }

        @Override
        public GetHomepage setCallback(java.lang.String callback) {
          return (GetHomepage) super.setCallback(callback);
        }

        @Override
        public GetHomepage setFields(java.lang.String fields) {
          return (GetHomepage) super.setFields(fields);
        }

        @Override
        public GetHomepage setKey(java.lang.String key) {
          return (GetHomepage) super.setKey(key);
        }

        @Override
        public GetHomepage setOauthToken(java.lang.String oauthToken) {
          return (GetHomepage) super.setOauthToken(oauthToken);
        }

        @Override
        public GetHomepage setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetHomepage) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetHomepage setQuotaUser(java.lang.String quotaUser) {
          return (GetHomepage) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetHomepage setUploadType(java.lang.String uploadType) {
          return (GetHomepage) super.setUploadType(uploadType);
        }

        @Override
        public GetHomepage setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetHomepage) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the homepage to retrieve. Format: `accounts/{account}/homepage`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the homepage to retrieve. Format: `accounts/{account}/homepage`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the homepage to retrieve. Format: `accounts/{account}/homepage`
         */
        public GetHomepage setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetHomepage set(String parameterName, Object value) {
          return (GetHomepage) super.set(parameterName, value);
        }
      }
      /**
       * Unclaims a store's homepage. Executing this method requires admin access.
       *
       * Create a request for the method "homepage.unclaim".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Unclaim#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the homepage to unclaim. Format: `accounts/{account}/homepage`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.UnclaimHomepageRequest}
       * @return the request
       */
      public Unclaim unclaim(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.UnclaimHomepageRequest content) throws java.io.IOException {
        Unclaim result = new Unclaim(name, content);
        initialize(result);
        return result;
      }

      public class Unclaim extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Homepage> {

        private static final String REST_PATH = "accounts/v1beta/{+name}:unclaim";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/homepage$");

        /**
         * Unclaims a store's homepage. Executing this method requires admin access.
         *
         * Create a request for the method "homepage.unclaim".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Unclaim#execute()} method to invoke the remote operation.
         * <p> {@link
         * Unclaim#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the homepage to unclaim. Format: `accounts/{account}/homepage`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.UnclaimHomepageRequest}
         * @since 1.13
         */
        protected Unclaim(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.UnclaimHomepageRequest content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
        }

        @Override
        public Unclaim set$Xgafv(java.lang.String $Xgafv) {
          return (Unclaim) super.set$Xgafv($Xgafv);
        }

        @Override
        public Unclaim setAccessToken(java.lang.String accessToken) {
          return (Unclaim) super.setAccessToken(accessToken);
        }

        @Override
        public Unclaim setAlt(java.lang.String alt) {
          return (Unclaim) super.setAlt(alt);
        }

        @Override
        public Unclaim setCallback(java.lang.String callback) {
          return (Unclaim) super.setCallback(callback);
        }

        @Override
        public Unclaim setFields(java.lang.String fields) {
          return (Unclaim) super.setFields(fields);
        }

        @Override
        public Unclaim setKey(java.lang.String key) {
          return (Unclaim) super.setKey(key);
        }

        @Override
        public Unclaim setOauthToken(java.lang.String oauthToken) {
          return (Unclaim) super.setOauthToken(oauthToken);
        }

        @Override
        public Unclaim setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Unclaim) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Unclaim setQuotaUser(java.lang.String quotaUser) {
          return (Unclaim) super.setQuotaUser(quotaUser);
        }

        @Override
        public Unclaim setUploadType(java.lang.String uploadType) {
          return (Unclaim) super.setUploadType(uploadType);
        }

        @Override
        public Unclaim setUploadProtocol(java.lang.String uploadProtocol) {
          return (Unclaim) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the homepage to unclaim. Format: `accounts/{account}/homepage` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the homepage to unclaim. Format: `accounts/{account}/homepage`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the homepage to unclaim. Format: `accounts/{account}/homepage` */
        public Unclaim setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Unclaim set(String parameterName, Object value) {
          return (Unclaim) super.set(parameterName, value);
        }
      }
      /**
       * Updates a store's homepage. Executing this method requires admin access.
       *
       * Create a request for the method "homepage.updateHomepage".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link UpdateHomepage#execute()} method to invoke the remote operation.
       *
       * @param name Identifier. The resource name of the store's homepage. Format: `accounts/{account}/homepage`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Homepage}
       * @return the request
       */
      public UpdateHomepage updateHomepage(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage content) throws java.io.IOException {
        UpdateHomepage result = new UpdateHomepage(name, content);
        initialize(result);
        return result;
      }

      public class UpdateHomepage extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Homepage> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/homepage$");

        /**
         * Updates a store's homepage. Executing this method requires admin access.
         *
         * Create a request for the method "homepage.updateHomepage".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link UpdateHomepage#execute()} method to invoke the remote
         * operation. <p> {@link UpdateHomepage#initialize(com.google.api.client.googleapis.services.Abstr
         * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
         * the constructor. </p>
         *
         * @param name Identifier. The resource name of the store's homepage. Format: `accounts/{account}/homepage`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Homepage}
         * @since 1.13
         */
        protected UpdateHomepage(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Homepage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
        }

        @Override
        public UpdateHomepage set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateHomepage) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateHomepage setAccessToken(java.lang.String accessToken) {
          return (UpdateHomepage) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateHomepage setAlt(java.lang.String alt) {
          return (UpdateHomepage) super.setAlt(alt);
        }

        @Override
        public UpdateHomepage setCallback(java.lang.String callback) {
          return (UpdateHomepage) super.setCallback(callback);
        }

        @Override
        public UpdateHomepage setFields(java.lang.String fields) {
          return (UpdateHomepage) super.setFields(fields);
        }

        @Override
        public UpdateHomepage setKey(java.lang.String key) {
          return (UpdateHomepage) super.setKey(key);
        }

        @Override
        public UpdateHomepage setOauthToken(java.lang.String oauthToken) {
          return (UpdateHomepage) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateHomepage setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateHomepage) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateHomepage setQuotaUser(java.lang.String quotaUser) {
          return (UpdateHomepage) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateHomepage setUploadType(java.lang.String uploadType) {
          return (UpdateHomepage) super.setUploadType(uploadType);
        }

        @Override
        public UpdateHomepage setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateHomepage) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the store's homepage. Format:
         * `accounts/{account}/homepage`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the store's homepage. Format: `accounts/{account}/homepage`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the store's homepage. Format:
         * `accounts/{account}/homepage`
         */
        public UpdateHomepage setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/homepage$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `uri`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. List of fields being updated. The following fields are supported (in both `snake_case`
       and `lowerCamelCase`): - `uri`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `uri`
         */
        public UpdateHomepage setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateHomepage set(String parameterName, Object value) {
          return (UpdateHomepage) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Issues collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Issues.List request = merchantapi.issues().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Issues issues() {
      return new Issues();
    }

    /**
     * The "issues" collection of methods.
     */
    public class Issues {

      /**
       * Lists all account issues of a Merchant Center account.
       *
       * Create a request for the method "issues.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent, which owns this collection of issues. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListAccountIssuesResponse> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/issues";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all account issues of a Merchant Center account.
         *
         * Create a request for the method "issues.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent, which owns this collection of issues. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListAccountIssuesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent, which owns this collection of issues. Format: `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent, which owns this collection of issues. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent, which owns this collection of issues. Format: `accounts/{account}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The issues in the response will have human-readable fields in the given
         * language. The format is [BCP-47](https://tools.ietf.org/html/bcp47), such as `en-US` or
         * `sr-Latn`. If not value is provided, `en-US` will be used.
         */
        @com.google.api.client.util.Key
        private java.lang.String languageCode;

        /** Optional. The issues in the response will have human-readable fields in the given language. The
       format is [BCP-47](https://tools.ietf.org/html/bcp47), such as `en-US` or `sr-Latn`. If not value
       is provided, `en-US` will be used.
         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        /**
         * Optional. The issues in the response will have human-readable fields in the given
         * language. The format is [BCP-47](https://tools.ietf.org/html/bcp47), such as `en-US` or
         * `sr-Latn`. If not value is provided, `en-US` will be used.
         */
        public List setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        /**
         * Optional. The maximum number of issues to return. The service may return fewer than this
         * value. If unspecified, at most 50 users will be returned. The maximum value is 100;
         * values above 100 will be coerced to 100
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of issues to return. The service may return fewer than this value. If
       unspecified, at most 50 users will be returned. The maximum value is 100; values above 100 will be
       coerced to 100
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of issues to return. The service may return fewer than this
         * value. If unspecified, at most 50 users will be returned. The maximum value is 100;
         * values above 100 will be coerced to 100
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListAccountIssues` call. Provide this
         * to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccountIssues` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListAccountIssues` call. Provide this to retrieve
       the subsequent page. When paginating, all other parameters provided to `ListAccountIssues` must
       match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListAccountIssues` call. Provide this
         * to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccountIssues` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
         * human-readable fields. For example 'America/Los_Angeles'. If not set,
         * 'America/Los_Angeles' will be used.
         */
        @com.google.api.client.util.Key
        private java.lang.String timeZone;

        /** Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in human-
       readable fields. For example 'America/Los_Angeles'. If not set, 'America/Los_Angeles' will be used.
         */
        public java.lang.String getTimeZone() {
          return timeZone;
        }

        /**
         * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
         * human-readable fields. For example 'America/Los_Angeles'. If not set,
         * 'America/Los_Angeles' will be used.
         */
        public List setTimeZone(java.lang.String timeZone) {
          this.timeZone = timeZone;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the OnlineReturnPolicies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.OnlineReturnPolicies.List request = merchantapi.onlineReturnPolicies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public OnlineReturnPolicies onlineReturnPolicies() {
      return new OnlineReturnPolicies();
    }

    /**
     * The "onlineReturnPolicies" collection of methods.
     */
    public class OnlineReturnPolicies {

      /**
       * Gets an existing return policy for a given merchant.
       *
       * Create a request for the method "onlineReturnPolicies.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the return policy to retrieve. Format:
       *        `accounts/{account}/onlineReturnPolicies/{return_policy}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.OnlineReturnPolicy> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/onlineReturnPolicies/[^/]+$");

        /**
         * Gets an existing return policy for a given merchant.
         *
         * Create a request for the method "onlineReturnPolicies.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the return policy to retrieve. Format:
       *        `accounts/{account}/onlineReturnPolicies/{return_policy}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.OnlineReturnPolicy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/onlineReturnPolicies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the return policy to retrieve. Format:
         * `accounts/{account}/onlineReturnPolicies/{return_policy}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the return policy to retrieve. Format:
       `accounts/{account}/onlineReturnPolicies/{return_policy}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the return policy to retrieve. Format:
         * `accounts/{account}/onlineReturnPolicies/{return_policy}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/onlineReturnPolicies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all existing return policies for a given merchant.
       *
       * Create a request for the method "onlineReturnPolicies.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The merchant account for which to list return policies. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListOnlineReturnPoliciesResponse> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/onlineReturnPolicies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all existing return policies for a given merchant.
         *
         * Create a request for the method "onlineReturnPolicies.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The merchant account for which to list return policies. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListOnlineReturnPoliciesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The merchant account for which to list return policies. Format:
         * `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The merchant account for which to list return policies. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The merchant account for which to list return policies. Format:
         * `accounts/{account}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of `OnlineReturnPolicy` resources to return. The service
         * returns fewer than this value if the number of return policies for the given merchant is
         * less that than the `pageSize`. The default value is 10. The maximum value is 100; If a
         * value higher than the maximum is specified, then the `pageSize` will default to the
         * maximum
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of `OnlineReturnPolicy` resources to return. The service returns fewer
       than this value if the number of return policies for the given merchant is less that than the
       `pageSize`. The default value is 10. The maximum value is 100; If a value higher than the maximum
       is specified, then the `pageSize` will default to the maximum
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of `OnlineReturnPolicy` resources to return. The service
         * returns fewer than this value if the number of return policies for the given merchant is
         * less that than the `pageSize`. The default value is 10. The maximum value is 100; If a
         * value higher than the maximum is specified, then the `pageSize` will default to the
         * maximum
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListOnlineReturnPolicies` call. Provide
         * the page token to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListOnlineReturnPolicies` must match the call that provided the page token.
         * The token returned as nextPageToken in the response to the previous request.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListOnlineReturnPolicies` call. Provide the page
       token to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListOnlineReturnPolicies` must match the call that provided the page token. The token returned as
       nextPageToken in the response to the previous request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListOnlineReturnPolicies` call. Provide
         * the page token to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListOnlineReturnPolicies` must match the call that provided the page token.
         * The token returned as nextPageToken in the response to the previous request.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Programs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Programs.List request = merchantapi.programs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Programs programs() {
      return new Programs();
    }

    /**
     * The "programs" collection of methods.
     */
    public class Programs {

      /**
       * Disable participation in the specified program for the account. Executing this method requires
       * admin access.
       *
       * Create a request for the method "programs.disable".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Disable#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the program for which to disable participation for the given account. Format:
       *        `accounts/{account}/programs/{program}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.DisableProgramRequest}
       * @return the request
       */
      public Disable disable(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.DisableProgramRequest content) throws java.io.IOException {
        Disable result = new Disable(name, content);
        initialize(result);
        return result;
      }

      public class Disable extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Program> {

        private static final String REST_PATH = "accounts/v1beta/{+name}:disable";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/programs/[^/]+$");

        /**
         * Disable participation in the specified program for the account. Executing this method requires
         * admin access.
         *
         * Create a request for the method "programs.disable".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Disable#execute()} method to invoke the remote operation.
         * <p> {@link
         * Disable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the program for which to disable participation for the given account. Format:
       *        `accounts/{account}/programs/{program}`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.DisableProgramRequest}
         * @since 1.13
         */
        protected Disable(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.DisableProgramRequest content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Program.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
        }

        @Override
        public Disable set$Xgafv(java.lang.String $Xgafv) {
          return (Disable) super.set$Xgafv($Xgafv);
        }

        @Override
        public Disable setAccessToken(java.lang.String accessToken) {
          return (Disable) super.setAccessToken(accessToken);
        }

        @Override
        public Disable setAlt(java.lang.String alt) {
          return (Disable) super.setAlt(alt);
        }

        @Override
        public Disable setCallback(java.lang.String callback) {
          return (Disable) super.setCallback(callback);
        }

        @Override
        public Disable setFields(java.lang.String fields) {
          return (Disable) super.setFields(fields);
        }

        @Override
        public Disable setKey(java.lang.String key) {
          return (Disable) super.setKey(key);
        }

        @Override
        public Disable setOauthToken(java.lang.String oauthToken) {
          return (Disable) super.setOauthToken(oauthToken);
        }

        @Override
        public Disable setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Disable) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Disable setQuotaUser(java.lang.String quotaUser) {
          return (Disable) super.setQuotaUser(quotaUser);
        }

        @Override
        public Disable setUploadType(java.lang.String uploadType) {
          return (Disable) super.setUploadType(uploadType);
        }

        @Override
        public Disable setUploadProtocol(java.lang.String uploadProtocol) {
          return (Disable) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the program for which to disable participation for the given
         * account. Format: `accounts/{account}/programs/{program}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the program for which to disable participation for the given account. Format:
       `accounts/{account}/programs/{program}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the program for which to disable participation for the given
         * account. Format: `accounts/{account}/programs/{program}`
         */
        public Disable setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Disable set(String parameterName, Object value) {
          return (Disable) super.set(parameterName, value);
        }
      }
      /**
       * Enable participation in the specified program for the account. Executing this method requires
       * admin access.
       *
       * Create a request for the method "programs.enable".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Enable#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the program for which to enable participation for the given account. Format:
       *        `accounts/{account}/programs/{program}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.EnableProgramRequest}
       * @return the request
       */
      public Enable enable(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.EnableProgramRequest content) throws java.io.IOException {
        Enable result = new Enable(name, content);
        initialize(result);
        return result;
      }

      public class Enable extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Program> {

        private static final String REST_PATH = "accounts/v1beta/{+name}:enable";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/programs/[^/]+$");

        /**
         * Enable participation in the specified program for the account. Executing this method requires
         * admin access.
         *
         * Create a request for the method "programs.enable".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Enable#execute()} method to invoke the remote operation.
         * <p> {@link
         * Enable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the program for which to enable participation for the given account. Format:
       *        `accounts/{account}/programs/{program}`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.EnableProgramRequest}
         * @since 1.13
         */
        protected Enable(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.EnableProgramRequest content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Program.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
        }

        @Override
        public Enable set$Xgafv(java.lang.String $Xgafv) {
          return (Enable) super.set$Xgafv($Xgafv);
        }

        @Override
        public Enable setAccessToken(java.lang.String accessToken) {
          return (Enable) super.setAccessToken(accessToken);
        }

        @Override
        public Enable setAlt(java.lang.String alt) {
          return (Enable) super.setAlt(alt);
        }

        @Override
        public Enable setCallback(java.lang.String callback) {
          return (Enable) super.setCallback(callback);
        }

        @Override
        public Enable setFields(java.lang.String fields) {
          return (Enable) super.setFields(fields);
        }

        @Override
        public Enable setKey(java.lang.String key) {
          return (Enable) super.setKey(key);
        }

        @Override
        public Enable setOauthToken(java.lang.String oauthToken) {
          return (Enable) super.setOauthToken(oauthToken);
        }

        @Override
        public Enable setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Enable) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Enable setQuotaUser(java.lang.String quotaUser) {
          return (Enable) super.setQuotaUser(quotaUser);
        }

        @Override
        public Enable setUploadType(java.lang.String uploadType) {
          return (Enable) super.setUploadType(uploadType);
        }

        @Override
        public Enable setUploadProtocol(java.lang.String uploadProtocol) {
          return (Enable) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the program for which to enable participation for the given
         * account. Format: `accounts/{account}/programs/{program}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the program for which to enable participation for the given account. Format:
       `accounts/{account}/programs/{program}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the program for which to enable participation for the given
         * account. Format: `accounts/{account}/programs/{program}`
         */
        public Enable setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Enable set(String parameterName, Object value) {
          return (Enable) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the specified program for the account.
       *
       * Create a request for the method "programs.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the program to retrieve. Format: `accounts/{account}/programs/{program}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Program> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/programs/[^/]+$");

        /**
         * Retrieves the specified program for the account.
         *
         * Create a request for the method "programs.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the program to retrieve. Format: `accounts/{account}/programs/{program}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Program.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the program to retrieve. Format:
         * `accounts/{account}/programs/{program}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the program to retrieve. Format: `accounts/{account}/programs/{program}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the program to retrieve. Format:
         * `accounts/{account}/programs/{program}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/programs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves all programs for the account.
       *
       * Create a request for the method "programs.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the account for which to retrieve all programs. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListProgramsResponse> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/programs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Retrieves all programs for the account.
         *
         * Create a request for the method "programs.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the account for which to retrieve all programs. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListProgramsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the account for which to retrieve all programs. Format:
         * `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the account for which to retrieve all programs. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the account for which to retrieve all programs. Format:
         * `accounts/{account}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of programs to return in a single response. If unspecified
         * (or 0), a default size of 1000 is used. The maximum value is 1000; values above 1000 will
         * be coerced to 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of programs to return in a single response. If unspecified (or 0), a
       default size of 1000 is used. The maximum value is 1000; values above 1000 will be coerced to 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of programs to return in a single response. If unspecified
         * (or 0), a default size of 1000 is used. The maximum value is 1000; values above 1000 will
         * be coerced to 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A continuation token, received from a previous `ListPrograms` call. Provide
         * this to retrieve the next page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A continuation token, received from a previous `ListPrograms` call. Provide this to
       retrieve the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A continuation token, received from a previous `ListPrograms` call. Provide
         * this to retrieve the next page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Regions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Regions.List request = merchantapi.regions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Regions regions() {
      return new Regions();
    }

    /**
     * The "regions" collection of methods.
     */
    public class Regions {

      /**
       * Creates a region definition in your Merchant Center account. Executing this method requires admin
       * access.
       *
       * Create a request for the method "regions.create".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account to create a region for. Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Region}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.Region content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Region> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/regions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a region definition in your Merchant Center account. Executing this method requires
         * admin access.
         *
         * Create a request for the method "regions.create".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account to create a region for. Format: `accounts/{account}`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Region}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.Region content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Region.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The account to create a region for. Format: `accounts/{account}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account to create a region for. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The account to create a region for. Format: `accounts/{account}` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The identifier for the region, unique over all regions of the same account.
         */
        @com.google.api.client.util.Key
        private java.lang.String regionId;

        /** Required. The identifier for the region, unique over all regions of the same account.
         */
        public java.lang.String getRegionId() {
          return regionId;
        }

        /**
         * Required. The identifier for the region, unique over all regions of the same account.
         */
        public Create setRegionId(java.lang.String regionId) {
          this.regionId = regionId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a region definition from your Merchant Center account. Executing this method requires
       * admin access.
       *
       * Create a request for the method "regions.delete".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the region to delete. Format: `accounts/{account}/regions/{region}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Empty> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/regions/[^/]+$");

        /**
         * Deletes a region definition from your Merchant Center account. Executing this method requires
         * admin access.
         *
         * Create a request for the method "regions.delete".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the region to delete. Format: `accounts/{account}/regions/{region}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the region to delete. Format: `accounts/{account}/regions/{region}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the region to delete. Format: `accounts/{account}/regions/{region}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the region to delete. Format: `accounts/{account}/regions/{region}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a region defined in your Merchant Center account.
       *
       * Create a request for the method "regions.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the region to retrieve. Format: `accounts/{account}/regions/{region}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Region> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/regions/[^/]+$");

        /**
         * Retrieves a region defined in your Merchant Center account.
         *
         * Create a request for the method "regions.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the region to retrieve. Format: `accounts/{account}/regions/{region}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Region.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the region to retrieve. Format:
         * `accounts/{account}/regions/{region}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the region to retrieve. Format: `accounts/{account}/regions/{region}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the region to retrieve. Format:
         * `accounts/{account}/regions/{region}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the regions in your Merchant Center account.
       *
       * Create a request for the method "regions.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account to list regions for. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListRegionsResponse> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/regions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the regions in your Merchant Center account.
         *
         * Create a request for the method "regions.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account to list regions for. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListRegionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The account to list regions for. Format: `accounts/{account}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account to list regions for. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The account to list regions for. Format: `accounts/{account}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of regions to return. The service may return fewer than this
         * value. If unspecified, at most 50 regions will be returned. The maximum value is 1000;
         * values above 1000 will be coerced to 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of regions to return. The service may return fewer than this value. If
       unspecified, at most 50 regions will be returned. The maximum value is 1000; values above 1000 will
       be coerced to 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of regions to return. The service may return fewer than this
         * value. If unspecified, at most 50 regions will be returned. The maximum value is 1000;
         * values above 1000 will be coerced to 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListRegions` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListRegions` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListRegions` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListRegions` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListRegions` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListRegions` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a region definition in your Merchant Center account. Executing this method requires admin
       * access.
       *
       * Create a request for the method "regions.patch".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Region}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Region content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Region> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/regions/[^/]+$");

        /**
         * Updates a region definition in your Merchant Center account. Executing this method requires
         * admin access.
         *
         * Create a request for the method "regions.patch".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.Region}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.Region content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.Region.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the region. Format:
         * `accounts/{account}/regions/{region}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the region. Format:
         * `accounts/{account}/regions/{region}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/regions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The comma-separated field mask indicating the fields to update. Example:
         * `"displayName,postalCodeArea.regionCode"`.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The comma-separated field mask indicating the fields to update. Example:
       `"displayName,postalCodeArea.regionCode"`.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. The comma-separated field mask indicating the fields to update. Example:
         * `"displayName,postalCodeArea.regionCode"`.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ShippingSettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.ShippingSettings.List request = merchantapi.shippingSettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ShippingSettings shippingSettings() {
      return new ShippingSettings();
    }

    /**
     * The "shippingSettings" collection of methods.
     */
    public class ShippingSettings {

      /**
       * Retrieve shipping setting information.
       *
       * Create a request for the method "shippingSettings.getShippingSettings".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link GetShippingSettings#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the shipping setting to retrieve. Format: `accounts/{account}/shippingsetting`
       * @return the request
       */
      public GetShippingSettings getShippingSettings(java.lang.String name) throws java.io.IOException {
        GetShippingSettings result = new GetShippingSettings(name);
        initialize(result);
        return result;
      }

      public class GetShippingSettings extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/shippingSettings$");

        /**
         * Retrieve shipping setting information.
         *
         * Create a request for the method "shippingSettings.getShippingSettings".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link GetShippingSettings#execute()} method to invoke the remote
         * operation. <p> {@link GetShippingSettings#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the shipping setting to retrieve. Format: `accounts/{account}/shippingsetting`
         * @since 1.13
         */
        protected GetShippingSettings(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/shippingSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetShippingSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetShippingSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetShippingSettings setAccessToken(java.lang.String accessToken) {
          return (GetShippingSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetShippingSettings setAlt(java.lang.String alt) {
          return (GetShippingSettings) super.setAlt(alt);
        }

        @Override
        public GetShippingSettings setCallback(java.lang.String callback) {
          return (GetShippingSettings) super.setCallback(callback);
        }

        @Override
        public GetShippingSettings setFields(java.lang.String fields) {
          return (GetShippingSettings) super.setFields(fields);
        }

        @Override
        public GetShippingSettings setKey(java.lang.String key) {
          return (GetShippingSettings) super.setKey(key);
        }

        @Override
        public GetShippingSettings setOauthToken(java.lang.String oauthToken) {
          return (GetShippingSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetShippingSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetShippingSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetShippingSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetShippingSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetShippingSettings setUploadType(java.lang.String uploadType) {
          return (GetShippingSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetShippingSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetShippingSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the shipping setting to retrieve. Format:
         * `accounts/{account}/shippingsetting`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the shipping setting to retrieve. Format:
       `accounts/{account}/shippingsetting`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the shipping setting to retrieve. Format:
         * `accounts/{account}/shippingsetting`
         */
        public GetShippingSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/shippingSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetShippingSettings set(String parameterName, Object value) {
          return (GetShippingSettings) super.set(parameterName, value);
        }
      }
      /**
       * Replace the shipping setting of a merchant with the request shipping setting. Executing this
       * method requires admin access.
       *
       * Create a request for the method "shippingSettings.insert".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account where this product will be inserted. Format: accounts/{account}
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings}
       * @return the request
       */
      public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings content) throws java.io.IOException {
        Insert result = new Insert(parent, content);
        initialize(result);
        return result;
      }

      public class Insert extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/shippingSettings:insert";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Replace the shipping setting of a merchant with the request shipping setting. Executing this
         * method requires admin access.
         *
         * Create a request for the method "shippingSettings.insert".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         * <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account where this product will be inserted. Format: accounts/{account}
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings}
         * @since 1.13
         */
        protected Insert(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.ShippingSettings.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account where this product will be inserted. Format: accounts/{account}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account where this product will be inserted. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account where this product will be inserted. Format: accounts/{account}
         */
        public Insert setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the TermsOfServiceAgreementStates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.TermsOfServiceAgreementStates.List request = merchantapi.termsOfServiceAgreementStates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public TermsOfServiceAgreementStates termsOfServiceAgreementStates() {
      return new TermsOfServiceAgreementStates();
    }

    /**
     * The "termsOfServiceAgreementStates" collection of methods.
     */
    public class TermsOfServiceAgreementStates {

      /**
       * Returns the state of a terms of service agreement.
       *
       * Create a request for the method "termsOfServiceAgreementStates.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the terms of service version. Format:
       *        `accounts/{account}/termsOfServiceAgreementState/{identifier}` The identifier format is:
       *        `{TermsOfServiceKind}-{country}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfServiceAgreementState> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/termsOfServiceAgreementStates/[^/]+$");

        /**
         * Returns the state of a terms of service agreement.
         *
         * Create a request for the method "termsOfServiceAgreementStates.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the terms of service version. Format:
       *        `accounts/{account}/termsOfServiceAgreementState/{identifier}` The identifier format is:
       *        `{TermsOfServiceKind}-{country}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfServiceAgreementState.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/termsOfServiceAgreementStates/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the terms of service version. Format:
         * `accounts/{account}/termsOfServiceAgreementState/{identifier}` The identifier format is:
         * `{TermsOfServiceKind}-{country}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the terms of service version. Format:
       `accounts/{account}/termsOfServiceAgreementState/{identifier}` The identifier format is:
       `{TermsOfServiceKind}-{country}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the terms of service version. Format:
         * `accounts/{account}/termsOfServiceAgreementState/{identifier}` The identifier format is:
         * `{TermsOfServiceKind}-{country}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/termsOfServiceAgreementStates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the state of the agreement for the application terms of service.
       *
       * Create a request for the method "termsOfServiceAgreementStates.retrieveForApplication".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link RetrieveForApplication#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account for which to get a TermsOfServiceAgreementState Format: `accounts/{account}`
       * @return the request
       */
      public RetrieveForApplication retrieveForApplication(java.lang.String parent) throws java.io.IOException {
        RetrieveForApplication result = new RetrieveForApplication(parent);
        initialize(result);
        return result;
      }

      public class RetrieveForApplication extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfServiceAgreementState> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/termsOfServiceAgreementStates:retrieveForApplication";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Retrieves the state of the agreement for the application terms of service.
         *
         * Create a request for the method "termsOfServiceAgreementStates.retrieveForApplication".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link RetrieveForApplication#execute()} method to invoke the
         * remote operation. <p> {@link RetrieveForApplication#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param parent Required. The account for which to get a TermsOfServiceAgreementState Format: `accounts/{account}`
         * @since 1.13
         */
        protected RetrieveForApplication(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfServiceAgreementState.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public RetrieveForApplication set$Xgafv(java.lang.String $Xgafv) {
          return (RetrieveForApplication) super.set$Xgafv($Xgafv);
        }

        @Override
        public RetrieveForApplication setAccessToken(java.lang.String accessToken) {
          return (RetrieveForApplication) super.setAccessToken(accessToken);
        }

        @Override
        public RetrieveForApplication setAlt(java.lang.String alt) {
          return (RetrieveForApplication) super.setAlt(alt);
        }

        @Override
        public RetrieveForApplication setCallback(java.lang.String callback) {
          return (RetrieveForApplication) super.setCallback(callback);
        }

        @Override
        public RetrieveForApplication setFields(java.lang.String fields) {
          return (RetrieveForApplication) super.setFields(fields);
        }

        @Override
        public RetrieveForApplication setKey(java.lang.String key) {
          return (RetrieveForApplication) super.setKey(key);
        }

        @Override
        public RetrieveForApplication setOauthToken(java.lang.String oauthToken) {
          return (RetrieveForApplication) super.setOauthToken(oauthToken);
        }

        @Override
        public RetrieveForApplication setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RetrieveForApplication) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RetrieveForApplication setQuotaUser(java.lang.String quotaUser) {
          return (RetrieveForApplication) super.setQuotaUser(quotaUser);
        }

        @Override
        public RetrieveForApplication setUploadType(java.lang.String uploadType) {
          return (RetrieveForApplication) super.setUploadType(uploadType);
        }

        @Override
        public RetrieveForApplication setUploadProtocol(java.lang.String uploadProtocol) {
          return (RetrieveForApplication) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account for which to get a TermsOfServiceAgreementState Format:
         * `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account for which to get a TermsOfServiceAgreementState Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account for which to get a TermsOfServiceAgreementState Format:
         * `accounts/{account}`
         */
        public RetrieveForApplication setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public RetrieveForApplication set(String parameterName, Object value) {
          return (RetrieveForApplication) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Users collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Users.List request = merchantapi.users().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Users users() {
      return new Users();
    }

    /**
     * The "users" collection of methods.
     */
    public class Users {

      /**
       * Creates a Merchant Center account user. Executing this method requires admin access.
       *
       * Create a request for the method "users.create".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the account for which a user will be created. Format:
       *        `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.User}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.User content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.User> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/users";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a Merchant Center account user. Executing this method requires admin access.
         *
         * Create a request for the method "users.create".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the account for which a user will be created. Format:
       *        `accounts/{account}`
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.User}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.merchantapi.accounts_v1beta.model.User content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.User.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the account for which a user will be created. Format:
         * `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the account for which a user will be created. Format:
       `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource name of the account for which a user will be created. Format:
         * `accounts/{account}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Required. The email address of the user (for example, `john.doe@gmail.com`). */
        @com.google.api.client.util.Key
        private java.lang.String userId;

        /** Required. The email address of the user (for example, `john.doe@gmail.com`).
         */
        public java.lang.String getUserId() {
          return userId;
        }

        /** Required. The email address of the user (for example, `john.doe@gmail.com`). */
        public Create setUserId(java.lang.String userId) {
          this.userId = userId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a Merchant Center account user. Executing this method requires admin access. The user to
       * be deleted can't be the last admin user of that account. Also a user is protected from deletion
       * if it is managed by Business Manager"
       *
       * Create a request for the method "users.delete".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the user to delete. Format: `accounts/{account}/users/{email}` It is also
       *        possible to delete the user corresponding to the caller by using `me` rather than an email
       *        address as in `accounts/{account}/users/me`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Empty> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/users/[^/]+$");

        /**
         * Deletes a Merchant Center account user. Executing this method requires admin access. The user
         * to be deleted can't be the last admin user of that account. Also a user is protected from
         * deletion if it is managed by Business Manager"
         *
         * Create a request for the method "users.delete".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the user to delete. Format: `accounts/{account}/users/{email}` It is also
       *        possible to delete the user corresponding to the caller by using `me` rather than an email
       *        address as in `accounts/{account}/users/me`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the user to delete. Format: `accounts/{account}/users/{email}` It
         * is also possible to delete the user corresponding to the caller by using `me` rather than
         * an email address as in `accounts/{account}/users/me`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the user to delete. Format: `accounts/{account}/users/{email}` It is also
       possible to delete the user corresponding to the caller by using `me` rather than an email address
       as in `accounts/{account}/users/me`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the user to delete. Format: `accounts/{account}/users/{email}` It
         * is also possible to delete the user corresponding to the caller by using `me` rather than
         * an email address as in `accounts/{account}/users/me`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a Merchant Center account user.
       *
       * Create a request for the method "users.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the user to retrieve. Format: `accounts/{account}/users/{email}` It is also
       *        possible to retrieve the user corresponding to the caller by using `me` rather than an
       *        email address as in `accounts/{account}/users/me`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.User> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/users/[^/]+$");

        /**
         * Retrieves a Merchant Center account user.
         *
         * Create a request for the method "users.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the user to retrieve. Format: `accounts/{account}/users/{email}` It is also
       *        possible to retrieve the user corresponding to the caller by using `me` rather than an
       *        email address as in `accounts/{account}/users/me`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.User.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the user to retrieve. Format: `accounts/{account}/users/{email}` It
         * is also possible to retrieve the user corresponding to the caller by using `me` rather
         * than an email address as in `accounts/{account}/users/me`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the user to retrieve. Format: `accounts/{account}/users/{email}` It is also
       possible to retrieve the user corresponding to the caller by using `me` rather than an email
       address as in `accounts/{account}/users/me`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the user to retrieve. Format: `accounts/{account}/users/{email}` It
         * is also possible to retrieve the user corresponding to the caller by using `me` rather
         * than an email address as in `accounts/{account}/users/me`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all users of a Merchant Center account.
       *
       * Create a request for the method "users.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent, which owns this collection of users. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.ListUsersResponse> {

        private static final String REST_PATH = "accounts/v1beta/{+parent}/users";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all users of a Merchant Center account.
         *
         * Create a request for the method "users.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent, which owns this collection of users. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.ListUsersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent, which owns this collection of users. Format: `accounts/{account}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent, which owns this collection of users. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent, which owns this collection of users. Format: `accounts/{account}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of users to return. The service may return fewer than this
         * value. If unspecified, at most 50 users will be returned. The maximum value is 100;
         * values above 100 will be coerced to 100
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of users to return. The service may return fewer than this value. If
       unspecified, at most 50 users will be returned. The maximum value is 100; values above 100 will be
       coerced to 100
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of users to return. The service may return fewer than this
         * value. If unspecified, at most 50 users will be returned. The maximum value is 100;
         * values above 100 will be coerced to 100
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListUsers` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListUsers` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListUsers` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListUsers` must match the call
       that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListUsers` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListUsers` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a Merchant Center account user. Executing this method requires admin access.
       *
       * Create a request for the method "users.patch".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me` to
       *        refer to your own email address, for example `accounts/{account}/users/me`.
       * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.User}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.User content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.User> {

        private static final String REST_PATH = "accounts/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/users/[^/]+$");

        /**
         * Updates a Merchant Center account user. Executing this method requires admin access.
         *
         * Create a request for the method "users.patch".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me` to
       *        refer to your own email address, for example `accounts/{account}/users/me`.
         * @param content the {@link com.google.api.services.merchantapi.accounts_v1beta.model.User}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.merchantapi.accounts_v1beta.model.User content) {
          super(Merchant.this, "PATCH", REST_PATH, content, com.google.api.services.merchantapi.accounts_v1beta.model.User.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use
         * `me` to refer to your own email address, for example `accounts/{account}/users/me`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use `me` to
       refer to your own email address, for example `accounts/{account}/users/me`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. The resource name of the user. Format: `accounts/{account}/user/{email}` Use
         * `me` to refer to your own email address, for example `accounts/{account}/users/me`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/users/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `access_rights`
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. List of fields being updated. The following fields are supported (in both `snake_case`
       and `lowerCamelCase`): - `access_rights`
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. List of fields being updated. The following fields are supported (in both
         * `snake_case` and `lowerCamelCase`): - `access_rights`
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the TermsOfService collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.TermsOfService.List request = merchantapi.termsOfService().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TermsOfService termsOfService() {
    return new TermsOfService();
  }

  /**
   * The "termsOfService" collection of methods.
   */
  public class TermsOfService {

    /**
     * Accepts a `TermsOfService`. Executing this method requires admin access.
     *
     * Create a request for the method "termsOfService.accept".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Accept#execute()} method to invoke the remote operation.
     *
     * @param name Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
     * @return the request
     */
    public Accept accept(java.lang.String name) throws java.io.IOException {
      Accept result = new Accept(name);
      initialize(result);
      return result;
    }

    public class Accept extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.Empty> {

      private static final String REST_PATH = "accounts/v1beta/{+name}:accept";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^termsOfService/[^/]+$");

      /**
       * Accepts a `TermsOfService`. Executing this method requires admin access.
       *
       * Create a request for the method "termsOfService.accept".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Accept#execute()} method to invoke the remote operation.
       * <p> {@link
       * Accept#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
       * @since 1.13
       */
      protected Accept(java.lang.String name) {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^termsOfService/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Accept set$Xgafv(java.lang.String $Xgafv) {
        return (Accept) super.set$Xgafv($Xgafv);
      }

      @Override
      public Accept setAccessToken(java.lang.String accessToken) {
        return (Accept) super.setAccessToken(accessToken);
      }

      @Override
      public Accept setAlt(java.lang.String alt) {
        return (Accept) super.setAlt(alt);
      }

      @Override
      public Accept setCallback(java.lang.String callback) {
        return (Accept) super.setCallback(callback);
      }

      @Override
      public Accept setFields(java.lang.String fields) {
        return (Accept) super.setFields(fields);
      }

      @Override
      public Accept setKey(java.lang.String key) {
        return (Accept) super.setKey(key);
      }

      @Override
      public Accept setOauthToken(java.lang.String oauthToken) {
        return (Accept) super.setOauthToken(oauthToken);
      }

      @Override
      public Accept setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Accept) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Accept setQuotaUser(java.lang.String quotaUser) {
        return (Accept) super.setQuotaUser(quotaUser);
      }

      @Override
      public Accept setUploadType(java.lang.String uploadType) {
        return (Accept) super.setUploadType(uploadType);
      }

      @Override
      public Accept setUploadProtocol(java.lang.String uploadProtocol) {
        return (Accept) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The resource name of the terms of service version. Format:
       * `termsOfService/{version}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The resource name of the terms of service version. Format:
       * `termsOfService/{version}`
       */
      public Accept setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^termsOfService/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /** Required. The account for which to accept the ToS. */
      @com.google.api.client.util.Key
      private java.lang.String account;

      /** Required. The account for which to accept the ToS.
       */
      public java.lang.String getAccount() {
        return account;
      }

      /** Required. The account for which to accept the ToS. */
      public Accept setAccount(java.lang.String account) {
        this.account = account;
        return this;
      }

      /**
       * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a
       * country when the ToS applies specifically to that country or 001 when it applies globally.
       */
      @com.google.api.client.util.Key
      private java.lang.String regionCode;

      /** Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a country
     when the ToS applies specifically to that country or 001 when it applies globally.
       */
      public java.lang.String getRegionCode() {
        return regionCode;
      }

      /**
       * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a
       * country when the ToS applies specifically to that country or 001 when it applies globally.
       */
      public Accept setRegionCode(java.lang.String regionCode) {
        this.regionCode = regionCode;
        return this;
      }

      @Override
      public Accept set(String parameterName, Object value) {
        return (Accept) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the `TermsOfService` associated with the provided version.
     *
     * Create a request for the method "termsOfService.get".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfService> {

      private static final String REST_PATH = "accounts/v1beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^termsOfService/[^/]+$");

      /**
       * Retrieves the `TermsOfService` associated with the provided version.
       *
       * Create a request for the method "termsOfService.get".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfService.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^termsOfService/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The resource name of the terms of service version. Format:
       * `termsOfService/{version}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The resource name of the terms of service version. Format: `termsOfService/{version}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The resource name of the terms of service version. Format:
       * `termsOfService/{version}`
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^termsOfService/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the latest version of the `TermsOfService` for a given `kind` and `region_code`.
     *
     * Create a request for the method "termsOfService.retrieveLatest".
     *
     * This request holds the parameters needed by the merchantapi server.  After setting any optional
     * parameters, call the {@link RetrieveLatest#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public RetrieveLatest retrieveLatest() throws java.io.IOException {
      RetrieveLatest result = new RetrieveLatest();
      initialize(result);
      return result;
    }

    public class RetrieveLatest extends MerchantRequest<com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfService> {

      private static final String REST_PATH = "accounts/v1beta/termsOfService:retrieveLatest";

      /**
       * Retrieves the latest version of the `TermsOfService` for a given `kind` and `region_code`.
       *
       * Create a request for the method "termsOfService.retrieveLatest".
       *
       * This request holds the parameters needed by the the merchantapi server.  After setting any
       * optional parameters, call the {@link RetrieveLatest#execute()} method to invoke the remote
       * operation. <p> {@link RetrieveLatest#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected RetrieveLatest() {
        super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.accounts_v1beta.model.TermsOfService.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public RetrieveLatest set$Xgafv(java.lang.String $Xgafv) {
        return (RetrieveLatest) super.set$Xgafv($Xgafv);
      }

      @Override
      public RetrieveLatest setAccessToken(java.lang.String accessToken) {
        return (RetrieveLatest) super.setAccessToken(accessToken);
      }

      @Override
      public RetrieveLatest setAlt(java.lang.String alt) {
        return (RetrieveLatest) super.setAlt(alt);
      }

      @Override
      public RetrieveLatest setCallback(java.lang.String callback) {
        return (RetrieveLatest) super.setCallback(callback);
      }

      @Override
      public RetrieveLatest setFields(java.lang.String fields) {
        return (RetrieveLatest) super.setFields(fields);
      }

      @Override
      public RetrieveLatest setKey(java.lang.String key) {
        return (RetrieveLatest) super.setKey(key);
      }

      @Override
      public RetrieveLatest setOauthToken(java.lang.String oauthToken) {
        return (RetrieveLatest) super.setOauthToken(oauthToken);
      }

      @Override
      public RetrieveLatest setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RetrieveLatest) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RetrieveLatest setQuotaUser(java.lang.String quotaUser) {
        return (RetrieveLatest) super.setQuotaUser(quotaUser);
      }

      @Override
      public RetrieveLatest setUploadType(java.lang.String uploadType) {
        return (RetrieveLatest) super.setUploadType(uploadType);
      }

      @Override
      public RetrieveLatest setUploadProtocol(java.lang.String uploadProtocol) {
        return (RetrieveLatest) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The Kind this terms of service version applies to. */
      @com.google.api.client.util.Key
      private java.lang.String kind;

      /** Required. The Kind this terms of service version applies to.
       */
      public java.lang.String getKind() {
        return kind;
      }

      /** Required. The Kind this terms of service version applies to. */
      public RetrieveLatest setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      /**
       * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a
       * country when the ToS applies specifically to that country or 001 when it applies globally.
       */
      @com.google.api.client.util.Key
      private java.lang.String regionCode;

      /** Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a country
     when the ToS applies specifically to that country or 001 when it applies globally.
       */
      public java.lang.String getRegionCode() {
        return regionCode;
      }

      /**
       * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This is either a
       * country when the ToS applies specifically to that country or 001 when it applies globally.
       */
      public RetrieveLatest setRegionCode(java.lang.String regionCode) {
        this.regionCode = regionCode;
        return this;
      }

      @Override
      public RetrieveLatest set(String parameterName, Object value) {
        return (RetrieveLatest) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Merchant}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Merchant}. */
    @Override
    public Merchant build() {
      return new Merchant(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MerchantRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMerchantRequestInitializer(
        MerchantRequestInitializer merchantRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(merchantRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
