/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.container.model;

/**
 * UpdateNodePoolRequests update a node pool's image and/or version.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Kubernetes Engine API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpdateNodePoolRequest extends com.google.api.client.json.GenericJson {

  /**
   * A list of hardware accelerators to be attached to each node. See
   * https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AcceleratorConfig> accelerators;

  static {
    // hack to force ProGuard to consider AcceleratorConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AcceleratorConfig.class);
  }

  /**
   * Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by
   * the name field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterId;

  /**
   * Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConfidentialNodes confidentialNodes;

  /**
   * The desired containerd config for nodes in the node pool. Initiates an upgrade operation that
   * recreates the nodes with the new config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ContainerdConfig containerdConfig;

  /**
   * Optional. The desired disk size for nodes in the node pool specified in GB. The smallest
   * allowed disk size is 10GB. Initiates an upgrade operation that migrates the nodes in the node
   * pool to the specified disk size.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long diskSizeGb;

  /**
   * Optional. The desired disk type (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') for nodes in
   * the node pool. Initiates an upgrade operation that migrates the nodes in the node pool to the
   * specified disk type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskType;

  /**
   * The current etag of the node pool. If an etag is provided and does not match the current etag
   * of the node pool, update will be blocked and an ABORTED error will be returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Enable or disable NCCL fast socket for the node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FastSocket fastSocket;

  /**
   * GCFS config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GcfsConfig gcfsConfig;

  /**
   * Enable or disable gvnic on the node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VirtualNIC gvnic;

  /**
   * Required. The desired image type for the node pool. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageType;

  /**
   * Node kubelet configs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodeKubeletConfig kubeletConfig;

  /**
   * The desired node labels to be applied to all nodes in the node pool. If this field is not
   * present, the labels will not be changed. Otherwise, the existing node labels will be *replaced*
   * with the provided labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodeLabels labels;

  /**
   * Parameters that can be configured on Linux nodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LinuxNodeConfig linuxNodeConfig;

  /**
   * The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes
   * should be located. Changing the locations for a node pool will result in nodes being either
   * created or removed from the node pool, depending on whether locations are being added or
   * removed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> locations;

  /**
   * Logging configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodePoolLoggingConfig loggingConfig;

  /**
   * Optional. The desired [Google Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types) for nodes in the node pool.
   * Initiates an upgrade operation that migrates the nodes in the node pool to the specified
   * machine type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineType;

  /**
   * The maximum duration for the nodes to exist. If unspecified, the nodes can exist indefinitely.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxRunDuration;

  /**
   * The name (project, location, cluster, node pool) of the node pool to update. Specified in the
   * format `projects/locations/clusters/nodePools`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Node network config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodeNetworkConfig nodeNetworkConfig;

  /**
   * Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced
   * by the name field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nodePoolId;

  /**
   * Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may
   * specify either explicit versions offered by Kubernetes Engine or version aliases, which have
   * the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks
   * the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N
   * patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks
   * the Kubernetes master version
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nodeVersion;

  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field
   * has been deprecated and replaced by the name field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Specifies the configuration of queued provisioning.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QueuedProvisioning queuedProvisioning;

  /**
   * The resource labels for the node pool to use to annotate any related Google Compute Engine
   * resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceLabels resourceLabels;

  /**
   * Desired resource manager tag keys and values to be attached to the nodes for managing Compute
   * Engine firewalls using Network Firewall Policies. Existing tags will be replaced with new
   * values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceManagerTags resourceManagerTags;

  /**
   * List of Storage Pools where boot disks are provisioned. Existing Storage Pools will be replaced
   * with storage-pools.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> storagePools;

  /**
   * The desired network tags to be applied to all nodes in the node pool. If this field is not
   * present, the tags will not be changed. Otherwise, the existing network tags will be *replaced*
   * with the provided tags.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NetworkTags tags;

  /**
   * The desired node taints to be applied to all nodes in the node pool. If this field is not
   * present, the taints will not be changed. Otherwise, the existing node taints will be *replaced*
   * with the provided taints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NodeTaints taints;

  /**
   * Upgrade settings control disruption and speed of the upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UpgradeSettings upgradeSettings;

  /**
   * Parameters that can be configured on Windows nodes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WindowsNodeConfig windowsNodeConfig;

  /**
   * The desired workload metadata config for the node pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkloadMetadataConfig workloadMetadataConfig;

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
   * This field has been deprecated and replaced by the name field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String zone;

  /**
   * A list of hardware accelerators to be attached to each node. See
   * https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
   * @return value or {@code null} for none
   */
  public java.util.List<AcceleratorConfig> getAccelerators() {
    return accelerators;
  }

  /**
   * A list of hardware accelerators to be attached to each node. See
   * https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
   * @param accelerators accelerators or {@code null} for none
   */
  public UpdateNodePoolRequest setAccelerators(java.util.List<AcceleratorConfig> accelerators) {
    this.accelerators = accelerators;
    return this;
  }

  /**
   * Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by
   * the name field.
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterId() {
    return clusterId;
  }

  /**
   * Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by
   * the name field.
   * @param clusterId clusterId or {@code null} for none
   */
  public UpdateNodePoolRequest setClusterId(java.lang.String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
   * @return value or {@code null} for none
   */
  public ConfidentialNodes getConfidentialNodes() {
    return confidentialNodes;
  }

  /**
   * Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
   * @param confidentialNodes confidentialNodes or {@code null} for none
   */
  public UpdateNodePoolRequest setConfidentialNodes(ConfidentialNodes confidentialNodes) {
    this.confidentialNodes = confidentialNodes;
    return this;
  }

  /**
   * The desired containerd config for nodes in the node pool. Initiates an upgrade operation that
   * recreates the nodes with the new config.
   * @return value or {@code null} for none
   */
  public ContainerdConfig getContainerdConfig() {
    return containerdConfig;
  }

  /**
   * The desired containerd config for nodes in the node pool. Initiates an upgrade operation that
   * recreates the nodes with the new config.
   * @param containerdConfig containerdConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setContainerdConfig(ContainerdConfig containerdConfig) {
    this.containerdConfig = containerdConfig;
    return this;
  }

  /**
   * Optional. The desired disk size for nodes in the node pool specified in GB. The smallest
   * allowed disk size is 10GB. Initiates an upgrade operation that migrates the nodes in the node
   * pool to the specified disk size.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDiskSizeGb() {
    return diskSizeGb;
  }

  /**
   * Optional. The desired disk size for nodes in the node pool specified in GB. The smallest
   * allowed disk size is 10GB. Initiates an upgrade operation that migrates the nodes in the node
   * pool to the specified disk size.
   * @param diskSizeGb diskSizeGb or {@code null} for none
   */
  public UpdateNodePoolRequest setDiskSizeGb(java.lang.Long diskSizeGb) {
    this.diskSizeGb = diskSizeGb;
    return this;
  }

  /**
   * Optional. The desired disk type (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') for nodes in
   * the node pool. Initiates an upgrade operation that migrates the nodes in the node pool to the
   * specified disk type.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskType() {
    return diskType;
  }

  /**
   * Optional. The desired disk type (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') for nodes in
   * the node pool. Initiates an upgrade operation that migrates the nodes in the node pool to the
   * specified disk type.
   * @param diskType diskType or {@code null} for none
   */
  public UpdateNodePoolRequest setDiskType(java.lang.String diskType) {
    this.diskType = diskType;
    return this;
  }

  /**
   * The current etag of the node pool. If an etag is provided and does not match the current etag
   * of the node pool, update will be blocked and an ABORTED error will be returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * The current etag of the node pool. If an etag is provided and does not match the current etag
   * of the node pool, update will be blocked and an ABORTED error will be returned.
   * @param etag etag or {@code null} for none
   */
  public UpdateNodePoolRequest setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Enable or disable NCCL fast socket for the node pool.
   * @return value or {@code null} for none
   */
  public FastSocket getFastSocket() {
    return fastSocket;
  }

  /**
   * Enable or disable NCCL fast socket for the node pool.
   * @param fastSocket fastSocket or {@code null} for none
   */
  public UpdateNodePoolRequest setFastSocket(FastSocket fastSocket) {
    this.fastSocket = fastSocket;
    return this;
  }

  /**
   * GCFS config.
   * @return value or {@code null} for none
   */
  public GcfsConfig getGcfsConfig() {
    return gcfsConfig;
  }

  /**
   * GCFS config.
   * @param gcfsConfig gcfsConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setGcfsConfig(GcfsConfig gcfsConfig) {
    this.gcfsConfig = gcfsConfig;
    return this;
  }

  /**
   * Enable or disable gvnic on the node pool.
   * @return value or {@code null} for none
   */
  public VirtualNIC getGvnic() {
    return gvnic;
  }

  /**
   * Enable or disable gvnic on the node pool.
   * @param gvnic gvnic or {@code null} for none
   */
  public UpdateNodePoolRequest setGvnic(VirtualNIC gvnic) {
    this.gvnic = gvnic;
    return this;
  }

  /**
   * Required. The desired image type for the node pool. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageType() {
    return imageType;
  }

  /**
   * Required. The desired image type for the node pool. Please see
   * https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
   * @param imageType imageType or {@code null} for none
   */
  public UpdateNodePoolRequest setImageType(java.lang.String imageType) {
    this.imageType = imageType;
    return this;
  }

  /**
   * Node kubelet configs.
   * @return value or {@code null} for none
   */
  public NodeKubeletConfig getKubeletConfig() {
    return kubeletConfig;
  }

  /**
   * Node kubelet configs.
   * @param kubeletConfig kubeletConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setKubeletConfig(NodeKubeletConfig kubeletConfig) {
    this.kubeletConfig = kubeletConfig;
    return this;
  }

  /**
   * The desired node labels to be applied to all nodes in the node pool. If this field is not
   * present, the labels will not be changed. Otherwise, the existing node labels will be *replaced*
   * with the provided labels.
   * @return value or {@code null} for none
   */
  public NodeLabels getLabels() {
    return labels;
  }

  /**
   * The desired node labels to be applied to all nodes in the node pool. If this field is not
   * present, the labels will not be changed. Otherwise, the existing node labels will be *replaced*
   * with the provided labels.
   * @param labels labels or {@code null} for none
   */
  public UpdateNodePoolRequest setLabels(NodeLabels labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Parameters that can be configured on Linux nodes.
   * @return value or {@code null} for none
   */
  public LinuxNodeConfig getLinuxNodeConfig() {
    return linuxNodeConfig;
  }

  /**
   * Parameters that can be configured on Linux nodes.
   * @param linuxNodeConfig linuxNodeConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setLinuxNodeConfig(LinuxNodeConfig linuxNodeConfig) {
    this.linuxNodeConfig = linuxNodeConfig;
    return this;
  }

  /**
   * The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes
   * should be located. Changing the locations for a node pool will result in nodes being either
   * created or removed from the node pool, depending on whether locations are being added or
   * removed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLocations() {
    return locations;
  }

  /**
   * The desired list of Google Compute Engine
   * [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes
   * should be located. Changing the locations for a node pool will result in nodes being either
   * created or removed from the node pool, depending on whether locations are being added or
   * removed.
   * @param locations locations or {@code null} for none
   */
  public UpdateNodePoolRequest setLocations(java.util.List<java.lang.String> locations) {
    this.locations = locations;
    return this;
  }

  /**
   * Logging configuration.
   * @return value or {@code null} for none
   */
  public NodePoolLoggingConfig getLoggingConfig() {
    return loggingConfig;
  }

  /**
   * Logging configuration.
   * @param loggingConfig loggingConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setLoggingConfig(NodePoolLoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
    return this;
  }

  /**
   * Optional. The desired [Google Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types) for nodes in the node pool.
   * Initiates an upgrade operation that migrates the nodes in the node pool to the specified
   * machine type.
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineType() {
    return machineType;
  }

  /**
   * Optional. The desired [Google Compute Engine machine
   * type](https://cloud.google.com/compute/docs/machine-types) for nodes in the node pool.
   * Initiates an upgrade operation that migrates the nodes in the node pool to the specified
   * machine type.
   * @param machineType machineType or {@code null} for none
   */
  public UpdateNodePoolRequest setMachineType(java.lang.String machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * The maximum duration for the nodes to exist. If unspecified, the nodes can exist indefinitely.
   * @return value or {@code null} for none
   */
  public String getMaxRunDuration() {
    return maxRunDuration;
  }

  /**
   * The maximum duration for the nodes to exist. If unspecified, the nodes can exist indefinitely.
   * @param maxRunDuration maxRunDuration or {@code null} for none
   */
  public UpdateNodePoolRequest setMaxRunDuration(String maxRunDuration) {
    this.maxRunDuration = maxRunDuration;
    return this;
  }

  /**
   * The name (project, location, cluster, node pool) of the node pool to update. Specified in the
   * format `projects/locations/clusters/nodePools`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name (project, location, cluster, node pool) of the node pool to update. Specified in the
   * format `projects/locations/clusters/nodePools`.
   * @param name name or {@code null} for none
   */
  public UpdateNodePoolRequest setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Node network config.
   * @return value or {@code null} for none
   */
  public NodeNetworkConfig getNodeNetworkConfig() {
    return nodeNetworkConfig;
  }

  /**
   * Node network config.
   * @param nodeNetworkConfig nodeNetworkConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setNodeNetworkConfig(NodeNetworkConfig nodeNetworkConfig) {
    this.nodeNetworkConfig = nodeNetworkConfig;
    return this;
  }

  /**
   * Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced
   * by the name field.
   * @return value or {@code null} for none
   */
  public java.lang.String getNodePoolId() {
    return nodePoolId;
  }

  /**
   * Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced
   * by the name field.
   * @param nodePoolId nodePoolId or {@code null} for none
   */
  public UpdateNodePoolRequest setNodePoolId(java.lang.String nodePoolId) {
    this.nodePoolId = nodePoolId;
    return this;
  }

  /**
   * Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may
   * specify either explicit versions offered by Kubernetes Engine or version aliases, which have
   * the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks
   * the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N
   * patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks
   * the Kubernetes master version
   * @return value or {@code null} for none
   */
  public java.lang.String getNodeVersion() {
    return nodeVersion;
  }

  /**
   * Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may
   * specify either explicit versions offered by Kubernetes Engine or version aliases, which have
   * the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks
   * the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N
   * patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks
   * the Kubernetes master version
   * @param nodeVersion nodeVersion or {@code null} for none
   */
  public UpdateNodePoolRequest setNodeVersion(java.lang.String nodeVersion) {
    this.nodeVersion = nodeVersion;
    return this;
  }

  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field
   * has been deprecated and replaced by the name field.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Deprecated. The Google Developers Console [project ID or project
   * number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field
   * has been deprecated and replaced by the name field.
   * @param projectId projectId or {@code null} for none
   */
  public UpdateNodePoolRequest setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Specifies the configuration of queued provisioning.
   * @return value or {@code null} for none
   */
  public QueuedProvisioning getQueuedProvisioning() {
    return queuedProvisioning;
  }

  /**
   * Specifies the configuration of queued provisioning.
   * @param queuedProvisioning queuedProvisioning or {@code null} for none
   */
  public UpdateNodePoolRequest setQueuedProvisioning(QueuedProvisioning queuedProvisioning) {
    this.queuedProvisioning = queuedProvisioning;
    return this;
  }

  /**
   * The resource labels for the node pool to use to annotate any related Google Compute Engine
   * resources.
   * @return value or {@code null} for none
   */
  public ResourceLabels getResourceLabels() {
    return resourceLabels;
  }

  /**
   * The resource labels for the node pool to use to annotate any related Google Compute Engine
   * resources.
   * @param resourceLabels resourceLabels or {@code null} for none
   */
  public UpdateNodePoolRequest setResourceLabels(ResourceLabels resourceLabels) {
    this.resourceLabels = resourceLabels;
    return this;
  }

  /**
   * Desired resource manager tag keys and values to be attached to the nodes for managing Compute
   * Engine firewalls using Network Firewall Policies. Existing tags will be replaced with new
   * values.
   * @return value or {@code null} for none
   */
  public ResourceManagerTags getResourceManagerTags() {
    return resourceManagerTags;
  }

  /**
   * Desired resource manager tag keys and values to be attached to the nodes for managing Compute
   * Engine firewalls using Network Firewall Policies. Existing tags will be replaced with new
   * values.
   * @param resourceManagerTags resourceManagerTags or {@code null} for none
   */
  public UpdateNodePoolRequest setResourceManagerTags(ResourceManagerTags resourceManagerTags) {
    this.resourceManagerTags = resourceManagerTags;
    return this;
  }

  /**
   * List of Storage Pools where boot disks are provisioned. Existing Storage Pools will be replaced
   * with storage-pools.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getStoragePools() {
    return storagePools;
  }

  /**
   * List of Storage Pools where boot disks are provisioned. Existing Storage Pools will be replaced
   * with storage-pools.
   * @param storagePools storagePools or {@code null} for none
   */
  public UpdateNodePoolRequest setStoragePools(java.util.List<java.lang.String> storagePools) {
    this.storagePools = storagePools;
    return this;
  }

  /**
   * The desired network tags to be applied to all nodes in the node pool. If this field is not
   * present, the tags will not be changed. Otherwise, the existing network tags will be *replaced*
   * with the provided tags.
   * @return value or {@code null} for none
   */
  public NetworkTags getTags() {
    return tags;
  }

  /**
   * The desired network tags to be applied to all nodes in the node pool. If this field is not
   * present, the tags will not be changed. Otherwise, the existing network tags will be *replaced*
   * with the provided tags.
   * @param tags tags or {@code null} for none
   */
  public UpdateNodePoolRequest setTags(NetworkTags tags) {
    this.tags = tags;
    return this;
  }

  /**
   * The desired node taints to be applied to all nodes in the node pool. If this field is not
   * present, the taints will not be changed. Otherwise, the existing node taints will be *replaced*
   * with the provided taints.
   * @return value or {@code null} for none
   */
  public NodeTaints getTaints() {
    return taints;
  }

  /**
   * The desired node taints to be applied to all nodes in the node pool. If this field is not
   * present, the taints will not be changed. Otherwise, the existing node taints will be *replaced*
   * with the provided taints.
   * @param taints taints or {@code null} for none
   */
  public UpdateNodePoolRequest setTaints(NodeTaints taints) {
    this.taints = taints;
    return this;
  }

  /**
   * Upgrade settings control disruption and speed of the upgrade.
   * @return value or {@code null} for none
   */
  public UpgradeSettings getUpgradeSettings() {
    return upgradeSettings;
  }

  /**
   * Upgrade settings control disruption and speed of the upgrade.
   * @param upgradeSettings upgradeSettings or {@code null} for none
   */
  public UpdateNodePoolRequest setUpgradeSettings(UpgradeSettings upgradeSettings) {
    this.upgradeSettings = upgradeSettings;
    return this;
  }

  /**
   * Parameters that can be configured on Windows nodes.
   * @return value or {@code null} for none
   */
  public WindowsNodeConfig getWindowsNodeConfig() {
    return windowsNodeConfig;
  }

  /**
   * Parameters that can be configured on Windows nodes.
   * @param windowsNodeConfig windowsNodeConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setWindowsNodeConfig(WindowsNodeConfig windowsNodeConfig) {
    this.windowsNodeConfig = windowsNodeConfig;
    return this;
  }

  /**
   * The desired workload metadata config for the node pool.
   * @return value or {@code null} for none
   */
  public WorkloadMetadataConfig getWorkloadMetadataConfig() {
    return workloadMetadataConfig;
  }

  /**
   * The desired workload metadata config for the node pool.
   * @param workloadMetadataConfig workloadMetadataConfig or {@code null} for none
   */
  public UpdateNodePoolRequest setWorkloadMetadataConfig(WorkloadMetadataConfig workloadMetadataConfig) {
    this.workloadMetadataConfig = workloadMetadataConfig;
    return this;
  }

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
   * This field has been deprecated and replaced by the name field.
   * @return value or {@code null} for none
   */
  public java.lang.String getZone() {
    return zone;
  }

  /**
   * Deprecated. The name of the Google Compute Engine
   * [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
   * This field has been deprecated and replaced by the name field.
   * @param zone zone or {@code null} for none
   */
  public UpdateNodePoolRequest setZone(java.lang.String zone) {
    this.zone = zone;
    return this;
  }

  @Override
  public UpdateNodePoolRequest set(String fieldName, Object value) {
    return (UpdateNodePoolRequest) super.set(fieldName, value);
  }

  @Override
  public UpdateNodePoolRequest clone() {
    return (UpdateNodePoolRequest) super.clone();
  }

}
