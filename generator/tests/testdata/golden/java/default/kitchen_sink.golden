=== begin: ./com/google/api/services/kitch_sink/KitchSink.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink;

/**
 * Service definition for KitchSink (v1).
 *
 * <p>
 * An API with every strange thing in it
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link KitchSinkRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class KitchSink extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0-SNAPSHOT of the kitch_sink library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "sink/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public KitchSink(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  KitchSink(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Featured collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Featured.List request = kitch_sink.featured().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Featured featured() {
    return new Featured();
  }

  /**
   * The "featured" collection of methods.
   */
  public class Featured {

    /**
     * An accessor for creating requests from the Series collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Series.List request = kitch_sink.series().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Series series() {
      return new Series();
    }

    /**
     * The "series" collection of methods.
     */
    public class Series {

      /**
       * Lists the featured series.
       *
       * Create a request for the method "series.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

        private static final String REST_PATH = "series/featured";

        /**
         * Lists the featured series.
         *
         * Create a request for the method "series.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Global collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Global.List request = kitch_sink.global().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Global global() {
    return new Global();
  }

  /**
   * The "global" collection of methods.
   */
  public class Global {

    /**
     * An accessor for creating requests from the Series collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Series.List request = kitch_sink.series().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Series series() {
      return new Series();
    }

    /**
     * The "series" collection of methods.
     */
    public class Series {

      /**
       * Searches the public series and returns the search results.
       *
       * Create a request for the method "series.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

        private static final String REST_PATH = "search";

        /**
         * Searches the public series and returns the search results.
         *
         * Create a request for the method "series.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        /** Maximum number of results to return. */
        @com.google.api.client.util.Key("max-results")
        private java.lang.Integer maxResults;

        /** Maximum number of results to return.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getMaxResults() {
          return maxResults;
        }

        /** Maximum number of results to return. */
        public List setMaxResults(java.lang.Integer maxResults) {
          this.maxResults = maxResults;
          return this;
        }

        /** Search query. */
        @com.google.api.client.util.Key
        private java.lang.String q;

        /** Search query.
         */
        public java.lang.String getQ() {
          return q;
        }

        /** Search query. */
        public List setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        /** Index of the first result to be retrieved. */
        @com.google.api.client.util.Key("start-index")
        private java.lang.Integer startIndex;

        /** Index of the first result to be retrieved.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getStartIndex() {
          return startIndex;
        }

        /** Index of the first result to be retrieved. */
        public List setStartIndex(java.lang.Integer startIndex) {
          this.startIndex = startIndex;
          return this;
        }

        /** Enum */
        @com.google.api.client.util.Key("enum")
        private java.lang.Object enum__;

        /** Enum
         */
        public java.lang.Object getEnum() {
          return enum__;
        }

        /** Enum */
        public List setEnum(java.lang.Object enum__) {
          this.enum__ = enum__;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the My collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.My.List request = kitch_sink.my().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public My my() {
    return new My();
  }

  /**
   * The "my" collection of methods.
   */
  public class My {

    /**
     * An accessor for creating requests from the Series collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Series.List request = kitch_sink.series().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Series series() {
      return new Series();
    }

    /**
     * The "series" collection of methods.
     */
    public class Series {

      /**
       * Lists all series created by the authenticated user.
       *
       * Create a request for the method "series.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

        private static final String REST_PATH = "series/@me/mine";

        /**
         * Lists all series created by the authenticated user.
         *
         * Create a request for the method "series.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Myrecent collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Myrecent.List request = kitch_sink.myrecent().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Myrecent myrecent() {
    return new Myrecent();
  }

  /**
   * The "myrecent" collection of methods.
   */
  public class Myrecent {

    /**
     * An accessor for creating requests from the KitchSinkPrivate collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.KitchSinkPrivate.List request = kitch_sink.kitch_sinkPrivate().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public KitchSinkPrivate kitch_sinkPrivate() {
      return new KitchSinkPrivate();
    }

    /**
     * The "private" collection of methods.
     */
    public class KitchSinkPrivate {

      /**
       * Resource using a name which is a keyword in many languages, to check their handling.
       *
       * Create a request for the method "private.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @return the request
       */
      public List list() throws java.io.IOException {
        List result = new List();
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

        private static final String REST_PATH = "series/@me/recent";

        /**
         * Resource using a name which is a keyword in many languages, to check their handling.
         *
         * Create a request for the method "private.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @since 1.13
         */
        protected List() {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Profiles collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Profiles.List request = kitch_sink.profiles().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Profiles profiles() {
    return new Profiles();
  }

  /**
   * The "profiles" collection of methods.
   */
  public class Profiles {

    /**
     * Returns the profile information for the authenticated user.
     *
     * Create a request for the method "profiles.get".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Get get() throws java.io.IOException {
      Get result = new Get();
      initialize(result);
      return result;
    }

    public class Get extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Profile> {

      private static final String REST_PATH = "profiles/@me";

      /**
       * Returns the profile information for the authenticated user.
       *
       * Create a request for the method "profiles.get".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Get() {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.Profile.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates the profile information for the authenticated user.
     *
     * Create a request for the method "profiles.update".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.kitch_sink.model.Profile}
     * @return the request
     */
    public Update update(com.google.api.services.kitch_sink.model.Profile content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Profile> {

      private static final String REST_PATH = "profiles/@me";

      /**
       * Updates the profile information for the authenticated user.
       *
       * Create a request for the method "profiles.update".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.kitch_sink.model.Profile}
       * @since 1.13
       */
      protected Update(com.google.api.services.kitch_sink.model.Profile content) {
        super(KitchSink.this, "PUT", REST_PATH, content, com.google.api.services.kitch_sink.model.Profile.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Responses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Responses.List request = kitch_sink.responses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Responses responses() {
    return new Responses();
  }

  /**
   * The "responses" collection of methods.
   */
  public class Responses {

    /**
     * Inserts a response for the specified submission in the specified topic within the specified
     * series.
     *
     * Create a request for the method "responses.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param parentSubmissionId The decimal ID of the parent Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Submission}
     * @return the request
     */
    public Insert insert(java.lang.Integer seriesId, java.lang.Integer topicId, java.lang.Integer parentSubmissionId, com.google.api.services.kitch_sink.model.Submission content) throws java.io.IOException {
      Insert result = new Insert(seriesId, topicId, parentSubmissionId, content);
      initialize(result);
      return result;
    }

    /**
     * Inserts a response for the specified submission in the specified topic within the specified
     * series.
     *
     * Create a request for the method "responses.insert".
     *
     * This request holds the parameters needed by the the kitch_sink server.  After setting any
     * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]@param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]@param parentSubmissionId The decimal ID of the parent Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Submission} media metadata or {@code null} if none
     * @param mediaContent The media HTTP content or {@code null} if none.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Insert insert(java.lang.Integer seriesId, java.lang.Integer topicId, java.lang.Integer parentSubmissionId, com.google.api.services.kitch_sink.model.Submission content, com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Insert result = new Insert(seriesId, topicId, parentSubmissionId, content, mediaContent);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Submission> {

      private static final String REST_PATH = "series/{seriesId}/topics/{topicId}/submissions/{parentSubmissionId}/responses";

      /**
       * Inserts a response for the specified submission in the specified topic within the specified
       * series.
       *
       * Create a request for the method "responses.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param parentSubmissionId The decimal ID of the parent Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Submission}
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, java.lang.Integer topicId, java.lang.Integer parentSubmissionId, com.google.api.services.kitch_sink.model.Submission content) {
        super(KitchSink.this, "POST", REST_PATH, content, com.google.api.services.kitch_sink.model.Submission.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
        this.parentSubmissionId = com.google.api.client.util.Preconditions.checkNotNull(parentSubmissionId, "Required parameter parentSubmissionId must be specified.");
      }

      /**
       * Inserts a response for the specified submission in the specified topic within the specified
       * series.
       *
       * Create a request for the method "responses.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]@param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]@param parentSubmissionId The decimal ID of the parent Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Submission} media metadata or {@code null} if none
       * @param mediaContent The media HTTP content or {@code null} if none.
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, java.lang.Integer topicId, java.lang.Integer parentSubmissionId, com.google.api.services.kitch_sink.model.Submission content, com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(KitchSink.this, "POST", "/upload/" + getServicePath() + REST_PATH, content, com.google.api.services.kitch_sink.model.Submission.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
        this.parentSubmissionId = com.google.api.client.util.Preconditions.checkNotNull(parentSubmissionId, "Required parameter parentSubmissionId must be specified.");
        initializeMediaUpload(mediaContent);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Insert setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Topic within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer topicId;

      /** The decimal ID of the Topic within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getTopicId() {
        return topicId;
      }

      /** The decimal ID of the Topic within the Series. */
      public Insert setTopicId(java.lang.Integer topicId) {
        this.topicId = topicId;
        return this;
      }

      /** The decimal ID of the parent Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer parentSubmissionId;

      /** The decimal ID of the parent Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getParentSubmissionId() {
        return parentSubmissionId;
      }

      /** The decimal ID of the parent Submission within the Series. */
      public Insert setParentSubmissionId(java.lang.Integer parentSubmissionId) {
        this.parentSubmissionId = parentSubmissionId;
        return this;
      }

      /** Set to true to mark the new submission as anonymous. */
      @com.google.api.client.util.Key
      private java.lang.Boolean anonymous;

      /** Set to true to mark the new submission as anonymous.
       */
      public java.lang.Boolean getAnonymous() {
        return anonymous;
      }

      /** Set to true to mark the new submission as anonymous. */
      public Insert setAnonymous(java.lang.Boolean anonymous) {
        this.anonymous = anonymous;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists or searches the responses for the specified submission within the specified series and
     * returns the search results.
     *
     * Create a request for the method "responses.list".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public List list(java.lang.Integer seriesId, java.lang.Integer submissionId) throws java.io.IOException {
      List result = new List(seriesId, submissionId);
      initialize(result);
      return result;
    }

    public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SubmissionList> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}/responses";

      /**
       * Lists or searches the responses for the specified submission within the specified series and
       * returns the search results.
       *
       * Create a request for the method "responses.list".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected List(java.lang.Integer seriesId, java.lang.Integer submissionId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SubmissionList.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public List setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public List setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      /** Restricts the results to submissions by a specific author. */
      @com.google.api.client.util.Key
      private java.lang.String author;

      /** Restricts the results to submissions by a specific author.
       */
      public java.lang.String getAuthor() {
        return author;
      }

      /** Restricts the results to submissions by a specific author. */
      public List setAuthor(java.lang.String author) {
        this.author = author;
        return this;
      }

      /** Specifies whether to restrict to submissions that have videos attached. */
      @com.google.api.client.util.Key
      private java.lang.Boolean hasAttachedVideo;

      /** Specifies whether to restrict to submissions that have videos attached.
       */
      public java.lang.Boolean getHasAttachedVideo() {
        return hasAttachedVideo;
      }

      /** Specifies whether to restrict to submissions that have videos attached. */
      public List setHasAttachedVideo(java.lang.Boolean hasAttachedVideo) {
        this.hasAttachedVideo = hasAttachedVideo;
        return this;
      }

      /** Search query. */
      @com.google.api.client.util.Key
      private java.lang.String q;

      /** Search query.
       */
      public java.lang.String getQ() {
        return q;
      }

      /** Search query. */
      public List setQ(java.lang.String q) {
        this.q = q;
        return this;
      }

      /** Sort order. */
      @com.google.api.client.util.Key
      private java.lang.String sort;

      /** Sort order.
       */
      public java.lang.String getSort() {
        return sort;
      }

      /** Sort order. */
      public List setSort(java.lang.String sort) {
        this.sort = sort;
        return this;
      }

      /** Index of the first result to be retrieved. */
      @com.google.api.client.util.Key("start-index")
      private java.lang.Integer startIndex;

      /** Index of the first result to be retrieved.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getStartIndex() {
        return startIndex;
      }

      /** Index of the first result to be retrieved. */
      public List setStartIndex(java.lang.Integer startIndex) {
        this.startIndex = startIndex;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Series collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Series.List request = kitch_sink.series().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Series series() {
    return new Series();
  }

  /**
   * The "series" collection of methods.
   */
  public class Series {

    /**
     * Returns the specified series.
     *
     * Create a request for the method "series.get".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public Get get(java.lang.Integer seriesId) throws java.io.IOException {
      Get result = new Get(seriesId);
      initialize(result);
      return result;
    }

    public class Get extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Series> {

      private static final String REST_PATH = "series/{seriesId}";

      /**
       * Returns the specified series.
       *
       * Create a request for the method "series.get".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected Get(java.lang.Integer seriesId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.Series.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Get setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Media method without request data.
     *
     * Create a request for the method "series.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Insert insert() throws java.io.IOException {
      Insert result = new Insert();
      initialize(result);
      return result;
    }

    /**
     * Media method without request data.
     *
     * Create a request for the method "series.insert".
     *
     * This request holds the parameters needed by the the kitch_sink server.  After setting any
     * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     *
     * @param mediaContent The media HTTP content or {@code null} if none.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Insert insert(com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Insert result = new Insert(mediaContent);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Series> {

      private static final String REST_PATH = "series";

      /**
       * Media method without request data.
       *
       * Create a request for the method "series.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Insert() {
        super(KitchSink.this, "POST", REST_PATH, null, com.google.api.services.kitch_sink.model.Series.class);
      }

      /**
       * Media method without request data.
       *
       * Create a request for the method "series.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       *
       * @param mediaContent The media HTTP content or {@code null} if none.
       * @since 1.13
       */
      protected Insert(com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(KitchSink.this, "POST", "/upload/" + getServicePath() + REST_PATH, null, com.google.api.services.kitch_sink.model.Series.class);
        initializeMediaUpload(mediaContent);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Searches the series and returns the search results.
     *
     * Create a request for the method "series.list".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

      private static final String REST_PATH = "series";

      /**
       * Searches the series and returns the search results.
       *
       * Create a request for the method "series.list".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      /** Maximum number of results to return. */
      @com.google.api.client.util.Key("max-results")
      private java.lang.Integer maxResults;

      /** Maximum number of results to return.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getMaxResults() {
        return maxResults;
      }

      /** Maximum number of results to return. */
      public List setMaxResults(java.lang.Integer maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** Search query. */
      @com.google.api.client.util.Key
      private java.lang.String q;

      /** Search query.
       */
      public java.lang.String getQ() {
        return q;
      }

      /** Search query. */
      public List setQ(java.lang.String q) {
        this.q = q;
        return this;
      }

      /** Index of the first result to be retrieved. */
      @com.google.api.client.util.Key("start-index")
      private java.lang.Integer startIndex;

      /** Index of the first result to be retrieved.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getStartIndex() {
        return startIndex;
      }

      /** Index of the first result to be retrieved. */
      public List setStartIndex(java.lang.Integer startIndex) {
        this.startIndex = startIndex;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified series.
     *
     * Create a request for the method "series.update".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Series}
     * @return the request
     */
    public Update update(java.lang.Integer seriesId, com.google.api.services.kitch_sink.model.Series content) throws java.io.IOException {
      Update result = new Update(seriesId, content);
      initialize(result);
      return result;
    }

    public class Update extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Series> {

      private static final String REST_PATH = "series/{seriesId}";

      /**
       * Updates the specified series.
       *
       * Create a request for the method "series.update".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Series}
       * @since 1.13
       */
      protected Update(java.lang.Integer seriesId, com.google.api.services.kitch_sink.model.Series content) {
        super(KitchSink.this, "PUT", REST_PATH, content, com.google.api.services.kitch_sink.model.Series.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Update setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Responses collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Responses.List request = kitch_sink.responses().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Responses responses() {
      return new Responses();
    }

    /**
     * The "responses" collection of methods.
     */
    public class Responses {

      /**
       * Searches the responses for the specified series and returns the search results.
       *
       * Create a request for the method "responses.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
       * @param q Search query - a required query parameter.
       * @return the request
       */
      public List list(java.lang.Integer seriesId, java.lang.String q) throws java.io.IOException {
        List result = new List(seriesId, q);
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SeriesList> {

        private static final String REST_PATH = "series/{seriesId}/responses";

        /**
         * Searches the responses for the specified series and returns the search results.
         *
         * Create a request for the method "responses.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
         * @param q Search query - a required query parameter.
         * @since 1.13
         */
        protected List(java.lang.Integer seriesId, java.lang.String q) {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SeriesList.class);
          this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
          this.q = com.google.api.client.util.Preconditions.checkNotNull(q, "Required parameter q must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        /** The decimal ID of the Series. */
        @com.google.api.client.util.Key
        private java.lang.Integer seriesId;

        /** The decimal ID of the Series.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getSeriesId() {
          return seriesId;
        }

        /** The decimal ID of the Series. */
        public List setSeriesId(java.lang.Integer seriesId) {
          this.seriesId = seriesId;
          return this;
        }

        /** Restricts the results to submissions by a specific author. */
        @com.google.api.client.util.Key
        private java.lang.String author;

        /** Restricts the results to submissions by a specific author.
         */
        public java.lang.String getAuthor() {
          return author;
        }

        /** Restricts the results to submissions by a specific author. */
        public List setAuthor(java.lang.String author) {
          this.author = author;
          return this;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        @com.google.api.client.util.Key
        private java.lang.Boolean hasAttachedVideo;

        /** Specifies whether to restrict to submissions that have videos attached.
         */
        public java.lang.Boolean getHasAttachedVideo() {
          return hasAttachedVideo;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        public List setHasAttachedVideo(java.lang.Boolean hasAttachedVideo) {
          this.hasAttachedVideo = hasAttachedVideo;
          return this;
        }

        /** Maximum number of results to return. */
        @com.google.api.client.util.Key("max-results")
        private java.lang.Integer maxResults;

        /** Maximum number of results to return.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getMaxResults() {
          return maxResults;
        }

        /** Maximum number of results to return. */
        public List setMaxResults(java.lang.Integer maxResults) {
          this.maxResults = maxResults;
          return this;
        }

        /** Search query - a required query parameter. */
        @com.google.api.client.util.Key
        private java.lang.String q;

        /** Search query - a required query parameter.
         */
        public java.lang.String getQ() {
          return q;
        }

        /** Search query - a required query parameter. */
        public List setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        /** Sort order. */
        @com.google.api.client.util.Key
        private java.lang.String sort;

        /** Sort order.
         */
        public java.lang.String getSort() {
          return sort;
        }

        /** Sort order. */
        public List setSort(java.lang.String sort) {
          this.sort = sort;
          return this;
        }

        /** Index of the first result to be retrieved. */
        @com.google.api.client.util.Key("start-index")
        private java.lang.Integer startIndex;

        /** Index of the first result to be retrieved.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getStartIndex() {
          return startIndex;
        }

        /** Index of the first result to be retrieved. */
        public List setStartIndex(java.lang.Integer startIndex) {
          this.startIndex = startIndex;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Submissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Submissions.List request = kitch_sink.submissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Submissions submissions() {
      return new Submissions();
    }

    /**
     * The "submissions" collection of methods.
     */
    public class Submissions {

      /**
       * Searches the submissions for the specified series and returns the search results.
       *
       * Create a request for the method "submissions.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
       * @return the request
       */
      public List list(java.lang.Integer seriesId) throws java.io.IOException {
        List result = new List(seriesId);
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SubmissionList> {

        private static final String REST_PATH = "series/{seriesId}/submissions";

        /**
         * Searches the submissions for the specified series and returns the search results.
         *
         * Create a request for the method "submissions.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
         * @since 1.13
         */
        protected List(java.lang.Integer seriesId) {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SubmissionList.class);
          this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        /** The decimal ID of the Series. */
        @com.google.api.client.util.Key
        private java.lang.Integer seriesId;

        /** The decimal ID of the Series.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getSeriesId() {
          return seriesId;
        }

        /** The decimal ID of the Series. */
        public List setSeriesId(java.lang.Integer seriesId) {
          this.seriesId = seriesId;
          return this;
        }

        /** Restricts the results to submissions by a specific author. */
        @com.google.api.client.util.Key
        private java.lang.String author;

        /** Restricts the results to submissions by a specific author.
         */
        public java.lang.String getAuthor() {
          return author;
        }

        /** Restricts the results to submissions by a specific author. */
        public List setAuthor(java.lang.String author) {
          this.author = author;
          return this;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        @com.google.api.client.util.Key
        private java.lang.Boolean hasAttachedVideo;

        /** Specifies whether to restrict to submissions that have videos attached.
         */
        public java.lang.Boolean getHasAttachedVideo() {
          return hasAttachedVideo;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        public List setHasAttachedVideo(java.lang.Boolean hasAttachedVideo) {
          this.hasAttachedVideo = hasAttachedVideo;
          return this;
        }

        /** The language code for the language the client prefers resuls in. */
        @com.google.api.client.util.Key
        private java.lang.String lang;

        /** The language code for the language the client prefers resuls in.
         */
        public java.lang.String getLang() {
          return lang;
        }

        /** The language code for the language the client prefers resuls in. */
        public List setLang(java.lang.String lang) {
          this.lang = lang;
          return this;
        }

        /** Search query. */
        @com.google.api.client.util.Key
        private java.lang.String q;

        /** Search query.
         */
        public java.lang.String getQ() {
          return q;
        }

        /** Search query. */
        public List setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        /** Sort order. */
        @com.google.api.client.util.Key
        private java.lang.String sort;

        /** Sort order.
         */
        public java.lang.String getSort() {
          return sort;
        }

        /** Sort order. */
        public List setSort(java.lang.String sort) {
          this.sort = sort;
          return this;
        }

        /** Index of the first result to be retrieved. */
        @com.google.api.client.util.Key("start-index")
        private java.lang.Integer startIndex;

        /** Index of the first result to be retrieved.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getStartIndex() {
          return startIndex;
        }

        /** Index of the first result to be retrieved. */
        public List setStartIndex(java.lang.Integer startIndex) {
          this.startIndex = startIndex;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Submissions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Submissions.List request = kitch_sink.submissions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Submissions submissions() {
    return new Submissions();
  }

  /**
   * The "submissions" collection of methods.
   */
  public class Submissions {

    /**
     * Returns the specified submission within the specified series.
     *
     * Create a request for the method "submissions.get".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public Get get(java.lang.Integer seriesId, java.lang.Integer submissionId) throws java.io.IOException {
      Get result = new Get(seriesId, submissionId);
      initialize(result);
      return result;
    }

    public class Get extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Submission> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}";

      /**
       * Returns the specified submission within the specified series.
       *
       * Create a request for the method "submissions.get".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected Get(java.lang.Integer seriesId, java.lang.Integer submissionId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.Submission.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Get setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Get setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      /** The language code for the language the client prefers resuls in. */
      @com.google.api.client.util.Key
      private java.lang.String lang;

      /** The language code for the language the client prefers resuls in.
       */
      public java.lang.String getLang() {
        return lang;
      }

      /** The language code for the language the client prefers resuls in. */
      public Get setLang(java.lang.String lang) {
        this.lang = lang;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a new submission in the specified topic within the specified series.
     *
     * Create a request for the method "submissions.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Submission}
     * @return the request
     */
    public Insert insert(java.lang.Integer seriesId, java.lang.Integer topicId, com.google.api.services.kitch_sink.model.Submission content) throws java.io.IOException {
      Insert result = new Insert(seriesId, topicId, content);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Submission> {

      private static final String REST_PATH = "series/{seriesId}/topics/{topicId}/submissions";

      /**
       * Inserts a new submission in the specified topic within the specified series.
       *
       * Create a request for the method "submissions.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Submission}
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, java.lang.Integer topicId, com.google.api.services.kitch_sink.model.Submission content) {
        super(KitchSink.this, "POST", REST_PATH, content, com.google.api.services.kitch_sink.model.Submission.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Insert setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Topic within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer topicId;

      /** The decimal ID of the Topic within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getTopicId() {
        return topicId;
      }

      /** The decimal ID of the Topic within the Series. */
      public Insert setTopicId(java.lang.Integer topicId) {
        this.topicId = topicId;
        return this;
      }

      /** Set to true to mark the new submission as anonymous. */
      @com.google.api.client.util.Key
      private java.lang.Boolean anonymous;

      /** Set to true to mark the new submission as anonymous.
       */
      public java.lang.Boolean getAnonymous() {
        return anonymous;
      }

      /** Set to true to mark the new submission as anonymous. */
      public Insert setAnonymous(java.lang.Boolean anonymous) {
        this.anonymous = anonymous;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Tags collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Tags.List request = kitch_sink.tags().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Tags tags() {
    return new Tags();
  }

  /**
   * The "tags" collection of methods.
   */
  public class Tags {

    /**
     * Deletes the specified tag from the specified submission within the specified series.
     *
     * Create a request for the method "tags.delete".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param tagId
     * @return the request
     */
    public Delete delete(java.lang.Integer seriesId, java.lang.Integer submissionId, java.lang.String tagId) throws java.io.IOException {
      Delete result = new Delete(seriesId, submissionId, tagId);
      initialize(result);
      return result;
    }

    public class Delete extends KitchSinkRequest<Void> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}/tags/{tagId}";

      /**
       * Deletes the specified tag from the specified submission within the specified series.
       *
       * Create a request for the method "tags.delete".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param tagId
       * @since 1.13
       */
      protected Delete(java.lang.Integer seriesId, java.lang.Integer submissionId, java.lang.String tagId) {
        super(KitchSink.this, "DELETE", REST_PATH, null, Void.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
        this.tagId = com.google.api.client.util.Preconditions.checkNotNull(tagId, "Required parameter tagId must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Delete setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Delete setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String tagId;

      /**

       */
      public java.lang.String getTagId() {
        return tagId;
      }

      public Delete setTagId(java.lang.String tagId) {
        this.tagId = tagId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a new tag for the specified submission within the specified series.
     *
     * Create a request for the method "tags.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Tag}
     * @return the request
     */
    public Insert insert(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Tag content) throws java.io.IOException {
      Insert result = new Insert(seriesId, submissionId, content);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Tag> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}/tags";

      /**
       * Inserts a new tag for the specified submission within the specified series.
       *
       * Create a request for the method "tags.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Tag}
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Tag content) {
        super(KitchSink.this, "POST", REST_PATH, content, com.google.api.services.kitch_sink.model.Tag.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Insert setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Insert setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * A method with a parameters named |id| and |else|
     *
     * Create a request for the method "tags.list".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param id id is a reserved word in Objective-C
     * @param else__ A parameter name 'else'.
     * @return the request
     */
    public List list(java.lang.String id, java.lang.String else__) throws java.io.IOException {
      List result = new List(id, else__);
      initialize(result);
      return result;
    }

    public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.TagList> {

      private static final String REST_PATH = "series/{id}/submissions/{else}/tags";

      /**
       * A method with a parameters named |id| and |else|
       *
       * Create a request for the method "tags.list".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id id is a reserved word in Objective-C
       * @param else__ A parameter name 'else'.
       * @since 1.13
       */
      protected List(java.lang.String id, java.lang.String else__) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.TagList.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.else__ = com.google.api.client.util.Preconditions.checkNotNull(else__, "Required parameter else__ must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      /** id is a reserved word in Objective-C */
      @com.google.api.client.util.Key
      private java.lang.String id;

      /** id is a reserved word in Objective-C
       */
      public java.lang.String getId() {
        return id;
      }

      /** id is a reserved word in Objective-C */
      public List setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      /** A parameter name 'else'. */
      @com.google.api.client.util.Key("else")
      private java.lang.String else__;

      /** A parameter name 'else'.
       */
      public java.lang.String getElse() {
        return else__;
      }

      /** A parameter name 'else'. */
      public List setElse(java.lang.String else__) {
        this.else__ = else__;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Topics collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Topics.List request = kitch_sink.topics().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Topics topics() {
    return new Topics();
  }

  /**
   * The "topics" collection of methods.
   */
  public class Topics {

    /**
     * Returns the specified topic from the specified series.
     *
     * Create a request for the method "topics.get".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public Get get(java.lang.Integer seriesId, java.lang.Integer topicId) throws java.io.IOException {
      Get result = new Get(seriesId, topicId);
      initialize(result);
      return result;
    }

    public class Get extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Topic2> {

      private static final String REST_PATH = "series/{seriesId}/topics/{topicId}";

      /**
       * Returns the specified topic from the specified series.
       *
       * Create a request for the method "topics.get".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected Get(java.lang.Integer seriesId, java.lang.Integer topicId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.Topic2.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Get setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Topic within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer topicId;

      /** The decimal ID of the Topic within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getTopicId() {
        return topicId;
      }

      /** The decimal ID of the Topic within the Series. */
      public Get setTopicId(java.lang.Integer topicId) {
        this.topicId = topicId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a new topic into the specified series.
     *
     * Create a request for the method "topics.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Topic}
     * @return the request
     */
    public Insert insert(java.lang.Integer seriesId, com.google.api.services.kitch_sink.model.Topic content) throws java.io.IOException {
      Insert result = new Insert(seriesId, content);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Topic> {

      private static final String REST_PATH = "series/{seriesId}/topics";

      /**
       * Inserts a new topic into the specified series.
       *
       * Create a request for the method "topics.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Topic}
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, com.google.api.services.kitch_sink.model.Topic content) {
        super(KitchSink.this, "POST", REST_PATH, content, com.google.api.services.kitch_sink.model.Topic.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Insert setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Searches the topics within the specified series and returns the search results.
     *
     * Create a request for the method "topics.list".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public List list(java.lang.Integer seriesId) throws java.io.IOException {
      List result = new List(seriesId);
      initialize(result);
      return result;
    }

    public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.TopicList> {

      private static final String REST_PATH = "series/{seriesId}/topics";

      /**
       * Searches the topics within the specified series and returns the search results.
       *
       * Create a request for the method "topics.list".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected List(java.lang.Integer seriesId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.TopicList.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public List setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** Maximum number of results to return. */
      @com.google.api.client.util.Key("max-results")
      private java.lang.Integer maxResults;

      /** Maximum number of results to return.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getMaxResults() {
        return maxResults;
      }

      /** Maximum number of results to return. */
      public List setMaxResults(java.lang.Integer maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String mode;

      /**

       */
      public java.lang.String getMode() {
        return mode;
      }

      public List setMode(java.lang.String mode) {
        this.mode = mode;
        return this;
      }

      /** Search query. */
      @com.google.api.client.util.Key
      private java.lang.String q;

      /** Search query.
       */
      public java.lang.String getQ() {
        return q;
      }

      /** Search query. */
      public List setQ(java.lang.String q) {
        this.q = q;
        return this;
      }

      /** Index of the first result to be retrieved. */
      @com.google.api.client.util.Key("start-index")
      private java.lang.Integer startIndex;

      /** Index of the first result to be retrieved.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getStartIndex() {
        return startIndex;
      }

      /** Index of the first result to be retrieved. */
      public List setStartIndex(java.lang.Integer startIndex) {
        this.startIndex = startIndex;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the specified topic within the specified series.
     *
     * Create a request for the method "topics.update".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Topic}
     * @return the request
     */
    public Update update(java.lang.Integer seriesId, java.lang.Integer topicId, com.google.api.services.kitch_sink.model.Topic content) throws java.io.IOException {
      Update result = new Update(seriesId, topicId, content);
      initialize(result);
      return result;
    }

    public class Update extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Topic> {

      private static final String REST_PATH = "series/{seriesId}/topics/{topicId}";

      /**
       * Updates the specified topic within the specified series.
       *
       * Create a request for the method "topics.update".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param topicId The decimal ID of the Topic within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Topic}
       * @since 1.13
       */
      protected Update(java.lang.Integer seriesId, java.lang.Integer topicId, com.google.api.services.kitch_sink.model.Topic content) {
        super(KitchSink.this, "PUT", REST_PATH, content, com.google.api.services.kitch_sink.model.Topic.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Update setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Topic within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer topicId;

      /** The decimal ID of the Topic within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getTopicId() {
        return topicId;
      }

      /** The decimal ID of the Topic within the Series. */
      public Update setTopicId(java.lang.Integer topicId) {
        this.topicId = topicId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Submissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code KitchSink kitch_sink = new KitchSink(...);}
     *   {@code KitchSink.Submissions.List request = kitch_sink.submissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Submissions submissions() {
      return new Submissions();
    }

    /**
     * The "submissions" collection of methods.
     */
    public class Submissions {

      /**
       * Searches the submissions for the specified topic within the specified series and returns the
       * search results.
       *
       * Create a request for the method "submissions.list".
       *
       * This request holds the parameters needed by the kitch_sink server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
       * @param topicId The decimal ID of the Topic within the Series.
      [minimum: 0]
      [maximum: 4294967295]
       * @return the request
       */
      public List list(java.lang.Integer seriesId, java.lang.Integer topicId) throws java.io.IOException {
        List result = new List(seriesId, topicId);
        initialize(result);
        return result;
      }

      public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.SubmissionList> {

        private static final String REST_PATH = "series/{seriesId}/topics/{topicId}/submissions";

        /**
         * Searches the submissions for the specified topic within the specified series and returns the
         * search results.
         *
         * Create a request for the method "submissions.list".
         *
         * This request holds the parameters needed by the the kitch_sink server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param seriesId The decimal ID of the Series.
      [minimum: 0]
      [maximum: 4294967295]
         * @param topicId The decimal ID of the Topic within the Series.
      [minimum: 0]
      [maximum: 4294967295]
         * @since 1.13
         */
        protected List(java.lang.Integer seriesId, java.lang.Integer topicId) {
          super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.SubmissionList.class);
          this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
          this.topicId = com.google.api.client.util.Preconditions.checkNotNull(topicId, "Required parameter topicId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        /** The decimal ID of the Series. */
        @com.google.api.client.util.Key
        private java.lang.Integer seriesId;

        /** The decimal ID of the Series.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getSeriesId() {
          return seriesId;
        }

        /** The decimal ID of the Series. */
        public List setSeriesId(java.lang.Integer seriesId) {
          this.seriesId = seriesId;
          return this;
        }

        /** The decimal ID of the Topic within the Series. */
        @com.google.api.client.util.Key
        private java.lang.Integer topicId;

        /** The decimal ID of the Topic within the Series.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getTopicId() {
          return topicId;
        }

        /** The decimal ID of the Topic within the Series. */
        public List setTopicId(java.lang.Integer topicId) {
          this.topicId = topicId;
          return this;
        }

        /** Restricts the results to submissions by a specific author. */
        @com.google.api.client.util.Key
        private java.lang.String author;

        /** Restricts the results to submissions by a specific author.
         */
        public java.lang.String getAuthor() {
          return author;
        }

        /** Restricts the results to submissions by a specific author. */
        public List setAuthor(java.lang.String author) {
          this.author = author;
          return this;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        @com.google.api.client.util.Key
        private java.lang.Boolean hasAttachedVideo;

        /** Specifies whether to restrict to submissions that have videos attached.
         */
        public java.lang.Boolean getHasAttachedVideo() {
          return hasAttachedVideo;
        }

        /** Specifies whether to restrict to submissions that have videos attached. */
        public List setHasAttachedVideo(java.lang.Boolean hasAttachedVideo) {
          this.hasAttachedVideo = hasAttachedVideo;
          return this;
        }

        /** Search query. */
        @com.google.api.client.util.Key
        private java.lang.String q;

        /** Search query.
         */
        public java.lang.String getQ() {
          return q;
        }

        /** Search query. */
        public List setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        /** Sort order. */
        @com.google.api.client.util.Key
        private java.lang.String sort;

        /** Sort order.
         */
        public java.lang.String getSort() {
          return sort;
        }

        /** Sort order. */
        public List setSort(java.lang.String sort) {
          this.sort = sort;
          return this;
        }

        /** Index of the first result to be retrieved. */
        @com.google.api.client.util.Key("start-index")
        private java.lang.Integer startIndex;

        /** Index of the first result to be retrieved.

       [minimum: 0] [maximum: 4294967295]
         */
        public java.lang.Integer getStartIndex() {
          return startIndex;
        }

        /** Index of the first result to be retrieved. */
        public List setStartIndex(java.lang.Integer startIndex) {
          this.startIndex = startIndex;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Votes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code KitchSink kitch_sink = new KitchSink(...);}
   *   {@code KitchSink.Votes.List request = kitch_sink.votes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Votes votes() {
    return new Votes();
  }

  /**
   * The "votes" collection of methods.
   */
  public class Votes {

    /**
     * Returns the votes by the authenticated user for the specified submission within the specified
     * series.
     *
     * Create a request for the method "votes.get".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public Get get(java.lang.Integer seriesId, java.lang.Integer submissionId) throws java.io.IOException {
      Get result = new Get(seriesId, submissionId);
      initialize(result);
      return result;
    }

    public class Get extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Vote> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}/votes/@me";

      /**
       * Returns the votes by the authenticated user for the specified submission within the specified
       * series.
       *
       * Create a request for the method "votes.get".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected Get(java.lang.Integer seriesId, java.lang.Integer submissionId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.Vote.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Get setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Get setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String userId;

      /**

       */
      public java.lang.String getUserId() {
        return userId;
      }

      public Get setUserId(java.lang.String userId) {
        this.userId = userId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a new vote by the authenticated user for the specified submission within the specified
     * series.
     *
     * Create a request for the method "votes.insert".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Vote}
     * @return the request
     */
    public Insert insert(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Vote content) throws java.io.IOException {
      Insert result = new Insert(seriesId, submissionId, content);
      initialize(result);
      return result;
    }

    public class Insert extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Vote> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submissionId}/votes/@me";

      /**
       * Inserts a new vote by the authenticated user for the specified submission within the specified
       * series.
       *
       * Create a request for the method "votes.insert".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Vote}
       * @since 1.13
       */
      protected Insert(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Vote content) {
        super(KitchSink.this, "POST", REST_PATH, content, com.google.api.services.kitch_sink.model.Vote.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Insert setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Insert setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists the votes by the authenticated user for the given series.
     *
     * Create a request for the method "votes.list".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @return the request
     */
    public List list(java.lang.Integer seriesId) throws java.io.IOException {
      List result = new List(seriesId);
      initialize(result);
      return result;
    }

    public class List extends KitchSinkRequest<com.google.api.services.kitch_sink.model.VoteList> {

      private static final String REST_PATH = "series/{seriesId}/votes/@me";

      /**
       * Lists the votes by the authenticated user for the given series.
       *
       * Create a request for the method "votes.list".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @since 1.13
       */
      protected List(java.lang.Integer seriesId) {
        super(KitchSink.this, "GET", REST_PATH, null, com.google.api.services.kitch_sink.model.VoteList.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public List setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** Index of the first result to be retrieved. */
      @com.google.api.client.util.Key("start-index")
      private java.lang.Integer startIndex;

      /** Index of the first result to be retrieved.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getStartIndex() {
        return startIndex;
      }

      /** Index of the first result to be retrieved. */
      public List setStartIndex(java.lang.Integer startIndex) {
        this.startIndex = startIndex;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the votes by the authenticated user for the specified submission within the specified
     * series.
     *
     * Create a request for the method "votes.update".
     *
     * This request holds the parameters needed by the kitch_sink server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
     * @param content the {@link com.google.api.services.kitch_sink.model.Vote}
     * @return the request
     */
    public Update update(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Vote content) throws java.io.IOException {
      Update result = new Update(seriesId, submissionId, content);
      initialize(result);
      return result;
    }

    public class Update extends KitchSinkRequest<com.google.api.services.kitch_sink.model.Vote> {

      private static final String REST_PATH = "series/{seriesId}/submissions/{submission_id}/votes/@me";

      private final java.util.regex.Pattern SUBMISSION_ID_PATTERN =
          java.util.regex.Pattern.compile("\\d{3},\\d{3},\\d{3}");

      /**
       * Updates the votes by the authenticated user for the specified submission within the specified
       * series.
       *
       * Create a request for the method "votes.update".
       *
       * This request holds the parameters needed by the the kitch_sink server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param seriesId The decimal ID of the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param submissionId The decimal ID of the Submission within the Series.
    [minimum: 0]
    [maximum: 4294967295]
       * @param content the {@link com.google.api.services.kitch_sink.model.Vote}
       * @since 1.13
       */
      protected Update(java.lang.Integer seriesId, java.lang.Integer submissionId, com.google.api.services.kitch_sink.model.Vote content) {
        super(KitchSink.this, "PUT", REST_PATH, content, com.google.api.services.kitch_sink.model.Vote.class);
        this.seriesId = com.google.api.client.util.Preconditions.checkNotNull(seriesId, "Required parameter seriesId must be specified.");
        this.submissionId = com.google.api.client.util.Preconditions.checkNotNull(submissionId, "Required parameter submissionId must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      /** The decimal ID of the Series. */
      @com.google.api.client.util.Key
      private java.lang.Integer seriesId;

      /** The decimal ID of the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSeriesId() {
        return seriesId;
      }

      /** The decimal ID of the Series. */
      public Update setSeriesId(java.lang.Integer seriesId) {
        this.seriesId = seriesId;
        return this;
      }

      /** The decimal ID of the Submission within the Series. */
      @com.google.api.client.util.Key("submission_id")
      private java.lang.Integer submissionId;

      /** The decimal ID of the Submission within the Series.

     [minimum: 0] [maximum: 4294967295]
       */
      public java.lang.Integer getSubmissionId() {
        return submissionId;
      }

      /** The decimal ID of the Submission within the Series. */
      public Update setSubmissionId(java.lang.Integer submissionId) {
        this.submissionId = submissionId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String userId;

      /**

       */
      public java.lang.String getUserId() {
        return userId;
      }

      public Update setUserId(java.lang.String userId) {
        this.userId = userId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link KitchSink}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          true);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link KitchSink}. */
    @Override
    public KitchSink build() {
      return new KitchSink(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link KitchSinkRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setKitchSinkRequestInitializer(
        KitchSinkRequestInitializer kitchsinkRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(kitchsinkRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
=== end: ./com/google/api/services/kitch_sink/KitchSink.java
=== begin: ./com/google/api/services/kitch_sink/KitchSinkRequestInitializer.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink;

/**
 * KitchSink request initializer for setting properties like key and userIp.
 *
 * <p>
 * The simplest usage is to use it to set the key parameter:
 * </p>
 *
 * <pre>
  public static final GoogleClientRequestInitializer KEY_INITIALIZER =
      new KitchSinkRequestInitializer(KEY);
 * </pre>
 *
 * <p>
 * There is also a constructor to set both the key and userIp parameters:
 * </p>
 *
 * <pre>
  public static final GoogleClientRequestInitializer INITIALIZER =
      new KitchSinkRequestInitializer(KEY, USER_IP);
 * </pre>
 *
 * <p>
 * If you want to implement custom logic, extend it like this:
 * </p>
 *
 * <pre>
  public static class MyRequestInitializer extends KitchSinkRequestInitializer {

    {@literal @}Override
    public void initializeKitchSinkRequest(KitchSinkRequest{@literal <}?{@literal >} request)
        throws IOException {
      // custom logic
    }
  }
 * </pre>
 *
 * <p>
 * Finally, to set the key and userIp parameters and insert custom logic, extend it like this:
 * </p>
 *
 * <pre>
  public static class MyRequestInitializer2 extends KitchSinkRequestInitializer {

    public MyKeyRequestInitializer() {
      super(KEY, USER_IP);
    }

    {@literal @}Override
    public void initializeKitchSinkRequest(KitchSinkRequest{@literal <}?{@literal >} request)
        throws IOException {
      // custom logic
    }
  }
 * </pre>
 *
 * <p>
 * Subclasses should be thread-safe.
 * </p>
 *
 * @since 1.12
 */
public class KitchSinkRequestInitializer extends com.google.api.client.googleapis.services.json.CommonGoogleJsonClientRequestInitializer {

  public KitchSinkRequestInitializer() {
    super();
  }

  /**
   * @param key API key or {@code null} to leave it unchanged
   */
  public KitchSinkRequestInitializer(String key) {
    super(key);
  }

  /**
   * @param key API key or {@code null} to leave it unchanged
   * @param userIp user IP or {@code null} to leave it unchanged
   */
  public KitchSinkRequestInitializer(String key, String userIp) {
    super(key, userIp);
  }

  @Override
  public final void initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest<?> request) throws java.io.IOException {
    super.initializeJsonRequest(request);
    initializeKitchSinkRequest((KitchSinkRequest<?>) request);
  }

  /**
   * Initializes KitchSink request.
   *
   * <p>
   * Default implementation does nothing. Called from
   * {@link #initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest)}.
   * </p>
   *
   * @throws java.io.IOException I/O exception
   */
  protected void initializeKitchSinkRequest(KitchSinkRequest<?> request) throws java.io.IOException {
  }
}
=== end: ./com/google/api/services/kitch_sink/KitchSinkRequestInitializer.java
=== begin: ./com/google/api/services/kitch_sink/KitchSinkRequest.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink;

/**
 * KitchSink request.
 *
 * @since 1.3
 */
@SuppressWarnings("javadoc")
public abstract class KitchSinkRequest<T> extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest<T> {

  /**
   * @param client Google client
   * @param method HTTP Method
   * @param uriTemplate URI template for the path relative to the base URL. If it starts with a "/"
   *        the base path from the base URL will be stripped out. The URI template can also be a
   *        full URL. URI template expansion is done using
   *        {@link com.google.api.client.http.UriTemplate#expand(String, String, Object, boolean)}
   * @param content A POJO that can be serialized into JSON or {@code null} for none
   * @param responseClass response class to parse into
   */
  public KitchSinkRequest(
      KitchSink client, String method, String uriTemplate, Object content, Class<T> responseClass) {
    super(
        client,
        method,
        uriTemplate,
        content,
        responseClass);
  }

  /** An Enum API parameter */
  @com.google.api.client.util.Key
  private java.lang.String alt;

  /**
   * An Enum API parameter [default: json]
   */
  public java.lang.String getAlt() {
    return alt;
  }

  /** An Enum API parameter */
  public KitchSinkRequest<T> setAlt(java.lang.String alt) {
    this.alt = alt;
    return this;
  }

  /** An _ delimited API parameter */
  @com.google.api.client.util.Key("oauth_token")
  private java.lang.String oauthToken;

  /**
   * An _ delimited API parameter
   */
  public java.lang.String getOauthToken() {
    return oauthToken;
  }

  /** An _ delimited API parameter */
  public KitchSinkRequest<T> setOauthToken(java.lang.String oauthToken) {
    this.oauthToken = oauthToken;
    return this;
  }

  /** A camelCased API parameter */
  @com.google.api.client.util.Key
  private java.lang.Boolean prettyPrint;

  /**
   * A camelCased API parameter [default: true]
   */
  public java.lang.Boolean getPrettyPrint() {
    return prettyPrint;
  }

  /** A camelCased API parameter */
  public KitchSinkRequest<T> setPrettyPrint(java.lang.Boolean prettyPrint) {
    this.prettyPrint = prettyPrint;
    return this;
  }

  @Override
  public final KitchSink getAbstractGoogleClient() {
    return (KitchSink) super.getAbstractGoogleClient();
  }

  @Override
  public KitchSinkRequest<T> setDisableGZipContent(boolean disableGZipContent) {
    return (KitchSinkRequest<T>) super.setDisableGZipContent(disableGZipContent);
  }

  @Override
  public KitchSinkRequest<T> setRequestHeaders(com.google.api.client.http.HttpHeaders headers) {
    return (KitchSinkRequest<T>) super.setRequestHeaders(headers);
  }

  @Override
  public KitchSinkRequest<T> set(String parameterName, Object value) {
    return (KitchSinkRequest<T>) super.set(parameterName, value);
  }
}
=== end: ./com/google/api/services/kitch_sink/KitchSinkRequest.java
=== begin: ./com/google/api/services/kitch_sink/KitchSinkScopes.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink;

/**
 * Available OAuth 2.0 scopes for use with the kitch_sink.
 *
 * @since 1.4
 */
public class KitchSinkScopes {

  /** A non googleapis.com scope. */
  public static final String MAIL_GOOGLE_COM = "https://mail.google.com/";

  /** a product level scope. */
  public static final String PRODUCT = "https://www.googleapis.com/auth/product";

  /** A typical scope. */
  public static final String USERINFO_EMAIL = "https://www.googleapis.com/auth/userinfo.email";

  /**
   * Returns an unmodifiable set that contains all scopes declared by this class.
   *
   * @since 1.16
   */
  public static java.util.Set<String> all() {
    java.util.Set<String> set = new java.util.HashSet<String>();
    set.add(MAIL_GOOGLE_COM);
    set.add(PRODUCT);
    set.add(USERINFO_EMAIL);
    return java.util.Collections.unmodifiableSet(set);
  }

  private KitchSinkScopes() {
  }
}
=== end: ./com/google/api/services/kitch_sink/KitchSinkScopes.java
=== begin: ./com/google/api/services/kitch_sink/model/GeometryCollection.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for GeometryCollection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeometryCollection extends Geometry {

  /** Constructs GeometryCollection. **/
  public GeometryCollection() {
    super("Collection");
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Geometry> geometries;

  static {
    // hack to force ProGuard to consider Geometry used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Geometry.class);
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Geometry> getGeometries() {
    return geometries;
  }

  /**
   * @param geometries geometries or {@code null} for none
   */
  public GeometryCollection setGeometries(java.util.List<Geometry> geometries) {
    this.geometries = geometries;
    return this;
  }

  @Override
  public GeometryCollection set(String fieldName, Object value) {
    return (GeometryCollection) super.set(fieldName, value);
  }

  @Override
  public GeometryCollection clone() {
    return (GeometryCollection) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/GeometryCollection.java
=== begin: ./com/google/api/services/kitch_sink/model/Geometry.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Geometry.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Geometry extends com.google.api.client.json.GenericJson {

  protected Geometry(java.lang.String typeValue) {
    this.type = typeValue;
  }
  public Geometry() {}

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  @com.google.api.client.json.JsonPolymorphicTypeMap(typeDefinitions={
    @com.google.api.client.json.JsonPolymorphicTypeMap.TypeDef(key = "Collection", ref = GeometryCollection.class),
    @com.google.api.client.json.JsonPolymorphicTypeMap.TypeDef(key = "Polygon", ref = GeometryPolygon.class),
    @com.google.api.client.json.JsonPolymorphicTypeMap.TypeDef(key = "Ref", ref = GeometryReference.class),
  })
  private java.lang.String type;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * @param type type or {@code null} for none
   */
  public Geometry setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Geometry set(String fieldName, Object value) {
    return (Geometry) super.set(fieldName, value);
  }

  @Override
  public Geometry clone() {
    return (Geometry) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/Geometry.java
=== begin: ./com/google/api/services/kitch_sink/model/GeometryPolygon.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for GeometryPolygon.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeometryPolygon extends Geometry {

  /** Constructs GeometryPolygon. **/
  public GeometryPolygon() {
    super("Polygon");
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String coordinates;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCoordinates() {
    return coordinates;
  }

  /**
   * @param coordinates coordinates or {@code null} for none
   */
  public GeometryPolygon setCoordinates(java.lang.String coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  @Override
  public GeometryPolygon set(String fieldName, Object value) {
    return (GeometryPolygon) super.set(fieldName, value);
  }

  @Override
  public GeometryPolygon clone() {
    return (GeometryPolygon) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/GeometryPolygon.java
=== begin: ./com/google/api/services/kitch_sink/model/GeometryReference.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for GeometryReference.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeometryReference extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String coordinates;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCoordinates() {
    return coordinates;
  }

  /**
   * @param coordinates coordinates or {@code null} for none
   */
  public GeometryReference setCoordinates(java.lang.String coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * @param type type or {@code null} for none
   */
  public GeometryReference setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GeometryReference set(String fieldName, Object value) {
    return (GeometryReference) super.set(fieldName, value);
  }

  @Override
  public GeometryReference clone() {
    return (GeometryReference) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/GeometryReference.java
=== begin: ./com/google/api/services/kitch_sink/model/KitchSinkEnum.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Enum type definition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KitchSinkEnum extends com.google.api.client.json.GenericJson {

  /**
   * Enum type name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Enum type name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Enum type name.
   * @param name name or {@code null} for none
   */
  public KitchSinkEnum setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public KitchSinkEnum set(String fieldName, Object value) {
    return (KitchSinkEnum) super.set(fieldName, value);
  }

  @Override
  public KitchSinkEnum clone() {
    return (KitchSinkEnum) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/KitchSinkEnum.java
=== begin: ./com/google/api/services/kitch_sink/model/LatLong.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for LatLong.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LatLong extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Number latitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Number longitude;

  /**
   * @return value or {@code null} for none
   */
  public Number getLatitude() {
    return latitude;
  }

  /**
   * @param latitude latitude or {@code null} for none
   */
  public LatLong setLatitude(Number latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * @param location location or {@code null} for none
   */
  public LatLong setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Number getLongitude() {
    return longitude;
  }

  /**
   * @param longitude longitude or {@code null} for none
   */
  public LatLong setLongitude(Number longitude) {
    this.longitude = longitude;
    return this;
  }

  @Override
  public LatLong set(String fieldName, Object value) {
    return (LatLong) super.set(fieldName, value);
  }

  @Override
  public LatLong clone() {
    return (LatLong) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/LatLong.java
=== begin: ./com/google/api/services/kitch_sink/model/ModeratorTopicsResourcePartial.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for ModeratorTopicsResourcePartial.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ModeratorTopicsResourcePartial extends com.google.api.client.json.GenericJson {

  @Override
  public ModeratorTopicsResourcePartial set(String fieldName, Object value) {
    return (ModeratorTopicsResourcePartial) super.set(fieldName, value);
  }

  @Override
  public ModeratorTopicsResourcePartial clone() {
    return (ModeratorTopicsResourcePartial) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/ModeratorTopicsResourcePartial.java
=== begin: ./com/google/api/services/kitch_sink/model/Profile.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Profile.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Profile extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Attribution attribution;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * @return value or {@code null} for none
   */
  public Attribution getAttribution() {
    return attribution;
  }

  /**
   * @param attribution attribution or {@code null} for none
   */
  public Profile setAttribution(Attribution attribution) {
    this.attribution = attribution;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Profile setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Profile setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public Profile set(String fieldName, Object value) {
    return (Profile) super.set(fieldName, value);
  }

  @Override
  public Profile clone() {
    return (Profile) super.clone();
  }

  /**
   * Model definition for ProfileAttribution.
   */
  public static final class Attribution extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String avatarUrl;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String displayName;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private LatLong geo;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String location;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getAvatarUrl() {
      return avatarUrl;
    }

    /**
     * @param avatarUrl avatarUrl or {@code null} for none
     */
    public Attribution setAvatarUrl(java.lang.String avatarUrl) {
      this.avatarUrl = avatarUrl;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getDisplayName() {
      return displayName;
    }

    /**
     * @param displayName displayName or {@code null} for none
     */
    public Attribution setDisplayName(java.lang.String displayName) {
      this.displayName = displayName;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public LatLong getGeo() {
      return geo;
    }

    /**
     * @param geo geo or {@code null} for none
     */
    public Attribution setGeo(LatLong geo) {
      this.geo = geo;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getLocation() {
      return location;
    }

    /**
     * @param location location or {@code null} for none
     */
    public Attribution setLocation(java.lang.String location) {
      this.location = location;
      return this;
    }

    @Override
    public Attribution set(String fieldName, Object value) {
      return (Attribution) super.set(fieldName, value);
    }

    @Override
    public Attribution clone() {
      return (Attribution) super.clone();
    }

  }

  /**
   * Model definition for ProfileId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String user;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getUser() {
      return user;
    }

    /**
     * @param user user or {@code null} for none
     */
    public Id setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Profile.java
=== begin: ./com/google/api/services/kitch_sink/model/Rule.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Rule.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Rule extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Submissions submissions;

  /**
   * @return value or {@code null} for none
   */
  public Submissions getSubmissions() {
    return submissions;
  }

  /**
   * @param submissions submissions or {@code null} for none
   */
  public Rule setSubmissions(Submissions submissions) {
    this.submissions = submissions;
    return this;
  }

  @Override
  public Rule set(String fieldName, Object value) {
    return (Rule) super.set(fieldName, value);
  }

  @Override
  public Rule clone() {
    return (Rule) super.clone();
  }

  /**
   * Model definition for RuleSubmissions.
   */
  public static final class Submissions extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer close;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer open;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getClose() {
      return close;
    }

    /**
     * @param close close or {@code null} for none
     */
    public Submissions setClose(java.lang.Integer close) {
      this.close = close;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getOpen() {
      return open;
    }

    /**
     * @param open open or {@code null} for none
     */
    public Submissions setOpen(java.lang.Integer open) {
      this.open = open;
      return this;
    }

    @Override
    public Submissions set(String fieldName, Object value) {
      return (Submissions) super.set(fieldName, value);
    }

    @Override
    public Submissions clone() {
      return (Submissions) super.clone();
    }

  }
}
=== end: ./com/google/api/services/kitch_sink/model/Rule.java
=== begin: ./com/google/api/services/kitch_sink/model/Series.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Series.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Series extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean anonymousSubmissionAllowed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Counters counters;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numTopics;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean videoSubmissionAllowed;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAnonymousSubmissionAllowed() {
    return anonymousSubmissionAllowed;
  }

  /**
   * @param anonymousSubmissionAllowed anonymousSubmissionAllowed or {@code null} for none
   */
  public Series setAnonymousSubmissionAllowed(java.lang.Boolean anonymousSubmissionAllowed) {
    this.anonymousSubmissionAllowed = anonymousSubmissionAllowed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Counters getCounters() {
    return counters;
  }

  /**
   * @param counters counters or {@code null} for none
   */
  public Series setCounters(Counters counters) {
    this.counters = counters;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public Series setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Series setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Series setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public Series setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumTopics() {
    return numTopics;
  }

  /**
   * @param numTopics numTopics or {@code null} for none
   */
  public Series setNumTopics(java.lang.Integer numTopics) {
    this.numTopics = numTopics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVideoSubmissionAllowed() {
    return videoSubmissionAllowed;
  }

  /**
   * @param videoSubmissionAllowed videoSubmissionAllowed or {@code null} for none
   */
  public Series setVideoSubmissionAllowed(java.lang.Boolean videoSubmissionAllowed) {
    this.videoSubmissionAllowed = videoSubmissionAllowed;
    return this;
  }

  @Override
  public Series set(String fieldName, Object value) {
    return (Series) super.set(fieldName, value);
  }

  @Override
  public Series clone() {
    return (Series) super.clone();
  }

  /**
   * Model definition for SeriesCounters.
   */
  public static final class Counters extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer anonymousSubmissions;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private SeriesCountersCounters counters;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("else")
    private java.lang.Integer else__;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("minus_votes")
    private java.lang.Integer minusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("none_votes") @com.google.api.client.json.JsonString
    private java.math.BigInteger noneVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("plus_votes")
    private java.lang.Integer plusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissions;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String users;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getAnonymousSubmissions() {
      return anonymousSubmissions;
    }

    /**
     * @param anonymousSubmissions anonymousSubmissions or {@code null} for none
     */
    public Counters setAnonymousSubmissions(java.lang.Integer anonymousSubmissions) {
      this.anonymousSubmissions = anonymousSubmissions;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public SeriesCountersCounters getCounters() {
      return counters;
    }

    /**
     * @param counters counters or {@code null} for none
     */
    public Counters setCounters(SeriesCountersCounters counters) {
      this.counters = counters;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getElse() {
      return else__;
    }

    /**
     * @param else__ else__ or {@code null} for none
     */
    public Counters setElse(java.lang.Integer else__) {
      this.else__ = else__;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getMinusVotes() {
      return minusVotes;
    }

    /**
     * @param minusVotes minusVotes or {@code null} for none
     */
    public Counters setMinusVotes(java.lang.Integer minusVotes) {
      this.minusVotes = minusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.math.BigInteger getNoneVotes() {
      return noneVotes;
    }

    /**
     * @param noneVotes noneVotes or {@code null} for none
     */
    public Counters setNoneVotes(java.math.BigInteger noneVotes) {
      this.noneVotes = noneVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getPlusVotes() {
      return plusVotes;
    }

    /**
     * @param plusVotes plusVotes or {@code null} for none
     */
    public Counters setPlusVotes(java.lang.Integer plusVotes) {
      this.plusVotes = plusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissions() {
      return submissions;
    }

    /**
     * @param submissions submissions or {@code null} for none
     */
    public Counters setSubmissions(java.lang.Integer submissions) {
      this.submissions = submissions;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getUsers() {
      return users;
    }

    /**
     * @param users users or {@code null} for none
     */
    public Counters setUsers(java.lang.String users) {
      this.users = users;
      return this;
    }

    @Override
    public Counters set(String fieldName, Object value) {
      return (Counters) super.set(fieldName, value);
    }

    @Override
    public Counters clone() {
      return (Counters) super.clone();
    }

    /**
     * Model definition for SeriesCountersCounters.
     */
    public static final class SeriesCountersCounters extends com.google.api.client.json.GenericJson {

      /**
       * The value may be {@code null}.
       */
      @com.google.api.client.util.Key("all-votes")
      private java.lang.Integer allVotes;

      /**
       * @return value or {@code null} for none
       */
      public java.lang.Integer getAllVotes() {
        return allVotes;
      }

      /**
       * @param allVotes allVotes or {@code null} for none
       */
      public SeriesCountersCounters setAllVotes(java.lang.Integer allVotes) {
        this.allVotes = allVotes;
        return this;
      }

      @Override
      public SeriesCountersCounters set(String fieldName, Object value) {
        return (SeriesCountersCounters) super.set(fieldName, value);
      }

      @Override
      public SeriesCountersCounters clone() {
        return (SeriesCountersCounters) super.clone();
      }

    }
  }

  /**
   * Model definition for SeriesId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public Id setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Series.java
=== begin: ./com/google/api/services/kitch_sink/model/SeriesList.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for SeriesList.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SeriesList extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Series> items;

  static {
    // hack to force ProGuard to consider Series used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Series.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Series> getItems() {
    return items;
  }

  /**
   * @param items items or {@code null} for none
   */
  public SeriesList setItems(java.util.List<Series> items) {
    this.items = items;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public SeriesList setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public SeriesList set(String fieldName, Object value) {
    return (SeriesList) super.set(fieldName, value);
  }

  @Override
  public SeriesList clone() {
    return (SeriesList) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/SeriesList.java
=== begin: ./com/google/api/services/kitch_sink/model/Submission.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Submission.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Submission extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("@attachmentUrl")
  private java.lang.String attachmentUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Attribution attribution;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String author;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Counters counters;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer created;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<LatLong> geo;

  static {
    // hack to force ProGuard to consider LatLong used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LatLong.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ParentSubmissionId parentSubmissionId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ModeratorTopicsResourcePartial> topics;

  static {
    // hack to force ProGuard to consider ModeratorTopicsResourcePartial used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ModeratorTopicsResourcePartial.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, Translation> translations;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAttachmentUrl() {
    return attachmentUrl;
  }

  /**
   * @param attachmentUrl attachmentUrl or {@code null} for none
   */
  public Submission setAttachmentUrl(java.lang.String attachmentUrl) {
    this.attachmentUrl = attachmentUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Attribution getAttribution() {
    return attribution;
  }

  /**
   * @param attribution attribution or {@code null} for none
   */
  public Submission setAttribution(Attribution attribution) {
    this.attribution = attribution;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthor() {
    return author;
  }

  /**
   * @param author author or {@code null} for none
   */
  public Submission setAuthor(java.lang.String author) {
    this.author = author;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Counters getCounters() {
    return counters;
  }

  /**
   * @param counters counters or {@code null} for none
   */
  public Submission setCounters(Counters counters) {
    this.counters = counters;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCreated() {
    return created;
  }

  /**
   * @param created created or {@code null} for none
   */
  public Submission setCreated(java.lang.Integer created) {
    this.created = created;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<LatLong> getGeo() {
    return geo;
  }

  /**
   * @param geo geo or {@code null} for none
   */
  public Submission setGeo(java.util.List<LatLong> geo) {
    this.geo = geo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Submission setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Submission setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ParentSubmissionId getParentSubmissionId() {
    return parentSubmissionId;
  }

  /**
   * @param parentSubmissionId parentSubmissionId or {@code null} for none
   */
  public Submission setParentSubmissionId(ParentSubmissionId parentSubmissionId) {
    this.parentSubmissionId = parentSubmissionId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * @param text text or {@code null} for none
   */
  public Submission setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<ModeratorTopicsResourcePartial> getTopics() {
    return topics;
  }

  /**
   * @param topics topics or {@code null} for none
   */
  public Submission setTopics(java.util.List<ModeratorTopicsResourcePartial> topics) {
    this.topics = topics;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.Map<String, Translation> getTranslations() {
    return translations;
  }

  /**
   * @param translations translations or {@code null} for none
   */
  public Submission setTranslations(java.util.Map<String, Translation> translations) {
    this.translations = translations;
    return this;
  }

  @Override
  public Submission set(String fieldName, Object value) {
    return (Submission) super.set(fieldName, value);
  }

  @Override
  public Submission clone() {
    return (Submission) super.clone();
  }

  /**
   * Model definition for SubmissionAttribution.
   */
  public static final class Attribution extends com.google.api.client.json.GenericJson {

    /**
     * A member with a $ in the name
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String $avatarUrl;

    /**
     * A member with a $ in the name, but if you strip it, you get a reserved word
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String $object;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String location;

    /**
     * A member with a $ in the name
     * @return value or {@code null} for none
     */
    public java.lang.String get$avatarUrl() {
      return $avatarUrl;
    }

    /**
     * A member with a $ in the name
     * @param $avatarUrl $avatarUrl or {@code null} for none
     */
    public Attribution set$avatarUrl(java.lang.String $avatarUrl) {
      this.$avatarUrl = $avatarUrl;
      return this;
    }

    /**
     * A member with a $ in the name, but if you strip it, you get a reserved word
     * @return value or {@code null} for none
     */
    public java.lang.String get$object() {
      return $object;
    }

    /**
     * A member with a $ in the name, but if you strip it, you get a reserved word
     * @param $object $object or {@code null} for none
     */
    public Attribution set$object(java.lang.String $object) {
      this.$object = $object;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getLocation() {
      return location;
    }

    /**
     * @param location location or {@code null} for none
     */
    public Attribution setLocation(java.lang.String location) {
      this.location = location;
      return this;
    }

    @Override
    public Attribution set(String fieldName, Object value) {
      return (Attribution) super.set(fieldName, value);
    }

    @Override
    public Attribution clone() {
      return (Attribution) super.clone();
    }

  }

  /**
   * Model definition for SubmissionCounters.
   */
  public static final class Counters extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("minus_votes")
    private java.lang.Integer minusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("none_votes")
    private java.lang.Integer noneVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("plus_votes")
    private java.lang.Integer plusVotes;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getMinusVotes() {
      return minusVotes;
    }

    /**
     * @param minusVotes minusVotes or {@code null} for none
     */
    public Counters setMinusVotes(java.lang.Integer minusVotes) {
      this.minusVotes = minusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getNoneVotes() {
      return noneVotes;
    }

    /**
     * @param noneVotes noneVotes or {@code null} for none
     */
    public Counters setNoneVotes(java.lang.Integer noneVotes) {
      this.noneVotes = noneVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getPlusVotes() {
      return plusVotes;
    }

    /**
     * @param plusVotes plusVotes or {@code null} for none
     */
    public Counters setPlusVotes(java.lang.Integer plusVotes) {
      this.plusVotes = plusVotes;
      return this;
    }

    @Override
    public Counters set(String fieldName, Object value) {
      return (Counters) super.set(fieldName, value);
    }

    @Override
    public Counters clone() {
      return (Counters) super.clone();
    }

  }

  /**
   * Model definition for SubmissionId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissionId;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public Id setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissionId() {
      return submissionId;
    }

    /**
     * @param submissionId submissionId or {@code null} for none
     */
    public Id setSubmissionId(java.lang.Integer submissionId) {
      this.submissionId = submissionId;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

  /**
   * Model definition for SubmissionParentSubmissionId.
   */
  public static final class ParentSubmissionId extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissionId;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public ParentSubmissionId setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissionId() {
      return submissionId;
    }

    /**
     * @param submissionId submissionId or {@code null} for none
     */
    public ParentSubmissionId setSubmissionId(java.lang.Integer submissionId) {
      this.submissionId = submissionId;
      return this;
    }

    @Override
    public ParentSubmissionId set(String fieldName, Object value) {
      return (ParentSubmissionId) super.set(fieldName, value);
    }

    @Override
    public ParentSubmissionId clone() {
      return (ParentSubmissionId) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Submission.java
=== begin: ./com/google/api/services/kitch_sink/model/SubmissionList.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for SubmissionList.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SubmissionList extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Submission> items;

  static {
    // hack to force ProGuard to consider Submission used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Submission.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Submission> getItems() {
    return items;
  }

  /**
   * @param items items or {@code null} for none
   */
  public SubmissionList setItems(java.util.List<Submission> items) {
    this.items = items;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public SubmissionList setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public SubmissionList set(String fieldName, Object value) {
    return (SubmissionList) super.set(fieldName, value);
  }

  @Override
  public SubmissionList clone() {
    return (SubmissionList) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/SubmissionList.java
=== begin: ./com/google/api/services/kitch_sink/model/Tag.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Tag.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Tag extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Geometry geometry;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * @return value or {@code null} for none
   */
  public Geometry getGeometry() {
    return geometry;
  }

  /**
   * @param geometry geometry or {@code null} for none
   */
  public Tag setGeometry(Geometry geometry) {
    this.geometry = geometry;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Tag setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Tag setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * @param text text or {@code null} for none
   */
  public Tag setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public Tag set(String fieldName, Object value) {
    return (Tag) super.set(fieldName, value);
  }

  @Override
  public Tag clone() {
    return (Tag) super.clone();
  }

  /**
   * Model definition for TagId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissionId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String tag;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public Id setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissionId() {
      return submissionId;
    }

    /**
     * @param submissionId submissionId or {@code null} for none
     */
    public Id setSubmissionId(java.lang.Integer submissionId) {
      this.submissionId = submissionId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.String getTag() {
      return tag;
    }

    /**
     * @param tag tag or {@code null} for none
     */
    public Id setTag(java.lang.String tag) {
      this.tag = tag;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Tag.java
=== begin: ./com/google/api/services/kitch_sink/model/TagList.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for TagList.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TagList extends com.google.api.client.json.GenericJson {

  @Override
  public TagList set(String fieldName, Object value) {
    return (TagList) super.set(fieldName, value);
  }

  @Override
  public TagList clone() {
    return (TagList) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/TagList.java
=== begin: ./com/google/api/services/kitch_sink/model/Topic2.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Topic2.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Topic2 extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Counters counters;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Submission featuredSubmission;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String presenter;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Rule> rules;

  /**
   * @return value or {@code null} for none
   */
  public Counters getCounters() {
    return counters;
  }

  /**
   * @param counters counters or {@code null} for none
   */
  public Topic2 setCounters(Counters counters) {
    this.counters = counters;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public Topic2 setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Submission getFeaturedSubmission() {
    return featuredSubmission;
  }

  /**
   * @param featuredSubmission featuredSubmission or {@code null} for none
   */
  public Topic2 setFeaturedSubmission(Submission featuredSubmission) {
    this.featuredSubmission = featuredSubmission;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Topic2 setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Topic2 setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public Topic2 setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPresenter() {
    return presenter;
  }

  /**
   * @param presenter presenter or {@code null} for none
   */
  public Topic2 setPresenter(java.lang.String presenter) {
    this.presenter = presenter;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Rule> getRules() {
    return rules;
  }

  /**
   * @param rules rules or {@code null} for none
   */
  public Topic2 setRules(java.util.List<Rule> rules) {
    this.rules = rules;
    return this;
  }

  @Override
  public Topic2 set(String fieldName, Object value) {
    return (Topic2) super.set(fieldName, value);
  }

  @Override
  public Topic2 clone() {
    return (Topic2) super.clone();
  }

  /**
   * Model definition for Topic2Counters.
   */
  public static final class Counters extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("minus_votes")
    private java.lang.Integer minusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("none_votes")
    private java.lang.Integer noneVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("plus_votes")
    private java.lang.Integer plusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissions;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer users;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer videoSubmissions;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getMinusVotes() {
      return minusVotes;
    }

    /**
     * @param minusVotes minusVotes or {@code null} for none
     */
    public Counters setMinusVotes(java.lang.Integer minusVotes) {
      this.minusVotes = minusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getNoneVotes() {
      return noneVotes;
    }

    /**
     * @param noneVotes noneVotes or {@code null} for none
     */
    public Counters setNoneVotes(java.lang.Integer noneVotes) {
      this.noneVotes = noneVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getPlusVotes() {
      return plusVotes;
    }

    /**
     * @param plusVotes plusVotes or {@code null} for none
     */
    public Counters setPlusVotes(java.lang.Integer plusVotes) {
      this.plusVotes = plusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissions() {
      return submissions;
    }

    /**
     * @param submissions submissions or {@code null} for none
     */
    public Counters setSubmissions(java.lang.Integer submissions) {
      this.submissions = submissions;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getUsers() {
      return users;
    }

    /**
     * @param users users or {@code null} for none
     */
    public Counters setUsers(java.lang.Integer users) {
      this.users = users;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getVideoSubmissions() {
      return videoSubmissions;
    }

    /**
     * @param videoSubmissions videoSubmissions or {@code null} for none
     */
    public Counters setVideoSubmissions(java.lang.Integer videoSubmissions) {
      this.videoSubmissions = videoSubmissions;
      return this;
    }

    @Override
    public Counters set(String fieldName, Object value) {
      return (Counters) super.set(fieldName, value);
    }

    @Override
    public Counters clone() {
      return (Counters) super.clone();
    }

  }

  /**
   * Model definition for Topic2Id.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer topicId;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public Id setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getTopicId() {
      return topicId;
    }

    /**
     * @param topicId topicId or {@code null} for none
     */
    public Id setTopicId(java.lang.Integer topicId) {
      this.topicId = topicId;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Topic2.java
=== begin: ./com/google/api/services/kitch_sink/model/Topic.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Topic.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Topic extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Counters counters;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String presenter;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Rules rules;

  /**
   * @return value or {@code null} for none
   */
  public Counters getCounters() {
    return counters;
  }

  /**
   * @param counters counters or {@code null} for none
   */
  public Topic setCounters(Counters counters) {
    this.counters = counters;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public Topic setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Topic setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Topic setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public Topic setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPresenter() {
    return presenter;
  }

  /**
   * @param presenter presenter or {@code null} for none
   */
  public Topic setPresenter(java.lang.String presenter) {
    this.presenter = presenter;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Rules getRules() {
    return rules;
  }

  /**
   * @param rules rules or {@code null} for none
   */
  public Topic setRules(Rules rules) {
    this.rules = rules;
    return this;
  }

  @Override
  public Topic set(String fieldName, Object value) {
    return (Topic) super.set(fieldName, value);
  }

  @Override
  public Topic clone() {
    return (Topic) super.clone();
  }

  /**
   * Model definition for TopicCounters.
   */
  public static final class Counters extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("minus_votes")
    private java.lang.Integer minusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("none_votes")
    private java.lang.Integer noneVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key("plus_votes")
    private java.lang.Integer plusVotes;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer submissions;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer users;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer videoSubmissions;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getMinusVotes() {
      return minusVotes;
    }

    /**
     * @param minusVotes minusVotes or {@code null} for none
     */
    public Counters setMinusVotes(java.lang.Integer minusVotes) {
      this.minusVotes = minusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getNoneVotes() {
      return noneVotes;
    }

    /**
     * @param noneVotes noneVotes or {@code null} for none
     */
    public Counters setNoneVotes(java.lang.Integer noneVotes) {
      this.noneVotes = noneVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getPlusVotes() {
      return plusVotes;
    }

    /**
     * @param plusVotes plusVotes or {@code null} for none
     */
    public Counters setPlusVotes(java.lang.Integer plusVotes) {
      this.plusVotes = plusVotes;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSubmissions() {
      return submissions;
    }

    /**
     * @param submissions submissions or {@code null} for none
     */
    public Counters setSubmissions(java.lang.Integer submissions) {
      this.submissions = submissions;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getUsers() {
      return users;
    }

    /**
     * @param users users or {@code null} for none
     */
    public Counters setUsers(java.lang.Integer users) {
      this.users = users;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getVideoSubmissions() {
      return videoSubmissions;
    }

    /**
     * @param videoSubmissions videoSubmissions or {@code null} for none
     */
    public Counters setVideoSubmissions(java.lang.Integer videoSubmissions) {
      this.videoSubmissions = videoSubmissions;
      return this;
    }

    @Override
    public Counters set(String fieldName, Object value) {
      return (Counters) super.set(fieldName, value);
    }

    @Override
    public Counters clone() {
      return (Counters) super.clone();
    }

  }

  /**
   * Model definition for TopicId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer seriesId;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer topicId;

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getSeriesId() {
      return seriesId;
    }

    /**
     * @param seriesId seriesId or {@code null} for none
     */
    public Id setSeriesId(java.lang.Integer seriesId) {
      this.seriesId = seriesId;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Integer getTopicId() {
      return topicId;
    }

    /**
     * @param topicId topicId or {@code null} for none
     */
    public Id setTopicId(java.lang.Integer topicId) {
      this.topicId = topicId;
      return this;
    }

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

  /**
   * Model definition for TopicRules.
   */
  public static final class Rules extends com.google.api.client.json.GenericJson {

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private Submissions submissions;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private Votes votes;

    /**
     * @return value or {@code null} for none
     */
    public Submissions getSubmissions() {
      return submissions;
    }

    /**
     * @param submissions submissions or {@code null} for none
     */
    public Rules setSubmissions(Submissions submissions) {
      this.submissions = submissions;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public Votes getVotes() {
      return votes;
    }

    /**
     * @param votes votes or {@code null} for none
     */
    public Rules setVotes(Votes votes) {
      this.votes = votes;
      return this;
    }

    @Override
    public Rules set(String fieldName, Object value) {
      return (Rules) super.set(fieldName, value);
    }

    @Override
    public Rules clone() {
      return (Rules) super.clone();
    }

    /**
     * Model definition for TopicRulesSubmissions.
     */
    public static final class Submissions extends com.google.api.client.json.GenericJson {

      /**
       * The value may be {@code null}.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer close;

      /**
       * The value may be {@code null}.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer open;

      /**
       * @return value or {@code null} for none
       */
      public java.lang.Integer getClose() {
        return close;
      }

      /**
       * @param close close or {@code null} for none
       */
      public Submissions setClose(java.lang.Integer close) {
        this.close = close;
        return this;
      }

      /**
       * @return value or {@code null} for none
       */
      public java.lang.Integer getOpen() {
        return open;
      }

      /**
       * @param open open or {@code null} for none
       */
      public Submissions setOpen(java.lang.Integer open) {
        this.open = open;
        return this;
      }

      @Override
      public Submissions set(String fieldName, Object value) {
        return (Submissions) super.set(fieldName, value);
      }

      @Override
      public Submissions clone() {
        return (Submissions) super.clone();
      }

    }
    /**
     * Model definition for TopicRulesVotes.
     */
    public static final class Votes extends com.google.api.client.json.GenericJson {

      /**
       * The value may be {@code null}.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer close;

      /**
       * The value may be {@code null}.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer open;

      /**
       * @return value or {@code null} for none
       */
      public java.lang.Integer getClose() {
        return close;
      }

      /**
       * @param close close or {@code null} for none
       */
      public Votes setClose(java.lang.Integer close) {
        this.close = close;
        return this;
      }

      /**
       * @return value or {@code null} for none
       */
      public java.lang.Integer getOpen() {
        return open;
      }

      /**
       * @param open open or {@code null} for none
       */
      public Votes setOpen(java.lang.Integer open) {
        this.open = open;
        return this;
      }

      @Override
      public Votes set(String fieldName, Object value) {
        return (Votes) super.set(fieldName, value);
      }

      @Override
      public Votes clone() {
        return (Votes) super.clone();
      }

    }
  }
}
=== end: ./com/google/api/services/kitch_sink/model/Topic.java
=== begin: ./com/google/api/services/kitch_sink/model/TopicList.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for TopicList.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TopicList extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Topic> items;

  static {
    // hack to force ProGuard to consider Topic used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Topic.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Topic> getItems() {
    return items;
  }

  /**
   * @param items items or {@code null} for none
   */
  public TopicList setItems(java.util.List<Topic> items) {
    this.items = items;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public TopicList setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public TopicList set(String fieldName, Object value) {
    return (TopicList) super.set(fieldName, value);
  }

  @Override
  public TopicList clone() {
    return (TopicList) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/TopicList.java
=== begin: ./com/google/api/services/kitch_sink/model/Translation.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Translation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Translation extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lang;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLang() {
    return lang;
  }

  /**
   * @param lang lang or {@code null} for none
   */
  public Translation setLang(java.lang.String lang) {
    this.lang = lang;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * @param text text or {@code null} for none
   */
  public Translation setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  @Override
  public Translation set(String fieldName, Object value) {
    return (Translation) super.set(fieldName, value);
  }

  @Override
  public Translation clone() {
    return (Translation) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/Translation.java
=== begin: ./com/google/api/services/kitch_sink/model/Vote.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for Vote.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Vote extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String flag;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Id id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vote;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFlag() {
    return flag;
  }

  /**
   * @param flag flag or {@code null} for none
   */
  public Vote setFlag(java.lang.String flag) {
    this.flag = flag;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Id getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Vote setId(Id id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public Vote setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getVote() {
    return vote;
  }

  /**
   * @param vote vote or {@code null} for none
   */
  public Vote setVote(java.lang.String vote) {
    this.vote = vote;
    return this;
  }

  @Override
  public Vote set(String fieldName, Object value) {
    return (Vote) super.set(fieldName, value);
  }

  @Override
  public Vote clone() {
    return (Vote) super.clone();
  }

  /**
   * Model definition for VoteId.
   */
  public static final class Id extends com.google.api.client.json.GenericJson {

    @Override
    public Id set(String fieldName, Object value) {
      return (Id) super.set(fieldName, value);
    }

    @Override
    public Id clone() {
      return (Id) super.clone();
    }

  }

}
=== end: ./com/google/api/services/kitch_sink/model/Vote.java
=== begin: ./com/google/api/services/kitch_sink/model/VoteList.java
/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.kitch_sink.model;

/**
 * Model definition for VoteList.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the kitch_sink. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VoteList extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Vote> items;

  static {
    // hack to force ProGuard to consider Vote used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Vote.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Vote> getItems() {
    return items;
  }

  /**
   * @param items items or {@code null} for none
   */
  public VoteList setItems(java.util.List<Vote> items) {
    this.items = items;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public VoteList setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  @Override
  public VoteList set(String fieldName, Object value) {
    return (VoteList) super.set(fieldName, value);
  }

  @Override
  public VoteList clone() {
    return (VoteList) super.clone();
  }

}
=== end: ./com/google/api/services/kitch_sink/model/VoteList.java
=== begin: ./pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>com.google.apis</groupId>
  <artifactId>google-api-services-kitch_sink</artifactId>
  <version>v1-revsnapshot-1.22.0-SNAPSHOT</version>
  <name>kitch_sink v1-revsnapshot-1.22.0-SNAPSHOT</name>
  <packaging>jar</packaging>

  <inceptionYear>2011</inceptionYear>

  <organization>
    <name>Google</name>
    <url>http://www.google.com/</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Built-By>Google</Built-By>
              <Build-Jdk>1.6.x</Build-Jdk>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <doctitle>kitch_sink ${project.version}</doctitle>
          <windowtitle>kitch_sink ${project.version}</windowtitle>
          <links>
            <link>http://docs.oracle.com/javase/7/docs/api</link>
          
            <link>http://javadoc.google-http-java-client.googlecode.com/hg/1.22.0-SNAPSHOT</link>
          
            <link>http://javadoc.google-oauth-java-client.googlecode.com/hg/1.22.0-SNAPSHOT</link>
          
            <link>http://javadoc.google-api-java-client.googlecode.com/hg/1.22.0-SNAPSHOT</link>
          </links>
        </configuration>
      </plugin>
    </plugins>
    <sourceDirectory>.</sourceDirectory>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.22.0-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>=== end: ./pom.xml
