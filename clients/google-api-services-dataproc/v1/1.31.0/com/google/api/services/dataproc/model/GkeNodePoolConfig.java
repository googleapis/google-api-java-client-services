/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * The configuration of a GKE NodePool used by a Dataproc-on-GKE cluster
 * (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-
 * cluster).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GkeNodePoolConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The autoscaler configuration for this NodePool. The autoscaler is enabled only when a
   * valid configuration is present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GkeNodePoolAutoscalingConfig autoscaling;

  /**
   * Optional. The node pool configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GkeNodeConfig config;

  /**
   * Optional. The list of Compute Engine zones
   * (https://cloud.google.com/compute/docs/zones#available) where NodePool's nodes will be
   * located.Note: Currently, only one zone may be specified.If a location is not specified during
   * NodePool creation, Dataproc will choose a location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> locations;

  /**
   * Optional. The autoscaler configuration for this NodePool. The autoscaler is enabled only when a
   * valid configuration is present.
   * @return value or {@code null} for none
   */
  public GkeNodePoolAutoscalingConfig getAutoscaling() {
    return autoscaling;
  }

  /**
   * Optional. The autoscaler configuration for this NodePool. The autoscaler is enabled only when a
   * valid configuration is present.
   * @param autoscaling autoscaling or {@code null} for none
   */
  public GkeNodePoolConfig setAutoscaling(GkeNodePoolAutoscalingConfig autoscaling) {
    this.autoscaling = autoscaling;
    return this;
  }

  /**
   * Optional. The node pool configuration.
   * @return value or {@code null} for none
   */
  public GkeNodeConfig getConfig() {
    return config;
  }

  /**
   * Optional. The node pool configuration.
   * @param config config or {@code null} for none
   */
  public GkeNodePoolConfig setConfig(GkeNodeConfig config) {
    this.config = config;
    return this;
  }

  /**
   * Optional. The list of Compute Engine zones
   * (https://cloud.google.com/compute/docs/zones#available) where NodePool's nodes will be
   * located.Note: Currently, only one zone may be specified.If a location is not specified during
   * NodePool creation, Dataproc will choose a location.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLocations() {
    return locations;
  }

  /**
   * Optional. The list of Compute Engine zones
   * (https://cloud.google.com/compute/docs/zones#available) where NodePool's nodes will be
   * located.Note: Currently, only one zone may be specified.If a location is not specified during
   * NodePool creation, Dataproc will choose a location.
   * @param locations locations or {@code null} for none
   */
  public GkeNodePoolConfig setLocations(java.util.List<java.lang.String> locations) {
    this.locations = locations;
    return this;
  }

  @Override
  public GkeNodePoolConfig set(String fieldName, Object value) {
    return (GkeNodePoolConfig) super.set(fieldName, value);
  }

  @Override
  public GkeNodePoolConfig clone() {
    return (GkeNodePoolConfig) super.clone();
  }

}
