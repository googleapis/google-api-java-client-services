/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudiot.v1.model;

/**
 * Request for `SendCommandToDevice`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud IoT API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SendCommandToDeviceRequest extends com.google.api.client.json.GenericJson {

  /**
   * The command data to send to the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String binaryData;

  /**
   * Optional subfolder for the command. If empty, the command will be delivered to the /devices
   * /{device-id}/commands topic, otherwise it will be delivered to the /devices/{device-
   * id}/commands/{subfolder} topic. Multi-level subfolders are allowed. This field must not have
   * more than 256 characters, and must not contain any MQTT wildcards ("+" or "#") or null
   * characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subfolder;

  /**
   * The command data to send to the device.
   * @see #decodeBinaryData()
   * @return value or {@code null} for none
   */
  public java.lang.String getBinaryData() {
    return binaryData;
  }

  /**
   * The command data to send to the device.
   * @see #getBinaryData()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeBinaryData() {
    return com.google.api.client.util.Base64.decodeBase64(binaryData);
  }

  /**
   * The command data to send to the device.
   * @see #encodeBinaryData()
   * @param binaryData binaryData or {@code null} for none
   */
  public SendCommandToDeviceRequest setBinaryData(java.lang.String binaryData) {
    this.binaryData = binaryData;
    return this;
  }

  /**
   * The command data to send to the device.
   * @see #setBinaryData()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public SendCommandToDeviceRequest encodeBinaryData(byte[] binaryData) {
    this.binaryData = com.google.api.client.util.Base64.encodeBase64URLSafeString(binaryData);
    return this;
  }

  /**
   * Optional subfolder for the command. If empty, the command will be delivered to the /devices
   * /{device-id}/commands topic, otherwise it will be delivered to the /devices/{device-
   * id}/commands/{subfolder} topic. Multi-level subfolders are allowed. This field must not have
   * more than 256 characters, and must not contain any MQTT wildcards ("+" or "#") or null
   * characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubfolder() {
    return subfolder;
  }

  /**
   * Optional subfolder for the command. If empty, the command will be delivered to the /devices
   * /{device-id}/commands topic, otherwise it will be delivered to the /devices/{device-
   * id}/commands/{subfolder} topic. Multi-level subfolders are allowed. This field must not have
   * more than 256 characters, and must not contain any MQTT wildcards ("+" or "#") or null
   * characters.
   * @param subfolder subfolder or {@code null} for none
   */
  public SendCommandToDeviceRequest setSubfolder(java.lang.String subfolder) {
    this.subfolder = subfolder;
    return this;
  }

  @Override
  public SendCommandToDeviceRequest set(String fieldName, Object value) {
    return (SendCommandToDeviceRequest) super.set(fieldName, value);
  }

  @Override
  public SendCommandToDeviceRequest clone() {
    return (SendCommandToDeviceRequest) super.clone();
  }

}
