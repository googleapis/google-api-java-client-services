{
  "baseUrl": "https://osconfig.googleapis.com/",
  "documentationLink": "https://cloud.google.com/",
  "resources": {
    "projects": {
      "resources": {
        "patchDeployments": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "id": "osconfig.projects.patchDeployments.get",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The resource name of the patch deployment in the form\n`projects/*/patchDeployments/*`.",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "description": "Get an OS Config patch deployment."
            },
            "delete": {
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the patch deployment in the form\n`projects/*/patchDeployments/*`.",
                  "type": "string",
                  "required": true
                }
              },
              "id": "osconfig.projects.patchDeployments.delete",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "description": "Delete an OS Config patch deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "request": {
                "$ref": "PatchDeployment"
              },
              "description": "Create an OS Config patch deployment.",
              "id": "osconfig.projects.patchDeployments.create",
              "response": {
                "$ref": "PatchDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project to apply this patch deployment to in the form `projects/*`.",
                  "location": "path"
                },
                "patchDeploymentId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. A name for the patch deployment in the project. When creating a name\nthe following rules apply:\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-63 characters.\n* Must end with a number or a letter.\n* Must be unique within the project."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "path": "v1/{+parent}/patchDeployments"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the parent in the form `projects/*`.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments\nthat indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "description": "Get a page of OS Config patch deployments.",
              "path": "v1/{+parent}/patchDeployments",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "osconfig.projects.patchDeployments.list",
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              }
            }
          }
        },
        "patchJobs": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "If provided, this field specifies the criteria that must be met by patch\njobs to be included in the response.\nCurrently, filtering is only available on the patch_deployment field.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call\nthat indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. In the form of `projects/*`"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of instance status to return.",
                  "location": "query",
                  "format": "int32"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+parent}/patchJobs",
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a list of patch jobs.",
              "flatPath": "v1/projects/{projectsId}/patchJobs",
              "id": "osconfig.projects.patchJobs.list"
            },
            "get": {
              "response": {
                "$ref": "PatchJob"
              },
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Get the patch job. This can be used to track the progress of an\nongoing patch job or review the details of completed jobs.",
              "id": "osconfig.projects.patchJobs.get",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "execute": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "osconfig.projects.patchJobs.execute",
              "description": "Patch VM instances by creating and running a patch job.",
              "request": {
                "$ref": "ExecutePatchJobRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "PatchJob"
              },
              "flatPath": "v1/projects/{projectsId}/patchJobs:execute",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project in which to run this patch in the form `projects/*`",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1/{+parent}/patchJobs:execute"
            },
            "cancel": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "CancelPatchJobRequest"
              },
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "id": "osconfig.projects.patchJobs.cancel",
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs\ncannot be restarted.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "PatchJob"
              },
              "httpMethod": "POST",
              "path": "v1/{+name}:cancel"
            }
          },
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails",
                  "id": "osconfig.projects.patchJobs.instanceDetails.list",
                  "path": "v1/{+parent}/instanceDetails",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "A filter expression that filters results listed in the response. This\nfield supports filtering results by instance zone, name, state, or\n`failure_reason`.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent for the instances are in the form of `projects/*/patchJobs/*`.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of instance details records to return.  Default is 100.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call\nthat indicates where this listing should continue from.",
                      "location": "query"
                    }
                  },
                  "description": "Get a list of instance details for a given patch job."
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "canonicalName": "Systems Management",
  "fullyEncodeReservedExpansion": true,
  "name": "osconfig",
  "revision": "20200731",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "version": "v1",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "version_module": true,
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.",
  "title": "Cloud OS Config API",
  "schemas": {
    "PackageResource": {
      "properties": {
        "apt": {
          "description": "A package managed by Apt.",
          "$ref": "PackageResourceAPT"
        },
        "deb": {
          "$ref": "PackageResourceDeb",
          "description": "A deb package file."
        },
        "desiredState": {
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Ensure that the package is installed.",
            "The agent will ensure that the package is not installed and uninstall it\nif detected."
          ],
          "type": "string",
          "description": "The desired_state the agent should maintain for this package. The\ndefault is to ensure the package is installed.",
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "REMOVED"
          ]
        },
        "rpm": {
          "$ref": "PackageResourceRPM",
          "description": "An rpm package file."
        },
        "googet": {
          "$ref": "PackageResourceGooGet",
          "description": "A package managed by GooGet."
        },
        "yum": {
          "description": "A package managed by YUM.",
          "$ref": "PackageResourceYUM"
        },
        "zypper": {
          "description": "A package managed by Zypper.",
          "$ref": "PackageResourceZypper"
        },
        "msi": {
          "$ref": "PackageResourceMSI",
          "description": "An MSI package."
        }
      },
      "id": "PackageResource",
      "type": "object",
      "description": "A resource that manages a system package."
    },
    "ExecStep": {
      "description": "A step that runs an executable for a PatchJob.",
      "properties": {
        "linuxExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob."
        },
        "windowsExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob."
        }
      },
      "type": "object",
      "id": "ExecStep"
    },
    "CancelPatchJobRequest": {
      "type": "object",
      "properties": {},
      "id": "CancelPatchJobRequest",
      "description": "Message for canceling a patch job."
    },
    "PatchConfig": {
      "type": "object",
      "description": "Patch configuration specifications. Contains details on how to apply the\npatch(es) to a VM instance.",
      "properties": {
        "zypper": {
          "description": "Zypper update settings. Use this setting to override the default `zypper`\npatch rules.",
          "$ref": "ZypperSettings"
        },
        "goo": {
          "description": "Goo update settings. Use this setting to override the default `goo` patch\nrules.",
          "$ref": "GooSettings"
        },
        "apt": {
          "$ref": "AptSettings",
          "description": "Apt update settings. Use this setting to override the default `apt` patch\nrules."
        },
        "windowsUpdate": {
          "description": "Windows update settings. Use this override the default windows patch rules.",
          "$ref": "WindowsUpdateSettings"
        },
        "preStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run before the patch update."
        },
        "rebootConfig": {
          "type": "string",
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent decides if a reboot is necessary by checking signals such as\nregistry keys on Windows or `/var/run/reboot-required` on APT based\nsystems. On RPM based systems, a set of core system package install times\nare compared with system boot time.",
            "Always reboot the machine after the update completes.",
            "Never reboot the machine after the update completes."
          ],
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ],
          "description": "Post-patch reboot settings."
        },
        "postStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run after the patch update."
        },
        "yum": {
          "description": "Yum update settings. Use this setting to override the default `yum` patch\nrules.",
          "$ref": "YumSettings"
        }
      },
      "id": "PatchConfig"
    },
    "PackageResourceZypper": {
      "description": "A package managed by Zypper.\ninstall: `zypper -y install package`\nremove: `zypper -y rm package`",
      "type": "object",
      "id": "PackageResourceZypper",
      "properties": {
        "name": {
          "type": "string",
          "description": "Package name."
        }
      }
    },
    "RepositoryResourceGooRepository": {
      "properties": {
        "url": {
          "description": "The url of the repository.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the repository."
        }
      },
      "id": "RepositoryResourceGooRepository",
      "description": "Represents a Goo package repository. These will be added to a repo file\nthat will be managed at C:/ProgramData/GooGet/repos/google_osconfig.repo.",
      "type": "object"
    },
    "ExecStepConfig": {
      "description": "Common configurations for an ExecStep.",
      "type": "object",
      "properties": {
        "localPath": {
          "description": "An absolute path to the executable on the VM.",
          "type": "string"
        },
        "gcsObject": {
          "$ref": "GcsObject",
          "description": "A Cloud Storage object containing the executable."
        },
        "allowedSuccessCodes": {
          "description": "Defaults to [0]. A list of possible return values that the\nexecution can return to indicate a success.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "interpreter": {
          "type": "string",
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ],
          "enumDescriptions": [
            "Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the\ninterpreter will be parsed from the shebang line of the script if\nunspecified.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd`\non Windows.",
            "Indicates that the file is run with PowerShell flags\n`-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`."
          ],
          "description": "The script interpreter to use to run the script. If no interpreter is\nspecified the script will be executed directly, which will likely\nonly succeed for scripts with [shebang lines]\n(https://en.wikipedia.org/wiki/Shebang_\\(Unix\\))."
        }
      },
      "id": "ExecStepConfig"
    },
    "ExecutePatchJobRequest": {
      "description": "A request message to initiate patching across Compute Engine\ninstances.",
      "properties": {
        "description": {
          "description": "Description of the patch job. Length of the description is limited\nto 1024 characters.",
          "type": "string"
        },
        "rollout": {
          "$ref": "PatchRollout",
          "description": "Rollout strategy of the patch job."
        },
        "duration": {
          "format": "google-duration",
          "description": "Duration of the patch job. After the duration ends, the patch job\ntimes out.",
          "type": "string"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied. If omitted, instances are\npatched using the default configurations."
        },
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        },
        "dryRun": {
          "type": "boolean",
          "description": "If this patch is a dry-run only, instances are contacted but\nwill do nothing."
        },
        "instanceFilter": {
          "description": "Required. Instances to patch, either explicitly or filtered by some criteria such\nas zone or labels.",
          "$ref": "PatchInstanceFilter"
        }
      },
      "id": "ExecutePatchJobRequest",
      "type": "object"
    },
    "PackageResourceYUM": {
      "id": "PackageResourceYUM",
      "properties": {
        "name": {
          "type": "string",
          "description": "Package name."
        }
      },
      "type": "object",
      "description": "A package managed by YUM.\ninstall: `yum -y install package`\nremove: `yum -y remove package`"
    },
    "FileResource": {
      "type": "object",
      "id": "FileResource",
      "description": "A resource that manages the state of a file.",
      "properties": {
        "path": {
          "description": "The absolute path of the file.",
          "type": "string"
        },
        "file": {
          "description": "A remote or local source.",
          "$ref": "File"
        },
        "content": {
          "description": "A a file with this content.",
          "type": "string"
        },
        "permissions": {
          "description": "Consists of three octal digits which represent, in\norder, the permissions of the owner, group, and other users for the\nfile (similarly to the numeric mode used in the linux chmod utility).\nEach digit represents a three bit number with the 4 bit\ncorresponding to the read permissions, the 2 bit corresponds to the\nwrite bit, and the one bit corresponds to the execute permission.\nDefault behavior is 755.\n\nBelow are some examples of permissions and their associated values:\nread, write, and execute: 7\nread and execute: 5\nread and write: 6\nread only: 4",
          "type": "string"
        },
        "state": {
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "PRESENT",
            "ABSENT",
            "CONTENTS_MATCH"
          ],
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Ensure file at path is present.",
            "Ensure file at path is absent.",
            "Ensure the contents of the file at path matches. If the file does not\nexist it will be created."
          ],
          "description": "Desired state of the file.",
          "type": "string"
        }
      }
    },
    "PatchInstanceFilter": {
      "properties": {
        "all": {
          "type": "boolean",
          "description": "Target all VM instances in the project. If true, no other criteria is\npermitted."
        },
        "instances": {
          "type": "array",
          "description": "Targets any of the VM instances specified. Instances are specified by their\nURI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`,\n`projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or\n`https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
          "items": {
            "type": "string"
          }
        },
        "zones": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Targets VM instances in ANY of these zones. Leave empty to target VM\ninstances in any zone."
        },
        "groupLabels": {
          "type": "array",
          "description": "Targets VM instances matching ANY of these GroupLabels. This allows\ntargeting of disparate groups of VM instances.",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          }
        },
        "instanceNamePrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Targets VMs whose name starts with one of these prefixes. Similar to\nlabels, this is another way to group VMs when targeting configs, for\nexample prefix=\"prod-\"."
        }
      },
      "type": "object",
      "id": "PatchInstanceFilter",
      "description": "A filter to target VM instances for patching. The targeted\nVMs must meet all criteria specified. So if both labels and zones are\nspecified, the patch job targets only VMs with those labels and in those\nzones."
    },
    "ListPatchJobInstanceDetailsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        },
        "patchJobInstanceDetails": {
          "type": "array",
          "description": "A list of instance status.",
          "items": {
            "$ref": "PatchJobInstanceDetails"
          }
        }
      },
      "type": "object",
      "description": "A response message for listing the instances details for a patch job.",
      "id": "ListPatchJobInstanceDetailsResponse"
    },
    "ExecResource": {
      "id": "ExecResource",
      "type": "object",
      "description": "A resource that contains custom validation and enforcement steps.",
      "properties": {
        "enforce": {
          "$ref": "ExecResourceExec",
          "description": "What to run to bring this resource into the desired state.\nOptional if policy is in validate only mode."
        },
        "validate": {
          "description": "What to run to validate this resource is in the desired state.\nA successful exit code indicates resource is in the desired state.",
          "$ref": "ExecResourceExec"
        }
      }
    },
    "PatchRollout": {
      "type": "object",
      "id": "PatchRollout",
      "description": "Patch rollout configuration specifications. Contains details on the\nconcurrency control when applying patch(es) to all targeted VMs.",
      "properties": {
        "mode": {
          "type": "string",
          "enumDescriptions": [
            "Mode must be specified.",
            "Patches are applied one zone at a time. The patch job begins in the\nregion with the lowest number of targeted VMs. Within the region,\npatching begins in the zone with the lowest number of targeted VMs. If\nmultiple regions (or zones within a region) have the same number of\ntargeted VMs, a tie-breaker is achieved by sorting the regions or zones\nin alphabetical order.",
            "Patches are applied to VMs in all zones at the same time."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "ZONE_BY_ZONE",
            "CONCURRENT_ZONES"
          ],
          "description": "Mode of the patch rollout."
        },
        "disruptionBudget": {
          "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given\nmoment. The number of VMs calculated from multiplying the percentage by the\ntotal number of VMs in a zone is rounded up.\n\nDuring patching, a VM is considered disrupted from the time the agent is\nnotified to begin until patching has completed. This disruption time\nincludes the time to complete reboot and any post-patch steps.\n\nA VM contributes to the disruption budget if its patching operation fails\neither when applying the patches, running pre or post patch steps, or if it\nfails to respond with a success notification before timing out. VMs that\nare not running or do not have an active agent do not count toward this\ndisruption budget.\n\nFor zone-by-zone rollouts, if the disruption budget in a zone is exceeded,\nthe patch job stops, because continuing to the next zone requires\ncompletion of the patch process in the previous zone.\n\nFor example, if the disruption budget has a fixed value of `10`, and 8 VMs\nfail to patch in the current zone, the patch job continues to patch 2 VMs\nat a time until the zone is completed. When that zone is completed\nsuccessfully, patching begins with 10 VMs at a time in the next zone. If 10\nVMs in the next zone fail to patch, the patch job stops.",
          "$ref": "FixedOrPercent"
        }
      }
    },
    "PackageResourceDeb": {
      "description": "A deb package file. dpkg packages only support INSTALLED state.",
      "id": "PackageResourceDeb",
      "type": "object",
      "properties": {
        "source": {
          "description": "A deb package.",
          "$ref": "File"
        },
        "pullDeps": {
          "type": "boolean",
          "description": "Whether dependencies should also be installed.\ninstall when false: `dpkg -i package`\ninstall when true: `apt-get update && apt-get -y install package.deb`"
        }
      }
    },
    "OneTimeSchedule": {
      "properties": {
        "executeTime": {
          "description": "Required. The desired patch job execution time.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "OneTimeSchedule",
      "description": "Sets the time for a one time patch deployment. Timestamp is in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
      "type": "object"
    },
    "TimeZone": {
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "id": "TimeZone",
      "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object"
    },
    "FileGcs": {
      "properties": {
        "bucket": {
          "description": "Bucket of the GCS object.",
          "type": "string"
        },
        "generation": {
          "description": "Generation number of the GCS object.",
          "type": "string",
          "format": "int64"
        },
        "object": {
          "description": "Name of the GCS object.",
          "type": "string"
        }
      },
      "id": "FileGcs",
      "type": "object",
      "description": "Specifies a file available as a GCS Object."
    },
    "GcsObject": {
      "type": "object",
      "description": "Cloud Storage object representation.",
      "properties": {
        "bucket": {
          "description": "Required. Bucket of the Cloud Storage object.",
          "type": "string"
        },
        "object": {
          "description": "Required. Name of the Cloud Storage object.",
          "type": "string"
        },
        "generationNumber": {
          "type": "string",
          "format": "int64",
          "description": "Required. Generation number of the Cloud Storage object. This is used to\nensure that the ExecStep specified by this PatchJob does not change."
        }
      },
      "id": "GcsObject"
    },
    "WindowsUpdateSettings": {
      "description": "Windows patching is performed using the Windows Update Agent.",
      "properties": {
        "excludes": {
          "description": "List of KBs to exclude from update.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exclusivePatches": {
          "description": "An exclusive list of kbs to be updated. These are the only patches\nthat will be updated. This field must not be used with other\npatch configurations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classifications": {
          "description": "Only apply updates of these windows update classifications. If empty, all\nupdates are applied.",
          "items": {
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ],
            "type": "string"
          },
          "type": "array",
          "enumDescriptions": [
            "Invalid. If classifications are included, they must be specified.",
            "\"A widely released fix for a specific problem that addresses a critical,\nnon-security-related bug.\" [1]",
            "\"A widely released fix for a product-specific, security-related\nvulnerability. Security vulnerabilities are rated by their severity. The\nseverity rating is indicated in the Microsoft security bulletin as\ncritical, important, moderate, or low.\" [1]",
            "\"A widely released and frequent software update that contains additions\nto a product's definition database. Definition databases are often used\nto detect objects that have specific attributes, such as malicious code,\nphishing websites, or junk mail.\" [1]",
            "\"Software that controls the input and output of a device.\" [1]",
            "\"New product functionality that is first distributed outside the context\nof a product release and that is typically included in the next full\nproduct release.\" [1]",
            "\"A tested, cumulative set of all hotfixes, security updates, critical\nupdates, and updates. Additionally, service packs may contain additional\nfixes for problems that are found internally since the release of the\nproduct. Service packs my also contain a limited number of\ncustomer-requested design changes or features.\" [1]",
            "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
            "\"A tested, cumulative set of hotfixes, security updates, critical\nupdates, and updates that are packaged together for easy deployment. A\nrollup generally targets a specific area, such as security, or a\ncomponent of a product, such as Internet Information Services (IIS).\" [1]",
            "\"A widely released fix for a specific problem. An update addresses a\nnoncritical, non-security-related bug.\" [1]"
          ]
        }
      },
      "id": "WindowsUpdateSettings",
      "type": "object"
    },
    "File": {
      "properties": {
        "allowInsecure": {
          "type": "boolean",
          "description": "Defaults to false. When false, files will be subject to validations\nbased on the file type:\n\nRemote: A checksum must be specified.\nGCS:    An object generation number must be specified."
        },
        "remote": {
          "description": "A generic remote file.",
          "$ref": "FileRemote"
        },
        "gcs": {
          "$ref": "FileGcs",
          "description": "A GCS object."
        },
        "localPath": {
          "description": "A local path to use.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A remote or local file.",
      "id": "File"
    },
    "FixedOrPercent": {
      "properties": {
        "fixed": {
          "description": "Specifies a fixed value.",
          "format": "int32",
          "type": "integer"
        },
        "percent": {
          "format": "int32",
          "description": "Specifies the relative value defined as a percentage, which will be\nmultiplied by a reference value.",
          "type": "integer"
        }
      },
      "id": "FixedOrPercent",
      "description": "Message encapsulating a value that can be either absolute (\"fixed\") or\nrelative (\"percent\") to a value.",
      "type": "object"
    },
    "PatchJob": {
      "id": "PatchJob",
      "properties": {
        "instanceDetailsSummary": {
          "$ref": "PatchJobInstanceDetailsSummary",
          "description": "Summary of instance details."
        },
        "errorMessage": {
          "type": "string",
          "description": "If this patch job failed, this message provides information about the\nfailure."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Time this patch job was created.",
          "type": "string"
        },
        "dryRun": {
          "type": "boolean",
          "description": "If this patch job is a dry run, the agent reports that it has\nfinished without running any updates on the VM instance."
        },
        "duration": {
          "format": "google-duration",
          "description": "Duration of the patch job. After the duration ends, the\npatch job times out.",
          "type": "string"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied."
        },
        "rollout": {
          "description": "Rollout strategy being applied.",
          "$ref": "PatchRollout"
        },
        "instanceFilter": {
          "description": "Instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for this patch job in the form\n`projects/*/patchJobs/*`"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for this patch job. This is not a unique identifier."
        },
        "description": {
          "type": "string",
          "description": "Description of the patch job. Length of the description is limited\nto 1024 characters."
        },
        "patchDeployment": {
          "description": "Output only. Name of the patch deployment that created this patch job.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Last time this patch job was updated.",
          "type": "string"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Reflects the overall progress of the patch job in the range of\n0.0 being no progress to 100.0 being complete."
        },
        "state": {
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job timed out."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ],
          "description": "The current state of the PatchJob."
        }
      },
      "type": "object",
      "description": "A high level representation of a patch job that is either in progress\nor has completed.\n\nInstance details are not included in the job. To paginate through instance\ndetails, use ListPatchJobInstanceDetails.\n\nFor more information about patch jobs, see\n[Creating patch\njobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job)."
    },
    "ExtractArchiveResource": {
      "id": "ExtractArchiveResource",
      "type": "object",
      "description": "A resource that extracts an archive",
      "properties": {
        "type": {
          "description": "The type of the archive to extract.",
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Indicates that the archive is a tar archive with no encryption.",
            "Indicates that the archive is a tar archive with gzip encryption.",
            "Indicates that the archive is a tar archive with bzip encryption.",
            "Indicates that the archive is a tar archive with lzma encryption.",
            "Indicates that the archive is a tar archive with xz encryption.",
            "Indicates that the archive is a zip archive."
          ],
          "type": "string",
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "TAR",
            "TAR_GZIP",
            "TAR_BZIP",
            "TAR_LZMA",
            "TAR_XZ",
            "ZIP"
          ]
        },
        "creates": {
          "description": "Local file path that signals this resource is in the desired state.\nThe absence of this file will indicate whether the archive needs to be\nextracted.",
          "type": "string"
        },
        "destination": {
          "description": "Directory to extract archive to.",
          "type": "string"
        },
        "overwrite": {
          "description": "Whether to overwrite existing files during extraction. If this is set to\ntrue, any existing files in the destination location will be overwritten by\nthe extraction.",
          "type": "boolean"
        },
        "source": {
          "$ref": "File",
          "description": "The source archive to extract."
        }
      }
    },
    "WeekDayOfMonth": {
      "id": "WeekDayOfMonth",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "description": "Required. A day of the week.",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "weekOrdinal": {
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1\nindicates the last week of the month.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
      "type": "object"
    },
    "ListPatchJobsResponse": {
      "description": "A response message for listing patch jobs.",
      "type": "object",
      "properties": {
        "patchJobs": {
          "items": {
            "$ref": "PatchJob"
          },
          "description": "The list of patch jobs.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        }
      },
      "id": "ListPatchJobsResponse"
    },
    "PackageResourceAPT": {
      "description": "A package managed by APT.\ninstall: `apt-get update && apt-get -y install [name]`\nremove: `apt-get -y remove [name]`",
      "properties": {
        "name": {
          "description": "Package name.",
          "type": "string"
        }
      },
      "id": "PackageResourceAPT",
      "type": "object"
    },
    "PatchJobInstanceDetails": {
      "id": "PatchJobInstanceDetails",
      "properties": {
        "state": {
          "type": "string",
          "description": "Current state of instance patch.",
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "The instance is not yet notified.",
            "Instance is inactive and cannot be patched.",
            "The instance is notified that it should be patched.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure\nthat the agent is installed, running, and able to communicate with the\nservice."
          ]
        },
        "name": {
          "type": "string",
          "description": "The instance name in the form `projects/*/zones/*/instances/*`"
        },
        "instanceSystemId": {
          "type": "string",
          "description": "The unique identifier for the instance. This identifier is\ndefined by the server."
        },
        "failureReason": {
          "description": "If the patch fails, this field provides the reason.",
          "type": "string"
        },
        "attemptCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of times the agent that the agent attempts to apply the patch."
        }
      },
      "type": "object",
      "description": "Patch details for a VM instance. For more information about reviewing VM\ninstance details, see\n[Listing all VM instance details for a specific patch\njob](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details)."
    },
    "PatchInstanceFilterGroupLabel": {
      "description": "Targets a group of VM instances by using their [assigned\nlabels](https://cloud.google.com/compute/docs/labeling-resources). Labels\nare key-value pairs. A `GroupLabel` is a combination of labels\nthat is used to target VMs for a patch job.\n\nFor example, a patch job can target VMs that have the following\n`GroupLabel`: `{\"env\":\"test\", \"app\":\"web\"}`. This means that the patch job\nis applied to VMs that have both the labels `env=test` and `app=web`.",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Compute Engine instance labels that must be present for a VM\ninstance to be targeted by this filter.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "PatchInstanceFilterGroupLabel",
      "type": "object"
    },
    "PackageResourceGooGet": {
      "description": "A package managed by GooGet.\ninstall: `googet -noconfirm install package`\nremove: `googet -noconfirm remove package`",
      "id": "PackageResourceGooGet",
      "type": "object",
      "properties": {
        "name": {
          "description": "Package name.",
          "type": "string"
        }
      }
    },
    "PackageResourceMSI": {
      "id": "PackageResourceMSI",
      "description": "An MSI package. MSI packages only support INSTALLED state.\nInstall msiexec /i /qn /norestart",
      "properties": {
        "allowedSuccessCodes": {
          "description": "Return codes that indicate that the software installed or updated\nsuccessfully. Behaviour defaults to [0]",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "flags": {
          "type": "array",
          "description": "Flags to use during package install.\nAppended to the defalts of \"/i /qn /norestart\"",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "description": "The MSI package.",
          "$ref": "File"
        }
      },
      "type": "object"
    },
    "YumSettings": {
      "id": "YumSettings",
      "type": "object",
      "description": "Yum patching is performed by executing `yum update`. Additional options\ncan be set to control how this is executed.\n\nNote that not all settings are supported on all platforms.",
      "properties": {
        "excludes": {
          "description": "List of packages to exclude from update. These packages are excluded by\nusing the yum `--exclude` flag.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minimal": {
          "description": "Will cause patch to run `yum update-minimal` instead.",
          "type": "boolean"
        },
        "security": {
          "type": "boolean",
          "description": "Adds the `--security` flag to `yum update`. Not supported on\nall platforms."
        },
        "exclusivePackages": {
          "type": "array",
          "description": "An exclusive list of packages to be updated. These are the only packages\nthat will be updated. If these packages are not installed, they will be\nignored. This field must not be specified with any other patch\nconfiguration fields.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MonthlySchedule": {
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is\n\"on the third Tuesday of the month\" or \"on the 15th of the month\".",
      "id": "MonthlySchedule",
      "type": "object",
      "properties": {
        "monthDay": {
          "format": "int32",
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1\nindicates the last day of the month.\nMonths without the target day will be skipped. For example, a schedule to\nrun \"every month on the 31st\" will not run in February, April, June, etc.",
          "type": "integer"
        },
        "weekDayOfMonth": {
          "$ref": "WeekDayOfMonth",
          "description": "Required. Week day in a month."
        }
      }
    },
    "PatchDeployment": {
      "properties": {
        "lastExecuteTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last time a patch job was started by this deployment.\nTimestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text\nformat."
        },
        "name": {
          "type": "string",
          "description": "Unique name for the patch deployment resource in a project. The patch\ndeployment name is in the form:\n`projects/{project_id}/patchDeployments/{patch_deployment_id}`.\nThis field is ignored when you create a new patch deployment."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Time the patch deployment was created. Timestamp is in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the patch deployment. Length of the description is limited\nto 1024 characters.",
          "type": "string"
        },
        "rollout": {
          "description": "Optional. Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        },
        "instanceFilter": {
          "description": "Required. VM instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "recurringSchedule": {
          "description": "Required. Schedule recurring executions.",
          "$ref": "RecurringSchedule"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the patch deployment was last updated. Timestamp is in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "format": "google-datetime"
        },
        "duration": {
          "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
          "format": "google-duration",
          "type": "string"
        },
        "patchConfig": {
          "description": "Optional. Patch configuration that is applied.",
          "$ref": "PatchConfig"
        },
        "oneTimeSchedule": {
          "description": "Required. Schedule a one-time execution.",
          "$ref": "OneTimeSchedule"
        }
      },
      "description": "Patch deployments are configurations that individual patch jobs use to\ncomplete a patch. These configurations include instance filter, package\nrepository settings, and a schedule. For more information about creating and\nmanaging patch deployments, see [Scheduling patch\njobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).",
      "id": "PatchDeployment",
      "type": "object"
    },
    "RecurringSchedule": {
      "id": "RecurringSchedule",
      "description": "Sets the time for recurring patch deployments.",
      "type": "object",
      "properties": {
        "nextExecuteTime": {
          "description": "Output only. The time the next patch job is scheduled to run.",
          "format": "google-datetime",
          "type": "string"
        },
        "timeOfDay": {
          "description": "Required. Time of the day to run a recurring deployment.",
          "$ref": "TimeOfDay"
        },
        "startTime": {
          "description": "Optional. The time that the recurring schedule becomes effective.\nDefaults to `create_time` of the patch deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "lastExecuteTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the last patch job ran successfully."
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Required. Defines the time zone that `time_of_day` is relative to.\nThe rules for daylight saving time are determined by the chosen time zone."
        },
        "endTime": {
          "type": "string",
          "description": "Optional. The end time at which a recurring patch deployment schedule is no longer\nactive.",
          "format": "google-datetime"
        },
        "frequency": {
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the frequency should be expressed in terms of\nweeks.",
            "Indicates that the frequency should be expressed in terms of\nmonths."
          ],
          "type": "string",
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ],
          "description": "Required. The frequency unit of this recurring schedule."
        },
        "weekly": {
          "description": "Required. Schedule with weekly executions.",
          "$ref": "WeeklySchedule"
        },
        "monthly": {
          "$ref": "MonthlySchedule",
          "description": "Required. Schedule with monthly executions."
        }
      }
    },
    "RepositoryResourceAptRepository": {
      "description": "Represents a single apt package repository. These will be added to a repo\nfile that will be managed at /etc/apt/sources.list.d/google_osconfig.list.",
      "id": "RepositoryResourceAptRepository",
      "type": "object",
      "properties": {
        "gpgKey": {
          "type": "string",
          "description": "URI of the key file for this repository. The agent will maintain\na keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg."
        },
        "components": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of components for this repository. Must contain at least one item."
        },
        "archiveType": {
          "description": "Type of archive files in this repository. The default behavior is DEB.",
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Deb indicates that the archive contains binary files.",
            "Deb-src indicates that the archive contains source files."
          ],
          "type": "string",
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "DEB",
            "DEB_SRC"
          ]
        },
        "distribution": {
          "description": "Distribution of this repository.",
          "type": "string"
        },
        "uri": {
          "description": "URI for this repository.",
          "type": "string"
        }
      }
    },
    "ExecResourceExec": {
      "properties": {
        "allowedSuccessCodes": {
          "description": "Exit codes that indicate success.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "file": {
          "description": "A remote or local file.",
          "$ref": "File"
        },
        "interpreter": {
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "NONE",
            "SHELL",
            "POWERSHELL"
          ],
          "description": "The script interpreter to use.",
          "type": "string",
          "enumDescriptions": [
            "Defaults to NONE.",
            "If no interpreter is specified the\nsource will be executed directly, which will likely only succeed for\nexecutables and scripts with shebang lines.\n[Wikipedia shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)).",
            "Indicates that the script will be run with /bin/sh on Linux and cmd.exe\non windows.",
            "Indicates that the script will be run with powershell."
          ]
        },
        "args": {
          "type": "array",
          "description": "Arguments to use.",
          "items": {
            "type": "string"
          }
        },
        "script": {
          "description": "An inline script.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A file or script to execute.",
      "id": "ExecResourceExec"
    },
    "FileRemote": {
      "id": "FileRemote",
      "type": "object",
      "description": "Specifies a file available via some URI.",
      "properties": {
        "sha256Checksum": {
          "description": "SHA256 checksum of the remote file.",
          "type": "string"
        },
        "uri": {
          "description": "URI from which to fetch the object. It should contain both the protocol\nand path following the format {protocol}://{location}.",
          "type": "string"
        }
      }
    },
    "ListPatchDeploymentsResponse": {
      "description": "A response message for listing patch deployments.",
      "type": "object",
      "id": "ListPatchDeploymentsResponse",
      "properties": {
        "patchDeployments": {
          "description": "The list of patch deployments.",
          "items": {
            "$ref": "PatchDeployment"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of patch\ndeployments.",
          "type": "string"
        }
      }
    },
    "ServiceResource": {
      "properties": {},
      "id": "ServiceResource",
      "description": "A resource that manages a system service.",
      "type": "object"
    },
    "PatchJobInstanceDetailsSummary": {
      "type": "object",
      "description": "A summary of the current patch state across all instances that this patch\njob affects. Contains counts of instances in different states. These states\nmap to `InstancePatchState`. List patch job instance details to see the\nspecific states of each instance.",
      "id": "PatchJobInstanceDetailsSummary",
      "properties": {
        "applyingPatchesInstanceCount": {
          "description": "Number of instances that are applying patches.",
          "format": "int64",
          "type": "string"
        },
        "startedInstanceCount": {
          "description": "Number of instances that have started.",
          "type": "string",
          "format": "int64"
        },
        "succeededInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that have completed successfully."
        },
        "timedOutInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that exceeded the time out while applying the patch."
        },
        "succeededRebootRequiredInstanceCount": {
          "description": "Number of instances that require reboot.",
          "format": "int64",
          "type": "string"
        },
        "noAgentDetectedInstanceCount": {
          "description": "Number of instances that do not appear to be running the agent. Check to\nensure that the agent is installed, running, and able to communicate with\nthe service.",
          "format": "int64",
          "type": "string"
        },
        "ackedInstanceCount": {
          "type": "string",
          "description": "Number of instances that have acked and will start shortly.",
          "format": "int64"
        },
        "prePatchStepInstanceCount": {
          "description": "Number of instances that are running the pre-patch step.",
          "format": "int64",
          "type": "string"
        },
        "postPatchStepInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that are running the post-patch step."
        },
        "pendingInstanceCount": {
          "type": "string",
          "description": "Number of instances pending patch job.",
          "format": "int64"
        },
        "failedInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that failed."
        },
        "notifiedInstanceCount": {
          "description": "Number of instances notified about patch job.",
          "format": "int64",
          "type": "string"
        },
        "inactiveInstanceCount": {
          "description": "Number of instances that are inactive.",
          "type": "string",
          "format": "int64"
        },
        "downloadingPatchesInstanceCount": {
          "description": "Number of instances that are downloading patches.",
          "format": "int64",
          "type": "string"
        },
        "rebootingInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances rebooting."
        }
      }
    },
    "AptSettings": {
      "type": "object",
      "properties": {
        "excludes": {
          "type": "array",
          "description": "List of packages to exclude from update. These packages will be excluded",
          "items": {
            "type": "string"
          }
        },
        "exclusivePackages": {
          "type": "array",
          "description": "An exclusive list of packages to be updated. These are the only packages\nthat will be updated. If these packages are not installed, they will be\nignored. This field cannot be specified with any other patch configuration\nfields.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ],
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "description": "By changing the type to DIST, the patching is performed\nusing `apt-get dist-upgrade` instead.",
          "type": "string"
        }
      },
      "description": "Apt patching is completed by executing `apt-get update && apt-get\nupgrade`. Additional options can be set to control how this is executed.",
      "id": "AptSettings"
    },
    "RepositoryResourceZypperRepository": {
      "properties": {
        "id": {
          "description": "A one word, unique name for this repository. This will be\nthe `repo id` in the zypper config file and also the `display_name` if\n`display_name` is omitted. This id is also used as the unique identifier\nwhen checking for GuestPolicy conflicts.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the repository."
        },
        "baseUrl": {
          "description": "The location of the repository directory.",
          "type": "string"
        },
        "gpgKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "URIs of GPG keys."
        }
      },
      "id": "RepositoryResourceZypperRepository",
      "type": "object",
      "description": "Represents a single zypper package repository. These will be added to a\nrepo file that will be managed at /etc/zypp/repos.d/google_osconfig.repo."
    },
    "RepositoryResource": {
      "description": "A resource that manages a package repository.",
      "type": "object",
      "id": "RepositoryResource",
      "properties": {
        "goo": {
          "description": "A Goo Repository.",
          "$ref": "RepositoryResourceGooRepository"
        },
        "apt": {
          "description": "An Apt Repository.",
          "$ref": "RepositoryResourceAptRepository"
        },
        "zypper": {
          "description": "A Zypper Repository.",
          "$ref": "RepositoryResourceZypperRepository"
        },
        "yum": {
          "$ref": "RepositoryResourceYumRepository",
          "description": "A Yum Repository."
        }
      }
    },
    "RepositoryResourceYumRepository": {
      "id": "RepositoryResourceYumRepository",
      "type": "object",
      "description": "Represents a single yum package repository. These will be added to a repo\nfile that will be managed at /etc/yum.repos.d/google_osconfig.repo.",
      "properties": {
        "baseUrl": {
          "type": "string",
          "description": "The location of the repository directory."
        },
        "id": {
          "type": "string",
          "description": "A one word, unique name for this repository. This will be\nthe `repo id` in the yum config file and also the `display_name` if\n`display_name` is omitted. This id is also used as the unique identifier\nwhen checking for resource conflicts."
        },
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        },
        "gpgKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "URIs of GPG keys."
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ZypperSettings": {
      "properties": {
        "exclusivePatches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of patches to be updated. These are the only patches\nthat will be installed using 'zypper patch patch:\u003cpatch_name\u003e' command.\nThis field must not be used with any other patch configuration fields."
        },
        "withOptional": {
          "type": "boolean",
          "description": "Adds the `--with-optional` flag to `zypper patch`."
        },
        "withUpdate": {
          "type": "boolean",
          "description": "Adds the `--with-update` flag, to `zypper patch`."
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of patches to exclude from update."
        },
        "severities": {
          "description": "Install only patches with these severities.\nCommon severities include critical, important, moderate, and low.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "description": "Install only patches with these categories.\nCommon categories include security, recommended, and feature.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Zypper patching is performed by running `zypper patch`.\nSee also https://en.opensuse.org/SDB:Zypper_manual.",
      "id": "ZypperSettings"
    },
    "PackageResourceRPM": {
      "description": "An RPM package file. RPM packages only support INSTALLED state.",
      "id": "PackageResourceRPM",
      "type": "object",
      "properties": {
        "pullDeps": {
          "type": "boolean",
          "description": "Whether dependencies should also be installed.\ninstall when false: `rpm --upgrade --replacepkgs package.rpm`\ninstall when true: `yum -y install package.rpm` or\n`zypper -y install package.rpm`"
        },
        "source": {
          "description": "An rpm package.",
          "$ref": "File"
        }
      }
    },
    "GooSettings": {
      "properties": {},
      "description": "Googet patching is performed by running `googet update`.",
      "type": "object",
      "id": "GooSettings"
    },
    "WeeklySchedule": {
      "type": "object",
      "id": "WeeklySchedule",
      "description": "Represents a weekly schedule.",
      "properties": {
        "dayOfWeek": {
          "description": "Required. Day of the week.",
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        }
      }
    },
    "TimeOfDay": {
      "type": "object",
      "properties": {
        "nanos": {
          "format": "int32",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds."
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
      "id": "TimeOfDay"
    }
  },
  "protocol": "rest",
  "batchPath": "batch",
  "basePath": "",
  "servicePath": "",
  "mtlsRootUrl": "https://osconfig.mtls.googleapis.com/",
  "rootUrl": "https://osconfig.googleapis.com/",
  "id": "osconfig:v1"
}
