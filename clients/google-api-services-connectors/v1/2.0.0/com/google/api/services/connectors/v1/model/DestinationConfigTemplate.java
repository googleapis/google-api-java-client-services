/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * DestinationConfigTemplate defines required destinations supported by the Connector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DestinationConfigTemplate extends com.google.api.client.json.GenericJson {

  /**
   * The default port.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer defaultPort;

  /**
   * Description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Display name of the parameter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Whether the current destination tempalate is part of Advanced settings
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isAdvanced;

  /**
   * Key of the destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * The maximum number of destinations supported for this key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer max;

  /**
   * The minimum number of destinations supported for this key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer min;

  /**
   * Whether port number should be provided by customers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String portFieldType;

  /**
   * Regex pattern for host.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regexPattern;

  /**
   * The default port.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDefaultPort() {
    return defaultPort;
  }

  /**
   * The default port.
   * @param defaultPort defaultPort or {@code null} for none
   */
  public DestinationConfigTemplate setDefaultPort(java.lang.Integer defaultPort) {
    this.defaultPort = defaultPort;
    return this;
  }

  /**
   * Description.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description.
   * @param description description or {@code null} for none
   */
  public DestinationConfigTemplate setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Display name of the parameter.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display name of the parameter.
   * @param displayName displayName or {@code null} for none
   */
  public DestinationConfigTemplate setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Whether the current destination tempalate is part of Advanced settings
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsAdvanced() {
    return isAdvanced;
  }

  /**
   * Whether the current destination tempalate is part of Advanced settings
   * @param isAdvanced isAdvanced or {@code null} for none
   */
  public DestinationConfigTemplate setIsAdvanced(java.lang.Boolean isAdvanced) {
    this.isAdvanced = isAdvanced;
    return this;
  }

  /**
   * Key of the destination.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * Key of the destination.
   * @param key key or {@code null} for none
   */
  public DestinationConfigTemplate setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * The maximum number of destinations supported for this key.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMax() {
    return max;
  }

  /**
   * The maximum number of destinations supported for this key.
   * @param max max or {@code null} for none
   */
  public DestinationConfigTemplate setMax(java.lang.Integer max) {
    this.max = max;
    return this;
  }

  /**
   * The minimum number of destinations supported for this key.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMin() {
    return min;
  }

  /**
   * The minimum number of destinations supported for this key.
   * @param min min or {@code null} for none
   */
  public DestinationConfigTemplate setMin(java.lang.Integer min) {
    this.min = min;
    return this;
  }

  /**
   * Whether port number should be provided by customers.
   * @return value or {@code null} for none
   */
  public java.lang.String getPortFieldType() {
    return portFieldType;
  }

  /**
   * Whether port number should be provided by customers.
   * @param portFieldType portFieldType or {@code null} for none
   */
  public DestinationConfigTemplate setPortFieldType(java.lang.String portFieldType) {
    this.portFieldType = portFieldType;
    return this;
  }

  /**
   * Regex pattern for host.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegexPattern() {
    return regexPattern;
  }

  /**
   * Regex pattern for host.
   * @param regexPattern regexPattern or {@code null} for none
   */
  public DestinationConfigTemplate setRegexPattern(java.lang.String regexPattern) {
    this.regexPattern = regexPattern;
    return this;
  }

  @Override
  public DestinationConfigTemplate set(String fieldName, Object value) {
    return (DestinationConfigTemplate) super.set(fieldName, value);
  }

  @Override
  public DestinationConfigTemplate clone() {
    return (DestinationConfigTemplate) super.clone();
  }

}
