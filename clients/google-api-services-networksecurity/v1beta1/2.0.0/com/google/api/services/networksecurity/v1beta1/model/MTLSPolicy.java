/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1beta1.model;

/**
 * Specification of the MTLSPolicy.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MTLSPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Required if the policy is to be used with Traffic Director. For External HTTPS LB it must be
   * empty. Defines the mechanism to obtain the Certificate Authority certificate to validate the
   * client certificate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ValidationCA> clientValidationCa;

  /**
   * Specifies whether client connections proceed when a client presents an invalid certificate or
   * no certificate. Required if the policy is to be used with the External HTTPS LB. For Traffic
   * Director it must be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientValidationMode;

  /**
   * Reference to the TrustConfig from certificatemanager.googleapis.com namespace. If specified,
   * the chain validation will be performed against certificates configured in the given
   * TrustConfig. Allowed only if the policy is to be used with External HTTPS LB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientValidationTrustConfig;

  /**
   * Required if the policy is to be used with Traffic Director. For External HTTPS LB it must be
   * empty. Defines the mechanism to obtain the Certificate Authority certificate to validate the
   * client certificate.
   * @return value or {@code null} for none
   */
  public java.util.List<ValidationCA> getClientValidationCa() {
    return clientValidationCa;
  }

  /**
   * Required if the policy is to be used with Traffic Director. For External HTTPS LB it must be
   * empty. Defines the mechanism to obtain the Certificate Authority certificate to validate the
   * client certificate.
   * @param clientValidationCa clientValidationCa or {@code null} for none
   */
  public MTLSPolicy setClientValidationCa(java.util.List<ValidationCA> clientValidationCa) {
    this.clientValidationCa = clientValidationCa;
    return this;
  }

  /**
   * Specifies whether client connections proceed when a client presents an invalid certificate or
   * no certificate. Required if the policy is to be used with the External HTTPS LB. For Traffic
   * Director it must be empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientValidationMode() {
    return clientValidationMode;
  }

  /**
   * Specifies whether client connections proceed when a client presents an invalid certificate or
   * no certificate. Required if the policy is to be used with the External HTTPS LB. For Traffic
   * Director it must be empty.
   * @param clientValidationMode clientValidationMode or {@code null} for none
   */
  public MTLSPolicy setClientValidationMode(java.lang.String clientValidationMode) {
    this.clientValidationMode = clientValidationMode;
    return this;
  }

  /**
   * Reference to the TrustConfig from certificatemanager.googleapis.com namespace. If specified,
   * the chain validation will be performed against certificates configured in the given
   * TrustConfig. Allowed only if the policy is to be used with External HTTPS LB.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientValidationTrustConfig() {
    return clientValidationTrustConfig;
  }

  /**
   * Reference to the TrustConfig from certificatemanager.googleapis.com namespace. If specified,
   * the chain validation will be performed against certificates configured in the given
   * TrustConfig. Allowed only if the policy is to be used with External HTTPS LB.
   * @param clientValidationTrustConfig clientValidationTrustConfig or {@code null} for none
   */
  public MTLSPolicy setClientValidationTrustConfig(java.lang.String clientValidationTrustConfig) {
    this.clientValidationTrustConfig = clientValidationTrustConfig;
    return this;
  }

  @Override
  public MTLSPolicy set(String fieldName, Object value) {
    return (MTLSPolicy) super.set(fieldName, value);
  }

  @Override
  public MTLSPolicy clone() {
    return (MTLSPolicy) super.clone();
  }

}
