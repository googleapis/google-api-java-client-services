/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.airquality.v1.model;

/**
 * The request definition of the air quality current conditions.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Air Quality API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LookupCurrentConditionsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Expresses a 'country/region to AQI' relationship. Pairs a country/region with a
   * desired AQI so that air quality data that is required for that country/region will be displayed
   * according to the chosen AQI. This parameter can be used to specify a non-default AQI for a
   * given country, for example, to get the US EPA index for Canada rather than the default index
   * for Canada.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CustomLocalAqi> customLocalAqis;

  static {
    // hack to force ProGuard to consider CustomLocalAqi used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CustomLocalAqi.class);
  }

  /**
   * Optional. Additional features that can be optionally enabled. Specifying extra computations
   * will result in the relevant elements and fields to be returned in the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> extraComputations;

  /**
   * Optional. Allows the client to choose the language for the response. If data cannot be provided
   * for that language the API uses the closest match. Allowed values rely on the IETF standard.
   * Default value is en.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Required. The longitude and latitude from which the API looks for air quality current
   * conditions data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LatLng location;

  /**
   * Optional. Determines the color palette used for data provided by the 'Universal Air Quality
   * Index' (UAQI). This color palette is relevant just for UAQI, other AQIs have a predetermined
   * color palette that can't be controlled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uaqiColorPalette;

  /**
   * Optional. If set to true, the Universal AQI will be included in the 'indexes' field of the
   * response. Default value is true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean universalAqi;

  /**
   * Optional. Expresses a 'country/region to AQI' relationship. Pairs a country/region with a
   * desired AQI so that air quality data that is required for that country/region will be displayed
   * according to the chosen AQI. This parameter can be used to specify a non-default AQI for a
   * given country, for example, to get the US EPA index for Canada rather than the default index
   * for Canada.
   * @return value or {@code null} for none
   */
  public java.util.List<CustomLocalAqi> getCustomLocalAqis() {
    return customLocalAqis;
  }

  /**
   * Optional. Expresses a 'country/region to AQI' relationship. Pairs a country/region with a
   * desired AQI so that air quality data that is required for that country/region will be displayed
   * according to the chosen AQI. This parameter can be used to specify a non-default AQI for a
   * given country, for example, to get the US EPA index for Canada rather than the default index
   * for Canada.
   * @param customLocalAqis customLocalAqis or {@code null} for none
   */
  public LookupCurrentConditionsRequest setCustomLocalAqis(java.util.List<CustomLocalAqi> customLocalAqis) {
    this.customLocalAqis = customLocalAqis;
    return this;
  }

  /**
   * Optional. Additional features that can be optionally enabled. Specifying extra computations
   * will result in the relevant elements and fields to be returned in the response.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getExtraComputations() {
    return extraComputations;
  }

  /**
   * Optional. Additional features that can be optionally enabled. Specifying extra computations
   * will result in the relevant elements and fields to be returned in the response.
   * @param extraComputations extraComputations or {@code null} for none
   */
  public LookupCurrentConditionsRequest setExtraComputations(java.util.List<java.lang.String> extraComputations) {
    this.extraComputations = extraComputations;
    return this;
  }

  /**
   * Optional. Allows the client to choose the language for the response. If data cannot be provided
   * for that language the API uses the closest match. Allowed values rely on the IETF standard.
   * Default value is en.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * Optional. Allows the client to choose the language for the response. If data cannot be provided
   * for that language the API uses the closest match. Allowed values rely on the IETF standard.
   * Default value is en.
   * @param languageCode languageCode or {@code null} for none
   */
  public LookupCurrentConditionsRequest setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Required. The longitude and latitude from which the API looks for air quality current
   * conditions data.
   * @return value or {@code null} for none
   */
  public LatLng getLocation() {
    return location;
  }

  /**
   * Required. The longitude and latitude from which the API looks for air quality current
   * conditions data.
   * @param location location or {@code null} for none
   */
  public LookupCurrentConditionsRequest setLocation(LatLng location) {
    this.location = location;
    return this;
  }

  /**
   * Optional. Determines the color palette used for data provided by the 'Universal Air Quality
   * Index' (UAQI). This color palette is relevant just for UAQI, other AQIs have a predetermined
   * color palette that can't be controlled.
   * @return value or {@code null} for none
   */
  public java.lang.String getUaqiColorPalette() {
    return uaqiColorPalette;
  }

  /**
   * Optional. Determines the color palette used for data provided by the 'Universal Air Quality
   * Index' (UAQI). This color palette is relevant just for UAQI, other AQIs have a predetermined
   * color palette that can't be controlled.
   * @param uaqiColorPalette uaqiColorPalette or {@code null} for none
   */
  public LookupCurrentConditionsRequest setUaqiColorPalette(java.lang.String uaqiColorPalette) {
    this.uaqiColorPalette = uaqiColorPalette;
    return this;
  }

  /**
   * Optional. If set to true, the Universal AQI will be included in the 'indexes' field of the
   * response. Default value is true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUniversalAqi() {
    return universalAqi;
  }

  /**
   * Optional. If set to true, the Universal AQI will be included in the 'indexes' field of the
   * response. Default value is true.
   * @param universalAqi universalAqi or {@code null} for none
   */
  public LookupCurrentConditionsRequest setUniversalAqi(java.lang.Boolean universalAqi) {
    this.universalAqi = universalAqi;
    return this;
  }

  @Override
  public LookupCurrentConditionsRequest set(String fieldName, Object value) {
    return (LookupCurrentConditionsRequest) super.set(fieldName, value);
  }

  @Override
  public LookupCurrentConditionsRequest clone() {
    return (LookupCurrentConditionsRequest) super.clone();
  }

}
