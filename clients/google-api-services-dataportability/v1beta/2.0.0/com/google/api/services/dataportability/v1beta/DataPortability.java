/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataportability.v1beta;

/**
 * Service definition for DataPortability (v1beta).
 *
 * <p>
 * The Data Portability API lets you build applications that request authorization from a user to move a copy of data from Google services into your application. This enables data portability and facilitates switching services.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/data-portability" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DataPortabilityRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DataPortability extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Data Portability API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://dataportability.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://dataportability.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DataPortability(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DataPortability(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the ArchiveJobs collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataPortability dataportability = new DataPortability(...);}
   *   {@code DataPortability.ArchiveJobs.List request = dataportability.archiveJobs().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ArchiveJobs archiveJobs() {
    return new ArchiveJobs();
  }

  /**
   * The "archiveJobs" collection of methods.
   */
  public class ArchiveJobs {

    /**
     * Cancels a Portability Archive job.
     *
     * Create a request for the method "archiveJobs.cancel".
     *
     * This request holds the parameters needed by the dataportability server.  After setting any
     * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param name Required. The Archive job ID you're canceling. This is returned by the InitiatePortabilityArchive
     *        response. The format is: archiveJobs/{archive_job}. Canceling is only executed if the job
     *        is in progress.
     * @param content the {@link com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveRequest}
     * @return the request
     */
    public Cancel cancel(java.lang.String name, com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveRequest content) throws java.io.IOException {
      Cancel result = new Cancel(name, content);
      initialize(result);
      return result;
    }

    public class Cancel extends DataPortabilityRequest<com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveResponse> {

      private static final String REST_PATH = "v1beta/{+name}:cancel";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^archiveJobs/[^/]+$");

      /**
       * Cancels a Portability Archive job.
       *
       * Create a request for the method "archiveJobs.cancel".
       *
       * This request holds the parameters needed by the the dataportability server.  After setting any
       * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       * <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The Archive job ID you're canceling. This is returned by the InitiatePortabilityArchive
     *        response. The format is: archiveJobs/{archive_job}. Canceling is only executed if the job
     *        is in progress.
       * @param content the {@link com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveRequest}
       * @since 1.13
       */
      protected Cancel(java.lang.String name, com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveRequest content) {
        super(DataPortability.this, "POST", REST_PATH, content, com.google.api.services.dataportability.v1beta.model.CancelPortabilityArchiveResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+$");
        }
      }

      @Override
      public Cancel set$Xgafv(java.lang.String $Xgafv) {
        return (Cancel) super.set$Xgafv($Xgafv);
      }

      @Override
      public Cancel setAccessToken(java.lang.String accessToken) {
        return (Cancel) super.setAccessToken(accessToken);
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setCallback(java.lang.String callback) {
        return (Cancel) super.setCallback(callback);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUploadType(java.lang.String uploadType) {
        return (Cancel) super.setUploadType(uploadType);
      }

      @Override
      public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
        return (Cancel) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The Archive job ID you're canceling. This is returned by the
       * InitiatePortabilityArchive response. The format is: archiveJobs/{archive_job}. Canceling is
       * only executed if the job is in progress.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The Archive job ID you're canceling. This is returned by the InitiatePortabilityArchive
     response. The format is: archiveJobs/{archive_job}. Canceling is only executed if the job is in
     progress.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The Archive job ID you're canceling. This is returned by the
       * InitiatePortabilityArchive response. The format is: archiveJobs/{archive_job}. Canceling is
       * only executed if the job is in progress.
       */
      public Cancel setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the state of an Archive job for the Portability API.
     *
     * Create a request for the method "archiveJobs.getPortabilityArchiveState".
     *
     * This request holds the parameters needed by the dataportability server.  After setting any
     * optional parameters, call the {@link GetPortabilityArchiveState#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The archive job ID that is returned when you request the state of the job. The format is:
     *        archiveJobs/{archive_job}/portabilityArchiveState. archive_job is the job ID returned by
     *        the InitiatePortabilityArchiveResponse.
     * @return the request
     */
    public GetPortabilityArchiveState getPortabilityArchiveState(java.lang.String name) throws java.io.IOException {
      GetPortabilityArchiveState result = new GetPortabilityArchiveState(name);
      initialize(result);
      return result;
    }

    public class GetPortabilityArchiveState extends DataPortabilityRequest<com.google.api.services.dataportability.v1beta.model.PortabilityArchiveState> {

      private static final String REST_PATH = "v1beta/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^archiveJobs/[^/]+/portabilityArchiveState$");

      /**
       * Retrieves the state of an Archive job for the Portability API.
       *
       * Create a request for the method "archiveJobs.getPortabilityArchiveState".
       *
       * This request holds the parameters needed by the the dataportability server.  After setting any
       * optional parameters, call the {@link GetPortabilityArchiveState#execute()} method to invoke the
       * remote operation. <p> {@link GetPortabilityArchiveState#initialize(com.google.api.client.google
       * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Required. The archive job ID that is returned when you request the state of the job. The format is:
     *        archiveJobs/{archive_job}/portabilityArchiveState. archive_job is the job ID returned by
     *        the InitiatePortabilityArchiveResponse.
       * @since 1.13
       */
      protected GetPortabilityArchiveState(java.lang.String name) {
        super(DataPortability.this, "GET", REST_PATH, null, com.google.api.services.dataportability.v1beta.model.PortabilityArchiveState.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+/portabilityArchiveState$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPortabilityArchiveState set$Xgafv(java.lang.String $Xgafv) {
        return (GetPortabilityArchiveState) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetPortabilityArchiveState setAccessToken(java.lang.String accessToken) {
        return (GetPortabilityArchiveState) super.setAccessToken(accessToken);
      }

      @Override
      public GetPortabilityArchiveState setAlt(java.lang.String alt) {
        return (GetPortabilityArchiveState) super.setAlt(alt);
      }

      @Override
      public GetPortabilityArchiveState setCallback(java.lang.String callback) {
        return (GetPortabilityArchiveState) super.setCallback(callback);
      }

      @Override
      public GetPortabilityArchiveState setFields(java.lang.String fields) {
        return (GetPortabilityArchiveState) super.setFields(fields);
      }

      @Override
      public GetPortabilityArchiveState setKey(java.lang.String key) {
        return (GetPortabilityArchiveState) super.setKey(key);
      }

      @Override
      public GetPortabilityArchiveState setOauthToken(java.lang.String oauthToken) {
        return (GetPortabilityArchiveState) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPortabilityArchiveState setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPortabilityArchiveState) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPortabilityArchiveState setQuotaUser(java.lang.String quotaUser) {
        return (GetPortabilityArchiveState) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPortabilityArchiveState setUploadType(java.lang.String uploadType) {
        return (GetPortabilityArchiveState) super.setUploadType(uploadType);
      }

      @Override
      public GetPortabilityArchiveState setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetPortabilityArchiveState) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The archive job ID that is returned when you request the state of the job. The
       * format is: archiveJobs/{archive_job}/portabilityArchiveState. archive_job is the job ID
       * returned by the InitiatePortabilityArchiveResponse.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The archive job ID that is returned when you request the state of the job. The format is:
     archiveJobs/{archive_job}/portabilityArchiveState. archive_job is the job ID returned by the
     InitiatePortabilityArchiveResponse.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The archive job ID that is returned when you request the state of the job. The
       * format is: archiveJobs/{archive_job}/portabilityArchiveState. archive_job is the job ID
       * returned by the InitiatePortabilityArchiveResponse.
       */
      public GetPortabilityArchiveState setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+/portabilityArchiveState$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetPortabilityArchiveState set(String parameterName, Object value) {
        return (GetPortabilityArchiveState) super.set(parameterName, value);
      }
    }
    /**
     * Retries a failed Portability Archive job.
     *
     * Create a request for the method "archiveJobs.retry".
     *
     * This request holds the parameters needed by the dataportability server.  After setting any
     * optional parameters, call the {@link Retry#execute()} method to invoke the remote operation.
     *
     * @param name Required. The Archive job ID you're retrying. This is returned by the
     *        InitiatePortabilityArchiveResponse. Retrying is only executed if the initial job failed.
     * @param content the {@link com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveRequest}
     * @return the request
     */
    public Retry retry(java.lang.String name, com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveRequest content) throws java.io.IOException {
      Retry result = new Retry(name, content);
      initialize(result);
      return result;
    }

    public class Retry extends DataPortabilityRequest<com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveResponse> {

      private static final String REST_PATH = "v1beta/{+name}:retry";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^archiveJobs/[^/]+$");

      /**
       * Retries a failed Portability Archive job.
       *
       * Create a request for the method "archiveJobs.retry".
       *
       * This request holds the parameters needed by the the dataportability server.  After setting any
       * optional parameters, call the {@link Retry#execute()} method to invoke the remote operation.
       * <p> {@link
       * Retry#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The Archive job ID you're retrying. This is returned by the
     *        InitiatePortabilityArchiveResponse. Retrying is only executed if the initial job failed.
       * @param content the {@link com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveRequest}
       * @since 1.13
       */
      protected Retry(java.lang.String name, com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveRequest content) {
        super(DataPortability.this, "POST", REST_PATH, content, com.google.api.services.dataportability.v1beta.model.RetryPortabilityArchiveResponse.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+$");
        }
      }

      @Override
      public Retry set$Xgafv(java.lang.String $Xgafv) {
        return (Retry) super.set$Xgafv($Xgafv);
      }

      @Override
      public Retry setAccessToken(java.lang.String accessToken) {
        return (Retry) super.setAccessToken(accessToken);
      }

      @Override
      public Retry setAlt(java.lang.String alt) {
        return (Retry) super.setAlt(alt);
      }

      @Override
      public Retry setCallback(java.lang.String callback) {
        return (Retry) super.setCallback(callback);
      }

      @Override
      public Retry setFields(java.lang.String fields) {
        return (Retry) super.setFields(fields);
      }

      @Override
      public Retry setKey(java.lang.String key) {
        return (Retry) super.setKey(key);
      }

      @Override
      public Retry setOauthToken(java.lang.String oauthToken) {
        return (Retry) super.setOauthToken(oauthToken);
      }

      @Override
      public Retry setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Retry) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Retry setQuotaUser(java.lang.String quotaUser) {
        return (Retry) super.setQuotaUser(quotaUser);
      }

      @Override
      public Retry setUploadType(java.lang.String uploadType) {
        return (Retry) super.setUploadType(uploadType);
      }

      @Override
      public Retry setUploadProtocol(java.lang.String uploadProtocol) {
        return (Retry) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The Archive job ID you're retrying. This is returned by the
       * InitiatePortabilityArchiveResponse. Retrying is only executed if the initial job failed.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The Archive job ID you're retrying. This is returned by the
     InitiatePortabilityArchiveResponse. Retrying is only executed if the initial job failed.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The Archive job ID you're retrying. This is returned by the
       * InitiatePortabilityArchiveResponse. Retrying is only executed if the initial job failed.
       */
      public Retry setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^archiveJobs/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Retry set(String parameterName, Object value) {
        return (Retry) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Authorization collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataPortability dataportability = new DataPortability(...);}
   *   {@code DataPortability.Authorization.List request = dataportability.authorization().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Authorization authorization() {
    return new Authorization();
  }

  /**
   * The "authorization" collection of methods.
   */
  public class Authorization {

    /**
     * Revokes OAuth tokens and resets exhausted scopes for a user/project pair. This method allows you
     * to initiate a request after a new consent is granted. This method also indicates that previous
     * archives can be garbage collected. You should call this method when all jobs are complete and all
     * archives are downloaded. Do not call it only when you start a new job.
     *
     * Create a request for the method "authorization.reset".
     *
     * This request holds the parameters needed by the dataportability server.  After setting any
     * optional parameters, call the {@link Reset#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.dataportability.v1beta.model.ResetAuthorizationRequest}
     * @return the request
     */
    public Reset reset(com.google.api.services.dataportability.v1beta.model.ResetAuthorizationRequest content) throws java.io.IOException {
      Reset result = new Reset(content);
      initialize(result);
      return result;
    }

    public class Reset extends DataPortabilityRequest<com.google.api.services.dataportability.v1beta.model.Empty> {

      private static final String REST_PATH = "v1beta/authorization:reset";

      /**
       * Revokes OAuth tokens and resets exhausted scopes for a user/project pair. This method allows
       * you to initiate a request after a new consent is granted. This method also indicates that
       * previous archives can be garbage collected. You should call this method when all jobs are
       * complete and all archives are downloaded. Do not call it only when you start a new job.
       *
       * Create a request for the method "authorization.reset".
       *
       * This request holds the parameters needed by the the dataportability server.  After setting any
       * optional parameters, call the {@link Reset#execute()} method to invoke the remote operation.
       * <p> {@link
       * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.dataportability.v1beta.model.ResetAuthorizationRequest}
       * @since 1.13
       */
      protected Reset(com.google.api.services.dataportability.v1beta.model.ResetAuthorizationRequest content) {
        super(DataPortability.this, "POST", REST_PATH, content, com.google.api.services.dataportability.v1beta.model.Empty.class);
      }

      @Override
      public Reset set$Xgafv(java.lang.String $Xgafv) {
        return (Reset) super.set$Xgafv($Xgafv);
      }

      @Override
      public Reset setAccessToken(java.lang.String accessToken) {
        return (Reset) super.setAccessToken(accessToken);
      }

      @Override
      public Reset setAlt(java.lang.String alt) {
        return (Reset) super.setAlt(alt);
      }

      @Override
      public Reset setCallback(java.lang.String callback) {
        return (Reset) super.setCallback(callback);
      }

      @Override
      public Reset setFields(java.lang.String fields) {
        return (Reset) super.setFields(fields);
      }

      @Override
      public Reset setKey(java.lang.String key) {
        return (Reset) super.setKey(key);
      }

      @Override
      public Reset setOauthToken(java.lang.String oauthToken) {
        return (Reset) super.setOauthToken(oauthToken);
      }

      @Override
      public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Reset) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Reset setQuotaUser(java.lang.String quotaUser) {
        return (Reset) super.setQuotaUser(quotaUser);
      }

      @Override
      public Reset setUploadType(java.lang.String uploadType) {
        return (Reset) super.setUploadType(uploadType);
      }

      @Override
      public Reset setUploadProtocol(java.lang.String uploadProtocol) {
        return (Reset) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Reset set(String parameterName, Object value) {
        return (Reset) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PortabilityArchive collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataPortability dataportability = new DataPortability(...);}
   *   {@code DataPortability.PortabilityArchive.List request = dataportability.portabilityArchive().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PortabilityArchive portabilityArchive() {
    return new PortabilityArchive();
  }

  /**
   * The "portabilityArchive" collection of methods.
   */
  public class PortabilityArchive {

    /**
     * Initiates a new Archive job for the Portability API.
     *
     * Create a request for the method "portabilityArchive.initiate".
     *
     * This request holds the parameters needed by the dataportability server.  After setting any
     * optional parameters, call the {@link Initiate#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveRequest}
     * @return the request
     */
    public Initiate initiate(com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveRequest content) throws java.io.IOException {
      Initiate result = new Initiate(content);
      initialize(result);
      return result;
    }

    public class Initiate extends DataPortabilityRequest<com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveResponse> {

      private static final String REST_PATH = "v1beta/portabilityArchive:initiate";

      /**
       * Initiates a new Archive job for the Portability API.
       *
       * Create a request for the method "portabilityArchive.initiate".
       *
       * This request holds the parameters needed by the the dataportability server.  After setting any
       * optional parameters, call the {@link Initiate#execute()} method to invoke the remote operation.
       * <p> {@link
       * Initiate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveRequest}
       * @since 1.13
       */
      protected Initiate(com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveRequest content) {
        super(DataPortability.this, "POST", REST_PATH, content, com.google.api.services.dataportability.v1beta.model.InitiatePortabilityArchiveResponse.class);
      }

      @Override
      public Initiate set$Xgafv(java.lang.String $Xgafv) {
        return (Initiate) super.set$Xgafv($Xgafv);
      }

      @Override
      public Initiate setAccessToken(java.lang.String accessToken) {
        return (Initiate) super.setAccessToken(accessToken);
      }

      @Override
      public Initiate setAlt(java.lang.String alt) {
        return (Initiate) super.setAlt(alt);
      }

      @Override
      public Initiate setCallback(java.lang.String callback) {
        return (Initiate) super.setCallback(callback);
      }

      @Override
      public Initiate setFields(java.lang.String fields) {
        return (Initiate) super.setFields(fields);
      }

      @Override
      public Initiate setKey(java.lang.String key) {
        return (Initiate) super.setKey(key);
      }

      @Override
      public Initiate setOauthToken(java.lang.String oauthToken) {
        return (Initiate) super.setOauthToken(oauthToken);
      }

      @Override
      public Initiate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Initiate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Initiate setQuotaUser(java.lang.String quotaUser) {
        return (Initiate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Initiate setUploadType(java.lang.String uploadType) {
        return (Initiate) super.setUploadType(uploadType);
      }

      @Override
      public Initiate setUploadProtocol(java.lang.String uploadProtocol) {
        return (Initiate) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Initiate set(String parameterName, Object value) {
        return (Initiate) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link DataPortability}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DataPortability}. */
    @Override
    public DataPortability build() {
      return new DataPortability(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DataPortabilityRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDataPortabilityRequestInitializer(
        DataPortabilityRequestInitializer dataportabilityRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dataportabilityRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
