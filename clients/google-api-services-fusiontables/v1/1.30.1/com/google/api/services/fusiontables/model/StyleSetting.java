/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.fusiontables.model;

/**
 * Represents a complete StyleSettings object. The primary key is a combination of the tableId and a
 * styleId.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Fusion Tables API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StyleSetting extends com.google.api.client.json.GenericJson {

  /**
   * Type name: an individual style setting. A StyleSetting contains the style defintions for
   * points, lines, and polygons in a table. Since a table can have any one or all of them, a style
   * definition can have point, line and polygon style definitions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Style definition for points in the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PointStyle markerOptions;

  /**
   * Optional name for the style setting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Style definition for polygons in the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolygonStyle polygonOptions;

  /**
   * Style definition for lines in the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LineStyle polylineOptions;

  /**
   * Identifier for the style setting (unique only within tables).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer styleId;

  /**
   * Identifier for the table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tableId;

  /**
   * Type name: an individual style setting. A StyleSetting contains the style defintions for
   * points, lines, and polygons in a table. Since a table can have any one or all of them, a style
   * definition can have point, line and polygon style definitions.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Type name: an individual style setting. A StyleSetting contains the style defintions for
   * points, lines, and polygons in a table. Since a table can have any one or all of them, a style
   * definition can have point, line and polygon style definitions.
   * @param kind kind or {@code null} for none
   */
  public StyleSetting setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Style definition for points in the table.
   * @return value or {@code null} for none
   */
  public PointStyle getMarkerOptions() {
    return markerOptions;
  }

  /**
   * Style definition for points in the table.
   * @param markerOptions markerOptions or {@code null} for none
   */
  public StyleSetting setMarkerOptions(PointStyle markerOptions) {
    this.markerOptions = markerOptions;
    return this;
  }

  /**
   * Optional name for the style setting.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional name for the style setting.
   * @param name name or {@code null} for none
   */
  public StyleSetting setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Style definition for polygons in the table.
   * @return value or {@code null} for none
   */
  public PolygonStyle getPolygonOptions() {
    return polygonOptions;
  }

  /**
   * Style definition for polygons in the table.
   * @param polygonOptions polygonOptions or {@code null} for none
   */
  public StyleSetting setPolygonOptions(PolygonStyle polygonOptions) {
    this.polygonOptions = polygonOptions;
    return this;
  }

  /**
   * Style definition for lines in the table.
   * @return value or {@code null} for none
   */
  public LineStyle getPolylineOptions() {
    return polylineOptions;
  }

  /**
   * Style definition for lines in the table.
   * @param polylineOptions polylineOptions or {@code null} for none
   */
  public StyleSetting setPolylineOptions(LineStyle polylineOptions) {
    this.polylineOptions = polylineOptions;
    return this;
  }

  /**
   * Identifier for the style setting (unique only within tables).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStyleId() {
    return styleId;
  }

  /**
   * Identifier for the style setting (unique only within tables).
   * @param styleId styleId or {@code null} for none
   */
  public StyleSetting setStyleId(java.lang.Integer styleId) {
    this.styleId = styleId;
    return this;
  }

  /**
   * Identifier for the table.
   * @return value or {@code null} for none
   */
  public java.lang.String getTableId() {
    return tableId;
  }

  /**
   * Identifier for the table.
   * @param tableId tableId or {@code null} for none
   */
  public StyleSetting setTableId(java.lang.String tableId) {
    this.tableId = tableId;
    return this;
  }

  @Override
  public StyleSetting set(String fieldName, Object value) {
    return (StyleSetting) super.set(fieldName, value);
  }

  @Override
  public StyleSetting clone() {
    return (StyleSetting) super.clone();
  }

}
