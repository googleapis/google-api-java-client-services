/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Reference to a user, group, or domain.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Principal extends com.google.api.client.json.GenericJson {

  /**
   * This principal is a group identified using an external identity. The name field must specify
   * the group resource name with this format: identitysources/{source_id}/groups/{ID}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupResourceName;

  /**
   * This principal is a GSuite user, group or domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GSuitePrincipal gsuitePrincipal;

  /**
   * This principal is a user identified using an external identity. The name field must specify the
   * user resource name with this format: identitysources/{source_id}/users/{ID}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userResourceName;

  /**
   * This principal is a group identified using an external identity. The name field must specify
   * the group resource name with this format: identitysources/{source_id}/groups/{ID}
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupResourceName() {
    return groupResourceName;
  }

  /**
   * This principal is a group identified using an external identity. The name field must specify
   * the group resource name with this format: identitysources/{source_id}/groups/{ID}
   * @param groupResourceName groupResourceName or {@code null} for none
   */
  public Principal setGroupResourceName(java.lang.String groupResourceName) {
    this.groupResourceName = groupResourceName;
    return this;
  }

  /**
   * This principal is a GSuite user, group or domain.
   * @return value or {@code null} for none
   */
  public GSuitePrincipal getGsuitePrincipal() {
    return gsuitePrincipal;
  }

  /**
   * This principal is a GSuite user, group or domain.
   * @param gsuitePrincipal gsuitePrincipal or {@code null} for none
   */
  public Principal setGsuitePrincipal(GSuitePrincipal gsuitePrincipal) {
    this.gsuitePrincipal = gsuitePrincipal;
    return this;
  }

  /**
   * This principal is a user identified using an external identity. The name field must specify the
   * user resource name with this format: identitysources/{source_id}/users/{ID}
   * @return value or {@code null} for none
   */
  public java.lang.String getUserResourceName() {
    return userResourceName;
  }

  /**
   * This principal is a user identified using an external identity. The name field must specify the
   * user resource name with this format: identitysources/{source_id}/users/{ID}
   * @param userResourceName userResourceName or {@code null} for none
   */
  public Principal setUserResourceName(java.lang.String userResourceName) {
    this.userResourceName = userResourceName;
    return this;
  }

  @Override
  public Principal set(String fieldName, Object value) {
    return (Principal) super.set(fieldName, value);
  }

  @Override
  public Principal clone() {
    return (Principal) super.clone();
  }

}
