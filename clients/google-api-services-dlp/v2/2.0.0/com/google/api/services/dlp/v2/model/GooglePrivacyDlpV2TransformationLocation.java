/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Specifies the location of a transformation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TransformationLocation extends com.google.api.client.json.GenericJson {

  /**
   * Information about the functionality of the container where this finding occurred, if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerType;

  /**
   * For infotype transformations, link to the corresponding findings ID so that location
   * information does not need to be duplicated. Each findings ID correlates to an entry in the
   * findings output table, this table only gets created when users specify to save findings (add
   * the save findings action to the request).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String findingId;

  /**
   * For record transformations, provide a field and container information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2RecordTransformation recordTransformation;

  /**
   * Information about the functionality of the container where this finding occurred, if available.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerType() {
    return containerType;
  }

  /**
   * Information about the functionality of the container where this finding occurred, if available.
   * @param containerType containerType or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationLocation setContainerType(java.lang.String containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * For infotype transformations, link to the corresponding findings ID so that location
   * information does not need to be duplicated. Each findings ID correlates to an entry in the
   * findings output table, this table only gets created when users specify to save findings (add
   * the save findings action to the request).
   * @return value or {@code null} for none
   */
  public java.lang.String getFindingId() {
    return findingId;
  }

  /**
   * For infotype transformations, link to the corresponding findings ID so that location
   * information does not need to be duplicated. Each findings ID correlates to an entry in the
   * findings output table, this table only gets created when users specify to save findings (add
   * the save findings action to the request).
   * @param findingId findingId or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationLocation setFindingId(java.lang.String findingId) {
    this.findingId = findingId;
    return this;
  }

  /**
   * For record transformations, provide a field and container information.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2RecordTransformation getRecordTransformation() {
    return recordTransformation;
  }

  /**
   * For record transformations, provide a field and container information.
   * @param recordTransformation recordTransformation or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationLocation setRecordTransformation(GooglePrivacyDlpV2RecordTransformation recordTransformation) {
    this.recordTransformation = recordTransformation;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TransformationLocation set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TransformationLocation) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TransformationLocation clone() {
    return (GooglePrivacyDlpV2TransformationLocation) super.clone();
  }

}
