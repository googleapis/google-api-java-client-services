{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        },
        "https://www.googleapis.com/auth/compute.readonly": {
          "description": "View your Google Compute Engine resources"
        },
        "https://www.googleapis.com/auth/compute": {
          "description": "View and manage your Google Compute Engine resources"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Manages Google Cloud Dataflow projects on Google Cloud Platform.",
  "kind": "discovery#restDescription",
  "rootUrl": "https://dataflow.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "dataflow",
  "batchPath": "batch",
  "mtlsRootUrl": "https://dataflow.mtls.googleapis.com/",
  "revision": "20200507",
  "documentationLink": "https://cloud.google.com/dataflow",
  "id": "dataflow:v1b3",
  "title": "Dataflow API",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "methods": {
        "workerMessages": {
          "response": {
            "$ref": "SendWorkerMessagesResponse"
          },
          "parameterOrder": [
            "projectId"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameters": {
            "projectId": {
              "description": "The project to send the WorkerMessages to.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "v1b3/projects/{projectId}/WorkerMessages",
          "id": "dataflow.projects.workerMessages",
          "path": "v1b3/projects/{projectId}/WorkerMessages",
          "description": "Send a worker_message to the service.",
          "request": {
            "$ref": "SendWorkerMessagesRequest"
          }
        },
        "deleteSnapshots": {
          "path": "v1b3/projects/{projectId}/snapshots",
          "id": "dataflow.projects.deleteSnapshots",
          "description": "Deletes a snapshot.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "projectId"
          ],
          "response": {
            "$ref": "DeleteSnapshotResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameters": {
            "projectId": {
              "location": "path",
              "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
              "type": "string",
              "required": true
            },
            "snapshotId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the snapshot."
            },
            "location": {
              "location": "query",
              "description": "The location that contains this snapshot.",
              "type": "string"
            }
          },
          "flatPath": "v1b3/projects/{projectId}/snapshots"
        }
      },
      "resources": {
        "templates": {
          "methods": {
            "launch": {
              "description": "Launch a template.",
              "request": {
                "$ref": "LaunchTemplateParameters"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "LaunchTemplateResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "validateOnly": {
                  "location": "query",
                  "description": "If true, the request is validated but not actually executed.\nDefaults to false.",
                  "type": "boolean"
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to."
                },
                "gcsPath": {
                  "location": "query",
                  "description": "A Cloud Storage path to the template from which to create\nthe job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                  "type": "string"
                },
                "location": {
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                  "type": "string",
                  "location": "query"
                },
                "dynamicTemplate.gcsPath": {
                  "location": "query",
                  "description": "Path to dynamic template spec file on GCS.\nThe file must be a Json serialized DynamicTemplateFieSpec object.",
                  "type": "string"
                },
                "dynamicTemplate.stagingLocation": {
                  "location": "query",
                  "description": "Cloud Storage path for staging dependencies.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/templates:launch",
              "path": "v1b3/projects/{projectId}/templates:launch",
              "id": "dataflow.projects.templates.launch"
            },
            "get": {
              "response": {
                "$ref": "GetTemplateResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "view": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "METADATA_ONLY"
                  ],
                  "description": "The view to retrieve. Defaults to METADATA_ONLY."
                },
                "projectId": {
                  "location": "path",
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string",
                  "required": true
                },
                "gcsPath": {
                  "location": "query",
                  "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                  "type": "string"
                },
                "location": {
                  "type": "string",
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request."
                }
              },
              "flatPath": "v1b3/projects/{projectId}/templates:get",
              "id": "dataflow.projects.templates.get",
              "path": "v1b3/projects/{projectId}/templates:get",
              "description": "Get the template associated with a template."
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "Job"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1b3/projects/{projectId}/templates",
              "path": "v1b3/projects/{projectId}/templates",
              "id": "dataflow.projects.templates.create",
              "description": "Creates a Cloud Dataflow job from a template.",
              "request": {
                "$ref": "CreateJobFromTemplateRequest"
              }
            }
          }
        },
        "jobs": {
          "methods": {
            "list": {
              "description": "List the jobs of a project.\n\nTo list the jobs of a project in a region, we recommend using\n`projects.locations.jobs.get` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To\nlist the all jobs across all regions, use `projects.jobs.aggregated`. Using\n`projects.jobs.list` is not recommended, as you can only get the list of\njobs that are running in `us-central1`.",
              "response": {
                "$ref": "ListJobsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ],
                  "description": "The kind of filter to use.",
                  "type": "string"
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                  "type": "integer",
                  "location": "query"
                },
                "view": {
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ]
                },
                "projectId": {
                  "location": "path",
                  "description": "The project which owns the jobs.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "id": "dataflow.projects.jobs.list",
              "path": "v1b3/projects/{projectId}/jobs"
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "Job"
              },
              "parameters": {
                "location": {
                  "type": "string",
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job."
                },
                "replaceJobId": {
                  "location": "query",
                  "description": "Deprecated. This field is now in the Job message.",
                  "type": "string"
                },
                "view": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "The level of information requested in response."
                },
                "projectId": {
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "path": "v1b3/projects/{projectId}/jobs",
              "id": "dataflow.projects.jobs.create",
              "request": {
                "$ref": "Job"
              },
              "description": "Creates a Cloud Dataflow job.\n\nTo create a job, we recommend using `projects.locations.jobs.create` with a\n[regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.create` is not recommended, as your job will always start\nin `us-central1`."
            },
            "getMetrics": {
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "id": "dataflow.projects.jobs.getMetrics",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.getMetrics` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.getMetrics` is not recommended, as you can only request the\nstatus of jobs that are running in `us-central1`.",
              "response": {
                "$ref": "JobMetrics"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "startTime": {
                  "location": "query",
                  "format": "google-datetime",
                  "description": "Return only metric data that has changed since this time.\nDefault is to return all information about all metrics for the job.",
                  "type": "string"
                },
                "jobId": {
                  "description": "The job to get messages for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "projectId": {
                  "location": "path",
                  "description": "A project id.",
                  "type": "string",
                  "required": true
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "get": {
              "description": "Gets the state of the specified Cloud Dataflow job.\n\nTo get the state of a job, we recommend using `projects.locations.jobs.get`\nwith a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.get` is not recommended, as you can only get the state of\njobs that are running in `us-central1`.",
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "view": {
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "The level of information requested in response.",
                  "type": "string"
                },
                "jobId": {
                  "location": "path",
                  "description": "The job ID.",
                  "type": "string",
                  "required": true
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The ID of the Cloud Platform project that the job belongs to."
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}",
              "id": "dataflow.projects.jobs.get",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}"
            },
            "update": {
              "description": "Updates the state of an existing Cloud Dataflow job.\n\nTo update the state of an existing job, we recommend using\n`projects.locations.jobs.update` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.update` is not recommended, as you can only update the state\nof jobs that are running in `us-central1`.",
              "request": {
                "$ref": "Job"
              },
              "httpMethod": "PUT",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Job"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "jobId": {
                  "location": "path",
                  "description": "The job ID.",
                  "type": "string",
                  "required": true
                },
                "projectId": {
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "location": {
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}",
              "id": "dataflow.projects.jobs.update"
            },
            "snapshot": {
              "path": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot",
              "id": "dataflow.projects.jobs.snapshot",
              "description": "Snapshot the state of a streaming job.",
              "request": {
                "$ref": "SnapshotJobRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Snapshot"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "jobId": {
                  "location": "path",
                  "description": "The job to be snapshotted.",
                  "type": "string",
                  "required": true
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The project which owns the job to be snapshotted."
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot"
            },
            "aggregated": {
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "ListJobsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "The project which owns the jobs.",
                  "type": "string",
                  "required": true
                },
                "filter": {
                  "description": "The kind of filter to use.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ]
                },
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                  "type": "integer"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs:aggregated",
              "path": "v1b3/projects/{projectId}/jobs:aggregated",
              "id": "dataflow.projects.jobs.aggregated",
              "description": "List the jobs of a project across all regions."
            }
          },
          "resources": {
            "workItems": {
              "methods": {
                "reportStatus": {
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus",
                  "id": "dataflow.projects.jobs.workItems.reportStatus",
                  "description": "Reports the status of dataflow WorkItems leased by a worker.",
                  "request": {
                    "$ref": "ReportWorkItemStatusRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "ReportWorkItemStatusResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "The job which the WorkItem is part of.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The project which owns the WorkItem's job."
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus"
                },
                "lease": {
                  "request": {
                    "$ref": "LeaseWorkItemRequest"
                  },
                  "description": "Leases a dataflow WorkItem to run.",
                  "response": {
                    "$ref": "LeaseWorkItemResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "jobId": {
                      "description": "Identifies the workflow job this worker belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "description": "Identifies the project this worker belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease",
                  "id": "dataflow.projects.jobs.workItems.lease",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease"
                }
              }
            },
            "debug": {
              "methods": {
                "sendCapture": {
                  "parameters": {
                    "jobId": {
                      "location": "path",
                      "description": "The job id.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "description": "The project id.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "id": "dataflow.projects.jobs.debug.sendCapture",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "request": {
                    "$ref": "SendDebugCaptureRequest"
                  },
                  "description": "Send encoded debug capture data for component.",
                  "response": {
                    "$ref": "SendDebugCaptureResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "POST"
                },
                "getConfig": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "GetDebugConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "The job id.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The project id."
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig",
                  "id": "dataflow.projects.jobs.debug.getConfig",
                  "description": "Get encoded debug configuration for component. Not cacheable.",
                  "request": {
                    "$ref": "GetDebugConfigRequest"
                  }
                }
              }
            },
            "messages": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListJobMessagesResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "jobId": {
                      "location": "path",
                      "description": "The job to get messages about.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "A project id."
                    },
                    "endTime": {
                      "location": "query",
                      "format": "google-datetime",
                      "description": "Return only messages with timestamps \u003c end_time. The default is now\n(i.e. return up to the latest messages available).",
                      "type": "string"
                    },
                    "location": {
                      "location": "query",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "If supplied, this should be the value of next_page_token returned\nby an earlier call. This will cause the next page of results to\nbe returned.",
                      "type": "string"
                    },
                    "startTime": {
                      "format": "google-datetime",
                      "description": "If specified, return only messages with timestamps \u003e= start_time.\nThe default is the job creation time (i.e. beginning of messages).",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "If specified, determines the maximum number of messages to\nreturn.  If unspecified, the service may choose an appropriate\ndefault, or may return an arbitrarily large number of results.",
                      "type": "integer"
                    },
                    "minimumImportance": {
                      "location": "query",
                      "enum": [
                        "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                        "JOB_MESSAGE_DEBUG",
                        "JOB_MESSAGE_DETAILED",
                        "JOB_MESSAGE_BASIC",
                        "JOB_MESSAGE_WARNING",
                        "JOB_MESSAGE_ERROR"
                      ],
                      "description": "Filter to only get messages with importance \u003e= level",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "id": "dataflow.projects.jobs.messages.list",
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.messages.list` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.messages.list` is not recommended, as you can only request\nthe status of jobs that are running in `us-central1`."
                }
              }
            }
          }
        },
        "catalogTemplates": {
          "methods": {
            "label": {
              "response": {
                "$ref": "ModifyTemplateVersionLabelResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path",
                  "description": "Resource name includes project_id, display_name, and version_id.\n\nUpdates by project_id(pid1), display_name(tid1), and version_id(vid1):\n  Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:label",
              "id": "dataflow.projects.catalogTemplates.label",
              "path": "v1b3/{+name}:label",
              "request": {
                "$ref": "ModifyTemplateVersionLabelRequest"
              },
              "description": "Updates the label of the TemplateVersion. Label can be duplicated in\nTemplate, so either add or remove the label in the TemplateVersion."
            },
            "delete": {
              "description": "Deletes an existing Template. Do nothing if Template does not exist.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "name includes project_id and display_name.\n\nDelete by project_id(pid1) and display_name(tid1).\n  Format: projects/{pid1}/catalogTemplates/{tid1}",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}",
              "id": "dataflow.projects.catalogTemplates.delete",
              "path": "v1b3/{+name}"
            },
            "commit": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "The location of the template, name includes project_id and display_name.\n\nCommit using project_id(pid1) and display_name(tid1).\n  Format: projects/{pid1}/catalogTemplates/{tid1}",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:commit",
              "id": "dataflow.projects.catalogTemplates.commit",
              "path": "v1b3/{+name}:commit",
              "description": "Creates a new TemplateVersion (Important: not new Template) entry in the\nspanner table. Requires project_id and display_name (template).",
              "request": {
                "$ref": "CommitTemplateVersionRequest"
              },
              "response": {
                "$ref": "TemplateVersion"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST"
            },
            "get": {
              "id": "dataflow.projects.catalogTemplates.get",
              "path": "v1b3/{+name}",
              "description": "Get TemplateVersion using project_id and display_name with an optional\nversion_id field. Get latest (has tag \"latest\") TemplateVersion if\nversion_id not set.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "TemplateVersion"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name includes project_id and display_name. version_id is optional.\nGet the latest TemplateVersion if version_id not set.\n\nGet by project_id(pid1) and display_name(tid1):\n  Format: projects/{pid1}/catalogTemplates/{tid1}\n\nGet by project_id(pid1), display_name(tid1), and version_id(vid1):\n  Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$"
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}"
            },
            "tag": {
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ModifyTemplateVersionTagResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name includes project_id, display_name, and version_id.\n\nUpdates by project_id(pid1), display_name(tid1), and version_id(vid1):\n  Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:tag",
              "path": "v1b3/{+name}:tag",
              "id": "dataflow.projects.catalogTemplates.tag",
              "description": "Updates the tag of the TemplateVersion, and tag is unique in Template.\nIf tag exists in another TemplateVersion in the Template, updates the tag\nto this TemplateVersion will remove it from the old TemplateVersion and add\nit to this TemplateVersion. If request is remove_only (remove_only = true),\nremove the tag from this TemplateVersion.",
              "request": {
                "$ref": "ModifyTemplateVersionTagRequest"
              }
            }
          },
          "resources": {
            "templateVersions": {
              "methods": {
                "create": {
                  "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}/templateVersions",
                  "path": "v1b3/{+parent}/templateVersions",
                  "id": "dataflow.projects.catalogTemplates.templateVersions.create",
                  "request": {
                    "$ref": "CreateTemplateVersionRequest"
                  },
                  "description": "Creates a new Template with TemplateVersion. Requires\nproject_id(projects) and template display_name(catalogTemplates).\nThe template display_name is set by the user.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "TemplateVersion"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The parent project and template that the TemplateVersion will be created\nunder.\n\nCreate using project_id(pid1) and display_name(tid1).\n  Format: projects/{pid1}/catalogTemplates/{tid1}",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            }
          }
        },
        "snapshots": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "parameters": {
                "location": {
                  "type": "string",
                  "location": "query",
                  "description": "The location to list snapshots in."
                },
                "jobId": {
                  "location": "query",
                  "description": "If specified, list snapshots created from this job.",
                  "type": "string"
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The project ID to list snapshots for."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/snapshots",
              "path": "v1b3/projects/{projectId}/snapshots",
              "id": "dataflow.projects.snapshots.list",
              "description": "Lists snapshots."
            },
            "get": {
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "projectId",
                "snapshotId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "location": {
                  "description": "The location that contains this snapshot.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "snapshotId": {
                  "description": "The ID of the snapshot.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/snapshots/{snapshotId}",
              "id": "dataflow.projects.snapshots.get",
              "path": "v1b3/projects/{projectId}/snapshots/{snapshotId}",
              "description": "Gets information about a snapshot."
            }
          }
        },
        "templateVersions": {
          "methods": {
            "list": {
              "id": "dataflow.projects.templateVersions.list",
              "path": "v1b3/{+parent}/templateVersions",
              "description": "List TemplateVersions using project_id and an optional display_name field.\nList all the TemplateVersions in the Template if display set.\nList all the TemplateVersions in the Project if display_name not set.",
              "response": {
                "$ref": "ListTemplateVersionsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The page token, received from a previous ListTemplateVersions call.\nProvide this to retrieve the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of TemplateVersions to return per page.",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "parent includes project_id, and display_name is optional.\n\nList by project_id(pid1) and display_name(tid1).\n  Format: projects/{pid1}/catalogTemplates/{tid1}\n\nList by project_id(pid1).\n  Format: projects/{pid1}",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/templateVersions"
            }
          }
        },
        "locations": {
          "methods": {
            "workerMessages": {
              "request": {
                "$ref": "SendWorkerMessagesRequest"
              },
              "description": "Send a worker_message to the service.",
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId",
                "location"
              ],
              "response": {
                "$ref": "SendWorkerMessagesResponse"
              },
              "parameters": {
                "location": {
                  "location": "path",
                  "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job.",
                  "type": "string",
                  "required": true
                },
                "projectId": {
                  "location": "path",
                  "description": "The project to send the WorkerMessages to.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "path": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "id": "dataflow.projects.locations.workerMessages"
            }
          },
          "resources": {
            "sql": {
              "methods": {
                "validate": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "type": "string",
                      "required": true
                    },
                    "query": {
                      "type": "string",
                      "location": "query",
                      "description": "The sql query to validate."
                    },
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/sql:validate",
                  "id": "dataflow.projects.locations.sql.validate",
                  "path": "v1b3/projects/{projectId}/locations/{location}/sql:validate",
                  "description": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always\nconfirm the given query parses correctly, and if able to look up\nschema information from DataCatalog, will validate that the query\nanalyzes properly as well.",
                  "response": {
                    "$ref": "ValidateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "templates": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates",
                  "id": "dataflow.projects.locations.templates.create",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates",
                  "request": {
                    "$ref": "CreateJobFromTemplateRequest"
                  },
                  "description": "Creates a Cloud Dataflow job from a template."
                },
                "launch": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "LaunchTemplateResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request."
                    },
                    "dynamicTemplate.gcsPath": {
                      "location": "query",
                      "description": "Path to dynamic template spec file on GCS.\nThe file must be a Json serialized DynamicTemplateFieSpec object.",
                      "type": "string"
                    },
                    "dynamicTemplate.stagingLocation": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Storage path for staging dependencies.\nMust be a valid Cloud Storage URL, beginning with `gs://`."
                    },
                    "validateOnly": {
                      "description": "If true, the request is validated but not actually executed.\nDefaults to false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to."
                    },
                    "gcsPath": {
                      "location": "query",
                      "description": "A Cloud Storage path to the template from which to create\nthe job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "id": "dataflow.projects.locations.templates.launch",
                  "description": "Launch a template.",
                  "request": {
                    "$ref": "LaunchTemplateParameters"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "GetTemplateResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request.",
                      "type": "string",
                      "required": true
                    },
                    "view": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "METADATA_ONLY"
                      ],
                      "description": "The view to retrieve. Defaults to METADATA_ONLY."
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to."
                    },
                    "gcsPath": {
                      "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be valid Cloud Storage URL, beginning with 'gs://'.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "id": "dataflow.projects.locations.templates.get",
                  "description": "Get the template associated with a template."
                }
              }
            },
            "jobs": {
              "methods": {
                "getMetrics": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "JobMetrics"
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id."
                    },
                    "startTime": {
                      "location": "query",
                      "format": "google-datetime",
                      "description": "Return only metric data that has changed since this time.\nDefault is to return all information about all metrics for the job.",
                      "type": "string"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job to get messages for.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "A project id."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "id": "dataflow.projects.locations.jobs.getMetrics",
                  "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.getMetrics` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.getMetrics` is not recommended, as you can only request the\nstatus of jobs that are running in `us-central1`."
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "view": {
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ],
                      "description": "The level of information requested in response.",
                      "type": "string"
                    },
                    "jobId": {
                      "description": "The job ID.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true
                    },
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job."
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "id": "dataflow.projects.locations.jobs.get",
                  "description": "Gets the state of the specified Cloud Dataflow job.\n\nTo get the state of a job, we recommend using `projects.locations.jobs.get`\nwith a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.get` is not recommended, as you can only get the state of\njobs that are running in `us-central1`."
                },
                "update": {
                  "request": {
                    "$ref": "Job"
                  },
                  "description": "Updates the state of an existing Cloud Dataflow job.\n\nTo update the state of an existing job, we recommend using\n`projects.locations.jobs.update` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.update` is not recommended, as you can only update the state\nof jobs that are running in `us-central1`.",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "PUT",
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                      "type": "string",
                      "required": true
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job ID.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the job belongs to."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "id": "dataflow.projects.locations.jobs.update",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}"
                },
                "snapshot": {
                  "description": "Snapshot the state of a streaming job.",
                  "request": {
                    "$ref": "SnapshotJobRequest"
                  },
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "description": "The location that contains this job.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "The job to be snapshotted.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "description": "The project which owns the job to be snapshotted.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot",
                  "id": "dataflow.projects.locations.jobs.snapshot",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot"
                },
                "list": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "id": "dataflow.projects.locations.jobs.list",
                  "description": "List the jobs of a project.\n\nTo list the jobs of a project in a region, we recommend using\n`projects.locations.jobs.get` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To\nlist the all jobs across all regions, use `projects.jobs.aggregated`. Using\n`projects.jobs.list` is not recommended, as you can only get the list of\njobs that are running in `us-central1`.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The project which owns the jobs."
                    },
                    "filter": {
                      "description": "The kind of filter to use.",
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "UNKNOWN",
                        "ALL",
                        "TERMINATED",
                        "ACTIVE"
                      ]
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Set this to the 'next_page_token' field of a previous response\nto request additional results in a long list.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "If there are many jobs, limit response to at most this many.\nThe actual number of jobs returned will be the lesser of max_responses\nand an unspecified server-defined limit.",
                      "type": "integer"
                    },
                    "view": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ],
                      "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "Job"
                  },
                  "description": "Creates a Cloud Dataflow job.\n\nTo create a job, we recommend using `projects.locations.jobs.create` with a\n[regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.create` is not recommended, as your job will always start\nin `us-central1`.",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job."
                    },
                    "replaceJobId": {
                      "location": "query",
                      "description": "Deprecated. This field is now in the Job message.",
                      "type": "string"
                    },
                    "view": {
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ],
                      "description": "The level of information requested in response.",
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the job belongs to."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "id": "dataflow.projects.locations.jobs.create",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs"
                }
              },
              "resources": {
                "workItems": {
                  "methods": {
                    "reportStatus": {
                      "description": "Reports the status of dataflow WorkItems leased by a worker.",
                      "request": {
                        "$ref": "ReportWorkItemStatusRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "ReportWorkItemStatusResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job."
                        },
                        "jobId": {
                          "description": "The job which the WorkItem is part of.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "location": "path",
                          "description": "The project which owns the WorkItem's job.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus",
                      "id": "dataflow.projects.locations.jobs.workItems.reportStatus"
                    },
                    "lease": {
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "id": "dataflow.projects.locations.jobs.workItems.lease",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "request": {
                        "$ref": "LeaseWorkItemRequest"
                      },
                      "description": "Leases a dataflow WorkItem to run.",
                      "response": {
                        "$ref": "LeaseWorkItemResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "jobId": {
                          "description": "Identifies the workflow job this worker belongs to.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "location": "path",
                          "description": "Identifies the project this worker belongs to.",
                          "type": "string",
                          "required": true
                        },
                        "location": {
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ]
                    }
                  }
                },
                "debug": {
                  "methods": {
                    "sendCapture": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "SendDebugCaptureResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "jobId": {
                          "location": "path",
                          "description": "The job id.",
                          "type": "string",
                          "required": true
                        },
                        "projectId": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The project id."
                        },
                        "location": {
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture",
                      "id": "dataflow.projects.locations.jobs.debug.sendCapture",
                      "description": "Send encoded debug capture data for component.",
                      "request": {
                        "$ref": "SendDebugCaptureRequest"
                      }
                    },
                    "getConfig": {
                      "description": "Get encoded debug configuration for component. Not cacheable.",
                      "request": {
                        "$ref": "GetDebugConfigRequest"
                      },
                      "response": {
                        "$ref": "GetDebugConfigResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "jobId": {
                          "description": "The job id.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "location": "path",
                          "description": "The project id.",
                          "type": "string",
                          "required": true
                        },
                        "location": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id."
                        }
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig",
                      "id": "dataflow.projects.locations.jobs.debug.getConfig",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig"
                    }
                  }
                },
                "messages": {
                  "methods": {
                    "list": {
                      "id": "dataflow.projects.locations.jobs.messages.list",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages",
                      "description": "Request the job status.\n\nTo request the status of a job, we recommend using\n`projects.locations.jobs.messages.list` with a [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using\n`projects.jobs.messages.list` is not recommended, as you can only request\nthe status of jobs that are running in `us-central1`.",
                      "response": {
                        "$ref": "ListJobMessagesResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "jobId": {
                          "location": "path",
                          "description": "The job to get messages about.",
                          "type": "string",
                          "required": true
                        },
                        "projectId": {
                          "location": "path",
                          "description": "A project id.",
                          "type": "string",
                          "required": true
                        },
                        "endTime": {
                          "format": "google-datetime",
                          "description": "Return only messages with timestamps \u003c end_time. The default is now\n(i.e. return up to the latest messages available).",
                          "type": "string",
                          "location": "query"
                        },
                        "location": {
                          "location": "path",
                          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
                          "type": "string",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "If supplied, this should be the value of next_page_token returned\nby an earlier call. This will cause the next page of results to\nbe returned."
                        },
                        "startTime": {
                          "type": "string",
                          "location": "query",
                          "format": "google-datetime",
                          "description": "If specified, return only messages with timestamps \u003e= start_time.\nThe default is the job creation time (i.e. beginning of messages)."
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "If specified, determines the maximum number of messages to\nreturn.  If unspecified, the service may choose an appropriate\ndefault, or may return an arbitrarily large number of results.",
                          "type": "integer"
                        },
                        "minimumImportance": {
                          "location": "query",
                          "enum": [
                            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                            "JOB_MESSAGE_DEBUG",
                            "JOB_MESSAGE_DETAILED",
                            "JOB_MESSAGE_BASIC",
                            "JOB_MESSAGE_WARNING",
                            "JOB_MESSAGE_ERROR"
                          ],
                          "description": "Filter to only get messages with importance \u003e= level",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages"
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "list": {
                      "description": "Lists snapshots.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListSnapshotsResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "parameters": {
                        "location": {
                          "location": "path",
                          "description": "The location to list snapshots in.",
                          "type": "string",
                          "required": true
                        },
                        "jobId": {
                          "location": "path",
                          "description": "If specified, list snapshots created from this job.",
                          "type": "string",
                          "required": true
                        },
                        "projectId": {
                          "location": "path",
                          "description": "The project ID to list snapshots for.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots",
                      "id": "dataflow.projects.locations.jobs.snapshots.list"
                    }
                  }
                }
              }
            },
            "flexTemplates": {
              "methods": {
                "launch": {
                  "description": "Launch a job with a FlexTemplate.",
                  "request": {
                    "$ref": "LaunchFlexTemplateRequest"
                  },
                  "response": {
                    "$ref": "LaunchFlexTemplateResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request. E.g., us-central1, us-west1."
                    },
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch",
                  "id": "dataflow.projects.locations.flexTemplates.launch",
                  "path": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch"
                }
              }
            },
            "snapshots": {
              "methods": {
                "list": {
                  "description": "Lists snapshots.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListSnapshotsResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "parameters": {
                    "jobId": {
                      "type": "string",
                      "location": "query",
                      "description": "If specified, list snapshots created from this job."
                    },
                    "projectId": {
                      "location": "path",
                      "description": "The project ID to list snapshots for.",
                      "type": "string",
                      "required": true
                    },
                    "location": {
                      "description": "The location to list snapshots in.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots",
                  "id": "dataflow.projects.locations.snapshots.list"
                },
                "get": {
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
                      "type": "string",
                      "required": true
                    },
                    "snapshotId": {
                      "description": "The ID of the snapshot.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "location": {
                      "description": "The location that contains this snapshot.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "id": "dataflow.projects.locations.snapshots.get",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "description": "Gets information about a snapshot."
                },
                "delete": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "id": "dataflow.projects.locations.snapshots.delete",
                  "description": "Deletes a snapshot.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "response": {
                    "$ref": "DeleteSnapshotResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "snapshotId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the snapshot."
                    },
                    "location": {
                      "location": "path",
                      "description": "The location that contains this snapshot.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "schemas": {
    "ModifyTemplateVersionTagRequest": {
      "id": "ModifyTemplateVersionTagRequest",
      "description": "Add a tag to the current TemplateVersion. If tag exist in another\nTemplateVersion in the Template, remove the tag before add it to the current\nTemplateVersion. If remove_only set, remove the tag from the current\nTemplateVersion.",
      "type": "object",
      "properties": {
        "tag": {
          "description": "The tag for update.",
          "type": "string"
        },
        "removeOnly": {
          "description": "The flag that indicates if the request is only for remove tag from\nTemplateVersion.",
          "type": "boolean"
        }
      }
    },
    "TransformSummary": {
      "id": "TransformSummary",
      "description": "Description of the type, names/ids, and input/outputs for a transform.",
      "type": "object",
      "properties": {
        "id": {
          "description": "SDK generated id of this transform instance.",
          "type": "string"
        },
        "displayData": {
          "description": "Transform-specific display data.",
          "items": {
            "$ref": "DisplayData"
          },
          "type": "array"
        },
        "outputCollectionName": {
          "description": "User  names for all collection outputs to this transform.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ],
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ],
          "description": "Type of transform."
        },
        "inputCollectionName": {
          "description": "User names for all collection inputs to this transform.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "User provided name for this transform instance.",
          "type": "string"
        }
      }
    },
    "StreamingComputationConfig": {
      "type": "object",
      "properties": {
        "computationId": {
          "type": "string",
          "description": "Unique identifier for this computation."
        },
        "stageName": {
          "description": "Stage name of this computation.",
          "type": "string"
        },
        "systemName": {
          "description": "System defined name for this computation.",
          "type": "string"
        },
        "instructions": {
          "description": "Instructions that comprise the computation.",
          "items": {
            "$ref": "ParallelInstruction"
          },
          "type": "array"
        },
        "transformUserNameToStateFamily": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map from user name of stateful transforms in this stage to their state\nfamily.",
          "type": "object"
        }
      },
      "id": "StreamingComputationConfig",
      "description": "Configuration information for a single streaming computation."
    },
    "LeaseWorkItemResponse": {
      "description": "Response to a request to lease WorkItems.",
      "type": "object",
      "properties": {
        "unifiedWorkerResponse": {
          "description": "Untranslated bag-of-bytes WorkResponse for UnifiedWorker.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "workItems": {
          "items": {
            "$ref": "WorkItem"
          },
          "type": "array",
          "description": "A list of the leased WorkItems."
        }
      },
      "id": "LeaseWorkItemResponse"
    },
    "LaunchTemplateParameters": {
      "description": "Parameters to provide to the template being launched.",
      "type": "object",
      "properties": {
        "environment": {
          "description": "The runtime environment for the job.",
          "$ref": "RuntimeEnvironment"
        },
        "update": {
          "type": "boolean",
          "description": "If set, replace the existing pipeline with the name specified by jobName\nwith this pipeline, preserving state."
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The runtime parameters to pass to the job.",
          "type": "object"
        },
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "transformNameMapping": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Only applicable when updating a pipeline. Map of transform name prefixes of\nthe job to be replaced to the corresponding name prefixes of the new job.",
          "type": "object"
        }
      },
      "id": "LaunchTemplateParameters"
    },
    "Sink": {
      "id": "Sink",
      "description": "A sink that records can be encoded and written to.",
      "type": "object",
      "properties": {
        "codec": {
          "description": "The codec to use to encode data written to the sink.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "spec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The sink to write to, plus its parameters.",
          "type": "object"
        }
      }
    },
    "FlattenInstruction": {
      "type": "object",
      "properties": {
        "inputs": {
          "items": {
            "$ref": "InstructionInput"
          },
          "type": "array",
          "description": "Describes the inputs to the flatten instruction."
        }
      },
      "id": "FlattenInstruction",
      "description": "An instruction that copies its inputs (zero or more) to its (single) output."
    },
    "PartialGroupByKeyInstruction": {
      "description": "An instruction that does a partial group-by-key.\nOne input and one output.",
      "type": "object",
      "properties": {
        "inputElementCodec": {
          "description": "The codec to use for interpreting an element in the input PTable.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "valueCombiningFn": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The value combining function to invoke.",
          "type": "object"
        },
        "originalCombineValuesInputStoreName": {
          "description": "If this instruction includes a combining function this is the name of the\nintermediate store between the GBK and the CombineValues.",
          "type": "string"
        },
        "originalCombineValuesStepName": {
          "type": "string",
          "description": "If this instruction includes a combining function, this is the name of the\nCombineValues instruction lifted into this instruction."
        },
        "sideInputs": {
          "items": {
            "$ref": "SideInputInfo"
          },
          "type": "array",
          "description": "Zero or more side inputs."
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "Describes the input to the partial group-by-key instruction."
        }
      },
      "id": "PartialGroupByKeyInstruction"
    },
    "StageSource": {
      "id": "StageSource",
      "description": "Description of an input or output of an execution stage.",
      "type": "object",
      "properties": {
        "sizeBytes": {
          "format": "int64",
          "description": "Size of the source, if measurable.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this source."
        },
        "userName": {
          "description": "Human-readable name for this source; may be user or system generated.",
          "type": "string"
        },
        "originalTransformOrCollection": {
          "description": "User name for the original user transform or collection with which this\nsource is most closely associated.",
          "type": "string"
        }
      }
    },
    "InstructionInput": {
      "id": "InstructionInput",
      "description": "An input of an instruction, as a reference to an output of a\nproducer instruction.",
      "type": "object",
      "properties": {
        "producerInstructionIndex": {
          "format": "int32",
          "description": "The index (origin zero) of the parallel instruction that produces\nthe output to be consumed by this input.  This index is relative\nto the list of instructions in this input's instruction's\ncontaining MapTask.",
          "type": "integer"
        },
        "outputNum": {
          "format": "int32",
          "description": "The output index (origin zero) within the producer.",
          "type": "integer"
        }
      }
    },
    "StringList": {
      "type": "object",
      "properties": {
        "elements": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Elements of the list."
        }
      },
      "id": "StringList",
      "description": "A metric value representing a list of strings."
    },
    "DisplayData": {
      "description": "Data provided with a pipeline or transform to provide descriptive info.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key identifying the display data.\nThis is intended to be used as a label for the display data\nwhen viewed in a dax monitoring system.",
          "type": "string"
        },
        "shortStrValue": {
          "type": "string",
          "description": "A possible additional shorter value to display.\nFor example a java_class_name_value of com.mypackage.MyDoFn\nwill be stored with MyDoFn as the short_str_value and\ncom.mypackage.MyDoFn as the java_class_name value.\nshort_str_value can be displayed and java_class_name_value\nwill be displayed as a tooltip."
        },
        "label": {
          "type": "string",
          "description": "An optional label to display in a dax UI for the element."
        },
        "url": {
          "description": "An optional full URL.",
          "type": "string"
        },
        "timestampValue": {
          "format": "google-datetime",
          "description": "Contains value if the data is of timestamp type.",
          "type": "string"
        },
        "javaClassValue": {
          "description": "Contains value if the data is of java class type.",
          "type": "string"
        },
        "boolValue": {
          "type": "boolean",
          "description": "Contains value if the data is of a boolean type."
        },
        "strValue": {
          "description": "Contains value if the data is of string type.",
          "type": "string"
        },
        "int64Value": {
          "format": "int64",
          "description": "Contains value if the data is of int64 type.",
          "type": "string"
        },
        "durationValue": {
          "format": "google-duration",
          "description": "Contains value if the data is of duration type.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace for the key. This is usually a class name or programming\nlanguage namespace (i.e. python module) which defines the display data.\nThis allows a dax monitoring system to specially handle the data\nand perform custom rendering.",
          "type": "string"
        },
        "floatValue": {
          "format": "float",
          "description": "Contains value if the data is of float type.",
          "type": "number"
        }
      },
      "id": "DisplayData"
    },
    "GetDebugConfigRequest": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string",
          "description": "The internal component id for which debug configuration is\nrequested."
        },
        "workerId": {
          "description": "The worker id, i.e., VM hostname.",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
          "type": "string"
        }
      },
      "id": "GetDebugConfigRequest",
      "description": "Request to get updated debug configuration for component."
    },
    "LeaseWorkItemRequest": {
      "description": "Request to lease WorkItems.",
      "type": "object",
      "properties": {
        "currentWorkerTime": {
          "format": "google-datetime",
          "description": "The current timestamp at the worker.",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
          "type": "string"
        },
        "workItemTypes": {
          "description": "Filter for WorkItem type.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "unifiedWorkerRequest": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkRequest from UnifiedWorker.",
          "type": "object"
        },
        "workerId": {
          "description": "Identifies the worker leasing work -- typically the ID of the\nvirtual machine running the worker.",
          "type": "string"
        },
        "workerCapabilities": {
          "description": "Worker capabilities. WorkItems might be limited to workers with specific\ncapabilities.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "requestedLeaseDuration": {
          "format": "google-duration",
          "description": "The initial lease period.",
          "type": "string"
        }
      },
      "id": "LeaseWorkItemRequest"
    },
    "GetTemplateResponse": {
      "description": "The response to a GetTemplate request.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "The template metadata describing the template name, available\nparameters, etc."
        },
        "runtimeMetadata": {
          "$ref": "RuntimeMetadata",
          "description": "Describes the runtime metadata with SDKInfo and available parameters."
        },
        "templateType": {
          "type": "string",
          "enumDescriptions": [
            "Unknown Template Type.",
            "Legacy Template.",
            "Flex Template."
          ],
          "enum": [
            "UNKNOWN",
            "LEGACY",
            "FLEX"
          ],
          "description": "Template Type."
        },
        "status": {
          "$ref": "Status",
          "description": "The status of the get template request. Any problems with the\nrequest will be indicated in the error_details."
        }
      },
      "id": "GetTemplateResponse"
    },
    "Snapshot": {
      "description": "Represents a snapshot of a job.",
      "type": "object",
      "properties": {
        "diskSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The disk byte size of the snapshot. Only available for snapshots in READY\nstate."
        },
        "description": {
          "type": "string",
          "description": "User specified description of the snapshot. Maybe empty."
        },
        "pubsubMetadata": {
          "description": "PubSub snapshot metadata.",
          "items": {
            "$ref": "PubsubSnapshotMetadata"
          },
          "type": "array"
        },
        "creationTime": {
          "format": "google-datetime",
          "description": "The time this snapshot was created.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unknown state.",
            "Snapshot intent to create has been persisted, snapshotting of state has not\nyet started.",
            "Snapshotting is being performed.",
            "Snapshot has been created and is ready to be used.",
            "Snapshot failed to be created.",
            "Snapshot has been deleted."
          ],
          "enum": [
            "UNKNOWN_SNAPSHOT_STATE",
            "PENDING",
            "RUNNING",
            "READY",
            "FAILED",
            "DELETED"
          ],
          "description": "State of the snapshot."
        },
        "sourceJobId": {
          "description": "The job this snapshot was created from.",
          "type": "string"
        },
        "projectId": {
          "description": "The project this snapshot belongs to.",
          "type": "string"
        },
        "ttl": {
          "type": "string",
          "format": "google-duration",
          "description": "The time after which this snapshot will be automatically deleted."
        },
        "id": {
          "description": "The unique ID of this snapshot.",
          "type": "string"
        }
      },
      "id": "Snapshot"
    },
    "Parameter": {
      "description": "Structured data associated with this message.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter.",
          "type": "any"
        },
        "key": {
          "type": "string",
          "description": "Key or name for this parameter."
        }
      },
      "id": "Parameter"
    },
    "ReportWorkItemStatusRequest": {
      "id": "ReportWorkItemStatusRequest",
      "description": "Request to report the status of WorkItems.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the WorkItem's job.",
          "type": "string"
        },
        "workItemStatuses": {
          "description": "The order is unimportant, except that the order of the\nWorkItemServiceState messages in the ReportWorkItemStatusResponse\ncorresponds to the order of WorkItemStatus messages here.",
          "items": {
            "$ref": "WorkItemStatus"
          },
          "type": "array"
        },
        "unifiedWorkerRequest": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.",
          "type": "object"
        },
        "currentWorkerTime": {
          "format": "google-datetime",
          "description": "The current timestamp at the worker.",
          "type": "string"
        },
        "workerId": {
          "description": "The ID of the worker reporting the WorkItem status.  If this\ndoes not match the ID of the worker which the Dataflow service\nbelieves currently has the lease on the WorkItem, the report\nwill be dropped (with an error response).",
          "type": "string"
        }
      }
    },
    "PipelineDescription": {
      "description": "A descriptive representation of submitted pipeline as well as the executed\nform.  This data is provided by the Dataflow service for ease of visualizing\nthe pipeline and interpreting Dataflow provided metrics.",
      "type": "object",
      "properties": {
        "displayData": {
          "description": "Pipeline level display data.",
          "items": {
            "$ref": "DisplayData"
          },
          "type": "array"
        },
        "executionPipelineStage": {
          "description": "Description of each stage of execution of the pipeline.",
          "items": {
            "$ref": "ExecutionStageSummary"
          },
          "type": "array"
        },
        "originalPipelineTransform": {
          "items": {
            "$ref": "TransformSummary"
          },
          "type": "array",
          "description": "Description of each transform in the pipeline and collections between them."
        }
      },
      "id": "PipelineDescription"
    },
    "StreamingConfigTask": {
      "description": "A task that carries configuration information for streaming computations.",
      "type": "object",
      "properties": {
        "windmillServiceEndpoint": {
          "description": "If present, the worker must use this endpoint to communicate with Windmill\nService dispatchers, otherwise the worker must continue to use whatever\nendpoint it had been using.",
          "type": "string"
        },
        "userStepToStateFamilyNameMap": {
          "description": "Map from user step names to state families.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "streamingComputationConfigs": {
          "description": "Set of computation configuration information.",
          "items": {
            "$ref": "StreamingComputationConfig"
          },
          "type": "array"
        },
        "maxWorkItemCommitBytes": {
          "format": "int64",
          "description": "Maximum size for work item commit supported windmill storage layer.",
          "type": "string"
        },
        "windmillServicePort": {
          "format": "int64",
          "description": "If present, the worker must use this port to communicate with Windmill\nService dispatchers. Only applicable when windmill_service_endpoint is\nspecified.",
          "type": "string"
        },
        "getDataStreamChunkSizeBytes": {
          "format": "int64",
          "description": "Chunk size for get data streams from the harness to windmill.",
          "type": "string"
        },
        "commitStreamChunkSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Chunk size for commit streams from the harness to windmill."
        }
      },
      "id": "StreamingConfigTask"
    },
    "JobExecutionInfo": {
      "id": "JobExecutionInfo",
      "description": "Additional information about how a Cloud Dataflow job will be executed that\nisn't contained in the submitted job.",
      "type": "object",
      "properties": {
        "stages": {
          "additionalProperties": {
            "$ref": "JobExecutionStageInfo"
          },
          "description": "A mapping from each stage to the information about that stage.",
          "type": "object"
        }
      }
    },
    "Step": {
      "description": "Defines a particular step within a Cloud Dataflow job.\n\nA job consists of multiple steps, each of which performs some\nspecific operation as part of the overall job.  Data is typically\npassed from one step to another as part of the job.\n\nHere's an example of a sequence of steps which together implement a\nMap-Reduce job:\n\n  * Read a collection of data from some source, parsing the\n    collection's elements.\n\n  * Validate the elements.\n\n  * Apply a user-defined function to map each element to some value\n    and extract an element-specific key value.\n\n  * Group elements with the same key into a single element with\n    that key, transforming a multiply-keyed collection into a\n    uniquely-keyed collection.\n\n  * Write the elements out to some data sink.\n\nNote that the Cloud Dataflow service may be used to run many different\ntypes of jobs, not just Map-Reduce.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name that identifies the step. This must be unique for each\nstep with respect to all other steps in the Cloud Dataflow job."
        },
        "kind": {
          "type": "string",
          "description": "The kind of step in the Cloud Dataflow job."
        },
        "properties": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Named properties associated with the step. Each kind of\npredefined step has its own required set of properties.\nMust be provided on Create.  Only retrieved with JOB_VIEW_ALL.",
          "type": "object"
        }
      },
      "id": "Step"
    },
    "FailedLocation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\nfailed to respond.",
          "type": "string"
        }
      },
      "id": "FailedLocation",
      "description": "Indicates which [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed\nto respond to a request for data."
    },
    "Disk": {
      "description": "Describes the data disk used by a workflow job.",
      "type": "object",
      "properties": {
        "mountPoint": {
          "description": "Directory in a VM where disk is mounted.",
          "type": "string"
        },
        "diskType": {
          "description": "Disk storage type, as defined by Google Compute Engine.  This\nmust be a disk type appropriate to the project and zone in which\nthe workers will run.  If unknown or unspecified, the service\nwill attempt to choose a reasonable default.\n\nFor example, the standard persistent disk type is a resource name\ntypically ending in \"pd-standard\".  If SSD persistent disks are\navailable, the resource name typically ends with \"pd-ssd\".  The\nactual valid values are defined the Google Compute Engine API,\nnot by the Cloud Dataflow API; consult the Google Compute Engine\ndocumentation for more information about determining the set of\navailable disk types for a particular project and zone.\n\nGoogle Compute Engine Disk types are local to a particular\nproject in a particular zone, and so the resource name will\ntypically look something like this:\n\ncompute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard",
          "type": "string"
        },
        "sizeGb": {
          "format": "int32",
          "description": "Size of disk in GB.  If zero or unspecified, the service will\nattempt to choose a reasonable default.",
          "type": "integer"
        }
      },
      "id": "Disk"
    },
    "TemplateVersion": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Template description from the user.",
          "type": "string"
        },
        "displayName": {
          "description": "A customized name for Template. Multiple TemplateVersions per Template.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels for the Template Version. Labels can be duplicate within Template.",
          "type": "object"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Creation time of this TemplateVersion.",
          "type": "string"
        },
        "artifact": {
          "$ref": "Artifact",
          "description": "Job graph and metadata if it is a legacy Template.\nContainer image path and metadata if it is flex Template."
        },
        "versionId": {
          "description": "An auto generated version_id for TemplateVersion.",
          "type": "string"
        },
        "projectId": {
          "description": "A unique project_id. Multiple Templates per Project.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TEMPLATE_TYPE_UNSPECIFIED",
            "LEGACY",
            "FLEX"
          ],
          "description": "Either LEGACY or FLEX. This should match with the type of artifact.",
          "type": "string",
          "enumDescriptions": [
            "Default value. Not a useful zero case.",
            "Legacy Template.",
            "Flex Template."
          ]
        },
        "tags": {
          "description": "Alias for version_id, helps locate a TemplateVersion.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "TemplateVersion",
      "description": "/////////////////////////////////////////////////////////////////////////////\n//// Template Catalog is used to organize user TemplateVersions.\n//// TemplateVersions that have the same project_id and display_name are\n//// belong to the same Template.\n//// Templates with the same project_id belong to the same Project.\n//// TemplateVersion may have labels and multiple labels are allowed.\n//// Duplicated labels in the same `TemplateVersion` are not allowed.\n//// TemplateVersion may have tags and multiple tags are allowed. Duplicated\n//// tags in the same `Template` are not allowed!"
    },
    "HotKeyDetection": {
      "id": "HotKeyDetection",
      "description": "Proto describing a hot key detected on a given WorkItem.",
      "type": "object",
      "properties": {
        "userStepName": {
          "description": "User-provided name of the step that contains this hot key.",
          "type": "string"
        },
        "hotKeyAge": {
          "type": "string",
          "format": "google-duration",
          "description": "The age of the hot key measured from when it was first detected."
        },
        "systemName": {
          "description": "System-defined name of the step containing this hot key.\nUnique across the workflow.",
          "type": "string"
        }
      }
    },
    "CounterMetadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Human-readable description of the counter semantics."
        },
        "kind": {
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ],
          "description": "Counter aggregation kind.",
          "type": "string",
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ]
        },
        "standardUnits": {
          "description": "System defined Units, see above enum.",
          "type": "string",
          "enumDescriptions": [
            "Counter returns a value in bytes.",
            "Counter returns a value in bytes per second.",
            "Counter returns a value in milliseconds.",
            "Counter returns a value in microseconds.",
            "Counter returns a value in nanoseconds.",
            "Counter returns a timestamp in milliseconds.",
            "Counter returns a timestamp in microseconds.",
            "Counter returns a timestamp in nanoseconds."
          ],
          "enum": [
            "BYTES",
            "BYTES_PER_SEC",
            "MILLISECONDS",
            "MICROSECONDS",
            "NANOSECONDS",
            "TIMESTAMP_MSEC",
            "TIMESTAMP_USEC",
            "TIMESTAMP_NSEC"
          ]
        },
        "otherUnits": {
          "description": "A string referring to the unit type.",
          "type": "string"
        }
      },
      "id": "CounterMetadata",
      "description": "CounterMetadata includes all static non-name non-value counter attributes."
    },
    "ListJobMessagesResponse": {
      "description": "Response to a request to list job messages.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to obtain the next page of results if there are more."
        },
        "autoscalingEvents": {
          "description": "Autoscaling events in ascending timestamp order.",
          "items": {
            "$ref": "AutoscalingEvent"
          },
          "type": "array"
        },
        "jobMessages": {
          "description": "Messages in ascending timestamp order.",
          "items": {
            "$ref": "JobMessage"
          },
          "type": "array"
        }
      },
      "id": "ListJobMessagesResponse"
    },
    "ApproximateReportedProgress": {
      "description": "A progress measurement of a WorkItem by a worker.",
      "type": "object",
      "properties": {
        "position": {
          "$ref": "Position",
          "description": "A Position within the work to represent a progress."
        },
        "fractionConsumed": {
          "type": "number",
          "format": "double",
          "description": "Completion as fraction of the input consumed, from 0.0 (beginning, nothing\nconsumed), to 1.0 (end of the input, entire input consumed)."
        },
        "consumedParallelism": {
          "$ref": "ReportedParallelism",
          "description": "Total amount of parallelism in the portion of input of this task that has\nalready been consumed and is no longer active. In the first two examples\nabove (see remaining_parallelism), the value should be 29 or 2\nrespectively.  The sum of remaining_parallelism and consumed_parallelism\nshould equal the total amount of parallelism in this work item.  If\nspecified, must be finite."
        },
        "remainingParallelism": {
          "description": "Total amount of parallelism in the input of this task that remains,\n(i.e. can be delegated to this task and any new tasks via dynamic\nsplitting). Always at least 1 for non-finished work items and 0 for\nfinished.\n\n\"Amount of parallelism\" refers to how many non-empty parts of the input\ncan be read in parallel. This does not necessarily equal number\nof records. An input that can be read in parallel down to the\nindividual records is called \"perfectly splittable\".\nAn example of non-perfectly parallelizable input is a block-compressed\nfile format where a block of records has to be read as a whole,\nbut different blocks can be read in parallel.\n\nExamples:\n* If we are processing record #30 (starting at 1) out of 50 in a perfectly\n  splittable 50-record input, this value should be 21 (20 remaining + 1\n  current).\n* If we are reading through block 3 in a block-compressed file consisting\n  of 5 blocks, this value should be 3 (since blocks 4 and 5 can be\n  processed in parallel by new tasks via dynamic splitting and the current\n  task remains processing block 3).\n* If we are reading through the last block in a block-compressed file,\n  or reading or processing the last record in a perfectly splittable\n  input, this value should be 1, because apart from the current task, no\n  additional remainder can be split off.",
          "$ref": "ReportedParallelism"
        }
      },
      "id": "ApproximateReportedProgress"
    },
    "IntegerList": {
      "id": "IntegerList",
      "description": "A metric value representing a list of integers.",
      "type": "object",
      "properties": {
        "elements": {
          "description": "Elements of the list.",
          "items": {
            "$ref": "SplitInt64"
          },
          "type": "array"
        }
      }
    },
    "StateFamilyConfig": {
      "type": "object",
      "properties": {
        "isRead": {
          "description": "If true, this family corresponds to a read operation.",
          "type": "boolean"
        },
        "stateFamily": {
          "description": "The state family value.",
          "type": "string"
        }
      },
      "id": "StateFamilyConfig",
      "description": "State family configuration."
    },
    "ResourceUtilizationReportResponse": {
      "type": "object",
      "properties": {},
      "id": "ResourceUtilizationReportResponse",
      "description": "Service-side response to WorkerMessage reporting resource utilization."
    },
    "SourceSplitResponse": {
      "type": "object",
      "properties": {
        "outcome": {
          "description": "Indicates whether splitting happened and produced a list of bundles.\nIf this is USE_CURRENT_SOURCE_AS_IS, the current source should\nbe processed \"as is\" without splitting. \"bundles\" is ignored in this case.\nIf this is SPLITTING_HAPPENED, then \"bundles\" contains a list of\nbundles into which the source was split.",
          "type": "string",
          "enumDescriptions": [
            "The source split outcome is unknown, or unspecified.",
            "The current source should be processed \"as is\" without splitting.",
            "Splitting produced a list of bundles."
          ],
          "enum": [
            "SOURCE_SPLIT_OUTCOME_UNKNOWN",
            "SOURCE_SPLIT_OUTCOME_USE_CURRENT",
            "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED"
          ]
        },
        "bundles": {
          "description": "If outcome is SPLITTING_HAPPENED, then this is a list of bundles\ninto which the source was split. Otherwise this field is ignored.\nThis list can be empty, which means the source represents an empty input.",
          "items": {
            "$ref": "DerivedSource"
          },
          "type": "array"
        },
        "shards": {
          "description": "DEPRECATED in favor of bundles.",
          "items": {
            "$ref": "SourceSplitShard"
          },
          "type": "array"
        }
      },
      "id": "SourceSplitResponse",
      "description": "The response to a SourceSplitRequest."
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "containerSpec": {
          "$ref": "ContainerSpec",
          "description": "Container image path set for flex Template."
        },
        "jobGraphGcsPath": {
          "description": "job_graph_gcs_path set for legacy Template.",
          "type": "string"
        },
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "Metadata set for legacy Template."
        }
      },
      "id": "Artifact",
      "description": "Job information for templates."
    },
    "PubSubIODetails": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Topic accessed in the connection."
        },
        "subscription": {
          "type": "string",
          "description": "Subscription used in the connection."
        }
      },
      "id": "PubSubIODetails",
      "description": "Metadata for a PubSub connector used by the job."
    },
    "ParallelInstruction": {
      "type": "object",
      "properties": {
        "partialGroupByKey": {
          "$ref": "PartialGroupByKeyInstruction",
          "description": "Additional information for PartialGroupByKey instructions."
        },
        "outputs": {
          "description": "Describes the outputs of the instruction.",
          "items": {
            "$ref": "InstructionOutput"
          },
          "type": "array"
        },
        "name": {
          "description": "User-provided name of this operation.",
          "type": "string"
        },
        "read": {
          "description": "Additional information for Read instructions.",
          "$ref": "ReadInstruction"
        },
        "parDo": {
          "description": "Additional information for ParDo instructions.",
          "$ref": "ParDoInstruction"
        },
        "flatten": {
          "$ref": "FlattenInstruction",
          "description": "Additional information for Flatten instructions."
        },
        "originalName": {
          "description": "System-defined name for the operation in the original workflow graph.",
          "type": "string"
        },
        "write": {
          "$ref": "WriteInstruction",
          "description": "Additional information for Write instructions."
        },
        "systemName": {
          "type": "string",
          "description": "System-defined name of this operation.\nUnique across the workflow."
        }
      },
      "id": "ParallelInstruction",
      "description": "Describes a particular operation comprising a MapTask."
    },
    "Package": {
      "id": "Package",
      "description": "The packages that must be installed in order for a worker to run the\nsteps of the Cloud Dataflow job that will be assigned to its worker\npool.\n\nThis is the mechanism by which the Cloud Dataflow SDK causes code to\nbe loaded onto the workers. For example, the Cloud Dataflow Java SDK\nmight use this to install jars containing the user's code and all of the\nvarious dependencies (libraries, data files, etc.) required in order\nfor that code to run.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the package.",
          "type": "string"
        },
        "location": {
          "description": "The resource to read the package from. The supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}\n  bucket.storage.googleapis.com/",
          "type": "string"
        }
      }
    },
    "KeyRangeDataDiskAssignment": {
      "type": "object",
      "properties": {
        "dataDisk": {
          "description": "The name of the data disk where data for this range is stored.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\".",
          "type": "string"
        },
        "start": {
          "description": "The start (inclusive) of the key range.",
          "type": "string"
        },
        "end": {
          "description": "The end (exclusive) of the key range.",
          "type": "string"
        }
      },
      "id": "KeyRangeDataDiskAssignment",
      "description": "Data disk assignment information for a specific key-range of a sharded\ncomputation.\nCurrently we only support UTF-8 character splits to simplify encoding into\nJSON."
    },
    "ParDoInstruction": {
      "description": "An instruction that does a ParDo operation.\nTakes one main input and zero or more side inputs, and produces\nzero or more outputs.\nRuns user code.",
      "type": "object",
      "properties": {
        "numOutputs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of outputs."
        },
        "sideInputs": {
          "description": "Zero or more side inputs.",
          "items": {
            "$ref": "SideInputInfo"
          },
          "type": "array"
        },
        "multiOutputInfos": {
          "items": {
            "$ref": "MultiOutputInfo"
          },
          "type": "array",
          "description": "Information about each of the outputs, if user_fn is a  MultiDoFn."
        },
        "userFn": {
          "description": "The user function to invoke.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "The input."
        }
      },
      "id": "ParDoInstruction"
    },
    "CreateTemplateVersionRequest": {
      "description": "Creates a new Template with TemplateVersions.",
      "type": "object",
      "properties": {
        "templateVersion": {
          "$ref": "TemplateVersion",
          "description": "The TemplateVersion object to create."
        }
      },
      "id": "CreateTemplateVersionRequest"
    },
    "CounterStructuredName": {
      "type": "object",
      "properties": {
        "originalRequestingStepName": {
          "description": "The step name requesting an operation, such as GBK.\nI.e. the ParDo causing a read/write from shuffle to occur, or a\nread from side inputs.",
          "type": "string"
        },
        "inputIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of an input collection that's being read from/written to as a side\ninput.\nThe index identifies a step's side inputs starting by 1 (e.g. the first\nside input has input_index 1, the third has input_index 3).\nSide inputs are identified by a pair of (original_step_name, input_index).\nThis field helps uniquely identify them."
        },
        "componentStepName": {
          "type": "string",
          "description": "Name of the optimized step being executed by the workers."
        },
        "portion": {
          "description": "Portion of this counter, either key or value.",
          "type": "string",
          "enumDescriptions": [
            "Counter portion has not been set.",
            "Counter reports a key.",
            "Counter reports a value."
          ],
          "enum": [
            "ALL",
            "KEY",
            "VALUE"
          ]
        },
        "originalStepName": {
          "description": "System generated name of the original step in the user's graph, before\noptimization.",
          "type": "string"
        },
        "workerId": {
          "description": "ID of a particular worker.",
          "type": "string"
        },
        "originNamespace": {
          "description": "A string containing a more specific namespace of the counter's origin.",
          "type": "string"
        },
        "origin": {
          "type": "string",
          "enumDescriptions": [
            "Counter was created by the Dataflow system.",
            "Counter was created by the user."
          ],
          "enum": [
            "SYSTEM",
            "USER"
          ],
          "description": "One of the standard Origins defined above."
        },
        "name": {
          "description": "Counter name. Not necessarily globally-unique, but unique within the\ncontext of the other fields.\nRequired.",
          "type": "string"
        },
        "executionStepName": {
          "description": "Name of the stage. An execution step contains multiple component steps.",
          "type": "string"
        }
      },
      "id": "CounterStructuredName",
      "description": "Identifies a counter within a per-job namespace. Counters whose structured\nnames are the same get merged into a single value for the job."
    },
    "MetricUpdate": {
      "type": "object",
      "properties": {
        "set": {
          "description": "Worker-computed aggregate value for the \"Set\" aggregation kind.  The only\npossible value type is a list of Values whose type can be Long, Double,\nor String, according to the metric's type.  All Values in the list must\nbe of the same type.",
          "type": "any"
        },
        "gauge": {
          "type": "any",
          "description": "A struct value describing properties of a Gauge.\nMetrics of gauge type show the value of a metric across time, and is\naggregated based on the newest value."
        },
        "internal": {
          "description": "Worker-computed aggregate value for internal use by the Dataflow\nservice.",
          "type": "any"
        },
        "cumulative": {
          "description": "True if this metric is reported as the total cumulative aggregate\nvalue accumulated since the worker started working on this WorkItem.\nBy default this is false, indicating that this metric is reported\nas a delta that is not associated with any WorkItem.",
          "type": "boolean"
        },
        "kind": {
          "description": "Metric aggregation kind.  The possible metric aggregation kinds are\n\"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\".\nThe specified aggregation kind is case-insensitive.\n\nIf omitted, this is not an aggregated value but instead\na single metric sample value.",
          "type": "string"
        },
        "scalar": {
          "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\",\n\"And\", and \"Or\".  The possible value types are Long, Double, and Boolean.",
          "type": "any"
        },
        "meanCount": {
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind.\nThis holds the count of the aggregated values and is used in combination\nwith mean_sum above to obtain the actual mean aggregate value.\nThe only possible value type is Long.",
          "type": "any"
        },
        "meanSum": {
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind.\nThis holds the sum of the aggregated values and is used in combination\nwith mean_count below to obtain the actual mean aggregate value.\nThe only possible value types are Long and Double.",
          "type": "any"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Timestamp associated with the metric value. Optional when workers are\nreporting work progress; it will be filled in responses from the\nmetrics API.",
          "type": "string"
        },
        "name": {
          "description": "Name of the metric.",
          "$ref": "MetricStructuredName"
        },
        "distribution": {
          "description": "A struct value describing properties of a distribution of numeric values.",
          "type": "any"
        }
      },
      "id": "MetricUpdate",
      "description": "Describes the state of a metric."
    },
    "WorkerShutdownNotice": {
      "description": "Shutdown notification from workers. This is to be sent by the shutdown\nscript of the worker VM so that the backend knows that the VM is being\nshut down.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason for the worker shutdown.\nCurrent possible values are:\n  \"UNKNOWN\": shutdown reason is unknown.\n  \"PREEMPTION\": shutdown reason is preemption.\nOther possible reasons may be added in the future.",
          "type": "string"
        }
      },
      "id": "WorkerShutdownNotice"
    },
    "ApproximateProgress": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "Position",
          "description": "Obsolete."
        },
        "percentComplete": {
          "format": "float",
          "description": "Obsolete.",
          "type": "number"
        },
        "remainingTime": {
          "format": "google-duration",
          "description": "Obsolete.",
          "type": "string"
        }
      },
      "id": "ApproximateProgress",
      "description": "Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest."
    },
    "ModifyTemplateVersionTagResponse": {
      "description": "Respond the current tags in the TemplateVersion.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "All the tags in the TemplateVersion.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ModifyTemplateVersionTagResponse"
    },
    "WorkerMessageResponse": {
      "type": "object",
      "properties": {
        "workerHealthReportResponse": {
          "$ref": "WorkerHealthReportResponse",
          "description": "The service's response to a worker's health report."
        },
        "workerShutdownNoticeResponse": {
          "description": "Service's response to shutdown notice (currently empty).",
          "$ref": "WorkerShutdownNoticeResponse"
        },
        "workerMetricsResponse": {
          "$ref": "ResourceUtilizationReportResponse",
          "description": "Service's response to reporting worker metrics (currently empty)."
        }
      },
      "id": "WorkerMessageResponse",
      "description": "A worker_message response allows the server to pass information to the\nsender."
    },
    "TemplateMetadata": {
      "description": "Metadata describing a template.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "The parameters for the template.",
          "items": {
            "$ref": "ParameterMetadata"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the template."
        },
        "description": {
          "description": "Optional. A description of the template.",
          "type": "string"
        }
      },
      "id": "TemplateMetadata"
    },
    "WorkerMessage": {
      "id": "WorkerMessage",
      "description": "WorkerMessage provides information to the backend about a worker.",
      "type": "object",
      "properties": {
        "workerHealthReport": {
          "description": "The health of a worker.",
          "$ref": "WorkerHealthReport"
        },
        "workerMessageCode": {
          "$ref": "WorkerMessageCode",
          "description": "A worker message code."
        },
        "workerMetrics": {
          "$ref": "ResourceUtilizationReport",
          "description": "Resource metrics reported by workers."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are used to group WorkerMessages.\nFor example, a worker_message about a particular container\nmight have the labels:\n{ \"JOB_ID\": \"2015-04-22\",\n  \"WORKER_ID\": \"wordcount-vm-2015…\"\n  \"CONTAINER_TYPE\": \"worker\",\n  \"CONTAINER_ID\": \"ac1234def\"}\nLabel tags typically correspond to Label enum values. However, for ease\nof development other strings can be used as tags. LABEL_UNSPECIFIED should\nnot be used here."
        },
        "time": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp of the worker_message."
        },
        "workerLifecycleEvent": {
          "description": "Record of worker lifecycle events.",
          "$ref": "WorkerLifecycleEvent"
        },
        "workerShutdownNotice": {
          "$ref": "WorkerShutdownNotice",
          "description": "Shutdown notice by workers."
        }
      }
    },
    "WorkerShutdownNoticeResponse": {
      "description": "Service-side response to WorkerMessage issuing shutdown notice.",
      "type": "object",
      "properties": {},
      "id": "WorkerShutdownNoticeResponse"
    },
    "JobMetrics": {
      "description": "JobMetrics contains a collection of metrics describing the detailed progress\nof a Dataflow job. Metrics correspond to user-defined and system-defined\nmetrics in the job.\n\nThis resource captures only the most recent values of each metric;\ntime-series data can be queried for them (under the same metric names)\nfrom Cloud Monitoring.",
      "type": "object",
      "properties": {
        "metrics": {
          "items": {
            "$ref": "MetricUpdate"
          },
          "type": "array",
          "description": "All metrics for this job."
        },
        "metricTime": {
          "format": "google-datetime",
          "description": "Timestamp as of which metric values are current.",
          "type": "string"
        }
      },
      "id": "JobMetrics"
    },
    "FloatingPointList": {
      "type": "object",
      "properties": {
        "elements": {
          "description": "Elements of the list.",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      },
      "id": "FloatingPointList",
      "description": "A metric value representing a list of floating point numbers."
    },
    "CounterUpdate": {
      "description": "An update to a Counter sent from a worker.",
      "type": "object",
      "properties": {
        "floatingPointMean": {
          "$ref": "FloatingPointMean",
          "description": "Floating point mean aggregation value for Mean."
        },
        "boolean": {
          "description": "Boolean value for And, Or.",
          "type": "boolean"
        },
        "nameAndKind": {
          "$ref": "NameAndKind",
          "description": "Counter name and aggregation type."
        },
        "distribution": {
          "$ref": "DistributionUpdate",
          "description": "Distribution data"
        },
        "stringList": {
          "$ref": "StringList",
          "description": "List of strings, for Set."
        },
        "shortId": {
          "format": "int64",
          "description": "The service-generated short identifier for this counter.\nThe short_id -\u003e (name, metadata) mapping is constant for the lifetime of\na job.",
          "type": "string"
        },
        "integerGauge": {
          "$ref": "IntegerGauge",
          "description": "Gauge data"
        },
        "floatingPointList": {
          "description": "List of floating point numbers, for Set.",
          "$ref": "FloatingPointList"
        },
        "integer": {
          "$ref": "SplitInt64",
          "description": "Integer value for Sum, Max, Min."
        },
        "structuredNameAndMetadata": {
          "description": "Counter structured name and metadata.",
          "$ref": "CounterStructuredNameAndMetadata"
        },
        "integerList": {
          "$ref": "IntegerList",
          "description": "List of integers, for Set."
        },
        "integerMean": {
          "description": "Integer mean aggregation value for Mean.",
          "$ref": "IntegerMean"
        },
        "floatingPoint": {
          "format": "double",
          "description": "Floating point value for Sum, Max, Min.",
          "type": "number"
        },
        "cumulative": {
          "description": "True if this counter is reported as the total cumulative aggregate\nvalue accumulated since the worker started working on this WorkItem.\nBy default this is false, indicating that this counter is reported\nas a delta.",
          "type": "boolean"
        },
        "internal": {
          "type": "any",
          "description": "Value for internally-defined counters used by the Dataflow service."
        }
      },
      "id": "CounterUpdate"
    },
    "SourceMetadata": {
      "description": "Metadata about a Source useful for automatically optimizing\nand tuning the pipeline, etc.",
      "type": "object",
      "properties": {
        "estimatedSizeBytes": {
          "format": "int64",
          "description": "An estimate of the total size (in bytes) of the data that would be\nread from this source.  This estimate is in terms of external storage\nsize, before any decompression or other processing done by the reader.",
          "type": "string"
        },
        "infinite": {
          "description": "Specifies that the size of this source is known to be infinite\n(this is a streaming source).",
          "type": "boolean"
        },
        "producesSortedKeys": {
          "description": "Whether this source is known to produce key/value pairs with\nthe (encoded) keys in lexicographically sorted order.",
          "type": "boolean"
        }
      },
      "id": "SourceMetadata"
    },
    "DistributionUpdate": {
      "description": "A metric value representing a distribution.",
      "type": "object",
      "properties": {
        "histogram": {
          "$ref": "Histogram",
          "description": "(Optional) Histogram of value counts for the distribution."
        },
        "max": {
          "$ref": "SplitInt64",
          "description": "The maximum value present in the distribution."
        },
        "count": {
          "$ref": "SplitInt64",
          "description": "The count of the number of elements present in the distribution."
        },
        "min": {
          "$ref": "SplitInt64",
          "description": "The minimum value present in the distribution."
        },
        "sumOfSquares": {
          "format": "double",
          "description": "Use a double since the sum of squares is likely to overflow int64.",
          "type": "number"
        },
        "sum": {
          "$ref": "SplitInt64",
          "description": "Use an int64 since we'd prefer the added precision. If overflow is a common\nproblem we can detect it and use an additional int64 or a double."
        }
      },
      "id": "DistributionUpdate"
    },
    "WorkerHealthReportResponse": {
      "type": "object",
      "properties": {
        "reportInterval": {
          "format": "google-duration",
          "description": "A positive value indicates the worker should change its reporting interval\nto the specified value.\n\nThe default value of zero means no change in report rate is requested by\nthe server.",
          "type": "string"
        }
      },
      "id": "WorkerHealthReportResponse",
      "description": "WorkerHealthReportResponse contains information returned to the worker\nin response to a health ping."
    },
    "SourceFork": {
      "type": "object",
      "properties": {
        "residual": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        },
        "residualSource": {
          "$ref": "DerivedSource",
          "description": "DEPRECATED"
        },
        "primary": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        },
        "primarySource": {
          "description": "DEPRECATED",
          "$ref": "DerivedSource"
        }
      },
      "id": "SourceFork",
      "description": "DEPRECATED in favor of DynamicSourceSplit."
    },
    "WorkItemStatus": {
      "description": "Conveys a worker's progress through the work described by a WorkItem.",
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean",
          "description": "True if the WorkItem was completed (successfully or unsuccessfully)."
        },
        "reportedProgress": {
          "$ref": "ApproximateReportedProgress",
          "description": "The worker's progress through this WorkItem."
        },
        "sourceFork": {
          "description": "DEPRECATED in favor of dynamic_source_split.",
          "$ref": "SourceFork"
        },
        "totalThrottlerWaitTimeSeconds": {
          "format": "double",
          "description": "Total time the worker spent being throttled by external systems.",
          "type": "number"
        },
        "counterUpdates": {
          "description": "Worker output counters for this WorkItem.",
          "items": {
            "$ref": "CounterUpdate"
          },
          "type": "array"
        },
        "workItemId": {
          "description": "Identifies the WorkItem.",
          "type": "string"
        },
        "errors": {
          "description": "Specifies errors which occurred during processing.  If errors are\nprovided, and completed = true, then the WorkItem is considered\nto have failed.",
          "items": {
            "$ref": "Status"
          },
          "type": "array"
        },
        "metricUpdates": {
          "description": "DEPRECATED in favor of counter_updates.",
          "items": {
            "$ref": "MetricUpdate"
          },
          "type": "array"
        },
        "dynamicSourceSplit": {
          "$ref": "DynamicSourceSplit",
          "description": "See documentation of stop_position."
        },
        "sourceOperationResponse": {
          "$ref": "SourceOperationResponse",
          "description": "If the work item represented a SourceOperationRequest, and the work\nis completed, contains the result of the operation."
        },
        "progress": {
          "$ref": "ApproximateProgress",
          "description": "DEPRECATED in favor of reported_progress."
        },
        "requestedLeaseDuration": {
          "format": "google-duration",
          "description": "Amount of time the worker requests for its lease.",
          "type": "string"
        },
        "reportIndex": {
          "format": "int64",
          "description": "The report index.  When a WorkItem is leased, the lease will\ncontain an initial report index.  When a WorkItem's status is\nreported to the system, the report should be sent with\nthat report index, and the response will contain the index the\nworker should use for the next report.  Reports received with\nunexpected index values will be rejected by the service.\n\nIn order to preserve idempotency, the worker should not alter the\ncontents of a report, even if the worker must submit the same\nreport multiple times before getting back a response.  The worker\nshould not submit a subsequent report until the response for the\nprevious report had been received from the service.",
          "type": "string"
        },
        "stopPosition": {
          "$ref": "Position",
          "description": "A worker may split an active map task in two parts, \"primary\" and\n\"residual\", continuing to process the primary part and returning the\nresidual part into the pool of available work.\nThis event is called a \"dynamic split\" and is critical to the dynamic\nwork rebalancing feature. The two obtained sub-tasks are called\n\"parts\" of the split.\nThe parts, if concatenated, must represent the same input as would\nbe read by the current task if the split did not happen.\nThe exact way in which the original task is decomposed into the two\nparts is specified either as a position demarcating them\n(stop_position), or explicitly as two DerivedSources, if this\ntask consumes a user-defined source type (dynamic_source_split).\n\nThe \"current\" task is adjusted as a result of the split: after a task\nwith range [A, B) sends a stop_position update at C, its range is\nconsidered to be [A, C), e.g.:\n* Progress should be interpreted relative to the new range, e.g.\n  \"75% completed\" means \"75% of [A, C) completed\"\n* The worker should interpret proposed_stop_position relative to the\n  new range, e.g. \"split at 68%\" should be interpreted as\n  \"split at 68% of [A, C)\".\n* If the worker chooses to split again using stop_position, only\n  stop_positions in [A, C) will be accepted.\n* Etc.\ndynamic_source_split has similar semantics: e.g., if a task with\nsource S splits using dynamic_source_split into {P, R}\n(where P and R must be together equivalent to S), then subsequent\nprogress and proposed_stop_position should be interpreted relative\nto P, and in a potential subsequent dynamic_source_split into {P', R'},\nP' and R' must be together equivalent to P, etc."
        }
      },
      "id": "WorkItemStatus"
    },
    "ComponentSource": {
      "type": "object",
      "properties": {
        "originalTransformOrCollection": {
          "description": "User name for the original user transform or collection with which this\nsource is most closely associated.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this source."
        },
        "userName": {
          "description": "Human-readable name for this transform; may be user or system generated.",
          "type": "string"
        }
      },
      "id": "ComponentSource",
      "description": "Description of an interstitial value between transforms in an execution\nstage."
    },
    "Histogram": {
      "description": "Histogram of value counts for a distribution.\n\nBuckets have an inclusive lower bound and exclusive upper bound and use\n\"1,2,5 bucketing\": The first bucket range is from [0,1) and all subsequent\nbucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket\nboundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ...\nNegative values are not supported.",
      "type": "object",
      "properties": {
        "firstBucketOffset": {
          "format": "int32",
          "description": "Starting index of first stored bucket. The non-inclusive upper-bound of\nthe ith bucket is given by:\n  pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]",
          "type": "integer"
        },
        "bucketCounts": {
          "description": "Counts of values in each bucket. For efficiency, prefix and trailing\nbuckets with count = 0 are elided. Buckets can store the full range of\nvalues of an unsigned long, with ULLONG_MAX falling into the 59th bucket\nwith range [1e19, 2e19).",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "Histogram"
    },
    "WorkItemServiceState": {
      "description": "The Dataflow service's idea of the current state of a WorkItem\nbeing processed by a worker.",
      "type": "object",
      "properties": {
        "suggestedStopPoint": {
          "$ref": "ApproximateProgress",
          "description": "DEPRECATED in favor of split_request."
        },
        "hotKeyDetection": {
          "$ref": "HotKeyDetection",
          "description": "A hot key is a symptom of poor data distribution in which there are enough\nelements mapped to a single key to impact pipeline performance. When\npresent, this field includes metadata associated with any hot key."
        },
        "splitRequest": {
          "$ref": "ApproximateSplitRequest",
          "description": "The progress point in the WorkItem where the Dataflow service\nsuggests that the worker truncate the task."
        },
        "suggestedStopPosition": {
          "$ref": "Position",
          "description": "Obsolete, always empty."
        },
        "reportStatusInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "New recommended reporting interval."
        },
        "harnessData": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Other data returned by the service, specific to the particular\nworker harness."
        },
        "leaseExpireTime": {
          "format": "google-datetime",
          "description": "Time at which the current lease will expire.",
          "type": "string"
        },
        "metricShortId": {
          "description": "The short ids that workers should use in subsequent metric updates.\nWorkers should strive to use short ids whenever possible, but it is ok\nto request the short_id again if a worker lost track of it\n(e.g. if the worker is recovering from a crash).\nNOTE: it is possible that the response may have short ids for a subset\nof the metrics.",
          "items": {
            "$ref": "MetricShortId"
          },
          "type": "array"
        },
        "nextReportIndex": {
          "format": "int64",
          "description": "The index value to use for the next report sent by the worker.\nNote: If the report call fails for whatever reason, the worker should\nreuse this index for subsequent report attempts.",
          "type": "string"
        }
      },
      "id": "WorkItemServiceState"
    },
    "MetricStructuredName": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Worker-defined metric name.",
          "type": "string"
        },
        "origin": {
          "description": "Origin (namespace) of metric name. May be blank for user-define metrics;\nwill be \"dataflow\" for metrics defined by the Dataflow service or SDK.",
          "type": "string"
        },
        "context": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Zero or more labeled fields which identify the part of the job this\nmetric is associated with, such as the name of a step or collection.\n\nFor example, built-in counters associated with steps will have\ncontext['step'] = \u003cstep-name\u003e. Counters associated with PCollections\nin the SDK will have context['pcollection'] = \u003cpcollection-name\u003e.",
          "type": "object"
        }
      },
      "id": "MetricStructuredName",
      "description": "Identifies a metric, by describing the source which generated the\nmetric."
    },
    "SeqMapTaskOutputInfo": {
      "description": "Information about an output of a SeqMapTask.",
      "type": "object",
      "properties": {
        "sink": {
          "$ref": "Sink",
          "description": "The sink to write the output value to."
        },
        "tag": {
          "type": "string",
          "description": "The id of the TupleTag the user code will tag the output value by."
        }
      },
      "id": "SeqMapTaskOutputInfo"
    },
    "JobExecutionStageInfo": {
      "type": "object",
      "properties": {
        "stepName": {
          "description": "The steps associated with the execution stage.\nNote that stages may have several steps, and that a given step\nmight be run by more than one stage.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "JobExecutionStageInfo",
      "description": "Contains information about how a particular\ngoogle.dataflow.v1beta3.Step will be executed."
    },
    "KeyRangeLocation": {
      "id": "KeyRangeLocation",
      "description": "Location information for a specific key-range of a sharded computation.\nCurrently we only support UTF-8 character splits to simplify encoding into\nJSON.",
      "type": "object",
      "properties": {
        "deprecatedPersistentDirectory": {
          "description": "DEPRECATED. The location of the persistent state for this range, as a\npersistent directory in the worker local filesystem.",
          "type": "string"
        },
        "deliveryEndpoint": {
          "description": "The physical location of this range assignment to be used for\nstreaming computation cross-worker message delivery.",
          "type": "string"
        },
        "dataDisk": {
          "description": "The name of the data disk where data for this range is stored.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\".",
          "type": "string"
        },
        "start": {
          "description": "The start (inclusive) of the key range.",
          "type": "string"
        },
        "end": {
          "description": "The end (exclusive) of the key range.",
          "type": "string"
        }
      }
    },
    "SourceGetMetadataRequest": {
      "description": "A request to compute the SourceMetadata of a Source.",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "Specification of the source whose metadata should be computed."
        }
      },
      "id": "SourceGetMetadataRequest"
    },
    "SeqMapTask": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The user-provided name of the SeqDo operation.",
          "type": "string"
        },
        "outputInfos": {
          "description": "Information about each of the outputs.",
          "items": {
            "$ref": "SeqMapTaskOutputInfo"
          },
          "type": "array"
        },
        "inputs": {
          "description": "Information about each of the inputs.",
          "items": {
            "$ref": "SideInputInfo"
          },
          "type": "array"
        },
        "systemName": {
          "type": "string",
          "description": "System-defined name of the SeqDo operation.\nUnique across the workflow."
        },
        "stageName": {
          "description": "System-defined name of the stage containing the SeqDo operation.\nUnique across the workflow.",
          "type": "string"
        },
        "userFn": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The user function to invoke."
        }
      },
      "id": "SeqMapTask",
      "description": "Describes a particular function to invoke."
    },
    "NameAndKind": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the counter."
        },
        "kind": {
          "type": "string",
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ],
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ],
          "description": "Counter aggregation kind."
        }
      },
      "id": "NameAndKind",
      "description": "Basic metadata about a counter."
    },
    "ListTemplateVersionsResponse": {
      "description": "Respond a list of TemplateVersions.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        },
        "templateVersions": {
          "description": "A list of TemplateVersions.",
          "items": {
            "$ref": "TemplateVersion"
          },
          "type": "array"
        }
      },
      "id": "ListTemplateVersionsResponse"
    },
    "WorkerMessageCode": {
      "description": "A message code is used to report status and error messages to the service.\nThe message codes are intended to be machine readable. The service will\ntake care of translating these into user understandable messages if\nnecessary.\n\nExample use cases:\n  1. Worker processes reporting successful startup.\n  2. Worker processes reporting specific errors (e.g. package staging\n     failure).",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Parameters contains specific information about the code.\n\nThis is a struct to allow parameters of different types.\n\nExamples:\n 1. For a \"HARNESS_STARTED\" message parameters might provide the name\n    of the worker and additional data like timing information.\n 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing\n    the GCS objects being downloaded and fields containing errors.\n\nIn general complex data structures should be avoided. If a worker\nneeds to send a specific and complicated data structure then please\nconsider defining a new proto and adding it to the data oneof in\nWorkerMessageResponse.\n\nConventions:\n Parameters should only be used for information that isn't typically passed\n as a label.\n hostname and other worker identifiers should almost always be passed\n as labels since they will be included on most messages.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "code": {
          "type": "string",
          "description": "The code is a string intended for consumption by a machine that identifies\nthe type of message being sent.\nExamples:\n 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has\n     started.\n 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading\n    a GCS file as part of the boot process of one of the worker containers.\n\nThis is a string and not an enum to make it easy to add new codes without\nwaiting for an API change."
        }
      },
      "id": "WorkerMessageCode"
    },
    "SDKInfo": {
      "description": "SDK Information.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Required. The SDK Language.",
          "type": "string",
          "enumDescriptions": [
            "UNKNOWN Language.",
            "Java.",
            "Python."
          ],
          "enum": [
            "UNKNOWN",
            "JAVA",
            "PYTHON"
          ]
        },
        "version": {
          "description": "Optional. The SDK version.",
          "type": "string"
        }
      },
      "id": "SDKInfo"
    },
    "DatastoreIODetails": {
      "id": "DatastoreIODetails",
      "description": "Metadata for a Datastore connector used by the job.",
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Namespace used in the connection.",
          "type": "string"
        },
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        }
      }
    },
    "CustomSourceLocation": {
      "type": "object",
      "properties": {
        "stateful": {
          "type": "boolean",
          "description": "Whether this source is stateful."
        }
      },
      "id": "CustomSourceLocation",
      "description": "Identifies the location of a custom souce."
    },
    "MapTask": {
      "id": "MapTask",
      "description": "MapTask consists of an ordered set of instructions, each of which\ndescribes one particular low-level operation for the worker to\nperform in order to accomplish the MapTask's WorkItem.\n\nEach instruction must appear in the list before any instructions which\ndepends on its output.",
      "type": "object",
      "properties": {
        "stageName": {
          "type": "string",
          "description": "System-defined name of the stage containing this MapTask.\nUnique across the workflow."
        },
        "systemName": {
          "type": "string",
          "description": "System-defined name of this MapTask.\nUnique across the workflow."
        },
        "instructions": {
          "description": "The instructions in the MapTask.",
          "items": {
            "$ref": "ParallelInstruction"
          },
          "type": "array"
        },
        "counterPrefix": {
          "description": "Counter prefix that can be used to prefix counters. Not currently used in\nDataflow.",
          "type": "string"
        }
      }
    },
    "ModifyTemplateVersionLabelResponse": {
      "description": "Respond the labels in the TemplateVersion.",
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "All the label in the TemplateVersion."
        }
      },
      "id": "ModifyTemplateVersionLabelResponse"
    },
    "StreamingApplianceSnapshotConfig": {
      "id": "StreamingApplianceSnapshotConfig",
      "description": "Streaming appliance snapshot configuration.",
      "type": "object",
      "properties": {
        "importStateEndpoint": {
          "type": "string",
          "description": "Indicates which endpoint is used to import appliance state."
        },
        "snapshotId": {
          "description": "If set, indicates the snapshot id for the snapshot being performed.",
          "type": "string"
        }
      }
    },
    "RuntimeMetadata": {
      "description": "RuntimeMetadata describing a runtime environment.",
      "type": "object",
      "properties": {
        "sdkInfo": {
          "$ref": "SDKInfo",
          "description": "SDK Info for the template."
        },
        "parameters": {
          "description": "The parameters for the template.",
          "items": {
            "$ref": "ParameterMetadata"
          },
          "type": "array"
        }
      },
      "id": "RuntimeMetadata"
    },
    "FloatingPointMean": {
      "description": "A representation of a floating point mean metric contribution.",
      "type": "object",
      "properties": {
        "count": {
          "$ref": "SplitInt64",
          "description": "The number of values being aggregated."
        },
        "sum": {
          "format": "double",
          "description": "The sum of all values being aggregated.",
          "type": "number"
        }
      },
      "id": "FloatingPointMean"
    },
    "ReportWorkItemStatusResponse": {
      "type": "object",
      "properties": {
        "unifiedWorkerResponse": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker."
        },
        "workItemServiceStates": {
          "description": "A set of messages indicating the service-side state for each\nWorkItem whose status was reported, in the same order as the\nWorkItemStatus messages in the ReportWorkItemStatusRequest which\nresulting in this response.",
          "items": {
            "$ref": "WorkItemServiceState"
          },
          "type": "array"
        }
      },
      "id": "ReportWorkItemStatusResponse",
      "description": "Response from a request to report the status of WorkItems."
    },
    "InstructionOutput": {
      "type": "object",
      "properties": {
        "originalName": {
          "type": "string",
          "description": "System-defined name for this output in the original workflow graph.\nOutputs that do not contribute to an original instruction do not set this."
        },
        "systemName": {
          "description": "System-defined name of this output.\nUnique across the workflow.",
          "type": "string"
        },
        "onlyCountKeyBytes": {
          "type": "boolean",
          "description": "For system-generated byte and mean byte metrics, certain instructions\nshould only report the key size."
        },
        "onlyCountValueBytes": {
          "description": "For system-generated byte and mean byte metrics, certain instructions\nshould only report the value size.",
          "type": "boolean"
        },
        "codec": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The codec to use to encode data being written via this output."
        },
        "name": {
          "description": "The user-provided name of this output.",
          "type": "string"
        }
      },
      "id": "InstructionOutput",
      "description": "An output of an instruction."
    },
    "SdkVersion": {
      "description": "The version of the SDK used to run the job.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the SDK used to run the job.",
          "type": "string"
        },
        "sdkSupportStatus": {
          "enumDescriptions": [
            "Cloud Dataflow is unaware of this version.",
            "This is a known version of an SDK, and is supported.",
            "A newer version of the SDK family exists, and an update is recommended.",
            "This version of the SDK is deprecated and will eventually be no\nlonger supported.",
            "Support for this SDK version has ended and it should no longer be used."
          ],
          "enum": [
            "UNKNOWN",
            "SUPPORTED",
            "STALE",
            "DEPRECATED",
            "UNSUPPORTED"
          ],
          "description": "The support status for this SDK version.",
          "type": "string"
        },
        "versionDisplayName": {
          "description": "A readable string describing the version of the SDK.",
          "type": "string"
        }
      },
      "id": "SdkVersion"
    },
    "IntegerGauge": {
      "id": "IntegerGauge",
      "description": "A metric value representing temporal values of a variable.",
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "google-datetime",
          "description": "The time at which this value was measured. Measured as msecs from epoch.",
          "type": "string"
        },
        "value": {
          "$ref": "SplitInt64",
          "description": "The value of the variable represented by this gauge."
        }
      }
    },
    "CreateJobFromTemplateRequest": {
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "RuntimeEnvironment",
          "description": "The runtime environment for the job."
        },
        "location": {
          "type": "string",
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to\nwhich to direct the request."
        },
        "parameters": {
          "description": "The runtime parameters to pass to the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jobName": {
          "type": "string",
          "description": "Required. The job name to use for the created job."
        },
        "gcsPath": {
          "description": "Required. A Cloud Storage path to the template from which to\ncreate the job.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        }
      },
      "id": "CreateJobFromTemplateRequest",
      "description": "A request to create a Cloud Dataflow job from a template."
    },
    "BigQueryIODetails": {
      "description": "Metadata for a BigQuery connector used by the job.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table accessed in the connection.",
          "type": "string"
        },
        "dataset": {
          "description": "Dataset accessed in the connection.",
          "type": "string"
        },
        "query": {
          "type": "string",
          "description": "Query used to access data in the connection."
        },
        "projectId": {
          "description": "Project accessed in the connection.",
          "type": "string"
        }
      },
      "id": "BigQueryIODetails"
    },
    "IntegerMean": {
      "description": "A representation of an integer mean metric contribution.",
      "type": "object",
      "properties": {
        "sum": {
          "$ref": "SplitInt64",
          "description": "The sum of all values being aggregated."
        },
        "count": {
          "$ref": "SplitInt64",
          "description": "The number of values being aggregated."
        }
      },
      "id": "IntegerMean"
    },
    "SnapshotJobRequest": {
      "description": "Request to create a snapshot of a job.",
      "type": "object",
      "properties": {
        "ttl": {
          "format": "google-duration",
          "description": "TTL for the snapshot.",
          "type": "string"
        },
        "location": {
          "description": "The location that contains this job.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "User specified description of the snapshot. Maybe empty."
        },
        "snapshotSources": {
          "description": "If true, perform snapshots for sources which support this.",
          "type": "boolean"
        }
      },
      "id": "SnapshotJobRequest"
    },
    "ListJobsResponse": {
      "id": "ListJobsResponse",
      "description": "Response to a request to list Cloud Dataflow jobs in a project. This might\nbe a partial response, depending on the page size in the ListJobsRequest.\nHowever, if the project does not have any jobs, an instance of\nListJobsResponse is not returned and the requests's response\nbody is empty {}.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "A subset of the requested job information.",
          "items": {
            "$ref": "Job"
          },
          "type": "array"
        },
        "failedLocation": {
          "description": "Zero or more messages describing the [regional endpoints]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\nfailed to respond.",
          "items": {
            "$ref": "FailedLocation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Set if there may be more results than fit in this response."
        }
      }
    },
    "LaunchFlexTemplateParameter": {
      "description": "Launch FlexTemplate Parameter.",
      "type": "object",
      "properties": {
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "containerSpec": {
          "description": "Spec about the container image to launch.",
          "$ref": "ContainerSpec"
        },
        "containerSpecGcsPath": {
          "description": "Gcs path to a file with json serialized ContainerSpec as content.",
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The parameters for FlexTemplate.\nEx. {\"num_workers\":\"5\"}"
        }
      },
      "id": "LaunchFlexTemplateParameter"
    },
    "ComputationTopology": {
      "id": "ComputationTopology",
      "description": "All configuration data for a particular Computation.",
      "type": "object",
      "properties": {
        "systemStageName": {
          "description": "The system stage name.",
          "type": "string"
        },
        "computationId": {
          "description": "The ID of the computation.",
          "type": "string"
        },
        "inputs": {
          "description": "The inputs to the computation.",
          "items": {
            "$ref": "StreamLocation"
          },
          "type": "array"
        },
        "keyRanges": {
          "description": "The key ranges processed by the computation.",
          "items": {
            "$ref": "KeyRangeLocation"
          },
          "type": "array"
        },
        "outputs": {
          "items": {
            "$ref": "StreamLocation"
          },
          "type": "array",
          "description": "The outputs from the computation."
        },
        "stateFamilies": {
          "description": "The state family values.",
          "items": {
            "$ref": "StateFamilyConfig"
          },
          "type": "array"
        }
      }
    },
    "RuntimeEnvironment": {
      "description": "The environment values to set at runtime.",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "Optional. Name for the Cloud KMS key for the job.\nKey format is:\nprojects/\u003cproject\u003e/locations/\u003clocation\u003e/keyRings/\u003ckeyring\u003e/cryptoKeys/\u003ckey\u003e",
          "type": "string"
        },
        "tempLocation": {
          "description": "The Cloud Storage path to use for temporary files.\nMust be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        },
        "bypassTempDirValidation": {
          "description": "Whether to bypass the safety checks for the job's temporary directory.\nUse with caution.",
          "type": "boolean"
        },
        "network": {
          "description": "Network to which VMs will be assigned.  If empty or unspecified,\nthe service will use the network \"default\".",
          "type": "string"
        },
        "workerRegion": {
          "type": "string",
          "description": "The Compute Engine region\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1\". Mutually exclusive\nwith worker_zone. If neither worker_region nor worker_zone is specified,\ndefault to the control plane's region."
        },
        "zone": {
          "description": "The Compute Engine [availability\nzone](https://cloud.google.com/compute/docs/regions-zones/regions-zones)\nfor launching worker instances to run your pipeline.\nIn the future, worker_zone will take precedence.",
          "type": "string"
        },
        "numWorkers": {
          "format": "int32",
          "description": "The initial number of Google Compute Engine instnaces for the job.",
          "type": "integer"
        },
        "workerZone": {
          "description": "The Compute Engine zone\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive\nwith worker_region. If neither worker_region nor worker_zone is specified,\na zone in the control plane's region is chosen based on available capacity.\nIf both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
          "type": "string"
        },
        "additionalUserLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional user labels to be specified for the job.\nKeys and values should follow the restrictions specified in the [labeling\nrestrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)\npage.",
          "type": "object"
        },
        "additionalExperiments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Additional experiment flags for the job."
        },
        "maxWorkers": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of Google Compute Engine instances to be made\navailable to your pipeline during execution, from 1 to 1000."
        },
        "serviceAccountEmail": {
          "description": "The email address of the service account to run the job as.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to use for the job. Defaults to the value from the\ntemplate if not specified.",
          "type": "string"
        },
        "subnetwork": {
          "description": "Subnetwork to which VMs will be assigned, if desired.  Expected to be of\nthe form \"regions/REGION/subnetworks/SUBNETWORK\".",
          "type": "string"
        },
        "ipConfiguration": {
          "type": "string",
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ],
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs."
        }
      },
      "id": "RuntimeEnvironment"
    },
    "ModifyTemplateVersionLabelRequest": {
      "id": "ModifyTemplateVersionLabelRequest",
      "description": "Either add the label to TemplateVersion or remove it from the\nTemplateVersion.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The label value for update.",
          "type": "string"
        },
        "op": {
          "description": "Requests for add label to TemplateVersion or remove label from\nTemplateVersion.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Add the label to the TemplateVersion object.",
            "Remove the label from the TemplateVersion object."
          ],
          "enum": [
            "OPERATION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ]
        },
        "key": {
          "type": "string",
          "description": "The label key for update."
        }
      }
    },
    "StreamingSideInputLocation": {
      "description": "Identifies the location of a streaming side input.",
      "type": "object",
      "properties": {
        "stateFamily": {
          "description": "Identifies the state family where this side input is stored.",
          "type": "string"
        },
        "tag": {
          "description": "Identifies the particular side input within the streaming Dataflow job.",
          "type": "string"
        }
      },
      "id": "StreamingSideInputLocation"
    },
    "MountedDataDisk": {
      "description": "Describes mounted data disk.",
      "type": "object",
      "properties": {
        "dataDisk": {
          "description": "The name of the data disk.\nThis name is local to the Google Cloud Platform project and uniquely\nidentifies the disk within that project, for example\n\"myproject-1014-104817-4c2-harness-0-disk-1\".",
          "type": "string"
        }
      },
      "id": "MountedDataDisk"
    },
    "LaunchTemplateResponse": {
      "description": "Response to the request to launch a template.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "The job that was launched, if the request was not a dry run and\nthe job was successfully launched."
        }
      },
      "id": "LaunchTemplateResponse"
    },
    "JobMetadata": {
      "id": "JobMetadata",
      "description": "Metadata available primarily for filtering jobs. Will be included in the\nListJob response and Job SUMMARY view.",
      "type": "object",
      "properties": {
        "spannerDetails": {
          "description": "Identification of a Spanner source used in the Dataflow job.",
          "items": {
            "$ref": "SpannerIODetails"
          },
          "type": "array"
        },
        "datastoreDetails": {
          "description": "Identification of a Datastore source used in the Dataflow job.",
          "items": {
            "$ref": "DatastoreIODetails"
          },
          "type": "array"
        },
        "sdkVersion": {
          "$ref": "SdkVersion",
          "description": "The SDK version used to run the job."
        },
        "bigqueryDetails": {
          "items": {
            "$ref": "BigQueryIODetails"
          },
          "type": "array",
          "description": "Identification of a BigQuery source used in the Dataflow job."
        },
        "fileDetails": {
          "description": "Identification of a File source used in the Dataflow job.",
          "items": {
            "$ref": "FileIODetails"
          },
          "type": "array"
        },
        "pubsubDetails": {
          "items": {
            "$ref": "PubSubIODetails"
          },
          "type": "array",
          "description": "Identification of a PubSub source used in the Dataflow job."
        },
        "bigTableDetails": {
          "description": "Identification of a BigTable source used in the Dataflow job.",
          "items": {
            "$ref": "BigTableIODetails"
          },
          "type": "array"
        }
      }
    },
    "Job": {
      "id": "Job",
      "description": "Defines a job to be run by the Cloud Dataflow service.",
      "type": "object",
      "properties": {
        "requestedState": {
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ],
          "description": "The job's requested state.\n\n`UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and\n`JOB_STATE_RUNNING` states, by setting requested_state.  `UpdateJob` may\nalso be used to directly set a job's requested state to\n`JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the\njob if it has not already reached a terminal state.",
          "type": "string",
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ]
        },
        "clientRequestId": {
          "description": "The client's unique identifier of the job, re-used across retried attempts.\nIf this field is set, the service will ensure its uniqueness.\nThe request to create a job will fail if the service has knowledge of a\npreviously submitted job with the same client's ID and job name.\nThe caller may use this field to ensure idempotence of job\ncreation across retried attempts to create a job.\nBy default, the field is empty and, in that case, the service ignores it.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this job.\n\nThis field is set by the Cloud Dataflow service when the Job is\ncreated, and is immutable for the life of the job.",
          "type": "string"
        },
        "currentStateTime": {
          "format": "google-datetime",
          "description": "The timestamp associated with the current state.",
          "type": "string"
        },
        "transformNameMapping": {
          "description": "The map of transform name prefixes of the job to be replaced to the\ncorresponding name prefixes of the new job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environment": {
          "$ref": "Environment",
          "description": "The environment for the job."
        },
        "stageStates": {
          "description": "This field may be mutated by the Cloud Dataflow service;\ncallers cannot mutate it.",
          "items": {
            "$ref": "ExecutionStageState"
          },
          "type": "array"
        },
        "jobMetadata": {
          "$ref": "JobMetadata",
          "description": "This field is populated by the Dataflow service to support filtering jobs\nby the metadata values provided here. Populated for ListJobs and all GetJob\nviews SUMMARY and higher."
        },
        "createdFromSnapshotId": {
          "description": "If this is specified, the job's initial state is populated from the given\nsnapshot.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "The ID of the Cloud Platform project that the job belongs to."
        },
        "type": {
          "enumDescriptions": [
            "The type of the job is unspecified, or unknown.",
            "A batch job with a well-defined end point: data is read, data is\nprocessed, data is written, and the job is done.",
            "A continuously streaming job with no end: data is read,\nprocessed, and written continuously."
          ],
          "enum": [
            "JOB_TYPE_UNKNOWN",
            "JOB_TYPE_BATCH",
            "JOB_TYPE_STREAMING"
          ],
          "description": "The type of Cloud Dataflow job.",
          "type": "string"
        },
        "pipelineDescription": {
          "$ref": "PipelineDescription",
          "description": "Preliminary field: The format of this data may change at any time.\nA description of the user pipeline and stages through which it is executed.\nCreated by Cloud Dataflow service.  Only retrieved with\nJOB_VIEW_DESCRIPTION or JOB_VIEW_ALL."
        },
        "replaceJobId": {
          "description": "If this job is an update of an existing job, this field is the job ID\nof the job it replaced.\n\nWhen sending a `CreateJobRequest`, you can update a job by specifying it\nhere. The job named here is stopped, and its intermediate state is\ntransferred to this job.",
          "type": "string"
        },
        "tempFiles": {
          "description": "A set of files the system should be aware of that are used\nfor temporary storage. These temporary files will be\nremoved on job completion.\nNo duplicates are allowed.\nNo file patterns are supported.\n\nThe supported files are:\n\nGoogle Cloud Storage:\n\n   storage.googleapis.com/{bucket}/{object}\n   bucket.storage.googleapis.com/{object}",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The user-specified Cloud Dataflow job name.\n\nOnly one Job with a given name may exist in a project at any\ngiven time. If a caller attempts to create a Job with the same\nname as an already-existing Job, the attempt returns the\nexisting Job.\n\nThe name must match the regular expression\n`[a-z]([-a-z0-9]{0,38}[a-z0-9])?`",
          "type": "string"
        },
        "replacedByJobId": {
          "description": "If another job is an update of this job (and thus, this job is in\n`JOB_STATE_UPDATED`), this field contains the ID of that job.",
          "type": "string"
        },
        "steps": {
          "description": "Exactly one of step or steps_location should be specified.\n\nThe top-level steps that constitute the entire job.",
          "items": {
            "$ref": "Step"
          },
          "type": "array"
        },
        "executionInfo": {
          "$ref": "JobExecutionInfo",
          "description": "Deprecated."
        },
        "currentState": {
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ],
          "description": "The current state of the job.\n\nJobs are created in the `JOB_STATE_STOPPED` state unless otherwise\nspecified.\n\nA job in the `JOB_STATE_RUNNING` state may asynchronously enter a\nterminal state. After a job has reached a terminal state, no\nfurther state updates may be made.\n\nThis field may be mutated by the Cloud Dataflow service;\ncallers cannot mutate it.",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains this job.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the job was started (transitioned to JOB_STATE_PENDING).\nFlexible resource scheduling jobs are started with some delay after job\ncreation, so start_time is unset before start and is updated when the\njob is started by the Cloud Dataflow service. For other jobs, start_time\nalways equals to create_time and is immutable and set by the Cloud Dataflow\nservice."
        },
        "stepsLocation": {
          "description": "The GCS location where the steps are stored.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the job was initially created. Immutable and set by the\nCloud Dataflow service."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-defined labels for this job.\n\nThe labels map can contain no more than 64 entries.  Entries of the labels\nmap are UTF8 strings that comply with the following restrictions:\n\n* Keys must conform to regexp:  \\p{Ll}\\p{Lo}{0,62}\n* Values must conform to regexp:  [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n* Both keys and values are additionally constrained to be \u003c= 128 bytes in\nsize.",
          "type": "object"
        }
      }
    },
    "DynamicSourceSplit": {
      "type": "object",
      "properties": {
        "residual": {
          "$ref": "DerivedSource",
          "description": "Residual part (returned to the pool of work).\nSpecified relative to the previously-current source."
        },
        "primary": {
          "$ref": "DerivedSource",
          "description": "Primary part (continued to be processed by worker).\nSpecified relative to the previously-current source.\nBecomes current."
        }
      },
      "id": "DynamicSourceSplit",
      "description": "When a task splits using WorkItemStatus.dynamic_source_split, this\nmessage describes the two parts of the split relative to the\ndescription of the current task's input."
    },
    "DerivedSource": {
      "type": "object",
      "properties": {
        "derivationMode": {
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ],
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ],
          "description": "What source to base the produced source on (if any).",
          "type": "string"
        },
        "source": {
          "$ref": "Source",
          "description": "Specification of the source."
        }
      },
      "id": "DerivedSource",
      "description": "Specification of one of the bundles produced as a result of splitting\na Source (e.g. when executing a SourceSplitRequest, or when\nsplitting an active task using WorkItemStatus.dynamic_source_split),\nrelative to the source being split."
    },
    "FileIODetails": {
      "description": "Metadata for a File connector used by the job.",
      "type": "object",
      "properties": {
        "filePattern": {
          "type": "string",
          "description": "File Pattern used to access files by the connector."
        }
      },
      "id": "FileIODetails"
    },
    "SourceOperationResponse": {
      "description": "The result of a SourceOperationRequest, specified in\nReportWorkItemStatusRequest.source_operation when the work item\nis completed.",
      "type": "object",
      "properties": {
        "getMetadata": {
          "$ref": "SourceGetMetadataResponse",
          "description": "A response to a request to get metadata about a source."
        },
        "split": {
          "$ref": "SourceSplitResponse",
          "description": "A response to a request to split a source."
        }
      },
      "id": "SourceOperationResponse"
    },
    "SideInputInfo": {
      "description": "Information about a side input of a DoFn or an input of a SeqDoFn.",
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The id of the tag the user code will access this side input by;\nthis should correspond to the tag of some MultiOutputInfo."
        },
        "kind": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "How to interpret the source element(s) as a side input value.",
          "type": "object"
        },
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "The source(s) to read element(s) from to get the value of this side input.\nIf more than one source, then the elements are taken from the\nsources, in the specified order if order matters.\nAt least one source is required."
        }
      },
      "id": "SideInputInfo"
    },
    "SendDebugCaptureResponse": {
      "type": "object",
      "properties": {},
      "id": "SendDebugCaptureResponse",
      "description": "Response to a send capture request.\nnothing"
    },
    "ListSnapshotsResponse": {
      "description": "List of snapshots.",
      "type": "object",
      "properties": {
        "snapshots": {
          "description": "Returned snapshots.",
          "items": {
            "$ref": "Snapshot"
          },
          "type": "array"
        }
      },
      "id": "ListSnapshotsResponse"
    },
    "QueryInfo": {
      "description": "Information about a validated query.",
      "type": "object",
      "properties": {
        "queryProperty": {
          "enumDescriptions": [
            "The query property is unknown or unspecified.",
            "Indicates this query reads from \u003e= 1 unbounded source."
          ],
          "description": "Includes an entry for each satisfied QueryProperty.",
          "items": {
            "type": "string",
            "enum": [
              "QUERY_PROPERTY_UNSPECIFIED",
              "HAS_UNBOUNDED_SOURCE"
            ]
          },
          "type": "array"
        }
      },
      "id": "QueryInfo"
    },
    "WriteInstruction": {
      "type": "object",
      "properties": {
        "sink": {
          "description": "The sink to write to.",
          "$ref": "Sink"
        },
        "input": {
          "description": "The input.",
          "$ref": "InstructionInput"
        }
      },
      "id": "WriteInstruction",
      "description": "An instruction that writes records.\nTakes one input, produces no outputs."
    },
    "ValidateResponse": {
      "id": "ValidateResponse",
      "description": "Response to the validation request.",
      "type": "object",
      "properties": {
        "queryInfo": {
          "$ref": "QueryInfo",
          "description": "Information about the validated query. Not defined if validation fails."
        },
        "errorMessage": {
          "description": "Will be empty if validation succeeds.",
          "type": "string"
        }
      }
    },
    "CounterStructuredNameAndMetadata": {
      "id": "CounterStructuredNameAndMetadata",
      "description": "A single message which encapsulates structured name and metadata for a given\ncounter.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "CounterMetadata",
          "description": "Metadata associated with a counter"
        },
        "name": {
          "$ref": "CounterStructuredName",
          "description": "Structured name of the counter."
        }
      }
    },
    "ConcatPosition": {
      "id": "ConcatPosition",
      "description": "A position that encapsulates an inner position and an index for the inner\nposition. A ConcatPosition can be used by a reader of a source that\nencapsulates a set of other sources.",
      "type": "object",
      "properties": {
        "position": {
          "$ref": "Position",
          "description": "Position within the inner source."
        },
        "index": {
          "format": "int32",
          "description": "Index of the inner source.",
          "type": "integer"
        }
      }
    },
    "StreamingComputationRanges": {
      "description": "Describes full or partial data disk assignment information of the computation\nranges.",
      "type": "object",
      "properties": {
        "rangeAssignments": {
          "items": {
            "$ref": "KeyRangeDataDiskAssignment"
          },
          "type": "array",
          "description": "Data disk assignments for ranges from this computation."
        },
        "computationId": {
          "type": "string",
          "description": "The ID of the computation."
        }
      },
      "id": "StreamingComputationRanges"
    },
    "AutoscalingSettings": {
      "description": "Settings for WorkerPool autoscaling.",
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "enumDescriptions": [
            "The algorithm is unknown, or unspecified.",
            "Disable autoscaling.",
            "Increase worker count over time to reduce job execution time."
          ],
          "enum": [
            "AUTOSCALING_ALGORITHM_UNKNOWN",
            "AUTOSCALING_ALGORITHM_NONE",
            "AUTOSCALING_ALGORITHM_BASIC"
          ],
          "description": "The algorithm to use for autoscaling."
        },
        "maxNumWorkers": {
          "format": "int32",
          "description": "The maximum number of workers to cap scaling at.",
          "type": "integer"
        }
      },
      "id": "AutoscalingSettings"
    },
    "ExecutionStageSummary": {
      "id": "ExecutionStageSummary",
      "description": "Description of the composing transforms, names/ids, and input/outputs of a\nstage of execution.  Some composing transforms and sources may have been\ngenerated by the Dataflow service during execution planning.",
      "type": "object",
      "properties": {
        "inputSource": {
          "description": "Input sources for this stage.",
          "items": {
            "$ref": "StageSource"
          },
          "type": "array"
        },
        "id": {
          "description": "Dataflow service generated id for this stage.",
          "type": "string"
        },
        "componentTransform": {
          "description": "Transforms that comprise this execution stage.",
          "items": {
            "$ref": "ComponentTransform"
          },
          "type": "array"
        },
        "componentSource": {
          "items": {
            "$ref": "ComponentSource"
          },
          "type": "array",
          "description": "Collections produced and consumed by component transforms of this stage."
        },
        "kind": {
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ],
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ],
          "description": "Type of tranform this stage is executing.",
          "type": "string"
        },
        "outputSource": {
          "description": "Output sources for this stage.",
          "items": {
            "$ref": "StageSource"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this stage."
        }
      }
    },
    "SdkHarnessContainerImage": {
      "id": "SdkHarnessContainerImage",
      "description": "Defines a SDK harness container for executing Dataflow pipelines.",
      "type": "object",
      "properties": {
        "containerImage": {
          "description": "A docker container image that resides in Google Container Registry.",
          "type": "string"
        },
        "useSingleCorePerContainer": {
          "description": "If true, recommends the Dataflow service to use only one core per SDK\ncontainer instance with this image. If false (or unset) recommends using\nmore than one core per SDK container instance with this image for\nefficiency. Note that Dataflow service may choose to override this property\nif needed.",
          "type": "boolean"
        }
      }
    },
    "SendWorkerMessagesRequest": {
      "description": "A request for sending worker messages to the service.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job.",
          "type": "string"
        },
        "workerMessages": {
          "description": "The WorkerMessages to send.",
          "items": {
            "$ref": "WorkerMessage"
          },
          "type": "array"
        }
      },
      "id": "SendWorkerMessagesRequest"
    },
    "SourceSplitShard": {
      "description": "DEPRECATED in favor of DerivedSource.",
      "type": "object",
      "properties": {
        "derivationMode": {
          "type": "string",
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ],
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ],
          "description": "DEPRECATED"
        },
        "source": {
          "$ref": "Source",
          "description": "DEPRECATED"
        }
      },
      "id": "SourceSplitShard"
    },
    "CPUTime": {
      "description": "Modeled after information exposed by /proc/stat.",
      "type": "object",
      "properties": {
        "rate": {
          "type": "number",
          "format": "double",
          "description": "Average CPU utilization rate (% non-idle cpu / second) since previous\nsample."
        },
        "timestamp": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp of the measurement."
        },
        "totalMs": {
          "type": "string",
          "format": "uint64",
          "description": "Total active CPU time across all cores (ie., non-idle) in milliseconds\nsince start-up."
        }
      },
      "id": "CPUTime"
    },
    "Environment": {
      "type": "object",
      "properties": {
        "internalExperiments": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Experimental settings.",
          "type": "object"
        },
        "workerRegion": {
          "description": "The Compute Engine region\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1\". Mutually exclusive\nwith worker_zone. If neither worker_region nor worker_zone is specified,\ndefault to the control plane's region.",
          "type": "string"
        },
        "serviceKmsKeyName": {
          "description": "If set, contains the Cloud KMS key identifier used to encrypt data\nat rest, AKA a Customer Managed Encryption Key (CMEK).\n\nFormat:\n  projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY",
          "type": "string"
        },
        "userAgent": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A description of the process that generated the request.",
          "type": "object"
        },
        "workerZone": {
          "description": "The Compute Engine zone\n(https://cloud.google.com/compute/docs/regions-zones/regions-zones) in\nwhich worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive\nwith worker_region. If neither worker_region nor worker_zone is specified,\na zone in the control plane's region is chosen based on available capacity.",
          "type": "string"
        },
        "clusterManagerApiService": {
          "description": "The type of cluster manager API to use.  If unknown or\nunspecified, the service will attempt to choose a reasonable\ndefault.  This should be in the form of the API service name,\ne.g. \"compute.googleapis.com\".",
          "type": "string"
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the system should use for temporary\nstorage.  The system will append the suffix \"/temp-{JOBNAME} to\nthis resource prefix, where {JOBNAME} is the value of the\njob_name field.  The resulting bucket and object prefix is used\nas the prefix of the resources used to store temporary data\nneeded during the job execution.  NOTE: This will override the\nvalue in taskrunner_settings.\nThe supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "experiments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of experiments to enable."
        },
        "version": {
          "description": "A structure describing which components and their versions of the service\nare required in order to run the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "serviceAccountEmail": {
          "description": "Identity to run virtual machines as. Defaults to the default account.",
          "type": "string"
        },
        "sdkPipelineOptions": {
          "description": "The Cloud Dataflow SDK pipeline options specified by the user. These\noptions are passed through the service and are used to recreate the\nSDK pipeline options on the worker in a language agnostic and platform\nindependent way.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "flexResourceSchedulingGoal": {
          "type": "string",
          "enumDescriptions": [
            "Run in the default mode.",
            "Optimize for lower execution time.",
            "Optimize for lower cost."
          ],
          "enum": [
            "FLEXRS_UNSPECIFIED",
            "FLEXRS_SPEED_OPTIMIZED",
            "FLEXRS_COST_OPTIMIZED"
          ],
          "description": "Which Flexible Resource Scheduling mode to run in."
        },
        "workerPools": {
          "description": "The worker pools. At least one \"harness\" worker pool must be\nspecified in order for the job to have workers.",
          "items": {
            "$ref": "WorkerPool"
          },
          "type": "array"
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for the current project where various workflow\nrelated tables are stored.\n\nThe supported resource type is:\n\nGoogle BigQuery:\n  bigquery.googleapis.com/{dataset}"
        }
      },
      "id": "Environment",
      "description": "Describes the environment in which a Dataflow Job runs."
    },
    "StreamingComputationTask": {
      "description": "A task which describes what action should be performed for the specified\nstreaming computation ranges.",
      "type": "object",
      "properties": {
        "dataDisks": {
          "description": "Describes the set of data disks this task should apply to.",
          "items": {
            "$ref": "MountedDataDisk"
          },
          "type": "array"
        },
        "taskType": {
          "description": "A type of streaming computation task.",
          "type": "string",
          "enumDescriptions": [
            "The streaming computation task is unknown, or unspecified.",
            "Stop processing specified streaming computation range(s).",
            "Start processing specified streaming computation range(s)."
          ],
          "enum": [
            "STREAMING_COMPUTATION_TASK_UNKNOWN",
            "STREAMING_COMPUTATION_TASK_STOP",
            "STREAMING_COMPUTATION_TASK_START"
          ]
        },
        "computationRanges": {
          "description": "Contains ranges of a streaming computation this task should apply to.",
          "items": {
            "$ref": "StreamingComputationRanges"
          },
          "type": "array"
        }
      },
      "id": "StreamingComputationTask"
    },
    "BigTableIODetails": {
      "description": "Metadata for a BigTable connector used by the job.",
      "type": "object",
      "properties": {
        "tableId": {
          "type": "string",
          "description": "TableId accessed in the connection."
        },
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        },
        "instanceId": {
          "description": "InstanceId accessed in the connection.",
          "type": "string"
        }
      },
      "id": "BigTableIODetails"
    },
    "LaunchFlexTemplateRequest": {
      "type": "object",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "If true, the request is validated but not actually executed.\nDefaults to false."
        },
        "launchParameter": {
          "$ref": "LaunchFlexTemplateParameter",
          "description": "Required. Parameter to launch a job form Flex Template."
        }
      },
      "id": "LaunchFlexTemplateRequest",
      "description": "A request to launch a Cloud Dataflow job from a FlexTemplate."
    },
    "SendDebugCaptureRequest": {
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint]\n(https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that\ncontains the job specified by job_id.",
          "type": "string"
        },
        "data": {
          "description": "The encoded debug information.",
          "type": "string"
        },
        "componentId": {
          "description": "The internal component id for which debug information is sent.",
          "type": "string"
        },
        "workerId": {
          "type": "string",
          "description": "The worker id, i.e., VM hostname."
        }
      },
      "id": "SendDebugCaptureRequest",
      "description": "Request to send encoded debug information."
    },
    "GetDebugConfigResponse": {
      "description": "Response to a get debug configuration request.",
      "type": "object",
      "properties": {
        "config": {
          "description": "The encoded debug configuration for the requested component.",
          "type": "string"
        }
      },
      "id": "GetDebugConfigResponse"
    },
    "ComponentTransform": {
      "description": "Description of a transform executed as part of an execution stage.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this source."
        },
        "userName": {
          "type": "string",
          "description": "Human-readable name for this transform; may be user or system generated."
        },
        "originalTransform": {
          "description": "User name for the original user transform with which this transform is\nmost closely associated.",
          "type": "string"
        }
      },
      "id": "ComponentTransform"
    },
    "StreamingSetupTask": {
      "type": "object",
      "properties": {
        "drain": {
          "description": "The user has requested drain.",
          "type": "boolean"
        },
        "workerHarnessPort": {
          "format": "int32",
          "description": "The TCP port used by the worker to communicate with the Dataflow\nworker harness.",
          "type": "integer"
        },
        "receiveWorkPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port on which the worker should listen for messages from\nother streaming computation workers."
        },
        "snapshotConfig": {
          "$ref": "StreamingApplianceSnapshotConfig",
          "description": "Configures streaming appliance snapshot."
        },
        "streamingComputationTopology": {
          "$ref": "TopologyConfig",
          "description": "The global topology of the streaming Dataflow job."
        }
      },
      "id": "StreamingSetupTask",
      "description": "A task which initializes part of a streaming Dataflow job."
    },
    "PubsubLocation": {
      "id": "PubsubLocation",
      "description": "Identifies a pubsub location to use for transferring data into or\nout of a streaming Dataflow job.",
      "type": "object",
      "properties": {
        "withAttributes": {
          "description": "If true, then the client has requested to get pubsub attributes.",
          "type": "boolean"
        },
        "idLabel": {
          "description": "If set, contains a pubsub label from which to extract record ids.\nIf left empty, record deduplication will be strictly best effort.",
          "type": "string"
        },
        "topic": {
          "type": "string",
          "description": "A pubsub topic, in the form of\n\"pubsub.googleapis.com/topics/\u003cproject-id\u003e/\u003ctopic-name\u003e\""
        },
        "timestampLabel": {
          "type": "string",
          "description": "If set, contains a pubsub label from which to extract record timestamps.\nIf left empty, record timestamps will be generated upon arrival."
        },
        "subscription": {
          "type": "string",
          "description": "A pubsub subscription, in the form of\n\"pubsub.googleapis.com/subscriptions/\u003cproject-id\u003e/\u003csubscription-name\u003e\""
        },
        "dropLateData": {
          "description": "Indicates whether the pipeline allows late-arriving data.",
          "type": "boolean"
        },
        "trackingSubscription": {
          "type": "string",
          "description": "If set, specifies the pubsub subscription that will be used for tracking\ncustom time timestamps for watermark estimation."
        }
      }
    },
    "WorkerHealthReport": {
      "type": "object",
      "properties": {
        "vmStartupTime": {
          "format": "google-datetime",
          "description": "The time the VM was booted.",
          "type": "string"
        },
        "vmIsBroken": {
          "type": "boolean",
          "description": "Whether the VM is in a permanently broken state.\nBroken VMs should be abandoned or deleted ASAP to avoid assigning or\ncompleting any work."
        },
        "msg": {
          "type": "string",
          "description": "A message describing any unusual health reports."
        },
        "pods": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "The pods running on the worker. See:\nhttp://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod\n\nThis field is used by the worker to send the status of the indvidual\ncontainers running on each worker."
        },
        "vmIsHealthy": {
          "description": "Whether the VM is currently healthy.",
          "type": "boolean"
        },
        "reportInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "The interval at which the worker is sending health reports.\nThe default value of 0 should be interpreted as the field is not being\nexplicitly set by the worker."
        }
      },
      "id": "WorkerHealthReport",
      "description": "WorkerHealthReport contains information about the health of a worker.\n\nThe VM should be identified by the labels attached to the WorkerMessage that\nthis health ping belongs to."
    },
    "LaunchFlexTemplateResponse": {
      "id": "LaunchFlexTemplateResponse",
      "description": "Response to the request to launch a job from Flex Template.",
      "type": "object",
      "properties": {
        "job": {
          "description": "The job that was launched, if the request was not a dry run and\nthe job was successfully launched.",
          "$ref": "Job"
        }
      }
    },
    "JobMessage": {
      "type": "object",
      "properties": {
        "messageImportance": {
          "enumDescriptions": [
            "The message importance isn't specified, or is unknown.",
            "The message is at the 'debug' level: typically only useful for\nsoftware engineers working on the code the job is running.\nTypically, Dataflow pipeline runners do not display log messages\nat this level by default.",
            "The message is at the 'detailed' level: somewhat verbose, but\npotentially useful to users.  Typically, Dataflow pipeline\nrunners do not display log messages at this level by default.\nThese messages are displayed by default in the Dataflow\nmonitoring UI.",
            "The message is at the 'basic' level: useful for keeping\ntrack of the execution of a Dataflow pipeline.  Typically,\nDataflow pipeline runners display log messages at this level by\ndefault, and these messages are displayed by default in the\nDataflow monitoring UI.",
            "The message is at the 'warning' level: indicating a condition\npertaining to a job which may require human intervention.\nTypically, Dataflow pipeline runners display log messages at this\nlevel by default, and these messages are displayed by default in\nthe Dataflow monitoring UI.",
            "The message is at the 'error' level: indicating a condition\npreventing a job from succeeding.  Typically, Dataflow pipeline\nrunners display log messages at this level by default, and these\nmessages are displayed by default in the Dataflow monitoring UI."
          ],
          "enum": [
            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
            "JOB_MESSAGE_DEBUG",
            "JOB_MESSAGE_DETAILED",
            "JOB_MESSAGE_BASIC",
            "JOB_MESSAGE_WARNING",
            "JOB_MESSAGE_ERROR"
          ],
          "description": "Importance level of the message.",
          "type": "string"
        },
        "messageText": {
          "description": "The text of the message.",
          "type": "string"
        },
        "time": {
          "format": "google-datetime",
          "description": "The timestamp of the message.",
          "type": "string"
        },
        "id": {
          "description": "Deprecated.",
          "type": "string"
        }
      },
      "id": "JobMessage",
      "description": "A particular message pertaining to a Dataflow job."
    },
    "ParameterMetadata": {
      "type": "object",
      "properties": {
        "isOptional": {
          "description": "Optional. Whether the parameter is optional. Defaults to false.",
          "type": "boolean"
        },
        "label": {
          "description": "Required. The label to display for the parameter.",
          "type": "string"
        },
        "paramType": {
          "enumDescriptions": [
            "Default input type.",
            "The parameter specifies generic text input.",
            "The parameter specifies a GCS Bucket to read from.",
            "The parameter specifies a GCS Bucket to write to.",
            "The parameter specifies a GCS file path to read from.",
            "The parameter specifies a GCS file path to write to.",
            "The parameter specifies a GCS folder path to read from.",
            "The parameter specifies a GCS folder to write to.",
            "The parameter specifies a Pub/Sub Topic.",
            "The parameter specifies a Pub/Sub Subscription."
          ],
          "enum": [
            "DEFAULT",
            "TEXT",
            "GCS_READ_BUCKET",
            "GCS_WRITE_BUCKET",
            "GCS_READ_FILE",
            "GCS_WRITE_FILE",
            "GCS_READ_FOLDER",
            "GCS_WRITE_FOLDER",
            "PUBSUB_TOPIC",
            "PUBSUB_SUBSCRIPTION"
          ],
          "description": "Optional. The type of the parameter.\nUsed for selecting input picker.",
          "type": "string"
        },
        "helpText": {
          "description": "Required. The help text to display for the parameter.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "regexes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Regexes that the parameter must match."
        }
      },
      "id": "ParameterMetadata",
      "description": "Metadata for a specific parameter."
    },
    "SpannerIODetails": {
      "description": "Metadata for a Spanner connector used by the job.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        },
        "databaseId": {
          "description": "DatabaseId accessed in the connection.",
          "type": "string"
        },
        "instanceId": {
          "description": "InstanceId accessed in the connection.",
          "type": "string"
        }
      },
      "id": "SpannerIODetails"
    },
    "MultiOutputInfo": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The id of the tag the user code will emit to this output by; this\nshould correspond to the tag of some SideInputInfo."
        }
      },
      "id": "MultiOutputInfo",
      "description": "Information about an output of a multi-output DoFn."
    },
    "SourceSplitRequest": {
      "description": "Represents the operation to split a high-level Source specification\ninto bundles (parts for parallel processing).\n\nAt a high level, splitting of a source into bundles happens as follows:\nSourceSplitRequest is applied to the source. If it returns\nSOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source\nis used \"as is\". Otherwise, splitting is applied recursively to each\nproduced DerivedSource.\n\nAs an optimization, for any Source, if its does_not_need_splitting is\ntrue, the framework assumes that splitting this source would return\nSOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest.\nThis applies both to the initial source being split and to bundles\nproduced from it.",
      "type": "object",
      "properties": {
        "options": {
          "description": "Hints for tuning the splitting process.",
          "$ref": "SourceSplitOptions"
        },
        "source": {
          "$ref": "Source",
          "description": "Specification of the source to be split."
        }
      },
      "id": "SourceSplitRequest"
    },
    "SourceGetMetadataResponse": {
      "description": "The result of a SourceGetMetadataOperation.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "The computed metadata."
        }
      },
      "id": "SourceGetMetadataResponse"
    },
    "MemInfo": {
      "id": "MemInfo",
      "description": "Information about the memory usage of a worker or a container within a\nworker.",
      "type": "object",
      "properties": {
        "currentLimitBytes": {
          "format": "uint64",
          "description": "Instantenous memory limit in bytes.",
          "type": "string"
        },
        "currentRssBytes": {
          "format": "uint64",
          "description": "Instantenous memory (RSS) size in bytes.",
          "type": "string"
        },
        "totalGbMs": {
          "format": "uint64",
          "description": "Total memory (RSS) usage since start up in GB * ms.",
          "type": "string"
        },
        "timestamp": {
          "format": "google-datetime",
          "description": "Timestamp of the measurement.",
          "type": "string"
        }
      }
    },
    "ContainerSpec": {
      "description": "Container Spec.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "Metadata describing a template including description and validation rules."
        },
        "sdkInfo": {
          "$ref": "SDKInfo",
          "description": "Required. SDK info of the Flex Template."
        },
        "image": {
          "description": "Name of the docker container image. E.g., gcr.io/project/some-image",
          "type": "string"
        }
      },
      "id": "ContainerSpec"
    },
    "CommitTemplateVersionRequest": {
      "id": "CommitTemplateVersionRequest",
      "description": "Commit will add a new TemplateVersion to an existing template.",
      "type": "object",
      "properties": {
        "templateVersion": {
          "$ref": "TemplateVersion",
          "description": "TemplateVersion obejct to create."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "AutoscalingEvent": {
      "id": "AutoscalingEvent",
      "description": "A structured message reporting an autoscaling decision made by the Dataflow\nservice.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A message describing why the system decided to adjust the current\nnumber of workers, why it failed, or why the system decided to\nnot make any changes to the number of workers.",
          "$ref": "StructuredMessage"
        },
        "workerPool": {
          "description": "A short and friendly name for the worker pool this event refers to,\npopulated from the value of PoolStageRelation::user_pool_name.",
          "type": "string"
        },
        "targetNumWorkers": {
          "format": "int64",
          "description": "The target number of workers the worker pool wants to resize to use.",
          "type": "string"
        },
        "eventType": {
          "description": "The type of autoscaling event to report.",
          "type": "string",
          "enumDescriptions": [
            "Default type for the enum.  Value should never be returned.",
            "The TARGET_NUM_WORKERS_CHANGED type should be used when the target\nworker pool size has changed at the start of an actuation. An event\nshould always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects\na change in the target_num_workers.",
            "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker\npool size has been changed, but the target_num_workers has not changed.",
            "The ACTUATION_FAILURE type should be used when we want to report\nan error to the user indicating why the current number of workers\nin the pool could not be changed.\nDisplayed in the current status and history widgets.",
            "Used when we want to report to the user a reason why we are\nnot currently adjusting the number of workers.\nShould specify both target_num_workers, current_num_workers and a\ndecision_message."
          ],
          "enum": [
            "TYPE_UNKNOWN",
            "TARGET_NUM_WORKERS_CHANGED",
            "CURRENT_NUM_WORKERS_CHANGED",
            "ACTUATION_FAILURE",
            "NO_CHANGE"
          ]
        },
        "currentNumWorkers": {
          "format": "int64",
          "description": "The current number of workers the job has.",
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this event was emitted to indicate a new target or current\nnum_workers value."
        }
      }
    },
    "ShellTask": {
      "type": "object",
      "properties": {
        "exitCode": {
          "format": "int32",
          "description": "Exit code for the task.",
          "type": "integer"
        },
        "command": {
          "description": "The shell command to run.",
          "type": "string"
        }
      },
      "id": "ShellTask",
      "description": "A task which consists of a shell command for the worker to execute."
    },
    "MetricShortId": {
      "description": "The metric short id is returned to the user alongside an offset into\nReportWorkItemStatusRequest",
      "type": "object",
      "properties": {
        "metricIndex": {
          "format": "int32",
          "description": "The index of the corresponding metric in\nthe ReportWorkItemStatusRequest. Required.",
          "type": "integer"
        },
        "shortId": {
          "format": "int64",
          "description": "The service-generated short identifier for the metric.",
          "type": "string"
        }
      },
      "id": "MetricShortId"
    },
    "TaskRunnerSettings": {
      "description": "Taskrunner configuration settings.",
      "type": "object",
      "properties": {
        "alsologtostderr": {
          "description": "Whether to also send taskrunner log info to stderr.",
          "type": "boolean"
        },
        "taskGroup": {
          "description": "The UNIX group ID on the worker VM to use for tasks launched by\ntaskrunner; e.g. \"wheel\".",
          "type": "string"
        },
        "harnessCommand": {
          "type": "string",
          "description": "The command to launch the worker harness."
        },
        "logDir": {
          "description": "The directory on the VM to store logs.",
          "type": "string"
        },
        "oauthScopes": {
          "description": "The OAuth2 scopes to be requested by the taskrunner in order to\naccess the Cloud Dataflow API.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataflowApiVersion": {
          "description": "The API version of endpoint, e.g. \"v1b3\"",
          "type": "string"
        },
        "streamingWorkerMainClass": {
          "description": "The streaming worker main class name.",
          "type": "string"
        },
        "logUploadLocation": {
          "description": "Indicates where to put logs.  If this is not specified, the logs\nwill not be uploaded.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "workflowFileName": {
          "type": "string",
          "description": "The file to store the workflow in."
        },
        "languageHint": {
          "description": "The suggested backend language.",
          "type": "string"
        },
        "baseTaskDir": {
          "type": "string",
          "description": "The location on the worker for task-specific subdirectories."
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the taskrunner should use for\ntemporary storage.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "commandlinesFileName": {
          "description": "The file to store preprocessing commands in.",
          "type": "string"
        },
        "baseUrl": {
          "description": "The base URL for the taskrunner to use when accessing Google Cloud APIs.\n\nWhen workers access Google Cloud APIs, they logically do so via\nrelative URLs.  If this field is specified, it supplies the base\nURL to use for resolving these relative URLs.  The normative\nalgorithm used is defined by RFC 1808, \"Relative Uniform Resource\nLocators\".\n\nIf not specified, the default value is \"http://www.googleapis.com/\"",
          "type": "string"
        },
        "logToSerialconsole": {
          "description": "Whether to send taskrunner log info to Google Compute Engine VM serial\nconsole.",
          "type": "boolean"
        },
        "continueOnException": {
          "description": "Whether to continue taskrunner if an exception is hit.",
          "type": "boolean"
        },
        "parallelWorkerSettings": {
          "$ref": "WorkerSettings",
          "description": "The settings to pass to the parallel worker harness."
        },
        "vmId": {
          "description": "The ID string of the VM.",
          "type": "string"
        },
        "taskUser": {
          "description": "The UNIX user ID on the worker VM to use for tasks launched by\ntaskrunner; e.g. \"root\".",
          "type": "string"
        }
      },
      "id": "TaskRunnerSettings"
    },
    "Position": {
      "description": "Position defines a position within a collection of data.  The value\ncan be either the end position, a key (used with ordered\ncollections), a byte offset, or a record index.",
      "type": "object",
      "properties": {
        "concatPosition": {
          "description": "CloudPosition is a concat position.",
          "$ref": "ConcatPosition"
        },
        "byteOffset": {
          "format": "int64",
          "description": "Position is a byte offset.",
          "type": "string"
        },
        "end": {
          "description": "Position is past all other positions. Also useful for the end\nposition of an unbounded range.",
          "type": "boolean"
        },
        "key": {
          "description": "Position is a string key, ordered lexicographically.",
          "type": "string"
        },
        "recordIndex": {
          "format": "int64",
          "description": "Position is a record index.",
          "type": "string"
        },
        "shufflePosition": {
          "description": "CloudPosition is a base64 encoded BatchShufflePosition (with FIXED\nsharding).",
          "type": "string"
        }
      },
      "id": "Position"
    },
    "DeleteSnapshotResponse": {
      "type": "object",
      "properties": {},
      "id": "DeleteSnapshotResponse",
      "description": "Response from deleting a snapshot."
    },
    "SplitInt64": {
      "id": "SplitInt64",
      "description": "A representation of an int64, n, that is immune to precision loss when\nencoded in JSON.",
      "type": "object",
      "properties": {
        "lowBits": {
          "format": "uint32",
          "description": "The low order bits: n & 0xffffffff.",
          "type": "integer"
        },
        "highBits": {
          "type": "integer",
          "format": "int32",
          "description": "The high order bits, including the sign: n \u003e\u003e 32."
        }
      }
    },
    "Source": {
      "description": "A source that records can be read and decoded from.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "Optionally, metadata for this source can be supplied right away,\navoiding a SourceGetMetadataOperation roundtrip\n(see SourceOperationRequest).\n\nThis field is meaningful only in the Source objects populated\nby the user (e.g. when filling in a DerivedSource).\nSource objects supplied by the framework to the user don't have\nthis field populated."
        },
        "baseSpecs": {
          "description": "While splitting, sources may specify the produced bundles\nas differences against another source, in order to save backend-side\nmemory and allow bigger jobs. For details, see SourceSplitRequest.\nTo support this use case, the full set of parameters of the source\nis logically obtained by taking the latest explicitly specified value\nof each parameter in the order:\nbase_specs (later items win), spec (overrides anything in base_specs).",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any"
            }
          },
          "type": "array"
        },
        "doesNotNeedSplitting": {
          "description": "Setting this value to true hints to the framework that the source\ndoesn't need splitting, and using SourceSplitRequest on it would\nyield SOURCE_SPLIT_OUTCOME_USE_CURRENT.\n\nE.g. a file splitter may set this to true when splitting a single file\ninto a set of byte ranges of appropriate size, and set this\nto false when splitting a filepattern into individual files.\nHowever, for efficiency, a file splitter may decide to produce\nfile subranges directly from the filepattern to avoid a splitting\nround-trip.\n\nSee SourceSplitRequest for an overview of the splitting process.\n\nThis field is meaningful only in the Source objects populated\nby the user (e.g. when filling in a DerivedSource).\nSource objects supplied by the framework to the user don't have\nthis field populated.",
          "type": "boolean"
        },
        "codec": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The codec to use to decode data read from the source."
        },
        "spec": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The source to read from, plus its parameters."
        }
      },
      "id": "Source"
    },
    "WorkerPool": {
      "description": "Describes one particular pool of Cloud Dataflow workers to be\ninstantiated by the Cloud Dataflow service in order to perform the\ncomputations required by a job.  Note that a workflow job may use\nmultiple pools, in order to match the various computational\nrequirements of the various stages of the job.",
      "type": "object",
      "properties": {
        "onHostMaintenance": {
          "description": "The action to take on host maintenance, as defined by the Google\nCompute Engine API.",
          "type": "string"
        },
        "poolArgs": {
          "description": "Extra arguments for this worker pool.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "diskSizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Size of root disk for VMs, in GB.  If zero or unspecified, the service will\nattempt to choose a reasonable default."
        },
        "workerHarnessContainerImage": {
          "description": "Required. Docker container image that executes the Cloud Dataflow worker\nharness, residing in Google Container Registry.\n\nDeprecated for the Fn API path. Use sdk_harness_container_images instead.",
          "type": "string"
        },
        "machineType": {
          "description": "Machine type (e.g. \"n1-standard-1\").  If empty or unspecified, the\nservice will attempt to choose a reasonable default.",
          "type": "string"
        },
        "diskType": {
          "description": "Type of root disk for VMs.  If empty or unspecified, the service will\nattempt to choose a reasonable default.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the worker pool; currently only `harness` and `shuffle`\nare supported.",
          "type": "string"
        },
        "sdkHarnessContainerImages": {
          "description": "Set of SDK harness containers needed to execute this pipeline. This will\nonly be set in the Fn API path. For non-cross-language pipelines this\nshould have only one entry. Cross-language pipelines will have two or more\nentries.",
          "items": {
            "$ref": "SdkHarnessContainerImage"
          },
          "type": "array"
        },
        "dataDisks": {
          "description": "Data disks that are used by a VM in this workflow.",
          "items": {
            "$ref": "Disk"
          },
          "type": "array"
        },
        "subnetwork": {
          "description": "Subnetwork to which VMs will be assigned, if desired.  Expected to be of\nthe form \"regions/REGION/subnetworks/SUBNETWORK\".",
          "type": "string"
        },
        "ipConfiguration": {
          "type": "string",
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ],
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs."
        },
        "autoscalingSettings": {
          "description": "Settings for autoscaling of this WorkerPool.",
          "$ref": "AutoscalingSettings"
        },
        "taskrunnerSettings": {
          "$ref": "TaskRunnerSettings",
          "description": "Settings passed through to Google Compute Engine workers when\nusing the standard Dataflow task runner.  Users should ignore\nthis field."
        },
        "metadata": {
          "description": "Metadata to set on the Google Compute Engine VMs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "network": {
          "type": "string",
          "description": "Network to which VMs will be assigned.  If empty or unspecified,\nthe service will use the network \"default\"."
        },
        "defaultPackageSet": {
          "type": "string",
          "enumDescriptions": [
            "The default set of packages to stage is unknown, or unspecified.",
            "Indicates that no packages should be staged at the worker unless\nexplicitly specified by the job.",
            "Stage packages typically useful to workers written in Java.",
            "Stage pacakges typically useful to workers written in Python."
          ],
          "enum": [
            "DEFAULT_PACKAGE_SET_UNKNOWN",
            "DEFAULT_PACKAGE_SET_NONE",
            "DEFAULT_PACKAGE_SET_JAVA",
            "DEFAULT_PACKAGE_SET_PYTHON"
          ],
          "description": "The default package set to install.  This allows the service to\nselect a default set of packages which are useful to worker\nharnesses written in a particular language."
        },
        "numThreadsPerWorker": {
          "type": "integer",
          "format": "int32",
          "description": "The number of threads per worker harness. If empty or unspecified, the\nservice will choose a number of threads (according to the number of cores\non the selected machine type for batch, or 1 by convention for streaming)."
        },
        "numWorkers": {
          "format": "int32",
          "description": "Number of Google Compute Engine workers in this pool needed to\nexecute the job.  If zero or unspecified, the service will\nattempt to choose a reasonable default.",
          "type": "integer"
        },
        "zone": {
          "description": "Zone to run the worker pools in.  If empty or unspecified, the service\nwill attempt to choose a reasonable default.",
          "type": "string"
        },
        "diskSourceImage": {
          "description": "Fully qualified source image for disks.",
          "type": "string"
        },
        "packages": {
          "description": "Packages to be installed on workers.",
          "items": {
            "$ref": "Package"
          },
          "type": "array"
        },
        "teardownPolicy": {
          "enum": [
            "TEARDOWN_POLICY_UNKNOWN",
            "TEARDOWN_ALWAYS",
            "TEARDOWN_ON_SUCCESS",
            "TEARDOWN_NEVER"
          ],
          "description": "Sets the policy for determining when to turndown worker pool.\nAllowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and\n`TEARDOWN_NEVER`.\n`TEARDOWN_ALWAYS` means workers are always torn down regardless of whether\nthe job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down\nif the job succeeds. `TEARDOWN_NEVER` means the workers are never torn\ndown.\n\nIf the workers are not torn down by the service, they will\ncontinue to run and use Google Compute Engine VM resources in the\nuser's project until they are explicitly terminated by the user.\nBecause of this, Google recommends using the `TEARDOWN_ALWAYS`\npolicy except for small, manually supervised test jobs.\n\nIf unknown or unspecified, the service will attempt to choose a reasonable\ndefault.",
          "type": "string",
          "enumDescriptions": [
            "The teardown policy isn't specified, or is unknown.",
            "Always teardown the resource.",
            "Teardown the resource on success. This is useful for debugging\nfailures.",
            "Never teardown the resource. This is useful for debugging and\ndevelopment."
          ]
        }
      },
      "id": "WorkerPool"
    },
    "SourceOperationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "User-provided name of the Read instruction for this source.",
          "type": "string"
        },
        "originalName": {
          "description": "System-defined name for the Read instruction for this source\nin the original workflow graph.",
          "type": "string"
        },
        "systemName": {
          "description": "System-defined name of the Read instruction for this source.\nUnique across the workflow.",
          "type": "string"
        },
        "stageName": {
          "description": "System-defined name of the stage containing the source operation.\nUnique across the workflow.",
          "type": "string"
        },
        "getMetadata": {
          "$ref": "SourceGetMetadataRequest",
          "description": "Information about a request to get metadata about a source."
        },
        "split": {
          "$ref": "SourceSplitRequest",
          "description": "Information about a request to split a source."
        }
      },
      "id": "SourceOperationRequest",
      "description": "A work item that represents the different operations that can be\nperformed on a user-defined Source specification."
    },
    "PubsubSnapshotMetadata": {
      "type": "object",
      "properties": {
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The expire time of the Pubsub snapshot."
        },
        "snapshotName": {
          "description": "The name of the Pubsub snapshot.",
          "type": "string"
        },
        "topicName": {
          "description": "The name of the Pubsub topic.",
          "type": "string"
        }
      },
      "id": "PubsubSnapshotMetadata",
      "description": "Represents a Pubsub snapshot."
    },
    "StructuredMessage": {
      "description": "A rich message format, including a human readable string, a key for\nidentifying the message, and structured data associated with the message for\nprogrammatic consumption.",
      "type": "object",
      "properties": {
        "messageKey": {
          "description": "Identifier for this message type.  Used by external systems to\ninternationalize or personalize message.",
          "type": "string"
        },
        "messageText": {
          "description": "Human-readable version of message.",
          "type": "string"
        },
        "parameters": {
          "description": "The structured data associated with this message.",
          "items": {
            "$ref": "Parameter"
          },
          "type": "array"
        }
      },
      "id": "StructuredMessage"
    },
    "WorkItem": {
      "description": "WorkItem represents basic information about a WorkItem to be executed\nin the cloud.",
      "type": "object",
      "properties": {
        "streamingSetupTask": {
          "description": "Additional information for StreamingSetupTask WorkItems.",
          "$ref": "StreamingSetupTask"
        },
        "sourceOperationTask": {
          "$ref": "SourceOperationRequest",
          "description": "Additional information for source operation WorkItems."
        },
        "reportStatusInterval": {
          "format": "google-duration",
          "description": "Recommended reporting interval.",
          "type": "string"
        },
        "leaseExpireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time when the lease on this Work will expire."
        },
        "streamingConfigTask": {
          "$ref": "StreamingConfigTask",
          "description": "Additional information for StreamingConfigTask WorkItems."
        },
        "initialReportIndex": {
          "format": "int64",
          "description": "The initial index to use when reporting the status of the WorkItem.",
          "type": "string"
        },
        "shellTask": {
          "$ref": "ShellTask",
          "description": "Additional information for ShellTask WorkItems."
        },
        "streamingComputationTask": {
          "$ref": "StreamingComputationTask",
          "description": "Additional information for StreamingComputationTask WorkItems."
        },
        "jobId": {
          "description": "Identifies the workflow job this WorkItem belongs to.",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "description": "Identifies this WorkItem.",
          "type": "string"
        },
        "configuration": {
          "description": "Work item-specific configuration as an opaque blob.",
          "type": "string"
        },
        "mapTask": {
          "$ref": "MapTask",
          "description": "Additional information for MapTask WorkItems."
        },
        "seqMapTask": {
          "$ref": "SeqMapTask",
          "description": "Additional information for SeqMapTask WorkItems."
        },
        "packages": {
          "items": {
            "$ref": "Package"
          },
          "type": "array",
          "description": "Any required packages that need to be fetched in order to execute\nthis WorkItem."
        },
        "projectId": {
          "description": "Identifies the cloud project this WorkItem belongs to.",
          "type": "string"
        }
      },
      "id": "WorkItem"
    },
    "ReportedParallelism": {
      "description": "Represents the level of parallelism in a WorkItem's input,\nreported by the worker.",
      "type": "object",
      "properties": {
        "isInfinite": {
          "description": "Specifies whether the parallelism is infinite. If true, \"value\" is\nignored.\nInfinite parallelism means the service will assume that the work item\ncan always be split into more non-empty work items by dynamic splitting.\nThis is a work-around for lack of support for infinity by the current\nJSON-based Java RPC stack.",
          "type": "boolean"
        },
        "value": {
          "format": "double",
          "description": "Specifies the level of parallelism in case it is finite.",
          "type": "number"
        }
      },
      "id": "ReportedParallelism"
    },
    "ResourceUtilizationReport": {
      "description": "Worker metrics exported from workers. This contains resource utilization\nmetrics accumulated from a variety of sources. For more information, see\ngo/df-resource-signals.",
      "type": "object",
      "properties": {
        "containers": {
          "additionalProperties": {
            "$ref": "ResourceUtilizationReport"
          },
          "description": "Per container information.\nKey: container name.",
          "type": "object"
        },
        "memoryInfo": {
          "items": {
            "$ref": "MemInfo"
          },
          "type": "array",
          "description": "Memory utilization samples."
        },
        "cpuTime": {
          "description": "CPU utilization samples.",
          "items": {
            "$ref": "CPUTime"
          },
          "type": "array"
        }
      },
      "id": "ResourceUtilizationReport"
    },
    "TopologyConfig": {
      "description": "Global topology of the streaming Dataflow job, including all\ncomputations and their sharded locations.",
      "type": "object",
      "properties": {
        "userStageToComputationNameMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps user stage names to stable computation names."
        },
        "computations": {
          "description": "The computations associated with a streaming Dataflow job.",
          "items": {
            "$ref": "ComputationTopology"
          },
          "type": "array"
        },
        "persistentStateVersion": {
          "format": "int32",
          "description": "Version number for persistent state.",
          "type": "integer"
        },
        "dataDiskAssignments": {
          "description": "The disks assigned to a streaming Dataflow job.",
          "items": {
            "$ref": "DataDiskAssignment"
          },
          "type": "array"
        },
        "forwardingKeyBits": {
          "type": "integer",
          "format": "int32",
          "description": "The size (in bits) of keys that will be assigned to source messages."
        }
      },
      "id": "TopologyConfig"
    },
    "SourceSplitOptions": {
      "id": "SourceSplitOptions",
      "description": "Hints for splitting a Source into bundles (parts for parallel\nprocessing) using SourceSplitRequest.",
      "type": "object",
      "properties": {
        "desiredBundleSizeBytes": {
          "format": "int64",
          "description": "The source should be split into a set of bundles where the estimated size\nof each is approximately this many bytes.",
          "type": "string"
        },
        "desiredShardSizeBytes": {
          "format": "int64",
          "description": "DEPRECATED in favor of desired_bundle_size_bytes.",
          "type": "string"
        }
      }
    },
    "ReadInstruction": {
      "description": "An instruction that reads records.\nTakes no inputs, produces one output.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The source to read from.",
          "$ref": "Source"
        }
      },
      "id": "ReadInstruction"
    },
    "WorkerSettings": {
      "description": "Provides data to pass through to the worker harness.",
      "type": "object",
      "properties": {
        "shuffleServicePath": {
          "description": "The Shuffle service path relative to the root URL, for example,\n\"shuffle/v1beta1\".",
          "type": "string"
        },
        "workerId": {
          "description": "The ID of the worker running this pipeline.",
          "type": "string"
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the system should use for temporary\nstorage.\n\nThe supported resource type is:\n\nGoogle Cloud Storage:\n\n  storage.googleapis.com/{bucket}/{object}\n  bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "reportingEnabled": {
          "description": "Whether to send work progress updates to the service.",
          "type": "boolean"
        },
        "baseUrl": {
          "description": "The base URL for accessing Google Cloud APIs.\n\nWhen workers access Google Cloud APIs, they logically do so via\nrelative URLs.  If this field is specified, it supplies the base\nURL to use for resolving these relative URLs.  The normative\nalgorithm used is defined by RFC 1808, \"Relative Uniform Resource\nLocators\".\n\nIf not specified, the default value is \"http://www.googleapis.com/\"",
          "type": "string"
        },
        "servicePath": {
          "description": "The Cloud Dataflow service path relative to the root URL, for example,\n\"dataflow/v1b3/projects\".",
          "type": "string"
        }
      },
      "id": "WorkerSettings"
    },
    "StreamingStageLocation": {
      "description": "Identifies the location of a streaming computation stage, for\nstage-to-stage communication.",
      "type": "object",
      "properties": {
        "streamId": {
          "type": "string",
          "description": "Identifies the particular stream within the streaming Dataflow\njob."
        }
      },
      "id": "StreamingStageLocation"
    },
    "DataDiskAssignment": {
      "id": "DataDiskAssignment",
      "description": "Data disk assignment for a given VM instance.",
      "type": "object",
      "properties": {
        "dataDisks": {
          "description": "Mounted data disks. The order is important a data disk's 0-based index in\nthis list defines which persistent directory the disk is mounted to, for\nexample the list of { \"myproject-1014-104817-4c2-harness-0-disk-0\" },\n{ \"myproject-1014-104817-4c2-harness-0-disk-1\" }.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vmInstance": {
          "type": "string",
          "description": "VM instance name the data disks mounted to, for example\n\"myproject-1014-104817-4c2-harness-0\"."
        }
      }
    },
    "ApproximateSplitRequest": {
      "description": "A suggestion by the service to the worker to dynamically split the WorkItem.",
      "type": "object",
      "properties": {
        "fractionOfRemainder": {
          "type": "number",
          "format": "double",
          "description": "The fraction of the remainder of work to split the work item at, from 0.0\n(split at the current position) to 1.0 (end of the input)."
        },
        "position": {
          "$ref": "Position",
          "description": "A Position at which to split the work item."
        },
        "fractionConsumed": {
          "type": "number",
          "format": "double",
          "description": "A fraction at which to split the work item, from 0.0 (beginning of the\ninput) to 1.0 (end of the input)."
        }
      },
      "id": "ApproximateSplitRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "id": "Status"
    },
    "ExecutionStageState": {
      "type": "object",
      "properties": {
        "currentStateTime": {
          "format": "google-datetime",
          "description": "The time at which the stage transitioned to this state.",
          "type": "string"
        },
        "executionStageState": {
          "description": "Executions stage states allow the same set of values as JobState.",
          "type": "string",
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not\nyet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed.\nThis is a terminal job state.  This state may be set by the Cloud Dataflow\nservice, as a transition from `JOB_STATE_RUNNING`. It may also be set via a\nCloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal\nstate.",
            "`JOB_STATE_FAILED` indicates that the job has failed.  This is a\nterminal job state.  This state may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly\ncancelled. This is a terminal job state. This state may only be\nset via a Cloud Dataflow `UpdateJob` call, and only if the job has not\nyet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated,\nmeaning that this job was stopped and another job was started, inheriting\nstate from this one. This is a terminal job state. This state may only be\nset by the Cloud Dataflow service, and only as a transition from\n`JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining.\nA draining job has stopped pulling from its input sources and is processing\nany data that remains in-flight. This state may be set via a Cloud Dataflow\n`UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs\nthat are draining may only transition to `JOB_STATE_DRAINED`,\n`JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained.\nA drained job terminated by stopping pulling from its input sources and\nprocessing any data that remained in-flight when draining was requested.\nThis state is a terminal state, may only be set by the Cloud Dataflow\nservice, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet\nrunning.  Jobs that are pending may only transition to `JOB_STATE_RUNNING`,\nor `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled\nand is in the process of stopping.  Jobs that are cancelling may only\ntransition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being\ndelayed until launch. Jobs that are queued may only transition to\n`JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED"
          ]
        },
        "executionStageName": {
          "description": "The name of the execution stage.",
          "type": "string"
        }
      },
      "id": "ExecutionStageState",
      "description": "A message describing the state of a particular execution stage."
    },
    "StreamLocation": {
      "description": "Describes a stream of data, either as input to be processed or as\noutput of a streaming Dataflow job.",
      "type": "object",
      "properties": {
        "customSourceLocation": {
          "$ref": "CustomSourceLocation",
          "description": "The stream is a custom source."
        },
        "sideInputLocation": {
          "$ref": "StreamingSideInputLocation",
          "description": "The stream is a streaming side input."
        },
        "pubsubLocation": {
          "description": "The stream is a pubsub stream.",
          "$ref": "PubsubLocation"
        },
        "streamingStageLocation": {
          "$ref": "StreamingStageLocation",
          "description": "The stream is part of another computation within the current\nstreaming Dataflow job."
        }
      },
      "id": "StreamLocation"
    },
    "WorkerLifecycleEvent": {
      "description": "A report of an event in a worker's lifecycle.\nThe proto contains one event, because the worker is expected to\nasynchronously send each message immediately after the event.\nDue to this asynchrony, messages may arrive out of order (or missing), and it\nis up to the consumer to interpret.\nThe timestamp of the event is in the enclosing WorkerMessage proto.",
      "type": "object",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Other stats that can accompany an event. E.g.\n{ \"downloaded_bytes\" : \"123456\" }",
          "type": "object"
        },
        "containerStartTime": {
          "format": "google-datetime",
          "description": "The start time of this container. All events will report this so that\nevents can be grouped together across container/VM restarts.",
          "type": "string"
        },
        "event": {
          "enumDescriptions": [
            "Invalid event.",
            "The time the VM started.",
            "Our container code starts running. Multiple containers could be\ndistinguished with WorkerMessage.labels if desired.",
            "The worker has a functional external network connection.",
            "Started downloading staging files.",
            "Finished downloading all staging files.",
            "For applicable SDKs, started installation of SDK and worker packages.",
            "Finished installing SDK."
          ],
          "enum": [
            "UNKNOWN_EVENT",
            "OS_START",
            "CONTAINER_START",
            "NETWORK_UP",
            "STAGING_FILES_DOWNLOAD_START",
            "STAGING_FILES_DOWNLOAD_FINISH",
            "SDK_INSTALL_START",
            "SDK_INSTALL_FINISH"
          ],
          "description": "The event being reported.",
          "type": "string"
        }
      },
      "id": "WorkerLifecycleEvent"
    },
    "SendWorkerMessagesResponse": {
      "description": "The response to the worker messages.",
      "type": "object",
      "properties": {
        "workerMessageResponses": {
          "items": {
            "$ref": "WorkerMessageResponse"
          },
          "type": "array",
          "description": "The servers response to the worker messages."
        }
      },
      "id": "SendWorkerMessagesResponse"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1b3",
  "baseUrl": "https://dataflow.googleapis.com/"
}
