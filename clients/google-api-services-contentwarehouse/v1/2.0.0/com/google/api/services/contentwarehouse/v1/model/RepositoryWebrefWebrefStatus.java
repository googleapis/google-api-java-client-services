/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for RepositoryWebrefWebrefStatus.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefWebrefStatus extends com.google.api.client.json.GenericJson {

  /**
   * The epoch of the Webref static data (the name-filter.data file). As of Dec 2020 in prod
   * Goldmine (in webref_daily_full_model_static_data) this value is over from the alpha model
   * static data, since this is where most of the parts come from. I.e. the value does not
   * correspond to the actual model being used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataEpoch;

  /**
   * Error that occurred during the annotation. This field is only populated by QRef (i.e. under
   * QueryJoin.status) and never by WebRef (i.e. under WebrefEntities.status) anymore, which instead
   * reports errors (and soon also taints) through standard Goldmine mechanisms.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UtilStatusProto utilStatus;

  /**
   * The version number of the annotator (the cl the binary was built from). Must be enabled via a
   * command line flag. See also the Goldmine's indexing::annotations::AnnotationMeta proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer version;

  /**
   * The epoch of the Webref static data (the name-filter.data file). As of Dec 2020 in prod
   * Goldmine (in webref_daily_full_model_static_data) this value is over from the alpha model
   * static data, since this is where most of the parts come from. I.e. the value does not
   * correspond to the actual model being used.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataEpoch() {
    return dataEpoch;
  }

  /**
   * The epoch of the Webref static data (the name-filter.data file). As of Dec 2020 in prod
   * Goldmine (in webref_daily_full_model_static_data) this value is over from the alpha model
   * static data, since this is where most of the parts come from. I.e. the value does not
   * correspond to the actual model being used.
   * @param dataEpoch dataEpoch or {@code null} for none
   */
  public RepositoryWebrefWebrefStatus setDataEpoch(java.lang.String dataEpoch) {
    this.dataEpoch = dataEpoch;
    return this;
  }

  /**
   * Error that occurred during the annotation. This field is only populated by QRef (i.e. under
   * QueryJoin.status) and never by WebRef (i.e. under WebrefEntities.status) anymore, which instead
   * reports errors (and soon also taints) through standard Goldmine mechanisms.
   * @return value or {@code null} for none
   */
  public UtilStatusProto getUtilStatus() {
    return utilStatus;
  }

  /**
   * Error that occurred during the annotation. This field is only populated by QRef (i.e. under
   * QueryJoin.status) and never by WebRef (i.e. under WebrefEntities.status) anymore, which instead
   * reports errors (and soon also taints) through standard Goldmine mechanisms.
   * @param utilStatus utilStatus or {@code null} for none
   */
  public RepositoryWebrefWebrefStatus setUtilStatus(UtilStatusProto utilStatus) {
    this.utilStatus = utilStatus;
    return this;
  }

  /**
   * The version number of the annotator (the cl the binary was built from). Must be enabled via a
   * command line flag. See also the Goldmine's indexing::annotations::AnnotationMeta proto.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * The version number of the annotator (the cl the binary was built from). Must be enabled via a
   * command line flag. See also the Goldmine's indexing::annotations::AnnotationMeta proto.
   * @param version version or {@code null} for none
   */
  public RepositoryWebrefWebrefStatus setVersion(java.lang.Integer version) {
    this.version = version;
    return this;
  }

  @Override
  public RepositoryWebrefWebrefStatus set(String fieldName, Object value) {
    return (RepositoryWebrefWebrefStatus) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefWebrefStatus clone() {
    return (RepositoryWebrefWebrefStatus) super.clone();
  }

}
