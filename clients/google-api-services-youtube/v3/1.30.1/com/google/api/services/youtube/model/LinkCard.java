/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.youtube.model;

/**
 * Model definition for LinkCard.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the YouTube Data API v3. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LinkCard extends com.google.api.client.json.GenericJson {

  /**
   * Custom text to show as the website link. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customLinkText;

  /**
   * URL to an externally hosted image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String externalImageUrl;

  /**
   * The URL to which this card points. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetUrl;

  /**
   * The title to show on the card. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Previously uploaded image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LinkCardUploadedImage uploadedImage;

  /**
   * Custom text to show as the website link. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomLinkText() {
    return customLinkText;
  }

  /**
   * Custom text to show as the website link. Required.
   * @param customLinkText customLinkText or {@code null} for none
   */
  public LinkCard setCustomLinkText(java.lang.String customLinkText) {
    this.customLinkText = customLinkText;
    return this;
  }

  /**
   * URL to an externally hosted image.
   * @return value or {@code null} for none
   */
  public java.lang.String getExternalImageUrl() {
    return externalImageUrl;
  }

  /**
   * URL to an externally hosted image.
   * @param externalImageUrl externalImageUrl or {@code null} for none
   */
  public LinkCard setExternalImageUrl(java.lang.String externalImageUrl) {
    this.externalImageUrl = externalImageUrl;
    return this;
  }

  /**
   * The URL to which this card points. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetUrl() {
    return targetUrl;
  }

  /**
   * The URL to which this card points. Required.
   * @param targetUrl targetUrl or {@code null} for none
   */
  public LinkCard setTargetUrl(java.lang.String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

  /**
   * The title to show on the card. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The title to show on the card. Required.
   * @param title title or {@code null} for none
   */
  public LinkCard setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Previously uploaded image.
   * @return value or {@code null} for none
   */
  public LinkCardUploadedImage getUploadedImage() {
    return uploadedImage;
  }

  /**
   * Previously uploaded image.
   * @param uploadedImage uploadedImage or {@code null} for none
   */
  public LinkCard setUploadedImage(LinkCardUploadedImage uploadedImage) {
    this.uploadedImage = uploadedImage;
    return this;
  }

  @Override
  public LinkCard set(String fieldName, Object value) {
    return (LinkCard) super.set(fieldName, value);
  }

  @Override
  public LinkCard clone() {
    return (LinkCard) super.clone();
  }

}
