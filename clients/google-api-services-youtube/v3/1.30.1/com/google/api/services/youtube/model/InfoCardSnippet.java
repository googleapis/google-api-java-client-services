/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.youtube.model;

/**
 * Model definition for InfoCardSnippet.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the YouTube Data API v3. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InfoCardSnippet extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ChannelCard channelInfocard;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LinkCard linkInfocard;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PlaylistCard playlistInfocard;

  /**
   * Each card can have a teaser. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InfoCardSnippetTeaser teaser;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoCard videoInfocard;

  /**
   * @return value or {@code null} for none
   */
  public ChannelCard getChannelInfocard() {
    return channelInfocard;
  }

  /**
   * @param channelInfocard channelInfocard or {@code null} for none
   */
  public InfoCardSnippet setChannelInfocard(ChannelCard channelInfocard) {
    this.channelInfocard = channelInfocard;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public LinkCard getLinkInfocard() {
    return linkInfocard;
  }

  /**
   * @param linkInfocard linkInfocard or {@code null} for none
   */
  public InfoCardSnippet setLinkInfocard(LinkCard linkInfocard) {
    this.linkInfocard = linkInfocard;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public PlaylistCard getPlaylistInfocard() {
    return playlistInfocard;
  }

  /**
   * @param playlistInfocard playlistInfocard or {@code null} for none
   */
  public InfoCardSnippet setPlaylistInfocard(PlaylistCard playlistInfocard) {
    this.playlistInfocard = playlistInfocard;
    return this;
  }

  /**
   * Each card can have a teaser. Required.
   * @return value or {@code null} for none
   */
  public InfoCardSnippetTeaser getTeaser() {
    return teaser;
  }

  /**
   * Each card can have a teaser. Required.
   * @param teaser teaser or {@code null} for none
   */
  public InfoCardSnippet setTeaser(InfoCardSnippetTeaser teaser) {
    this.teaser = teaser;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public VideoCard getVideoInfocard() {
    return videoInfocard;
  }

  /**
   * @param videoInfocard videoInfocard or {@code null} for none
   */
  public InfoCardSnippet setVideoInfocard(VideoCard videoInfocard) {
    this.videoInfocard = videoInfocard;
    return this;
  }

  @Override
  public InfoCardSnippet set(String fieldName, Object value) {
    return (InfoCardSnippet) super.set(fieldName, value);
  }

  @Override
  public InfoCardSnippet clone() {
    return (InfoCardSnippet) super.clone();
  }

}
