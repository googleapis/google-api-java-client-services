/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * The request for BatchWrite.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BatchWriteRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. When `exclude_txn_from_change_streams` is set to `true`: * Mutations from all
   * transactions in this batch write operation will not be recorded in change streams with DDL
   * option `allow_txn_exclusion=true` that are tracking columns modified by these transactions. *
   * Mutations from all transactions in this batch write operation will be recorded in change
   * streams with DDL option `allow_txn_exclusion=false or not set` that are tracking columns
   * modified by these transactions. When `exclude_txn_from_change_streams` is set to `false` or not
   * set, mutations from all transactions in this batch write operation will be recorded in all
   * change streams that are tracking columns modified by these transactions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean excludeTxnFromChangeStreams;

  /**
   * Required. The groups of mutations to be applied.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MutationGroup> mutationGroups;

  /**
   * Common options for this request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RequestOptions requestOptions;

  /**
   * Optional. When `exclude_txn_from_change_streams` is set to `true`: * Mutations from all
   * transactions in this batch write operation will not be recorded in change streams with DDL
   * option `allow_txn_exclusion=true` that are tracking columns modified by these transactions. *
   * Mutations from all transactions in this batch write operation will be recorded in change
   * streams with DDL option `allow_txn_exclusion=false or not set` that are tracking columns
   * modified by these transactions. When `exclude_txn_from_change_streams` is set to `false` or not
   * set, mutations from all transactions in this batch write operation will be recorded in all
   * change streams that are tracking columns modified by these transactions.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getExcludeTxnFromChangeStreams() {
    return excludeTxnFromChangeStreams;
  }

  /**
   * Optional. When `exclude_txn_from_change_streams` is set to `true`: * Mutations from all
   * transactions in this batch write operation will not be recorded in change streams with DDL
   * option `allow_txn_exclusion=true` that are tracking columns modified by these transactions. *
   * Mutations from all transactions in this batch write operation will be recorded in change
   * streams with DDL option `allow_txn_exclusion=false or not set` that are tracking columns
   * modified by these transactions. When `exclude_txn_from_change_streams` is set to `false` or not
   * set, mutations from all transactions in this batch write operation will be recorded in all
   * change streams that are tracking columns modified by these transactions.
   * @param excludeTxnFromChangeStreams excludeTxnFromChangeStreams or {@code null} for none
   */
  public BatchWriteRequest setExcludeTxnFromChangeStreams(java.lang.Boolean excludeTxnFromChangeStreams) {
    this.excludeTxnFromChangeStreams = excludeTxnFromChangeStreams;
    return this;
  }

  /**
   * Required. The groups of mutations to be applied.
   * @return value or {@code null} for none
   */
  public java.util.List<MutationGroup> getMutationGroups() {
    return mutationGroups;
  }

  /**
   * Required. The groups of mutations to be applied.
   * @param mutationGroups mutationGroups or {@code null} for none
   */
  public BatchWriteRequest setMutationGroups(java.util.List<MutationGroup> mutationGroups) {
    this.mutationGroups = mutationGroups;
    return this;
  }

  /**
   * Common options for this request.
   * @return value or {@code null} for none
   */
  public RequestOptions getRequestOptions() {
    return requestOptions;
  }

  /**
   * Common options for this request.
   * @param requestOptions requestOptions or {@code null} for none
   */
  public BatchWriteRequest setRequestOptions(RequestOptions requestOptions) {
    this.requestOptions = requestOptions;
    return this;
  }

  @Override
  public BatchWriteRequest set(String fieldName, Object value) {
    return (BatchWriteRequest) super.set(fieldName, value);
  }

  @Override
  public BatchWriteRequest clone() {
    return (BatchWriteRequest) super.clone();
  }

}
