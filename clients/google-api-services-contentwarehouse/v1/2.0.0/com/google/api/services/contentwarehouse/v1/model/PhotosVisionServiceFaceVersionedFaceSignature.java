/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * From newer SDK versions onward (1.7+), each face template (signature) will also store a version #
 * derived from the converter version that created the template.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhotosVisionServiceFaceVersionedFaceSignature extends com.google.api.client.json.GenericJson {

  /**
   * Confidence score based on embedding uncertainty. This is populated if fetch_facenet_confidence
   * has been set as true in FaceNetConfig, and FaceNet version satisfies one of the following: 1.
   * FACENET_8. 2. FACENET_9 with confidence model enabled in FaceTemplatesConfig. If
   * face_embedding_confidence module is requested, this will also be populated, and the signature
   * will be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float confidence;

  /**
   * The Confidence version that populated the confidence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String confidenceVersion;

  /**
   * The converter version that created this template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String converterVersion;

  /**
   * The face template bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String signature;

  /**
   * Specifies the source of the signature in cases where the bytes are from a lower level of the
   * FaceNet architecture. This is useful in combination with the FaceNetClient when it returns
   * multiple outputs and we need to keep track of their contents. For example, this could contain
   * the string 'avgpool-0' while another instance can use the standard 'normalizing' string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String signatureSource;

  /**
   * The internal version of the template. This is a copy of the version stored within the template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long version;

  /**
   * Confidence score based on embedding uncertainty. This is populated if fetch_facenet_confidence
   * has been set as true in FaceNetConfig, and FaceNet version satisfies one of the following: 1.
   * FACENET_8. 2. FACENET_9 with confidence model enabled in FaceTemplatesConfig. If
   * face_embedding_confidence module is requested, this will also be populated, and the signature
   * will be empty.
   * @return value or {@code null} for none
   */
  public java.lang.Float getConfidence() {
    return confidence;
  }

  /**
   * Confidence score based on embedding uncertainty. This is populated if fetch_facenet_confidence
   * has been set as true in FaceNetConfig, and FaceNet version satisfies one of the following: 1.
   * FACENET_8. 2. FACENET_9 with confidence model enabled in FaceTemplatesConfig. If
   * face_embedding_confidence module is requested, this will also be populated, and the signature
   * will be empty.
   * @param confidence confidence or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setConfidence(java.lang.Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * The Confidence version that populated the confidence.
   * @return value or {@code null} for none
   */
  public java.lang.String getConfidenceVersion() {
    return confidenceVersion;
  }

  /**
   * The Confidence version that populated the confidence.
   * @param confidenceVersion confidenceVersion or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setConfidenceVersion(java.lang.String confidenceVersion) {
    this.confidenceVersion = confidenceVersion;
    return this;
  }

  /**
   * The converter version that created this template.
   * @return value or {@code null} for none
   */
  public java.lang.String getConverterVersion() {
    return converterVersion;
  }

  /**
   * The converter version that created this template.
   * @param converterVersion converterVersion or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setConverterVersion(java.lang.String converterVersion) {
    this.converterVersion = converterVersion;
    return this;
  }

  /**
   * The face template bytes.
   * @see #decodeSignature()
   * @return value or {@code null} for none
   */
  public java.lang.String getSignature() {
    return signature;
  }

  /**
   * The face template bytes.
   * @see #getSignature()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSignature() {
    return com.google.api.client.util.Base64.decodeBase64(signature);
  }

  /**
   * The face template bytes.
   * @see #encodeSignature()
   * @param signature signature or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setSignature(java.lang.String signature) {
    this.signature = signature;
    return this;
  }

  /**
   * The face template bytes.
   * @see #setSignature()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public PhotosVisionServiceFaceVersionedFaceSignature encodeSignature(byte[] signature) {
    this.signature = com.google.api.client.util.Base64.encodeBase64URLSafeString(signature);
    return this;
  }

  /**
   * Specifies the source of the signature in cases where the bytes are from a lower level of the
   * FaceNet architecture. This is useful in combination with the FaceNetClient when it returns
   * multiple outputs and we need to keep track of their contents. For example, this could contain
   * the string 'avgpool-0' while another instance can use the standard 'normalizing' string.
   * @return value or {@code null} for none
   */
  public java.lang.String getSignatureSource() {
    return signatureSource;
  }

  /**
   * Specifies the source of the signature in cases where the bytes are from a lower level of the
   * FaceNet architecture. This is useful in combination with the FaceNetClient when it returns
   * multiple outputs and we need to keep track of their contents. For example, this could contain
   * the string 'avgpool-0' while another instance can use the standard 'normalizing' string.
   * @param signatureSource signatureSource or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setSignatureSource(java.lang.String signatureSource) {
    this.signatureSource = signatureSource;
    return this;
  }

  /**
   * The internal version of the template. This is a copy of the version stored within the template.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVersion() {
    return version;
  }

  /**
   * The internal version of the template. This is a copy of the version stored within the template.
   * @param version version or {@code null} for none
   */
  public PhotosVisionServiceFaceVersionedFaceSignature setVersion(java.lang.Long version) {
    this.version = version;
    return this;
  }

  @Override
  public PhotosVisionServiceFaceVersionedFaceSignature set(String fieldName, Object value) {
    return (PhotosVisionServiceFaceVersionedFaceSignature) super.set(fieldName, value);
  }

  @Override
  public PhotosVisionServiceFaceVersionedFaceSignature clone() {
    return (PhotosVisionServiceFaceVersionedFaceSignature) super.clone();
  }

}
