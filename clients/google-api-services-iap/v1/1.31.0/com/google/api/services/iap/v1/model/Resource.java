/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.iap.v1.model;

/**
 * Model definition for Resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Identity-Aware Proxy API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Resource extends com.google.api.client.json.GenericJson {

  /**
   * The service defined labels of the resource on which the conditions will be evaluated. The
   * semantics - including the key names - are vague to IAM. If the effective condition has a
   * reference to a `resource.labels[foo]` construct, IAM consults with this map to retrieve the
   * values associated with `foo` key for Conditions evaluation. If the provided key is not found in
   * the labels map, the condition would evaluate to false. This field is in limited use. If your
   * intended use case is not expected to express resource.labels attribute in IAM Conditions, leave
   * this field empty. Before planning on using this attribute please: * Read go/iam-conditions-
   * labels-comm and ensure your service can meet the data availability and management requirements.
   * * Talk to iam-conditions-eng@ about your use case.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Name of the resource on which conditions will be evaluated. Must use the Relative Resource Name
   * of the resource, which is the URI path of the resource without the leading "/". Examples are
   * "projects/_/buckets/[BUCKET-ID]" for storage buckets or "projects/[PROJECT-ID]/global/firewalls
   * /[FIREWALL-ID]" for a firewall. This field is required for evaluating conditions with rules on
   * resource names. For a `list` permission check, the resource.name value must be set to the
   * parent resource. If the parent resource is a project, this field should be left unset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The name of the service this resource belongs to. It is configured using the
   * official_service_name of the Service as defined in service configurations under
   * //configs/cloud/resourcetypes. For example, the official_service_name of cloud resource manager
   * service is set as 'cloudresourcemanager.googleapis.com' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String service;

  /**
   * The public resource type name of the resource on which conditions will be evaluated. It is
   * configured using the official_name of the ResourceType as defined in service configurations
   * under //configs/cloud/resourcetypes. For example, the official_name for GCP projects is set as
   * 'cloudresourcemanager.googleapis.com/Project' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml For details see go/iam-
   * conditions-integration-guide.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The service defined labels of the resource on which the conditions will be evaluated. The
   * semantics - including the key names - are vague to IAM. If the effective condition has a
   * reference to a `resource.labels[foo]` construct, IAM consults with this map to retrieve the
   * values associated with `foo` key for Conditions evaluation. If the provided key is not found in
   * the labels map, the condition would evaluate to false. This field is in limited use. If your
   * intended use case is not expected to express resource.labels attribute in IAM Conditions, leave
   * this field empty. Before planning on using this attribute please: * Read go/iam-conditions-
   * labels-comm and ensure your service can meet the data availability and management requirements.
   * * Talk to iam-conditions-eng@ about your use case.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The service defined labels of the resource on which the conditions will be evaluated. The
   * semantics - including the key names - are vague to IAM. If the effective condition has a
   * reference to a `resource.labels[foo]` construct, IAM consults with this map to retrieve the
   * values associated with `foo` key for Conditions evaluation. If the provided key is not found in
   * the labels map, the condition would evaluate to false. This field is in limited use. If your
   * intended use case is not expected to express resource.labels attribute in IAM Conditions, leave
   * this field empty. Before planning on using this attribute please: * Read go/iam-conditions-
   * labels-comm and ensure your service can meet the data availability and management requirements.
   * * Talk to iam-conditions-eng@ about your use case.
   * @param labels labels or {@code null} for none
   */
  public Resource setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Name of the resource on which conditions will be evaluated. Must use the Relative Resource Name
   * of the resource, which is the URI path of the resource without the leading "/". Examples are
   * "projects/_/buckets/[BUCKET-ID]" for storage buckets or "projects/[PROJECT-ID]/global/firewalls
   * /[FIREWALL-ID]" for a firewall. This field is required for evaluating conditions with rules on
   * resource names. For a `list` permission check, the resource.name value must be set to the
   * parent resource. If the parent resource is a project, this field should be left unset.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the resource on which conditions will be evaluated. Must use the Relative Resource Name
   * of the resource, which is the URI path of the resource without the leading "/". Examples are
   * "projects/_/buckets/[BUCKET-ID]" for storage buckets or "projects/[PROJECT-ID]/global/firewalls
   * /[FIREWALL-ID]" for a firewall. This field is required for evaluating conditions with rules on
   * resource names. For a `list` permission check, the resource.name value must be set to the
   * parent resource. If the parent resource is a project, this field should be left unset.
   * @param name name or {@code null} for none
   */
  public Resource setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the service this resource belongs to. It is configured using the
   * official_service_name of the Service as defined in service configurations under
   * //configs/cloud/resourcetypes. For example, the official_service_name of cloud resource manager
   * service is set as 'cloudresourcemanager.googleapis.com' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml
   * @return value or {@code null} for none
   */
  public java.lang.String getService() {
    return service;
  }

  /**
   * The name of the service this resource belongs to. It is configured using the
   * official_service_name of the Service as defined in service configurations under
   * //configs/cloud/resourcetypes. For example, the official_service_name of cloud resource manager
   * service is set as 'cloudresourcemanager.googleapis.com' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml
   * @param service service or {@code null} for none
   */
  public Resource setService(java.lang.String service) {
    this.service = service;
    return this;
  }

  /**
   * The public resource type name of the resource on which conditions will be evaluated. It is
   * configured using the official_name of the ResourceType as defined in service configurations
   * under //configs/cloud/resourcetypes. For example, the official_name for GCP projects is set as
   * 'cloudresourcemanager.googleapis.com/Project' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml For details see go/iam-
   * conditions-integration-guide.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The public resource type name of the resource on which conditions will be evaluated. It is
   * configured using the official_name of the ResourceType as defined in service configurations
   * under //configs/cloud/resourcetypes. For example, the official_name for GCP projects is set as
   * 'cloudresourcemanager.googleapis.com/Project' according to
   * //configs/cloud/resourcetypes/google/cloud/resourcemanager/prod.yaml For details see go/iam-
   * conditions-integration-guide.
   * @param type type or {@code null} for none
   */
  public Resource setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Resource set(String fieldName, Object value) {
    return (Resource) super.set(fieldName, value);
  }

  @Override
  public Resource clone() {
    return (Resource) super.clone();
  }

}
