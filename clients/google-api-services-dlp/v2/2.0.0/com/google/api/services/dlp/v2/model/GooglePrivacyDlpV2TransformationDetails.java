/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Details about a single transformation. This object contains a description of the transformation,
 * information about whether the transformation was successfully applied, and the precise location
 * where the transformation occurred. These details are stored in a user-specified BigQuery table.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TransformationDetails extends com.google.api.client.json.GenericJson {

  /**
   * The top level name of the container where the transformation is located (this will be the
   * source file name or table name).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerName;

  /**
   * The name of the job that completed the transformation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceName;

  /**
   * Status of the transformation, if transformation was not successful, this will specify what
   * caused it to fail, otherwise it will show that the transformation was successful.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2TransformationResultStatus statusDetails;

  /**
   * Description of transformation. This would only contain more than one element if there were
   * multiple matching transformations and which one to apply was ambiguous. Not set for states that
   * contain no transformation, currently only state that contains no transformation is
   * TransformationResultStateType.METADATA_UNRETRIEVABLE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2TransformationDescription> transformation;

  static {
    // hack to force ProGuard to consider GooglePrivacyDlpV2TransformationDescription used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GooglePrivacyDlpV2TransformationDescription.class);
  }

  /**
   * The precise location of the transformed content in the original container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2TransformationLocation transformationLocation;

  /**
   * The number of bytes that were transformed. If transformation was unsuccessful or did not take
   * place because there was no content to transform, this will be zero.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long transformedBytes;

  /**
   * The top level name of the container where the transformation is located (this will be the
   * source file name or table name).
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerName() {
    return containerName;
  }

  /**
   * The top level name of the container where the transformation is located (this will be the
   * source file name or table name).
   * @param containerName containerName or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setContainerName(java.lang.String containerName) {
    this.containerName = containerName;
    return this;
  }

  /**
   * The name of the job that completed the transformation.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceName() {
    return resourceName;
  }

  /**
   * The name of the job that completed the transformation.
   * @param resourceName resourceName or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setResourceName(java.lang.String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Status of the transformation, if transformation was not successful, this will specify what
   * caused it to fail, otherwise it will show that the transformation was successful.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationResultStatus getStatusDetails() {
    return statusDetails;
  }

  /**
   * Status of the transformation, if transformation was not successful, this will specify what
   * caused it to fail, otherwise it will show that the transformation was successful.
   * @param statusDetails statusDetails or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setStatusDetails(GooglePrivacyDlpV2TransformationResultStatus statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Description of transformation. This would only contain more than one element if there were
   * multiple matching transformations and which one to apply was ambiguous. Not set for states that
   * contain no transformation, currently only state that contains no transformation is
   * TransformationResultStateType.METADATA_UNRETRIEVABLE.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2TransformationDescription> getTransformation() {
    return transformation;
  }

  /**
   * Description of transformation. This would only contain more than one element if there were
   * multiple matching transformations and which one to apply was ambiguous. Not set for states that
   * contain no transformation, currently only state that contains no transformation is
   * TransformationResultStateType.METADATA_UNRETRIEVABLE.
   * @param transformation transformation or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setTransformation(java.util.List<GooglePrivacyDlpV2TransformationDescription> transformation) {
    this.transformation = transformation;
    return this;
  }

  /**
   * The precise location of the transformed content in the original container.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationLocation getTransformationLocation() {
    return transformationLocation;
  }

  /**
   * The precise location of the transformed content in the original container.
   * @param transformationLocation transformationLocation or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setTransformationLocation(GooglePrivacyDlpV2TransformationLocation transformationLocation) {
    this.transformationLocation = transformationLocation;
    return this;
  }

  /**
   * The number of bytes that were transformed. If transformation was unsuccessful or did not take
   * place because there was no content to transform, this will be zero.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTransformedBytes() {
    return transformedBytes;
  }

  /**
   * The number of bytes that were transformed. If transformation was unsuccessful or did not take
   * place because there was no content to transform, this will be zero.
   * @param transformedBytes transformedBytes or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDetails setTransformedBytes(java.lang.Long transformedBytes) {
    this.transformedBytes = transformedBytes;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TransformationDetails set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TransformationDetails) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TransformationDetails clone() {
    return (GooglePrivacyDlpV2TransformationDetails) super.clone();
  }

}
