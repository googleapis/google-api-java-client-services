/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddebugger.v2.model;

/**
 * Request to register a debuggee.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Stackdriver Debugger API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RegisterDebuggeeRequest extends com.google.api.client.json.GenericJson {

  /**
   * Debuggee information to register. The fields `project`, `uniquifier`, `description` and
   * `agent_version` of the debuggee must be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Debuggee debuggee;

  /**
   * Debuggee information to register. The fields `project`, `uniquifier`, `description` and
   * `agent_version` of the debuggee must be set.
   * @return value or {@code null} for none
   */
  public Debuggee getDebuggee() {
    return debuggee;
  }

  /**
   * Debuggee information to register. The fields `project`, `uniquifier`, `description` and
   * `agent_version` of the debuggee must be set.
   * @param debuggee debuggee or {@code null} for none
   */
  public RegisterDebuggeeRequest setDebuggee(Debuggee debuggee) {
    this.debuggee = debuggee;
    return this;
  }

  @Override
  public RegisterDebuggeeRequest set(String fieldName, Object value) {
    return (RegisterDebuggeeRequest) super.set(fieldName, value);
  }

  @Override
  public RegisterDebuggeeRequest clone() {
    return (RegisterDebuggeeRequest) super.clone();
  }

}
