/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be
 * transferred between two parties, enabling the claims to be digitally signed or integrity
 * protected.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIntegrationsV1alphaJwt extends com.google.api.client.json.GenericJson {

  /**
   * The token calculated by the header, payload and signature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jwt;

  /**
   * Identifies which algorithm is used to generate the signature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jwtHeader;

  /**
   * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are
   * the standard fields commonly included in tokens. Custom claims are usually also included,
   * depending on the purpose of the token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jwtPayload;

  /**
   * User's pre-shared secret to sign the token.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String secret;

  /**
   * The token calculated by the header, payload and signature.
   * @return value or {@code null} for none
   */
  public java.lang.String getJwt() {
    return jwt;
  }

  /**
   * The token calculated by the header, payload and signature.
   * @param jwt jwt or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaJwt setJwt(java.lang.String jwt) {
    this.jwt = jwt;
    return this;
  }

  /**
   * Identifies which algorithm is used to generate the signature.
   * @return value or {@code null} for none
   */
  public java.lang.String getJwtHeader() {
    return jwtHeader;
  }

  /**
   * Identifies which algorithm is used to generate the signature.
   * @param jwtHeader jwtHeader or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaJwt setJwtHeader(java.lang.String jwtHeader) {
    this.jwtHeader = jwtHeader;
    return this;
  }

  /**
   * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are
   * the standard fields commonly included in tokens. Custom claims are usually also included,
   * depending on the purpose of the token.
   * @return value or {@code null} for none
   */
  public java.lang.String getJwtPayload() {
    return jwtPayload;
  }

  /**
   * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are
   * the standard fields commonly included in tokens. Custom claims are usually also included,
   * depending on the purpose of the token.
   * @param jwtPayload jwtPayload or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaJwt setJwtPayload(java.lang.String jwtPayload) {
    this.jwtPayload = jwtPayload;
    return this;
  }

  /**
   * User's pre-shared secret to sign the token.
   * @return value or {@code null} for none
   */
  public java.lang.String getSecret() {
    return secret;
  }

  /**
   * User's pre-shared secret to sign the token.
   * @param secret secret or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaJwt setSecret(java.lang.String secret) {
    this.secret = secret;
    return this;
  }

  @Override
  public GoogleCloudIntegrationsV1alphaJwt set(String fieldName, Object value) {
    return (GoogleCloudIntegrationsV1alphaJwt) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIntegrationsV1alphaJwt clone() {
    return (GoogleCloudIntegrationsV1alphaJwt) super.clone();
  }

}
