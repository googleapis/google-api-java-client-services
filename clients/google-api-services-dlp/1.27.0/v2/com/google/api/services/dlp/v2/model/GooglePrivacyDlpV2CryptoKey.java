/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by KMS).
 * When using KMS to wrap/unwrap DEKs, be sure to set an appropriate IAM policy on the KMS CryptoKey
 * (KEK) to ensure an attacker cannot unwrap the data crypto key.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2CryptoKey extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2KmsWrappedCryptoKey kmsWrapped;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("transient")
  private GooglePrivacyDlpV2TransientCryptoKey transient__;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2UnwrappedCryptoKey unwrapped;

  /**
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2KmsWrappedCryptoKey getKmsWrapped() {
    return kmsWrapped;
  }

  /**
   * @param kmsWrapped kmsWrapped or {@code null} for none
   */
  public GooglePrivacyDlpV2CryptoKey setKmsWrapped(GooglePrivacyDlpV2KmsWrappedCryptoKey kmsWrapped) {
    this.kmsWrapped = kmsWrapped;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2TransientCryptoKey getTransient() {
    return transient__;
  }

  /**
   * @param transient__ transient__ or {@code null} for none
   */
  public GooglePrivacyDlpV2CryptoKey setTransient(GooglePrivacyDlpV2TransientCryptoKey transient__) {
    this.transient__ = transient__;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2UnwrappedCryptoKey getUnwrapped() {
    return unwrapped;
  }

  /**
   * @param unwrapped unwrapped or {@code null} for none
   */
  public GooglePrivacyDlpV2CryptoKey setUnwrapped(GooglePrivacyDlpV2UnwrappedCryptoKey unwrapped) {
    this.unwrapped = unwrapped;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2CryptoKey set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2CryptoKey) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2CryptoKey clone() {
    return (GooglePrivacyDlpV2CryptoKey) super.clone();
  }

}
