/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The field ACL. Currently only populated on profile fields for the profile owner. A Person field
 * ACL; see http://go/peopleapi-acl
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiFieldAcl extends com.google.api.client.json.GenericJson {

  /**
   * A custom type of field ACL entry. The set of all ACL entries includes those listed in acl_entry
   * as well as predefined_acl_entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsPeopleOzExternalMergedpeopleapiFieldAclAclEntry> aclEntry;

  /**
   * Set of users that will be authorized to view the field by this field ACL. If the ACL is public,
   * this will only contain ALL_USERS. This field is synthesized, read-only, and currently only used
   * for profile photos. It's populated under "person.photo.metadata.field_acl" for the current
   * photo ACL and "person.photo.metadata.acl_choices" for available photo ACL choices. Note: The
   * set of authorized viewers for a given FieldAcl may depend on the user's account type and domain
   * configuration. For example, a PRIVATE_READ FieldAcl could have any of the following authorized
   * viewers: Consumer user: [IDENTITY_ACL_ESTABLISHED] Dasher user without domain contact sharing:
   * [IDENTITY_ACL_ESTABLISHED] Unicorn user: [SAME_UNICORN_FAMILY] Hafez user: []
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> authorizedViewers;

  /**
   * A common type of field ACL entry. A predefined ACL entry is a shortcut for a commonly occurring
   * case of role and scope. For example, PUBLIC_READ is the same as an AclEntry with role = READER
   * and scope.all_users = true. The set of all ACL entries includes those listed in acl_entry as
   * well as predefined_acl_entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> predefinedAclEntry;

  /**
   * A custom type of field ACL entry. The set of all ACL entries includes those listed in acl_entry
   * as well as predefined_acl_entry.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsPeopleOzExternalMergedpeopleapiFieldAclAclEntry> getAclEntry() {
    return aclEntry;
  }

  /**
   * A custom type of field ACL entry. The set of all ACL entries includes those listed in acl_entry
   * as well as predefined_acl_entry.
   * @param aclEntry aclEntry or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiFieldAcl setAclEntry(java.util.List<AppsPeopleOzExternalMergedpeopleapiFieldAclAclEntry> aclEntry) {
    this.aclEntry = aclEntry;
    return this;
  }

  /**
   * Set of users that will be authorized to view the field by this field ACL. If the ACL is public,
   * this will only contain ALL_USERS. This field is synthesized, read-only, and currently only used
   * for profile photos. It's populated under "person.photo.metadata.field_acl" for the current
   * photo ACL and "person.photo.metadata.acl_choices" for available photo ACL choices. Note: The
   * set of authorized viewers for a given FieldAcl may depend on the user's account type and domain
   * configuration. For example, a PRIVATE_READ FieldAcl could have any of the following authorized
   * viewers: Consumer user: [IDENTITY_ACL_ESTABLISHED] Dasher user without domain contact sharing:
   * [IDENTITY_ACL_ESTABLISHED] Unicorn user: [SAME_UNICORN_FAMILY] Hafez user: []
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAuthorizedViewers() {
    return authorizedViewers;
  }

  /**
   * Set of users that will be authorized to view the field by this field ACL. If the ACL is public,
   * this will only contain ALL_USERS. This field is synthesized, read-only, and currently only used
   * for profile photos. It's populated under "person.photo.metadata.field_acl" for the current
   * photo ACL and "person.photo.metadata.acl_choices" for available photo ACL choices. Note: The
   * set of authorized viewers for a given FieldAcl may depend on the user's account type and domain
   * configuration. For example, a PRIVATE_READ FieldAcl could have any of the following authorized
   * viewers: Consumer user: [IDENTITY_ACL_ESTABLISHED] Dasher user without domain contact sharing:
   * [IDENTITY_ACL_ESTABLISHED] Unicorn user: [SAME_UNICORN_FAMILY] Hafez user: []
   * @param authorizedViewers authorizedViewers or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiFieldAcl setAuthorizedViewers(java.util.List<java.lang.String> authorizedViewers) {
    this.authorizedViewers = authorizedViewers;
    return this;
  }

  /**
   * A common type of field ACL entry. A predefined ACL entry is a shortcut for a commonly occurring
   * case of role and scope. For example, PUBLIC_READ is the same as an AclEntry with role = READER
   * and scope.all_users = true. The set of all ACL entries includes those listed in acl_entry as
   * well as predefined_acl_entry.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPredefinedAclEntry() {
    return predefinedAclEntry;
  }

  /**
   * A common type of field ACL entry. A predefined ACL entry is a shortcut for a commonly occurring
   * case of role and scope. For example, PUBLIC_READ is the same as an AclEntry with role = READER
   * and scope.all_users = true. The set of all ACL entries includes those listed in acl_entry as
   * well as predefined_acl_entry.
   * @param predefinedAclEntry predefinedAclEntry or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiFieldAcl setPredefinedAclEntry(java.util.List<java.lang.String> predefinedAclEntry) {
    this.predefinedAclEntry = predefinedAclEntry;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiFieldAcl set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiFieldAcl) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiFieldAcl clone() {
    return (AppsPeopleOzExternalMergedpeopleapiFieldAcl) super.clone();
  }

}
