/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * author names should be in the order specified in the paper
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ScienceCitationAuthor extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Comment")
  private java.lang.String comment;

  /**
   * not in bibtex - from paper
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Department")
  private java.lang.String department;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Email")
  private java.lang.String email;

  /**
   * Tracks the GuessNameOrder case used to parse this author name, defaults to 0 simply means that
   * GuessNameOrder wasn't used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("GuessOrderType")
  private java.lang.Integer guessOrderType;

  /**
   * Author ID. Formatted as idtype:id
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("ID")
  private java.util.List<java.lang.String> iD;

  /**
   * not in bibtex - from paper
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Institution")
  private java.lang.String institution;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("IsCJKForeignName")
  private java.lang.Boolean isCJKForeignName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("IsCorrespondingAuthor")
  private java.lang.Boolean isCorrespondingAuthor;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("LastName")
  private java.lang.String lastName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("OtherNames")
  private java.lang.String otherNames;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("SourceText")
  private java.lang.String sourceText;

  /**
   * Type is one of the contributors types. Writers are the default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Type")
  private java.lang.Integer type;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**
   * @param comment comment or {@code null} for none
   */
  public ScienceCitationAuthor setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * not in bibtex - from paper
   * @return value or {@code null} for none
   */
  public java.lang.String getDepartment() {
    return department;
  }

  /**
   * not in bibtex - from paper
   * @param department department or {@code null} for none
   */
  public ScienceCitationAuthor setDepartment(java.lang.String department) {
    this.department = department;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * @param email email or {@code null} for none
   */
  public ScienceCitationAuthor setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * Tracks the GuessNameOrder case used to parse this author name, defaults to 0 simply means that
   * GuessNameOrder wasn't used.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGuessOrderType() {
    return guessOrderType;
  }

  /**
   * Tracks the GuessNameOrder case used to parse this author name, defaults to 0 simply means that
   * GuessNameOrder wasn't used.
   * @param guessOrderType guessOrderType or {@code null} for none
   */
  public ScienceCitationAuthor setGuessOrderType(java.lang.Integer guessOrderType) {
    this.guessOrderType = guessOrderType;
    return this;
  }

  /**
   * Author ID. Formatted as idtype:id
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getID() {
    return iD;
  }

  /**
   * Author ID. Formatted as idtype:id
   * @param iD iD or {@code null} for none
   */
  public ScienceCitationAuthor setID(java.util.List<java.lang.String> iD) {
    this.iD = iD;
    return this;
  }

  /**
   * not in bibtex - from paper
   * @return value or {@code null} for none
   */
  public java.lang.String getInstitution() {
    return institution;
  }

  /**
   * not in bibtex - from paper
   * @param institution institution or {@code null} for none
   */
  public ScienceCitationAuthor setInstitution(java.lang.String institution) {
    this.institution = institution;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCJKForeignName() {
    return isCJKForeignName;
  }

  /**
   * @param isCJKForeignName isCJKForeignName or {@code null} for none
   */
  public ScienceCitationAuthor setIsCJKForeignName(java.lang.Boolean isCJKForeignName) {
    this.isCJKForeignName = isCJKForeignName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCorrespondingAuthor() {
    return isCorrespondingAuthor;
  }

  /**
   * @param isCorrespondingAuthor isCorrespondingAuthor or {@code null} for none
   */
  public ScienceCitationAuthor setIsCorrespondingAuthor(java.lang.Boolean isCorrespondingAuthor) {
    this.isCorrespondingAuthor = isCorrespondingAuthor;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLastName() {
    return lastName;
  }

  /**
   * @param lastName lastName or {@code null} for none
   */
  public ScienceCitationAuthor setLastName(java.lang.String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOtherNames() {
    return otherNames;
  }

  /**
   * @param otherNames otherNames or {@code null} for none
   */
  public ScienceCitationAuthor setOtherNames(java.lang.String otherNames) {
    this.otherNames = otherNames;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceText() {
    return sourceText;
  }

  /**
   * @param sourceText sourceText or {@code null} for none
   */
  public ScienceCitationAuthor setSourceText(java.lang.String sourceText) {
    this.sourceText = sourceText;
    return this;
  }

  /**
   * Type is one of the contributors types. Writers are the default.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * Type is one of the contributors types. Writers are the default.
   * @param type type or {@code null} for none
   */
  public ScienceCitationAuthor setType(java.lang.Integer type) {
    this.type = type;
    return this;
  }

  @Override
  public ScienceCitationAuthor set(String fieldName, Object value) {
    return (ScienceCitationAuthor) super.set(fieldName, value);
  }

  @Override
  public ScienceCitationAuthor clone() {
    return (ScienceCitationAuthor) super.clone();
  }

}
