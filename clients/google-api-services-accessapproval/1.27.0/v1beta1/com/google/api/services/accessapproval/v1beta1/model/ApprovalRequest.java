/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.accessapproval.v1beta1.model;

/**
 * A request for the customer to approve access to a resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Access Approval API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ApprovalRequest extends com.google.api.client.json.GenericJson {

  /**
   * Access was approved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ApproveDecision approve;

  /**
   * The request was dismissed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DismissDecision dismiss;

  /**
   * The resource name of the request. Format is
   * "{projects|folders|organizations}/{id}/approvalRequests/{approval_request_id}".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The time at which approval was requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String requestTime;

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String requestedExpiration;

  /**
   * The locations for which approval is being requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AccessLocations requestedLocations;

  /**
   * The justification for which approval is being requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AccessReason requestedReason;

  /**
   * The resource for which approval is being requested. The format of the resource name is defined
   * at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a
   * "full" resource name (e.g. "//library.googleapis.com/shelves/shelf1/books/book2") or a
   * "relative" resource name (e.g. "shelves/shelf1/books/book2") as described in the resource name
   * specification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestedResourceName;

  /**
   * Properties related to the resource represented by requested_resource_name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceProperties requestedResourceProperties;

  /**
   * Access was approved.
   * @return value or {@code null} for none
   */
  public ApproveDecision getApprove() {
    return approve;
  }

  /**
   * Access was approved.
   * @param approve approve or {@code null} for none
   */
  public ApprovalRequest setApprove(ApproveDecision approve) {
    this.approve = approve;
    return this;
  }

  /**
   * The request was dismissed.
   * @return value or {@code null} for none
   */
  public DismissDecision getDismiss() {
    return dismiss;
  }

  /**
   * The request was dismissed.
   * @param dismiss dismiss or {@code null} for none
   */
  public ApprovalRequest setDismiss(DismissDecision dismiss) {
    this.dismiss = dismiss;
    return this;
  }

  /**
   * The resource name of the request. Format is
   * "{projects|folders|organizations}/{id}/approvalRequests/{approval_request_id}".
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the request. Format is
   * "{projects|folders|organizations}/{id}/approvalRequests/{approval_request_id}".
   * @param name name or {@code null} for none
   */
  public ApprovalRequest setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The time at which approval was requested.
   * @return value or {@code null} for none
   */
  public String getRequestTime() {
    return requestTime;
  }

  /**
   * The time at which approval was requested.
   * @param requestTime requestTime or {@code null} for none
   */
  public ApprovalRequest setRequestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * @return value or {@code null} for none
   */
  public String getRequestedExpiration() {
    return requestedExpiration;
  }

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * @param requestedExpiration requestedExpiration or {@code null} for none
   */
  public ApprovalRequest setRequestedExpiration(String requestedExpiration) {
    this.requestedExpiration = requestedExpiration;
    return this;
  }

  /**
   * The locations for which approval is being requested.
   * @return value or {@code null} for none
   */
  public AccessLocations getRequestedLocations() {
    return requestedLocations;
  }

  /**
   * The locations for which approval is being requested.
   * @param requestedLocations requestedLocations or {@code null} for none
   */
  public ApprovalRequest setRequestedLocations(AccessLocations requestedLocations) {
    this.requestedLocations = requestedLocations;
    return this;
  }

  /**
   * The justification for which approval is being requested.
   * @return value or {@code null} for none
   */
  public AccessReason getRequestedReason() {
    return requestedReason;
  }

  /**
   * The justification for which approval is being requested.
   * @param requestedReason requestedReason or {@code null} for none
   */
  public ApprovalRequest setRequestedReason(AccessReason requestedReason) {
    this.requestedReason = requestedReason;
    return this;
  }

  /**
   * The resource for which approval is being requested. The format of the resource name is defined
   * at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a
   * "full" resource name (e.g. "//library.googleapis.com/shelves/shelf1/books/book2") or a
   * "relative" resource name (e.g. "shelves/shelf1/books/book2") as described in the resource name
   * specification.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestedResourceName() {
    return requestedResourceName;
  }

  /**
   * The resource for which approval is being requested. The format of the resource name is defined
   * at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a
   * "full" resource name (e.g. "//library.googleapis.com/shelves/shelf1/books/book2") or a
   * "relative" resource name (e.g. "shelves/shelf1/books/book2") as described in the resource name
   * specification.
   * @param requestedResourceName requestedResourceName or {@code null} for none
   */
  public ApprovalRequest setRequestedResourceName(java.lang.String requestedResourceName) {
    this.requestedResourceName = requestedResourceName;
    return this;
  }

  /**
   * Properties related to the resource represented by requested_resource_name.
   * @return value or {@code null} for none
   */
  public ResourceProperties getRequestedResourceProperties() {
    return requestedResourceProperties;
  }

  /**
   * Properties related to the resource represented by requested_resource_name.
   * @param requestedResourceProperties requestedResourceProperties or {@code null} for none
   */
  public ApprovalRequest setRequestedResourceProperties(ResourceProperties requestedResourceProperties) {
    this.requestedResourceProperties = requestedResourceProperties;
    return this;
  }

  @Override
  public ApprovalRequest set(String fieldName, Object value) {
    return (ApprovalRequest) super.set(fieldName, value);
  }

  @Override
  public ApprovalRequest clone() {
    return (ApprovalRequest) super.clone();
  }

}
