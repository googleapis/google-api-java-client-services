/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next ID: 35
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersIntentQueryFunctionCallSignals extends com.google.api.client.json.GenericJson {

  /**
   * The argument mid that was used to compose the entity for a concept interpretation, along with
   * the intent_composing_mid (one of the intent's equivalent MIDs).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String argumentComposingMid;

  /**
   * The attributes from which this intent was generated during execution of
   * AttributeSignalsProvider. |attribute_signals| is only populated for single entity funcalls.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryAttributeSignal> attributeSignals;

  static {
    // hack to force ProGuard to consider KnowledgeAnswersIntentQueryAttributeSignal used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(KnowledgeAnswersIntentQueryAttributeSignal.class);
  }

  /**
   * An entity that represents the concept of an entity-attribute intent by being composed of an
   * intent equivalent MID and the argument MID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String conceptEntityMid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String confidenceLevel;

  /**
   * FunctionCall-s that this funcall was deduped against.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryFunctionCall> dedupedFuncalls;

  static {
    // hack to force ProGuard to consider KnowledgeAnswersIntentQueryFunctionCall used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(KnowledgeAnswersIntentQueryFunctionCall.class);
  }

  /**
   * Status indicating whether the user has completely expressed their intended semantics. (See go
   * /streaming-nlu-fulfilment-protocol-v1 for more info. )
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingExpressionStatus expressionStatus;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String freefolksTrigger;

  /**
   * Grounding signals for ranking/filtering, as well as whether to use Grounding Box and PGRP in
   * AnswersRewriter. See comment on GroundingSignals for details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentQueryGroundingSignals groundingSignals;

  /**
   * Used to indicate that an interpretation is high confidence and triggers different voting
   * behavior. This bit should only be set for verticals. DEPRECATED. Use confidence_level instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean highConfidence;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> intentAnnotationSources;

  /**
   * An intent_relevant_mid that was used to compose the entity for a concept interpretation, along
   * with argument_composing_mid (the question's argument MID).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String intentComposingMid;

  /**
   * Information about where the value of this intent came from. For example, it could have been
   * explicitly provided in the query, pulled in from the previous dialog state, or pulled from
   * previous queries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryArgumentProvenance> intentProvenance;

  static {
    // hack to force ProGuard to consider KnowledgeAnswersIntentQueryArgumentProvenance used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(KnowledgeAnswersIntentQueryArgumentProvenance.class);
  }

  /**
   * KG mids of entities that represent this intent. These entities are seen as equivalent to the
   * Intent definition, and are specified in the Intent Catalog as relevant_mid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> intentRelevantMid;

  /**
   * Whether the interpretation was generated using similar queries in POSTREF. In case POSTREF_AQUA
   * generated the same entity-attribute interpretation, this is still set to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCloseInterpretation;

  /**
   * Denotes whether this is an intent being fulfilled from user tapping a disambiguation card. More
   * info in go/cardea-deck.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDisambiguationCardIntent;

  /**
   * Denotes whether this is a sub-intent of an ambiguous SystemUncertain intent go/intent-
   * disambiguation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDisambiguationIntent;

  /**
   * Whether the interpretation was generated from the neural categorical parser.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isNeuralCategoricalInterpretation;

  /**
   * Denotes this is a sub-intent used for composing an Assistant UI response. The assistant dialog
   * should output ui_composition_shelf in the SystemResponse if it can fulfill the intent. More
   * info in go/davinci-design and go/davinci-di-fulfillment
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isUiCompositionIntent;

  /**
   * Information about Local results to be used in the Packer for Local Categorical derived intent
   * deduplication and conformance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentQueryLocalSignals localSignals;

  /**
   * A tag to annotate user's journey (e.g., JourneyFollowCampusUpdates). This will be used for
   * Journey OSRP demo (go/josrp-sprint). !!NOTE!! This field is reserved for Journey OSRP demo, and
   * will be deprecated shortly after its completion. DO NOT USE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String osrpJourneyTag;

  /**
   * Experiments that caused this FunctionCall to parse, without which this would not have parsed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> parsedDueToExperiment;

  /**
   * Parsing signals for ranking/filtering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentQueryParsingSignals parsingSignals;

  /**
   * Identifies a score, determined before fulfillment but after grounding. Written by the
   * Prefulfillment Ranker, and used as a signal for ACE Ranking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float prefulfillmentRankingScore;

  /**
   * All the input signals to the Prefulfillment Ranker.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantPrefulfillmentRankerPrefulfillmentSignals prefulfillmentSignals;

  /**
   * Describes how this intent was resolved via external data (either elsewhere in the query, or in
   * a previous query).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersDialogReferentialResolution referentialResolution;

  /**
   * The id of the summary node if this funcall represents an mdvc interpretation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String refxSummaryNodeId;

  /**
   * The list of result supports for this FunctionCall.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<UniversalsearchNewPackerKnowledgeResultSupport> resultSupport;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String role;

  /**
   * Identifies whether the Prefulfillment Ranker selected this intent for emission. This is needed
   * temporarily while migrating intent emitters from ACE to QUS/PFR. See go/pfr-intent-emitter for
   * more info
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean selectedByPrefulfillmentRanking;

  /**
   * Equivalent shopping ids for the function call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentQueryShoppingIds shoppingIds;

  /**
   * Additional intents to be used for intent scoring. This field must only be populated when we
   * cannot find a single unified intent. For example, when we compute signals for a LocalEntities
   * function call, this means we could not find a unified intent to capture all the local results.
   * In this case, we add a fallback intent for each local result (e.g. GeoSchool, GeoRestaurant,
   * and GeoBank if those are the results we show).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQuerySignalComputationFallbackIntent> signalsFallbackIntents;

  /**
   * The argument mid that was used to compose the entity for a concept interpretation, along with
   * the intent_composing_mid (one of the intent's equivalent MIDs).
   * @return value or {@code null} for none
   */
  public java.lang.String getArgumentComposingMid() {
    return argumentComposingMid;
  }

  /**
   * The argument mid that was used to compose the entity for a concept interpretation, along with
   * the intent_composing_mid (one of the intent's equivalent MIDs).
   * @param argumentComposingMid argumentComposingMid or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setArgumentComposingMid(java.lang.String argumentComposingMid) {
    this.argumentComposingMid = argumentComposingMid;
    return this;
  }

  /**
   * The attributes from which this intent was generated during execution of
   * AttributeSignalsProvider. |attribute_signals| is only populated for single entity funcalls.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryAttributeSignal> getAttributeSignals() {
    return attributeSignals;
  }

  /**
   * The attributes from which this intent was generated during execution of
   * AttributeSignalsProvider. |attribute_signals| is only populated for single entity funcalls.
   * @param attributeSignals attributeSignals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setAttributeSignals(java.util.List<KnowledgeAnswersIntentQueryAttributeSignal> attributeSignals) {
    this.attributeSignals = attributeSignals;
    return this;
  }

  /**
   * An entity that represents the concept of an entity-attribute intent by being composed of an
   * intent equivalent MID and the argument MID.
   * @return value or {@code null} for none
   */
  public java.lang.String getConceptEntityMid() {
    return conceptEntityMid;
  }

  /**
   * An entity that represents the concept of an entity-attribute intent by being composed of an
   * intent equivalent MID and the argument MID.
   * @param conceptEntityMid conceptEntityMid or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setConceptEntityMid(java.lang.String conceptEntityMid) {
    this.conceptEntityMid = conceptEntityMid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getConfidenceLevel() {
    return confidenceLevel;
  }

  /**
   * @param confidenceLevel confidenceLevel or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setConfidenceLevel(java.lang.String confidenceLevel) {
    this.confidenceLevel = confidenceLevel;
    return this;
  }

  /**
   * FunctionCall-s that this funcall was deduped against.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryFunctionCall> getDedupedFuncalls() {
    return dedupedFuncalls;
  }

  /**
   * FunctionCall-s that this funcall was deduped against.
   * @param dedupedFuncalls dedupedFuncalls or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setDedupedFuncalls(java.util.List<KnowledgeAnswersIntentQueryFunctionCall> dedupedFuncalls) {
    this.dedupedFuncalls = dedupedFuncalls;
    return this;
  }

  /**
   * Status indicating whether the user has completely expressed their intended semantics. (See go
   * /streaming-nlu-fulfilment-protocol-v1 for more info. )
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingExpressionStatus getExpressionStatus() {
    return expressionStatus;
  }

  /**
   * Status indicating whether the user has completely expressed their intended semantics. (See go
   * /streaming-nlu-fulfilment-protocol-v1 for more info. )
   * @param expressionStatus expressionStatus or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setExpressionStatus(NlpSemanticParsingExpressionStatus expressionStatus) {
    this.expressionStatus = expressionStatus;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFreefolksTrigger() {
    return freefolksTrigger;
  }

  /**
   * @param freefolksTrigger freefolksTrigger or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setFreefolksTrigger(java.lang.String freefolksTrigger) {
    this.freefolksTrigger = freefolksTrigger;
    return this;
  }

  /**
   * Grounding signals for ranking/filtering, as well as whether to use Grounding Box and PGRP in
   * AnswersRewriter. See comment on GroundingSignals for details.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryGroundingSignals getGroundingSignals() {
    return groundingSignals;
  }

  /**
   * Grounding signals for ranking/filtering, as well as whether to use Grounding Box and PGRP in
   * AnswersRewriter. See comment on GroundingSignals for details.
   * @param groundingSignals groundingSignals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setGroundingSignals(KnowledgeAnswersIntentQueryGroundingSignals groundingSignals) {
    this.groundingSignals = groundingSignals;
    return this;
  }

  /**
   * Used to indicate that an interpretation is high confidence and triggers different voting
   * behavior. This bit should only be set for verticals. DEPRECATED. Use confidence_level instead.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHighConfidence() {
    return highConfidence;
  }

  /**
   * Used to indicate that an interpretation is high confidence and triggers different voting
   * behavior. This bit should only be set for verticals. DEPRECATED. Use confidence_level instead.
   * @param highConfidence highConfidence or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setHighConfidence(java.lang.Boolean highConfidence) {
    this.highConfidence = highConfidence;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIntentAnnotationSources() {
    return intentAnnotationSources;
  }

  /**
   * @param intentAnnotationSources intentAnnotationSources or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIntentAnnotationSources(java.util.List<java.lang.String> intentAnnotationSources) {
    this.intentAnnotationSources = intentAnnotationSources;
    return this;
  }

  /**
   * An intent_relevant_mid that was used to compose the entity for a concept interpretation, along
   * with argument_composing_mid (the question's argument MID).
   * @return value or {@code null} for none
   */
  public java.lang.String getIntentComposingMid() {
    return intentComposingMid;
  }

  /**
   * An intent_relevant_mid that was used to compose the entity for a concept interpretation, along
   * with argument_composing_mid (the question's argument MID).
   * @param intentComposingMid intentComposingMid or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIntentComposingMid(java.lang.String intentComposingMid) {
    this.intentComposingMid = intentComposingMid;
    return this;
  }

  /**
   * Information about where the value of this intent came from. For example, it could have been
   * explicitly provided in the query, pulled in from the previous dialog state, or pulled from
   * previous queries.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryArgumentProvenance> getIntentProvenance() {
    return intentProvenance;
  }

  /**
   * Information about where the value of this intent came from. For example, it could have been
   * explicitly provided in the query, pulled in from the previous dialog state, or pulled from
   * previous queries.
   * @param intentProvenance intentProvenance or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIntentProvenance(java.util.List<KnowledgeAnswersIntentQueryArgumentProvenance> intentProvenance) {
    this.intentProvenance = intentProvenance;
    return this;
  }

  /**
   * KG mids of entities that represent this intent. These entities are seen as equivalent to the
   * Intent definition, and are specified in the Intent Catalog as relevant_mid.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIntentRelevantMid() {
    return intentRelevantMid;
  }

  /**
   * KG mids of entities that represent this intent. These entities are seen as equivalent to the
   * Intent definition, and are specified in the Intent Catalog as relevant_mid.
   * @param intentRelevantMid intentRelevantMid or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIntentRelevantMid(java.util.List<java.lang.String> intentRelevantMid) {
    this.intentRelevantMid = intentRelevantMid;
    return this;
  }

  /**
   * Whether the interpretation was generated using similar queries in POSTREF. In case POSTREF_AQUA
   * generated the same entity-attribute interpretation, this is still set to true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCloseInterpretation() {
    return isCloseInterpretation;
  }

  /**
   * Whether the interpretation was generated using similar queries in POSTREF. In case POSTREF_AQUA
   * generated the same entity-attribute interpretation, this is still set to true.
   * @param isCloseInterpretation isCloseInterpretation or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIsCloseInterpretation(java.lang.Boolean isCloseInterpretation) {
    this.isCloseInterpretation = isCloseInterpretation;
    return this;
  }

  /**
   * Denotes whether this is an intent being fulfilled from user tapping a disambiguation card. More
   * info in go/cardea-deck.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDisambiguationCardIntent() {
    return isDisambiguationCardIntent;
  }

  /**
   * Denotes whether this is an intent being fulfilled from user tapping a disambiguation card. More
   * info in go/cardea-deck.
   * @param isDisambiguationCardIntent isDisambiguationCardIntent or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIsDisambiguationCardIntent(java.lang.Boolean isDisambiguationCardIntent) {
    this.isDisambiguationCardIntent = isDisambiguationCardIntent;
    return this;
  }

  /**
   * Denotes whether this is a sub-intent of an ambiguous SystemUncertain intent go/intent-
   * disambiguation.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDisambiguationIntent() {
    return isDisambiguationIntent;
  }

  /**
   * Denotes whether this is a sub-intent of an ambiguous SystemUncertain intent go/intent-
   * disambiguation.
   * @param isDisambiguationIntent isDisambiguationIntent or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIsDisambiguationIntent(java.lang.Boolean isDisambiguationIntent) {
    this.isDisambiguationIntent = isDisambiguationIntent;
    return this;
  }

  /**
   * Whether the interpretation was generated from the neural categorical parser.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsNeuralCategoricalInterpretation() {
    return isNeuralCategoricalInterpretation;
  }

  /**
   * Whether the interpretation was generated from the neural categorical parser.
   * @param isNeuralCategoricalInterpretation isNeuralCategoricalInterpretation or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIsNeuralCategoricalInterpretation(java.lang.Boolean isNeuralCategoricalInterpretation) {
    this.isNeuralCategoricalInterpretation = isNeuralCategoricalInterpretation;
    return this;
  }

  /**
   * Denotes this is a sub-intent used for composing an Assistant UI response. The assistant dialog
   * should output ui_composition_shelf in the SystemResponse if it can fulfill the intent. More
   * info in go/davinci-design and go/davinci-di-fulfillment
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsUiCompositionIntent() {
    return isUiCompositionIntent;
  }

  /**
   * Denotes this is a sub-intent used for composing an Assistant UI response. The assistant dialog
   * should output ui_composition_shelf in the SystemResponse if it can fulfill the intent. More
   * info in go/davinci-design and go/davinci-di-fulfillment
   * @param isUiCompositionIntent isUiCompositionIntent or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setIsUiCompositionIntent(java.lang.Boolean isUiCompositionIntent) {
    this.isUiCompositionIntent = isUiCompositionIntent;
    return this;
  }

  /**
   * Information about Local results to be used in the Packer for Local Categorical derived intent
   * deduplication and conformance.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryLocalSignals getLocalSignals() {
    return localSignals;
  }

  /**
   * Information about Local results to be used in the Packer for Local Categorical derived intent
   * deduplication and conformance.
   * @param localSignals localSignals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setLocalSignals(KnowledgeAnswersIntentQueryLocalSignals localSignals) {
    this.localSignals = localSignals;
    return this;
  }

  /**
   * A tag to annotate user's journey (e.g., JourneyFollowCampusUpdates). This will be used for
   * Journey OSRP demo (go/josrp-sprint). !!NOTE!! This field is reserved for Journey OSRP demo, and
   * will be deprecated shortly after its completion. DO NOT USE.
   * @return value or {@code null} for none
   */
  public java.lang.String getOsrpJourneyTag() {
    return osrpJourneyTag;
  }

  /**
   * A tag to annotate user's journey (e.g., JourneyFollowCampusUpdates). This will be used for
   * Journey OSRP demo (go/josrp-sprint). !!NOTE!! This field is reserved for Journey OSRP demo, and
   * will be deprecated shortly after its completion. DO NOT USE.
   * @param osrpJourneyTag osrpJourneyTag or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setOsrpJourneyTag(java.lang.String osrpJourneyTag) {
    this.osrpJourneyTag = osrpJourneyTag;
    return this;
  }

  /**
   * Experiments that caused this FunctionCall to parse, without which this would not have parsed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getParsedDueToExperiment() {
    return parsedDueToExperiment;
  }

  /**
   * Experiments that caused this FunctionCall to parse, without which this would not have parsed.
   * @param parsedDueToExperiment parsedDueToExperiment or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setParsedDueToExperiment(java.util.List<java.lang.String> parsedDueToExperiment) {
    this.parsedDueToExperiment = parsedDueToExperiment;
    return this;
  }

  /**
   * Parsing signals for ranking/filtering.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryParsingSignals getParsingSignals() {
    return parsingSignals;
  }

  /**
   * Parsing signals for ranking/filtering.
   * @param parsingSignals parsingSignals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setParsingSignals(KnowledgeAnswersIntentQueryParsingSignals parsingSignals) {
    this.parsingSignals = parsingSignals;
    return this;
  }

  /**
   * Identifies a score, determined before fulfillment but after grounding. Written by the
   * Prefulfillment Ranker, and used as a signal for ACE Ranking.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPrefulfillmentRankingScore() {
    return prefulfillmentRankingScore;
  }

  /**
   * Identifies a score, determined before fulfillment but after grounding. Written by the
   * Prefulfillment Ranker, and used as a signal for ACE Ranking.
   * @param prefulfillmentRankingScore prefulfillmentRankingScore or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setPrefulfillmentRankingScore(java.lang.Float prefulfillmentRankingScore) {
    this.prefulfillmentRankingScore = prefulfillmentRankingScore;
    return this;
  }

  /**
   * All the input signals to the Prefulfillment Ranker.
   * @return value or {@code null} for none
   */
  public AssistantPrefulfillmentRankerPrefulfillmentSignals getPrefulfillmentSignals() {
    return prefulfillmentSignals;
  }

  /**
   * All the input signals to the Prefulfillment Ranker.
   * @param prefulfillmentSignals prefulfillmentSignals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setPrefulfillmentSignals(AssistantPrefulfillmentRankerPrefulfillmentSignals prefulfillmentSignals) {
    this.prefulfillmentSignals = prefulfillmentSignals;
    return this;
  }

  /**
   * Describes how this intent was resolved via external data (either elsewhere in the query, or in
   * a previous query).
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersDialogReferentialResolution getReferentialResolution() {
    return referentialResolution;
  }

  /**
   * Describes how this intent was resolved via external data (either elsewhere in the query, or in
   * a previous query).
   * @param referentialResolution referentialResolution or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setReferentialResolution(KnowledgeAnswersDialogReferentialResolution referentialResolution) {
    this.referentialResolution = referentialResolution;
    return this;
  }

  /**
   * The id of the summary node if this funcall represents an mdvc interpretation
   * @return value or {@code null} for none
   */
  public java.lang.String getRefxSummaryNodeId() {
    return refxSummaryNodeId;
  }

  /**
   * The id of the summary node if this funcall represents an mdvc interpretation
   * @param refxSummaryNodeId refxSummaryNodeId or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setRefxSummaryNodeId(java.lang.String refxSummaryNodeId) {
    this.refxSummaryNodeId = refxSummaryNodeId;
    return this;
  }

  /**
   * The list of result supports for this FunctionCall.
   * @return value or {@code null} for none
   */
  public java.util.List<UniversalsearchNewPackerKnowledgeResultSupport> getResultSupport() {
    return resultSupport;
  }

  /**
   * The list of result supports for this FunctionCall.
   * @param resultSupport resultSupport or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setResultSupport(java.util.List<UniversalsearchNewPackerKnowledgeResultSupport> resultSupport) {
    this.resultSupport = resultSupport;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRole() {
    return role;
  }

  /**
   * @param role role or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setRole(java.lang.String role) {
    this.role = role;
    return this;
  }

  /**
   * Identifies whether the Prefulfillment Ranker selected this intent for emission. This is needed
   * temporarily while migrating intent emitters from ACE to QUS/PFR. See go/pfr-intent-emitter for
   * more info
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSelectedByPrefulfillmentRanking() {
    return selectedByPrefulfillmentRanking;
  }

  /**
   * Identifies whether the Prefulfillment Ranker selected this intent for emission. This is needed
   * temporarily while migrating intent emitters from ACE to QUS/PFR. See go/pfr-intent-emitter for
   * more info
   * @param selectedByPrefulfillmentRanking selectedByPrefulfillmentRanking or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setSelectedByPrefulfillmentRanking(java.lang.Boolean selectedByPrefulfillmentRanking) {
    this.selectedByPrefulfillmentRanking = selectedByPrefulfillmentRanking;
    return this;
  }

  /**
   * Equivalent shopping ids for the function call.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryShoppingIds getShoppingIds() {
    return shoppingIds;
  }

  /**
   * Equivalent shopping ids for the function call.
   * @param shoppingIds shoppingIds or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setShoppingIds(KnowledgeAnswersIntentQueryShoppingIds shoppingIds) {
    this.shoppingIds = shoppingIds;
    return this;
  }

  /**
   * Additional intents to be used for intent scoring. This field must only be populated when we
   * cannot find a single unified intent. For example, when we compute signals for a LocalEntities
   * function call, this means we could not find a unified intent to capture all the local results.
   * In this case, we add a fallback intent for each local result (e.g. GeoSchool, GeoRestaurant,
   * and GeoBank if those are the results we show).
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQuerySignalComputationFallbackIntent> getSignalsFallbackIntents() {
    return signalsFallbackIntents;
  }

  /**
   * Additional intents to be used for intent scoring. This field must only be populated when we
   * cannot find a single unified intent. For example, when we compute signals for a LocalEntities
   * function call, this means we could not find a unified intent to capture all the local results.
   * In this case, we add a fallback intent for each local result (e.g. GeoSchool, GeoRestaurant,
   * and GeoBank if those are the results we show).
   * @param signalsFallbackIntents signalsFallbackIntents or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals setSignalsFallbackIntents(java.util.List<KnowledgeAnswersIntentQuerySignalComputationFallbackIntent> signalsFallbackIntents) {
    this.signalsFallbackIntents = signalsFallbackIntents;
    return this;
  }

  @Override
  public KnowledgeAnswersIntentQueryFunctionCallSignals set(String fieldName, Object value) {
    return (KnowledgeAnswersIntentQueryFunctionCallSignals) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersIntentQueryFunctionCallSignals clone() {
    return (KnowledgeAnswersIntentQueryFunctionCallSignals) super.clone();
  }

}
