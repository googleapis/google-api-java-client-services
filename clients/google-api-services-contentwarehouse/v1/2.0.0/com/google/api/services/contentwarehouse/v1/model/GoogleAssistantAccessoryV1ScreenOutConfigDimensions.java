/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * This contains physical and logical characteristics about the device (e.g. screen size and DPI,
 * etc).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAssistantAccessoryV1ScreenOutConfigDimensions extends com.google.api.client.json.GenericJson {

  /**
   * Dots (pixels) per inch of the screen.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float screenDpi;

  /**
   * Height of the device's screen in pixels. If 0 or not specified, it's assumed to be the same as
   * screen_width_px. For a square or round screen, it's recommended to leave this field empty as a
   * bandwidth optimization.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer screenHeightPx;

  /**
   * The shape of the device's screen
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String screenShape;

  /**
   * Width of the device's screen in pixels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer screenWidthPx;

  /**
   * Dots (pixels) per inch of the screen.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScreenDpi() {
    return screenDpi;
  }

  /**
   * Dots (pixels) per inch of the screen.
   * @param screenDpi screenDpi or {@code null} for none
   */
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions setScreenDpi(java.lang.Float screenDpi) {
    this.screenDpi = screenDpi;
    return this;
  }

  /**
   * Height of the device's screen in pixels. If 0 or not specified, it's assumed to be the same as
   * screen_width_px. For a square or round screen, it's recommended to leave this field empty as a
   * bandwidth optimization.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getScreenHeightPx() {
    return screenHeightPx;
  }

  /**
   * Height of the device's screen in pixels. If 0 or not specified, it's assumed to be the same as
   * screen_width_px. For a square or round screen, it's recommended to leave this field empty as a
   * bandwidth optimization.
   * @param screenHeightPx screenHeightPx or {@code null} for none
   */
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions setScreenHeightPx(java.lang.Integer screenHeightPx) {
    this.screenHeightPx = screenHeightPx;
    return this;
  }

  /**
   * The shape of the device's screen
   * @return value or {@code null} for none
   */
  public java.lang.String getScreenShape() {
    return screenShape;
  }

  /**
   * The shape of the device's screen
   * @param screenShape screenShape or {@code null} for none
   */
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions setScreenShape(java.lang.String screenShape) {
    this.screenShape = screenShape;
    return this;
  }

  /**
   * Width of the device's screen in pixels.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getScreenWidthPx() {
    return screenWidthPx;
  }

  /**
   * Width of the device's screen in pixels.
   * @param screenWidthPx screenWidthPx or {@code null} for none
   */
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions setScreenWidthPx(java.lang.Integer screenWidthPx) {
    this.screenWidthPx = screenWidthPx;
    return this;
  }

  @Override
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions set(String fieldName, Object value) {
    return (GoogleAssistantAccessoryV1ScreenOutConfigDimensions) super.set(fieldName, value);
  }

  @Override
  public GoogleAssistantAccessoryV1ScreenOutConfigDimensions clone() {
    return (GoogleAssistantAccessoryV1ScreenOutConfigDimensions) super.clone();
  }

}
