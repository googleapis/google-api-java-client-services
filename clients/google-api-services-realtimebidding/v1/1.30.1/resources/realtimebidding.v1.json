{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/realtime-bidding": {
          "description": "See, create, edit, and delete your Authorized Buyers and Open Bidding account entities"
        }
      }
    }
  },
  "mtlsRootUrl": "https://realtimebidding.mtls.googleapis.com/",
  "rootUrl": "https://realtimebidding.googleapis.com/",
  "batchPath": "batch",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "resources": {
    "bidders": {
      "resources": {
        "creatives": {
          "methods": {
            "watch": {
              "flatPath": "v1/bidders/{biddersId}/creatives:watch",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^bidders/[^/]+$",
                  "description": "Required. To watch all creatives pertaining to the bidder and all its child seat accounts, the bidder must follow the pattern `bidders/{bidderAccountId}`."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "WatchCreativesRequest"
              },
              "response": {
                "$ref": "WatchCreativesResponse"
              },
              "description": "Watches all creatives pertaining to a bidder. It is sufficient to invoke this endpoint once per bidder. A Pub/Sub topic will be created and notifications will be pushed to the topic when any of the bidder's creatives change status. All of the bidder's service accounts will have access to read from the topic. Subsequent invocations of this method will return the existing Pub/Sub configuration.",
              "path": "v1/{+parent}/creatives:watch",
              "id": "realtimebidding.bidders.creatives.watch",
              "httpMethod": "POST"
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "id": "realtimebidding.bidders.creatives.list",
              "path": "v1/{+parent}/creatives",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`.",
                  "required": true,
                  "pattern": "^bidders/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "view": {
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "type": "string",
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive."
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Lists creatives.",
              "flatPath": "v1/bidders/{biddersId}/creatives"
            }
          }
        }
      }
    },
    "buyers": {
      "methods": {
        "getRemarketingTag": {
          "response": {
            "$ref": "GetRemarketingTagResponse"
          },
          "path": "v1/{+name}:getRemarketingTag",
          "id": "realtimebidding.buyers.getRemarketingTag",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "flatPath": "v1/buyers/{buyersId}:getRemarketingTag",
          "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.",
          "parameters": {
            "name": {
              "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name.",
              "required": true,
              "pattern": "^buyers/[^/]+$",
              "type": "string",
              "location": "path"
            }
          }
        }
      },
      "resources": {
        "creatives": {
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "request": {
                "$ref": "Creative"
              },
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}",
              "id": "realtimebidding.buyers.creatives.patch",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "name": {
                  "description": "Name of the creative to update. See creative.name.",
                  "required": true,
                  "type": "string",
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Field mask to use for partial in-place updates.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Creative"
              },
              "path": "v1/{+name}",
              "description": "Updates a creative.",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "id": "realtimebidding.buyers.creatives.list",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "description": "Lists creatives.",
              "path": "v1/{+parent}/creatives",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/buyers/{buyersId}/creatives",
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method."
                },
                "view": {
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`.",
                  "type": "string",
                  "pattern": "^buyers/[^/]+$"
                }
              }
            },
            "get": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "GET",
              "parameters": {
                "view": {
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the creative to retrieve. See creative.name.",
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.buyers.creatives.get",
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}",
              "description": "Gets a creative."
            },
            "create": {
              "flatPath": "v1/buyers/{buyersId}/creatives",
              "httpMethod": "POST",
              "request": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "realtimebidding.buyers.creatives.create",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^buyers/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the parent buyer that the new creative belongs to that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns a creative. For a bidder accessing creatives on behalf of a child seat buyer, `{buyerAccountId}` should represent the account ID of the child seat buyer."
                }
              },
              "response": {
                "$ref": "Creative"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "description": "Creates a creative.",
              "path": "v1/{+parent}/creatives"
            }
          }
        },
        "userLists": {
          "methods": {
            "create": {
              "id": "realtimebidding.buyers.userLists.create",
              "httpMethod": "POST",
              "request": {
                "$ref": "UserList"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent buyer of the user list to be retrieved that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^buyers/[^/]+$"
                }
              },
              "description": "Create a new user list.",
              "response": {
                "$ref": "UserList"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/userLists",
              "flatPath": "v1/buyers/{buyersId}/userLists"
            },
            "getRemarketingTag": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+name}:getRemarketingTag",
              "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.",
              "response": {
                "$ref": "GetRemarketingTagResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:getRemarketingTag",
              "id": "realtimebidding.buyers.userLists.getRemarketingTag",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name.",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$"
                }
              }
            },
            "update": {
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list."
                }
              },
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "path": "v1/{+name}",
              "request": {
                "$ref": "UserList"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Update the given user list. Only user lists with URLRestrictions can be updated.",
              "id": "realtimebidding.buyers.userLists.update",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "response": {
                "$ref": "UserList"
              }
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the user list to be retrieved. See UserList.name.",
                  "type": "string",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "path": "v1/{+name}",
              "response": {
                "$ref": "UserList"
              },
              "description": "Gets a user list by its name.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.buyers.userLists.get"
            },
            "open": {
              "description": "Change the status of a user list to OPEN. This allows new users to be added to the user list.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "OpenUserListRequest"
              },
              "path": "v1/{+name}:open",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the user list to open. See UserList.name",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "UserList"
              },
              "id": "realtimebidding.buyers.userLists.open",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:open"
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The number of results to return per page.",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent buyer for the user lists to be returned that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^buyers/[^/]+$"
                },
                "pageToken": {
                  "description": "Continuation page token (as received from a previous response).",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/buyers/{buyersId}/userLists",
              "description": "Lists the user lists visible to the current user.",
              "response": {
                "$ref": "ListUserListsResponse"
              },
              "id": "realtimebidding.buyers.userLists.list",
              "path": "v1/{+parent}/userLists"
            },
            "close": {
              "request": {
                "$ref": "CloseUserListRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the user list to close. See UserList.name"
                }
              },
              "id": "realtimebidding.buyers.userLists.close",
              "description": "Change the status of a user list to CLOSED. This prevents new users from being added to the user list.",
              "path": "v1/{+name}:close",
              "response": {
                "$ref": "UserList"
              },
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:close"
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://realtimebidding.googleapis.com/",
  "basePath": "",
  "title": "Real-time Bidding API",
  "canonicalName": "Real-time Bidding",
  "description": "Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "revision": "20200822",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "servicePath": "",
  "name": "realtimebidding",
  "id": "realtimebidding:v1",
  "ownerName": "Google",
  "schemas": {
    "ListUserListsResponse": {
      "description": "The list user list response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The continuation page token to send back to the server in a subsequent request. Due to a currently known issue, it is recommended that the caller keep invoking the list method till the time a next page token is not returned (even if the result set is empty)."
        },
        "userLists": {
          "type": "array",
          "description": "List of user lists from the search.",
          "items": {
            "$ref": "UserList"
          }
        }
      },
      "id": "ListUserListsResponse",
      "type": "object"
    },
    "GetRemarketingTagResponse": {
      "type": "object",
      "description": "Response for a request to get remarketing tag.",
      "properties": {
        "snippet": {
          "description": "A HTML tag that can be placed on the advertiser's page to add users to a user list. For more information and code samples on using snippet on your website refer to [Tag your site for remarketing]( https://support.google.com/google-ads/answer/2476688).",
          "type": "string"
        }
      },
      "id": "GetRemarketingTagResponse"
    },
    "DownloadSizeEvidence": {
      "description": "Total download size and URL-level download size breakdown for resources in a creative.",
      "id": "DownloadSizeEvidence",
      "properties": {
        "topUrlDownloadSizeBreakdowns": {
          "items": {
            "$ref": "UrlDownloadSize"
          },
          "description": "Download size broken down by URLs with the top download size.",
          "type": "array"
        },
        "totalDownloadSizeKb": {
          "description": "Total download size (in kilobytes) for all the resources in the creative.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "OpenUserListRequest": {
      "id": "OpenUserListRequest",
      "properties": {},
      "type": "object",
      "description": "A request to open a specified user list."
    },
    "DomainCallEvidence": {
      "properties": {
        "totalHttpCallCount": {
          "description": "The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.",
          "type": "integer",
          "format": "int32"
        },
        "topHttpCallDomains": {
          "items": {
            "$ref": "DomainCalls"
          },
          "description": "Breakdown of the most frequent domains called via HTTP by the creative.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Number of HTTP calls made by a creative, broken down by domain.",
      "id": "DomainCallEvidence"
    },
    "ServingStatus": {
      "properties": {
        "status": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "Creative is pending review.",
            "Creative cannot serve.",
            "Creative is approved."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING_REVIEW",
            "DISAPPROVED",
            "APPROVED"
          ],
          "type": "string",
          "description": "Serving status for the given transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Can be used to filter the response of the creatives.list method."
        },
        "topics": {
          "items": {
            "$ref": "PolicyTopicEntry"
          },
          "type": "array",
          "description": "Policy topics related to the serving decision for this transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Topics may be present only if status is DISAPPROVED."
        }
      },
      "type": "object",
      "id": "ServingStatus",
      "description": "Serving status of the creative for a transaction type or a region."
    },
    "PolicyTopicEntry": {
      "type": "object",
      "properties": {
        "policyTopic": {
          "description": "Policy topic this entry refers to. For example, \"ALCOHOL\", \"TRADEMARKS_IN_AD_TEXT\", or \"DESTINATION_NOT_WORKING\". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method",
          "type": "string"
        },
        "evidences": {
          "type": "array",
          "description": "Pieces of evidence associated with this policy topic entry.",
          "items": {
            "$ref": "PolicyTopicEvidence"
          }
        },
        "helpCenterUrl": {
          "type": "string",
          "description": "URL of the help center article describing this policy topic."
        }
      },
      "description": "Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation.",
      "id": "PolicyTopicEntry"
    },
    "HttpCallEvidence": {
      "properties": {
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "URLs of HTTP calls made by the creative."
        }
      },
      "id": "HttpCallEvidence",
      "type": "object",
      "description": "HTTP calls made by a creative that resulted in policy violations."
    },
    "UrlDownloadSize": {
      "id": "UrlDownloadSize",
      "type": "object",
      "description": "The URL-level breakdown for the download size.",
      "properties": {
        "downloadSizeKb": {
          "format": "int32",
          "type": "integer",
          "description": "Download size of the URL in kilobytes."
        },
        "normalizedUrl": {
          "description": "The normalized URL with query parameters and fragment removed.",
          "type": "string"
        }
      }
    },
    "Image": {
      "properties": {
        "url": {
          "description": "The URL of the image.",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "description": "Image width in pixels.",
          "type": "integer"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Image height in pixels."
        }
      },
      "type": "object",
      "id": "Image",
      "description": "An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved."
    },
    "Creative": {
      "id": "Creative",
      "description": "A creative and its classification data.",
      "type": "object",
      "properties": {
        "impressionTrackingUrls": {
          "description": "The set of URLs to be called to record an impression.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "apiUpdateTime": {
          "description": "Output only. The last update timestamp of the creative via API.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "dealIds": {
          "type": "array",
          "description": "Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "video": {
          "$ref": "VideoContent",
          "description": "A video creative."
        },
        "adChoicesDestinationUrl": {
          "type": "string",
          "description": "The link to AdChoices destination page. This is only supported for native ads."
        },
        "accountId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check."
        },
        "declaredVendorIds": {
          "description": "IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "declaredRestrictedCategories": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ],
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ]
          },
          "description": "All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method."
        },
        "declaredClickThroughUrls": {
          "description": "The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creativeId": {
          "type": "string",
          "description": "Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes."
        },
        "agencyId": {
          "format": "int64",
          "description": "The agency ID for this creative.",
          "type": "string"
        },
        "native": {
          "$ref": "NativeContent",
          "description": "A native creative."
        },
        "html": {
          "$ref": "HtmlContent",
          "description": "An HTML creative."
        },
        "declaredAttributes": {
          "type": "array",
          "description": "All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "items": {
            "type": "string",
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ]
          }
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "restrictedCategories": {
          "description": "All restricted categories for the ads that may be shown from this creative.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ],
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ]
          }
        },
        "creativeServingDecision": {
          "$ref": "CreativeServingDecision",
          "readOnly": true,
          "description": "Output only. Top level status and detected attributes of a creative (for example domain, language, advertiser, product category, etc.) that affect whether (status) and where (context) a creative will be allowed to serve."
        },
        "version": {
          "readOnly": true,
          "description": "Output only. The version of this creative. Version for a new creative is 1 and it increments during subsequent creative updates.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response."
        },
        "creativeFormat": {
          "enum": [
            "CREATIVE_FORMAT_UNSPECIFIED",
            "HTML",
            "VIDEO",
            "NATIVE"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The format is unknown.",
            "HTML creative.",
            "Video creative.",
            "Native creative."
          ],
          "description": "Output only. The format of this creative. Can be used to filter the response of the creatives.list method."
        }
      }
    },
    "DestinationNotWorkingEvidence": {
      "description": "Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.",
      "id": "DestinationNotWorkingEvidence",
      "properties": {
        "expandedUrl": {
          "description": "The full non-working URL.",
          "type": "string"
        },
        "dnsError": {
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "DNS name was not found.",
            "An internal issue occurred when Google's crawler tried to resolve the DNS entry. This is a Google-internal issue and may not be the result of an issue with the landing page."
          ],
          "enum": [
            "DNS_ERROR_UNSPECIFIED",
            "ERROR_DNS",
            "GOOGLE_CRAWLER_DNS_ISSUE"
          ],
          "description": "DNS lookup errors."
        },
        "lastCheckTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Approximate time when the ad destination was last checked."
        },
        "httpError": {
          "type": "integer",
          "description": "HTTP error code (e.g. 404 or 5xx)",
          "format": "int32"
        },
        "invalidPage": {
          "description": "Page was crawled successfully, but was detected as either a page with no content or an error page.",
          "enum": [
            "INVALID_PAGE_UNSPECIFIED",
            "EMPTY_OR_ERROR_PAGE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Page was empty or had an error."
          ]
        },
        "platform": {
          "type": "string",
          "description": "Platform of the non-working URL.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "The personal computer platform.",
            "The Android platform.",
            "The iOS platform."
          ],
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "PERSONAL_COMPUTER",
            "ANDROID",
            "IOS"
          ]
        },
        "urlRejected": {
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "URL rejected because of a malformed request.",
            "URL rejected because of a malformed URL.",
            "URL rejected because of unknown reason."
          ],
          "description": "Rejected because of malformed URLs or invalid requests.",
          "enum": [
            "URL_REJECTED_UNSPECIFIED",
            "BAD_REQUEST",
            "MALFORMED_URL",
            "URL_REJECTED_UNKNOWN"
          ]
        },
        "redirectionError": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "Too many redirect hops.",
            "Got a redirect but it was invalid.",
            "Got a redirect but it was empty.",
            "Unknown redirect error."
          ],
          "description": "HTTP redirect chain error.",
          "type": "string",
          "enum": [
            "REDIRECTION_ERROR_UNSPECIFIED",
            "TOO_MANY_REDIRECTS",
            "INVALID_REDIRECT",
            "EMPTY_REDIRECT",
            "REDIRECT_ERROR_UNKNOWN"
          ]
        }
      },
      "type": "object"
    },
    "PolicyTopicEvidence": {
      "description": "Evidence associated with a policy topic entry.",
      "id": "PolicyTopicEvidence",
      "properties": {
        "destinationUrl": {
          "$ref": "DestinationUrlEvidence",
          "description": "URL of the actual landing page."
        },
        "httpCall": {
          "description": "HTTP calls made by the creative that resulted in policy violations.",
          "$ref": "HttpCallEvidence"
        },
        "destinationNotWorking": {
          "description": "The creative's destination URL did not function properly or was incorrectly set up.",
          "$ref": "DestinationNotWorkingEvidence"
        },
        "destinationNotCrawlable": {
          "$ref": "DestinationNotCrawlableEvidence",
          "description": "The creative's destination URL was not crawlable by Google."
        },
        "httpCookie": {
          "description": "Evidence for HTTP cookie-related policy violations.",
          "$ref": "HttpCookieEvidence"
        },
        "domainCall": {
          "$ref": "DomainCallEvidence",
          "description": "Number of HTTP calls made by the creative, broken down by domain."
        },
        "downloadSize": {
          "$ref": "DownloadSizeEvidence",
          "description": "Total download size and URL-level download size breakdown for resources in a creative."
        }
      },
      "type": "object"
    },
    "Date": {
      "type": "object",
      "properties": {
        "month": {
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant.",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year."
        }
      },
      "id": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. This can represent: * A full date, with non-zero year, month and day values * A month and day value, with a zero year, e.g. an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, e.g. a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."
    },
    "HttpCookieEvidence": {
      "properties": {
        "maxCookieCount": {
          "format": "int32",
          "type": "integer",
          "description": "The largest number of cookies set by a creative. If this field is set, cookie_names above will be set to the cookie names of top domains with the largest number of cookies. This field will only be set for TOO_MANY_COOKIES policy."
        },
        "cookieNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy, this will be the cookie names of top domains with the largest number of cookies. For other policies, this will be all the cookie names that violate the policy."
        }
      },
      "id": "HttpCookieEvidence",
      "type": "object",
      "description": "Evidence for HTTP cookie-related policy violations."
    },
    "DomainCalls": {
      "id": "DomainCalls",
      "description": "The number of HTTP calls made to the given domain.",
      "properties": {
        "httpCallCount": {
          "format": "int32",
          "description": "Number of HTTP calls made to the domain.",
          "type": "integer"
        },
        "domain": {
          "description": "The domain name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreativeServingDecision": {
      "description": "Top level status and detected attributes of a creative.",
      "properties": {
        "detectedClickThroughUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method."
        },
        "lastStatusUpdate": {
          "format": "google-datetime",
          "description": "The last time the creative status was updated. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "detectedAttributes": {
          "type": "array",
          "description": "Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "items": {
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "type": "string",
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ]
          }
        },
        "openAuctionServingStatus": {
          "$ref": "ServingStatus",
          "description": "Status of this creative when bidding in open auction, private auction, or auction packages (outside of Russia and China)."
        },
        "detectedSensitiveCategories": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array"
        },
        "russiaServingStatus": {
          "$ref": "ServingStatus",
          "description": "The serving status of this creative in Russia. When approved or disapproved, this status applies to both deals and open auction in Russia. When pending review, this creative is allowed to serve for deals but not for open auction."
        },
        "adTechnologyProviders": {
          "$ref": "AdTechnologyProviders",
          "description": "The detected ad technology providers."
        },
        "detectedLanguages": {
          "items": {
            "type": "string"
          },
          "description": "The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.",
          "type": "array"
        },
        "detectedDomains": {
          "type": "array",
          "description": "The detected domains for this creative.",
          "items": {
            "type": "string"
          }
        },
        "chinaServingStatus": {
          "description": "The serving status of this creative in China. When approved or disapproved, this status applies to both deals and open auction in China. When pending review, this creative is allowed to serve for deals but not for open auction.",
          "$ref": "ServingStatus"
        },
        "detectedAdvertisers": {
          "items": {
            "$ref": "AdvertiserAndBrand"
          },
          "type": "array",
          "description": "Detected advertisers and brands."
        },
        "dealsServingStatus": {
          "$ref": "ServingStatus",
          "description": "Status of this creative when bidding on PG and PD deals (outside of Russia and China)."
        },
        "detectedProductCategories": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.",
          "type": "array"
        },
        "detectedVendorIds": {
          "description": "IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        }
      },
      "id": "CreativeServingDecision",
      "type": "object"
    },
    "VideoMetadata": {
      "id": "VideoMetadata",
      "type": "object",
      "properties": {
        "vastVersion": {
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "VAST 1.0",
            "VAST 2.0",
            "VAST 3.0",
            "VAST 4.0"
          ],
          "description": "The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.",
          "enum": [
            "VAST_VERSION_UNSPECIFIED",
            "VAST_VERSION_1_0",
            "VAST_VERSION_2_0",
            "VAST_VERSION_3_0",
            "VAST_VERSION_4_0"
          ]
        },
        "mediaFiles": {
          "type": "array",
          "description": "The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.",
          "items": {
            "$ref": "MediaFile"
          }
        },
        "skipOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method."
        },
        "isVpaid": {
          "type": "boolean",
          "description": "Is this a VPAID ad? Can be used to filter the response of the creatives.list method."
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "The duration of the ad. Can be used to filter the response of the creatives.list method."
        },
        "isValidVast": {
          "type": "boolean",
          "description": "Is this a valid VAST ad? Can be used to filter the response of the creatives.list method."
        }
      },
      "description": "Video metadata for a creative."
    },
    "AdTechnologyProviders": {
      "type": "object",
      "id": "AdTechnologyProviders",
      "description": "Detected ad technology provider information.",
      "properties": {
        "hasUnidentifiedProvider": {
          "type": "boolean",
          "description": "Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction."
        },
        "detectedProviderIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the `BidRequest.adslot.consented_providers_settings.consented_providers` field on the [Google bid protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) and the `BidRequest.user.ext.consented_providers_settings.consented_providers` field on the [OpenRTB protocol](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto), and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction.",
          "type": "array"
        }
      }
    },
    "ListCreativesResponse": {
      "description": "A response for listing creatives.",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the ListCreativesRequest.pageToken field in the subsequent call to the `ListCreatives` method to retrieve the next page of results.",
          "type": "string"
        },
        "creatives": {
          "description": "The list of creatives.",
          "type": "array",
          "items": {
            "$ref": "Creative"
          }
        }
      },
      "type": "object",
      "id": "ListCreativesResponse"
    },
    "HtmlContent": {
      "properties": {
        "snippet": {
          "type": "string",
          "description": "The HTML snippet that displays the ad when inserted in the web page."
        },
        "width": {
          "description": "The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "HTML content for a creative.",
      "type": "object",
      "id": "HtmlContent"
    },
    "DestinationUrlEvidence": {
      "properties": {
        "destinationUrl": {
          "type": "string",
          "description": "The full landing page URL of the destination."
        }
      },
      "id": "DestinationUrlEvidence",
      "description": "The full landing page URL of the destination.",
      "type": "object"
    },
    "AdvertiserAndBrand": {
      "type": "object",
      "description": "Detected advertiser and brand information.",
      "id": "AdvertiserAndBrand",
      "properties": {
        "advertiserId": {
          "description": "See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
          "format": "int64",
          "type": "string"
        },
        "brandId": {
          "description": "Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "int64"
        },
        "brandName": {
          "description": "Brand name. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "advertiserName": {
          "description": "Advertiser name. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        }
      }
    },
    "CloseUserListRequest": {
      "type": "object",
      "description": "A request to close a specified user list.",
      "id": "CloseUserListRequest",
      "properties": {}
    },
    "WatchCreativesRequest": {
      "description": "A request to receive push notifications when any of the creatives belonging to the bidder changes status.",
      "properties": {},
      "id": "WatchCreativesRequest",
      "type": "object"
    },
    "VideoContent": {
      "type": "object",
      "properties": {
        "videoMetadata": {
          "$ref": "VideoMetadata",
          "description": "Output only. Video metadata.",
          "readOnly": true
        },
        "videoUrl": {
          "description": "The URL to fetch a video ad.",
          "type": "string"
        },
        "videoVastXml": {
          "description": "The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.",
          "type": "string"
        }
      },
      "description": "Video content for a creative.",
      "id": "VideoContent"
    },
    "MediaFile": {
      "properties": {
        "bitrate": {
          "description": "Bitrate of the video file, in Kbps. Can be used to filter the response of the creatives.list method.",
          "format": "int64",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Flash container.",
            "WebM container assuming VP9 codec.",
            "MPEG-4 container typically with H.264 codec.",
            "Ogg container assuming Theora codec.",
            "Video files hosted on YouTube.",
            "Windows Media Video Codec.",
            "3GPP container format used on 3G phones.",
            "Quicktime container format.",
            "Shockwave Flash (used for VPAID ads).",
            "Properties of VAST served by consumer survey.",
            "JavaScript (used for VPAID ads).",
            "Silverlight (used for VPAID ads).",
            "HLS/M3U8.",
            "DASH.",
            "MPEG-4 audio format.",
            "MPEG-3 audio format.",
            "Ogg audio format"
          ],
          "description": "The MIME type of this media file. Can be used to filter the response of the creatives.list method.",
          "enum": [
            "VIDEO_MIME_TYPE_UNSPECIFIED",
            "MIME_VIDEO_XFLV",
            "MIME_VIDEO_WEBM",
            "MIME_VIDEO_MP4",
            "MIME_VIDEO_OGG",
            "MIME_VIDEO_YT_HOSTED",
            "MIME_VIDEO_X_MS_WMV",
            "MIME_VIDEO_3GPP",
            "MIME_VIDEO_MOV",
            "MIME_APPLICATION_SWF",
            "MIME_APPLICATION_SURVEY",
            "MIME_APPLICATION_JAVASCRIPT",
            "MIME_APPLICATION_SILVERLIGHT",
            "MIME_APPLICATION_MPEGURL",
            "MIME_APPLICATION_MPEGDASH",
            "MIME_AUDIO_MP4A",
            "MIME_AUDIO_MP3",
            "MIME_AUDIO_OGG"
          ]
        }
      },
      "id": "MediaFile",
      "type": "object",
      "description": "Information about each media file in the VAST."
    },
    "UrlRestriction": {
      "id": "UrlRestriction",
      "type": "object",
      "properties": {
        "startDate": {
          "$ref": "Date",
          "description": "Start date (if specified) of the URL restriction."
        },
        "url": {
          "description": "Required. The URL to use for applying the restriction on the user list.",
          "type": "string"
        },
        "restrictionType": {
          "enum": [
            "RESTRICTION_TYPE_UNSPECIFIED",
            "CONTAINS",
            "EQUALS",
            "STARTS_WITH",
            "ENDS_WITH",
            "DOES_NOT_EQUAL",
            "DOES_NOT_CONTAIN",
            "DOES_NOT_START_WITH",
            "DOES_NOT_END_WITH"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "The tag URL (as recorded by the pixel callback) contains the specified URL.",
            "The tag URL (as recorded by the pixel callback) exactly matches the specified URL.",
            "The tag URL (as recorded by the pixel callback) starts with the specified URL.",
            "The tag URL (as recorded by the pixel callback) ends with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not equal the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not contain the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not start with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not end with the specified URL."
          ],
          "type": "string",
          "description": "The restriction type for the specified URL."
        },
        "endDate": {
          "$ref": "Date",
          "description": "End date (if specified) of the URL restriction. End date should be later than the start date for the date range to be valid."
        }
      },
      "description": "Represents the URL restriction (for the URL captured by the pixel callback) for a user list."
    },
    "WatchCreativesResponse": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "The Pub/Sub topic that will be used to publish creative serving status notifications. This would be of the format `projects/{project_id}/topics/{topic_id}`."
        },
        "subscription": {
          "type": "string",
          "description": "The Pub/Sub subscription that can be used to pull creative status notifications. This would be of the format `projects/{project_id}/subscriptions/{subscription_id}`. Subscription is created with pull delivery. All service accounts belonging to the bidder will have read access to this subscription. Subscriptions that are inactive for more than 90 days will be disabled. Please use watchCreatives to re-enable the subscription."
        }
      },
      "description": "A response for the request to receive push notification when a bidder's creatives change status.",
      "id": "WatchCreativesResponse"
    },
    "NativeContent": {
      "type": "object",
      "description": "Native content for a creative.",
      "properties": {
        "body": {
          "description": "A long description of the ad.",
          "type": "string"
        },
        "clickTrackingUrl": {
          "type": "string",
          "description": "The URL to use for click tracking."
        },
        "starRating": {
          "format": "double",
          "type": "number",
          "description": "The app rating in the app store. Must be in the range [0-5]."
        },
        "appIcon": {
          "$ref": "Image",
          "description": "The app icon, for app download ads."
        },
        "image": {
          "description": "A large image.",
          "$ref": "Image"
        },
        "videoUrl": {
          "description": "The URL to fetch a native video ad.",
          "type": "string"
        },
        "clickLinkUrl": {
          "description": "The URL that the browser/SDK will load when the user clicks the ad.",
          "type": "string"
        },
        "logo": {
          "$ref": "Image",
          "description": "A smaller image, for the advertiser's logo."
        },
        "headline": {
          "description": "A short title for the ad.",
          "type": "string"
        },
        "advertiserName": {
          "type": "string",
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative."
        },
        "callToAction": {
          "type": "string",
          "description": "A label for the button that the user is supposed to click."
        },
        "priceDisplayText": {
          "type": "string",
          "description": "The price of the promoted app including currency info."
        }
      },
      "id": "NativeContent"
    },
    "DestinationNotCrawlableEvidence": {
      "id": "DestinationNotCrawlableEvidence",
      "description": "Evidence that the creative's destination URL was not crawlable by Google.",
      "properties": {
        "crawledUrl": {
          "type": "string",
          "description": "Destination URL that was attempted to be crawled."
        },
        "crawlTime": {
          "description": "Approximate time of the crawl.",
          "type": "string",
          "format": "google-datetime"
        },
        "reason": {
          "type": "string",
          "description": "Reason of destination not crawlable.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Site's robots exclusion file (e.g., robots.txt) was unreachable.",
            "Timed out reading site's robots exclusion file (e.g., robots.txt).",
            "Crawler was disallowed by the site's robots exclusion file (e.g., robots.txt).",
            "Unknown reason."
          ],
          "enum": [
            "REASON_UNSPECIFIED",
            "UNREACHABLE_ROBOTS",
            "TIMEOUT_ROBOTS",
            "ROBOTED_DENIED",
            "UNKNOWN"
          ]
        }
      },
      "type": "object"
    },
    "UserList": {
      "type": "object",
      "description": "Represents an Authorized Buyers user list. Authorized Buyers can create/update/list user lists. Once a user list is created in the system, Authorized Buyers can add users to the user list using the bulk uploader API. Alternatively, users can be added by hosting a tag on the advertiser's page.",
      "properties": {
        "membershipDurationDays": {
          "format": "int64",
          "type": "string",
          "description": "Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive."
        },
        "displayName": {
          "description": "Required. Display name of the user list. This must be unique across all user lists for a given account.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Output only. The status of the user list. A new user list starts out as open.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "OPEN",
            "CLOSED"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "New users can be added to the user list.",
            "New users cannot be added to the user list."
          ],
          "readOnly": true
        },
        "name": {
          "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description for the user list."
        },
        "urlRestriction": {
          "$ref": "UrlRestriction",
          "description": "Required. The URL restriction for the user list."
        }
      },
      "id": "UserList"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/",
  "version_module": true,
  "version": "v1",
  "fullyEncodeReservedExpansion": true
}
