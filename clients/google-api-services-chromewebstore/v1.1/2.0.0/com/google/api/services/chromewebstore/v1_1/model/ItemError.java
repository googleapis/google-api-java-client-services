/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromewebstore.v1_1.model;

/**
 * Error of the item
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Web Store API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ItemError extends com.google.api.client.json.GenericJson {

  /**
   * The error code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("error_code")
  private java.lang.String errorCode;

  /**
   * The human-readable detail message of the error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("error_detail")
  private java.lang.String errorDetail;

  /**
   * The error code.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorCode() {
    return errorCode;
  }

  /**
   * The error code.
   * @param errorCode errorCode or {@code null} for none
   */
  public ItemError setErrorCode(java.lang.String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * The human-readable detail message of the error.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorDetail() {
    return errorDetail;
  }

  /**
   * The human-readable detail message of the error.
   * @param errorDetail errorDetail or {@code null} for none
   */
  public ItemError setErrorDetail(java.lang.String errorDetail) {
    this.errorDetail = errorDetail;
    return this;
  }

  @Override
  public ItemError set(String fieldName, Object value) {
    return (ItemError) super.set(fieldName, value);
  }

  @Override
  public ItemError clone() {
    return (ItemError) super.clone();
  }

}
