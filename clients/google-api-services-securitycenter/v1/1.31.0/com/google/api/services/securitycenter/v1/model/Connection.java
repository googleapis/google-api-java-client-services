/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1.model;

/**
 * Contains information about the IP connection associated with the finding.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Connection extends com.google.api.client.json.GenericJson {

  /**
   * Destination IP address. Not present for sockets that are listening and not connected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationIp;

  /**
   * Destination port. Not present for sockets that are listening and not connected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer destinationPort;

  /**
   * IANA Internet Protocol Number such as TCP(6) and UDP(17).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protocol;

  /**
   * Source IP address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceIp;

  /**
   * Source port.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sourcePort;

  /**
   * Destination IP address. Not present for sockets that are listening and not connected.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationIp() {
    return destinationIp;
  }

  /**
   * Destination IP address. Not present for sockets that are listening and not connected.
   * @param destinationIp destinationIp or {@code null} for none
   */
  public Connection setDestinationIp(java.lang.String destinationIp) {
    this.destinationIp = destinationIp;
    return this;
  }

  /**
   * Destination port. Not present for sockets that are listening and not connected.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDestinationPort() {
    return destinationPort;
  }

  /**
   * Destination port. Not present for sockets that are listening and not connected.
   * @param destinationPort destinationPort or {@code null} for none
   */
  public Connection setDestinationPort(java.lang.Integer destinationPort) {
    this.destinationPort = destinationPort;
    return this;
  }

  /**
   * IANA Internet Protocol Number such as TCP(6) and UDP(17).
   * @return value or {@code null} for none
   */
  public java.lang.String getProtocol() {
    return protocol;
  }

  /**
   * IANA Internet Protocol Number such as TCP(6) and UDP(17).
   * @param protocol protocol or {@code null} for none
   */
  public Connection setProtocol(java.lang.String protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Source IP address.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceIp() {
    return sourceIp;
  }

  /**
   * Source IP address.
   * @param sourceIp sourceIp or {@code null} for none
   */
  public Connection setSourceIp(java.lang.String sourceIp) {
    this.sourceIp = sourceIp;
    return this;
  }

  /**
   * Source port.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSourcePort() {
    return sourcePort;
  }

  /**
   * Source port.
   * @param sourcePort sourcePort or {@code null} for none
   */
  public Connection setSourcePort(java.lang.Integer sourcePort) {
    this.sourcePort = sourcePort;
    return this;
  }

  @Override
  public Connection set(String fieldName, Object value) {
    return (Connection) super.set(fieldName, value);
  }

  @Override
  public Connection clone() {
    return (Connection) super.clone();
  }

}
