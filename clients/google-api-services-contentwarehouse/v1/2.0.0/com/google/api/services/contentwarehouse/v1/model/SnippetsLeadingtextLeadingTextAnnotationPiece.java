/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for SnippetsLeadingtextLeadingTextAnnotationPiece.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SnippetsLeadingtextLeadingTextAnnotationPiece extends com.google.api.client.json.GenericJson {

  /**
   * A piece of leading text is text within [begin, end). For example, a document is "ABCDEF". If we
   * want to set leading text as 'CD', the value of begin is byte offset of 'C', the value of end is
   * byte offset of 'E'. end == -1 means to the end of document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer begin;

  /**
   * UTF8 text, for alignment when using reusableinfo. Those text are not available in docjoins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String beginText;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer end;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String endText;

  /**
   * Matched dom path string for debugging.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchedPattern;

  /**
   * A piece of leading text is text within [begin, end). For example, a document is "ABCDEF". If we
   * want to set leading text as 'CD', the value of begin is byte offset of 'C', the value of end is
   * byte offset of 'E'. end == -1 means to the end of document.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getBegin() {
    return begin;
  }

  /**
   * A piece of leading text is text within [begin, end). For example, a document is "ABCDEF". If we
   * want to set leading text as 'CD', the value of begin is byte offset of 'C', the value of end is
   * byte offset of 'E'. end == -1 means to the end of document.
   * @param begin begin or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextAnnotationPiece setBegin(java.lang.Integer begin) {
    this.begin = begin;
    return this;
  }

  /**
   * UTF8 text, for alignment when using reusableinfo. Those text are not available in docjoins.
   * @return value or {@code null} for none
   */
  public java.lang.String getBeginText() {
    return beginText;
  }

  /**
   * UTF8 text, for alignment when using reusableinfo. Those text are not available in docjoins.
   * @param beginText beginText or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextAnnotationPiece setBeginText(java.lang.String beginText) {
    this.beginText = beginText;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEnd() {
    return end;
  }

  /**
   * @param end end or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextAnnotationPiece setEnd(java.lang.Integer end) {
    this.end = end;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getEndText() {
    return endText;
  }

  /**
   * @param endText endText or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextAnnotationPiece setEndText(java.lang.String endText) {
    this.endText = endText;
    return this;
  }

  /**
   * Matched dom path string for debugging.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchedPattern() {
    return matchedPattern;
  }

  /**
   * Matched dom path string for debugging.
   * @param matchedPattern matchedPattern or {@code null} for none
   */
  public SnippetsLeadingtextLeadingTextAnnotationPiece setMatchedPattern(java.lang.String matchedPattern) {
    this.matchedPattern = matchedPattern;
    return this;
  }

  @Override
  public SnippetsLeadingtextLeadingTextAnnotationPiece set(String fieldName, Object value) {
    return (SnippetsLeadingtextLeadingTextAnnotationPiece) super.set(fieldName, value);
  }

  @Override
  public SnippetsLeadingtextLeadingTextAnnotationPiece clone() {
    return (SnippetsLeadingtextLeadingTextAnnotationPiece) super.clone();
  }

}
