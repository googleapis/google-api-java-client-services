/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v1;

/**
 * Service definition for Baremetalsolution (v1).
 *
 * <p>
 * Bare Metal Solution provides hardware to run specialized workloads with low latency on Google Cloud.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bare-metal" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BaremetalsolutionRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Baremetalsolution extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Bare Metal Solution API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://baremetalsolution.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://baremetalsolution.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Baremetalsolution(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Baremetalsolution(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
   *   {@code Baremetalsolution.Projects.List request = baremetalsolution.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.Locations.List request = baremetalsolution.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Instances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Instances.List request = baremetalsolution.instances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Instances instances() {
        return new Instances();
      }

      /**
       * The "instances" collection of methods.
       */
      public class Instances {

        /**
         * Perform an ungraceful, hard reset on a machine (equivalent to shutting the power off, and then
         * turning it back on).
         *
         * Create a request for the method "instances.resetInstance".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link ResetInstance#execute()} method to invoke the remote
         * operation.
         *
         * @param instance Required. Name of the instance to reset.
         * @param content the {@link com.google.api.services.baremetalsolution.v1.model.ResetInstanceRequest}
         * @return the request
         */
        public ResetInstance resetInstance(java.lang.String instance, com.google.api.services.baremetalsolution.v1.model.ResetInstanceRequest content) throws java.io.IOException {
          ResetInstance result = new ResetInstance(instance, content);
          initialize(result);
          return result;
        }

        public class ResetInstance extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v1.model.ResetInstanceResponse> {

          private static final String REST_PATH = "v1/{+instance}:resetInstance";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Perform an ungraceful, hard reset on a machine (equivalent to shutting the power off, and then
           * turning it back on).
           *
           * Create a request for the method "instances.resetInstance".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link ResetInstance#execute()} method to invoke the remote
           * operation. <p> {@link ResetInstance#initialize(com.google.api.client.googleapis.services.Abstra
           * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param instance Required. Name of the instance to reset.
           * @param content the {@link com.google.api.services.baremetalsolution.v1.model.ResetInstanceRequest}
           * @since 1.13
           */
          protected ResetInstance(java.lang.String instance, com.google.api.services.baremetalsolution.v1.model.ResetInstanceRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v1.model.ResetInstanceResponse.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public ResetInstance set$Xgafv(java.lang.String $Xgafv) {
            return (ResetInstance) super.set$Xgafv($Xgafv);
          }

          @Override
          public ResetInstance setAccessToken(java.lang.String accessToken) {
            return (ResetInstance) super.setAccessToken(accessToken);
          }

          @Override
          public ResetInstance setAlt(java.lang.String alt) {
            return (ResetInstance) super.setAlt(alt);
          }

          @Override
          public ResetInstance setCallback(java.lang.String callback) {
            return (ResetInstance) super.setCallback(callback);
          }

          @Override
          public ResetInstance setFields(java.lang.String fields) {
            return (ResetInstance) super.setFields(fields);
          }

          @Override
          public ResetInstance setKey(java.lang.String key) {
            return (ResetInstance) super.setKey(key);
          }

          @Override
          public ResetInstance setOauthToken(java.lang.String oauthToken) {
            return (ResetInstance) super.setOauthToken(oauthToken);
          }

          @Override
          public ResetInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ResetInstance) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ResetInstance setQuotaUser(java.lang.String quotaUser) {
            return (ResetInstance) super.setQuotaUser(quotaUser);
          }

          @Override
          public ResetInstance setUploadType(java.lang.String uploadType) {
            return (ResetInstance) super.setUploadType(uploadType);
          }

          @Override
          public ResetInstance setUploadProtocol(java.lang.String uploadProtocol) {
            return (ResetInstance) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the instance to reset. */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance to reset.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /** Required. Name of the instance to reset. */
          public ResetInstance setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          @Override
          public ResetInstance set(String parameterName, Object value) {
            return (ResetInstance) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Baremetalsolution}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Baremetalsolution}. */
    @Override
    public Baremetalsolution build() {
      return new Baremetalsolution(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BaremetalsolutionRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBaremetalsolutionRequestInitializer(
        BaremetalsolutionRequestInitializer baremetalsolutionRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(baremetalsolutionRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
