/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dfareporting.model;

/**
 * Contains additional information about cart data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Campaign Manager 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CartData extends com.google.api.client.json.GenericJson {

  /**
   * Data of the items purchased.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CartDataItem> items;

  /**
   * The feed labels associated with the feed where your items are uploaded. For more information,
   * please refer to ​​ https://support.google.com/merchants/answer/12453549. This is a required
   * field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantFeedLabel;

  /**
   * The language associated with the feed where your items are uploaded. Use ISO 639-1 language
   * codes. This field is needed only when item IDs are not unique across multiple Merchant Center
   * feeds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantFeedLanguage;

  /**
   * The Merchant Center ID where the items are uploaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long merchantId;

  /**
   * Data of the items purchased.
   * @return value or {@code null} for none
   */
  public java.util.List<CartDataItem> getItems() {
    return items;
  }

  /**
   * Data of the items purchased.
   * @param items items or {@code null} for none
   */
  public CartData setItems(java.util.List<CartDataItem> items) {
    this.items = items;
    return this;
  }

  /**
   * The feed labels associated with the feed where your items are uploaded. For more information,
   * please refer to ​​ https://support.google.com/merchants/answer/12453549. This is a required
   * field.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantFeedLabel() {
    return merchantFeedLabel;
  }

  /**
   * The feed labels associated with the feed where your items are uploaded. For more information,
   * please refer to ​​ https://support.google.com/merchants/answer/12453549. This is a required
   * field.
   * @param merchantFeedLabel merchantFeedLabel or {@code null} for none
   */
  public CartData setMerchantFeedLabel(java.lang.String merchantFeedLabel) {
    this.merchantFeedLabel = merchantFeedLabel;
    return this;
  }

  /**
   * The language associated with the feed where your items are uploaded. Use ISO 639-1 language
   * codes. This field is needed only when item IDs are not unique across multiple Merchant Center
   * feeds.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantFeedLanguage() {
    return merchantFeedLanguage;
  }

  /**
   * The language associated with the feed where your items are uploaded. Use ISO 639-1 language
   * codes. This field is needed only when item IDs are not unique across multiple Merchant Center
   * feeds.
   * @param merchantFeedLanguage merchantFeedLanguage or {@code null} for none
   */
  public CartData setMerchantFeedLanguage(java.lang.String merchantFeedLanguage) {
    this.merchantFeedLanguage = merchantFeedLanguage;
    return this;
  }

  /**
   * The Merchant Center ID where the items are uploaded.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMerchantId() {
    return merchantId;
  }

  /**
   * The Merchant Center ID where the items are uploaded.
   * @param merchantId merchantId or {@code null} for none
   */
  public CartData setMerchantId(java.lang.Long merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  @Override
  public CartData set(String fieldName, Object value) {
    return (CartData) super.set(fieldName, value);
  }

  @Override
  public CartData clone() {
    return (CartData) super.clone();
  }

}
