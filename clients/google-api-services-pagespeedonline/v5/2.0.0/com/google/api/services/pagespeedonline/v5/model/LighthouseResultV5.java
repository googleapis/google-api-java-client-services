/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.pagespeedonline.v5.model;

/**
 * The Lighthouse result object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the PageSpeed Insights API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LighthouseResultV5 extends com.google.api.client.json.GenericJson {

  /**
   * Map of audits in the LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, LighthouseAuditResultV5> audits;

  static {
    // hack to force ProGuard to consider LighthouseAuditResultV5 used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LighthouseAuditResultV5.class);
  }

  /**
   * Map of categories in the LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Categories categories;

  /**
   * Map of category groups in the LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, CategoryGroupV5> categoryGroups;

  static {
    // hack to force ProGuard to consider CategoryGroupV5 used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(CategoryGroupV5.class);
  }

  /**
   * The configuration settings for this LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConfigSettings configSettings;

  /**
   * Environment settings that were used when making this LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Environment environment;

  /**
   * The time that this run was fetched.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fetchTime;

  /**
   * The final resolved url that was audited.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String finalUrl;

  /**
   * The internationalization strings that are required to render the LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private I18n i18n;

  /**
   * The lighthouse version that was used to generate this LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lighthouseVersion;

  /**
   * The original requested url.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestedUrl;

  /**
   * List of all run warnings in the LHR. Will always output to at least `[]`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Object> runWarnings;

  /**
   * A top-level error message that, if present, indicates a serious enough problem that this
   * Lighthouse result may need to be discarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RuntimeError runtimeError;

  /**
   * The Stack Pack advice strings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<StackPack> stackPacks;

  /**
   * Timing information for this LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Timing timing;

  /**
   * The user agent that was used to run this LHR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userAgent;

  /**
   * Map of audits in the LHR.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, LighthouseAuditResultV5> getAudits() {
    return audits;
  }

  /**
   * Map of audits in the LHR.
   * @param audits audits or {@code null} for none
   */
  public LighthouseResultV5 setAudits(java.util.Map<String, LighthouseAuditResultV5> audits) {
    this.audits = audits;
    return this;
  }

  /**
   * Map of categories in the LHR.
   * @return value or {@code null} for none
   */
  public Categories getCategories() {
    return categories;
  }

  /**
   * Map of categories in the LHR.
   * @param categories categories or {@code null} for none
   */
  public LighthouseResultV5 setCategories(Categories categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Map of category groups in the LHR.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, CategoryGroupV5> getCategoryGroups() {
    return categoryGroups;
  }

  /**
   * Map of category groups in the LHR.
   * @param categoryGroups categoryGroups or {@code null} for none
   */
  public LighthouseResultV5 setCategoryGroups(java.util.Map<String, CategoryGroupV5> categoryGroups) {
    this.categoryGroups = categoryGroups;
    return this;
  }

  /**
   * The configuration settings for this LHR.
   * @return value or {@code null} for none
   */
  public ConfigSettings getConfigSettings() {
    return configSettings;
  }

  /**
   * The configuration settings for this LHR.
   * @param configSettings configSettings or {@code null} for none
   */
  public LighthouseResultV5 setConfigSettings(ConfigSettings configSettings) {
    this.configSettings = configSettings;
    return this;
  }

  /**
   * Environment settings that were used when making this LHR.
   * @return value or {@code null} for none
   */
  public Environment getEnvironment() {
    return environment;
  }

  /**
   * Environment settings that were used when making this LHR.
   * @param environment environment or {@code null} for none
   */
  public LighthouseResultV5 setEnvironment(Environment environment) {
    this.environment = environment;
    return this;
  }

  /**
   * The time that this run was fetched.
   * @return value or {@code null} for none
   */
  public java.lang.String getFetchTime() {
    return fetchTime;
  }

  /**
   * The time that this run was fetched.
   * @param fetchTime fetchTime or {@code null} for none
   */
  public LighthouseResultV5 setFetchTime(java.lang.String fetchTime) {
    this.fetchTime = fetchTime;
    return this;
  }

  /**
   * The final resolved url that was audited.
   * @return value or {@code null} for none
   */
  public java.lang.String getFinalUrl() {
    return finalUrl;
  }

  /**
   * The final resolved url that was audited.
   * @param finalUrl finalUrl or {@code null} for none
   */
  public LighthouseResultV5 setFinalUrl(java.lang.String finalUrl) {
    this.finalUrl = finalUrl;
    return this;
  }

  /**
   * The internationalization strings that are required to render the LHR.
   * @return value or {@code null} for none
   */
  public I18n getI18n() {
    return i18n;
  }

  /**
   * The internationalization strings that are required to render the LHR.
   * @param i18n i18n or {@code null} for none
   */
  public LighthouseResultV5 setI18n(I18n i18n) {
    this.i18n = i18n;
    return this;
  }

  /**
   * The lighthouse version that was used to generate this LHR.
   * @return value or {@code null} for none
   */
  public java.lang.String getLighthouseVersion() {
    return lighthouseVersion;
  }

  /**
   * The lighthouse version that was used to generate this LHR.
   * @param lighthouseVersion lighthouseVersion or {@code null} for none
   */
  public LighthouseResultV5 setLighthouseVersion(java.lang.String lighthouseVersion) {
    this.lighthouseVersion = lighthouseVersion;
    return this;
  }

  /**
   * The original requested url.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestedUrl() {
    return requestedUrl;
  }

  /**
   * The original requested url.
   * @param requestedUrl requestedUrl or {@code null} for none
   */
  public LighthouseResultV5 setRequestedUrl(java.lang.String requestedUrl) {
    this.requestedUrl = requestedUrl;
    return this;
  }

  /**
   * List of all run warnings in the LHR. Will always output to at least `[]`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Object> getRunWarnings() {
    return runWarnings;
  }

  /**
   * List of all run warnings in the LHR. Will always output to at least `[]`.
   * @param runWarnings runWarnings or {@code null} for none
   */
  public LighthouseResultV5 setRunWarnings(java.util.List<java.lang.Object> runWarnings) {
    this.runWarnings = runWarnings;
    return this;
  }

  /**
   * A top-level error message that, if present, indicates a serious enough problem that this
   * Lighthouse result may need to be discarded.
   * @return value or {@code null} for none
   */
  public RuntimeError getRuntimeError() {
    return runtimeError;
  }

  /**
   * A top-level error message that, if present, indicates a serious enough problem that this
   * Lighthouse result may need to be discarded.
   * @param runtimeError runtimeError or {@code null} for none
   */
  public LighthouseResultV5 setRuntimeError(RuntimeError runtimeError) {
    this.runtimeError = runtimeError;
    return this;
  }

  /**
   * The Stack Pack advice strings.
   * @return value or {@code null} for none
   */
  public java.util.List<StackPack> getStackPacks() {
    return stackPacks;
  }

  /**
   * The Stack Pack advice strings.
   * @param stackPacks stackPacks or {@code null} for none
   */
  public LighthouseResultV5 setStackPacks(java.util.List<StackPack> stackPacks) {
    this.stackPacks = stackPacks;
    return this;
  }

  /**
   * Timing information for this LHR.
   * @return value or {@code null} for none
   */
  public Timing getTiming() {
    return timing;
  }

  /**
   * Timing information for this LHR.
   * @param timing timing or {@code null} for none
   */
  public LighthouseResultV5 setTiming(Timing timing) {
    this.timing = timing;
    return this;
  }

  /**
   * The user agent that was used to run this LHR.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserAgent() {
    return userAgent;
  }

  /**
   * The user agent that was used to run this LHR.
   * @param userAgent userAgent or {@code null} for none
   */
  public LighthouseResultV5 setUserAgent(java.lang.String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  @Override
  public LighthouseResultV5 set(String fieldName, Object value) {
    return (LighthouseResultV5) super.set(fieldName, value);
  }

  @Override
  public LighthouseResultV5 clone() {
    return (LighthouseResultV5) super.clone();
  }

}
