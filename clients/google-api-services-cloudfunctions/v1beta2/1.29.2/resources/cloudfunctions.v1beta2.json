{
  "resources": {
    "operations": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "parameterOrder": [],
          "parameters": {
            "filter": {
              "location": "query",
              "description": "Required. A filter for matching the requested operations.\u003cbr\u003e\u003cbr\u003e The supported formats of \u003cb\u003efilter\u003c/b\u003e are:\u003cbr\u003e To query for a specific function: \u003ccode\u003eproject:*,location:*,function:*\u003c/code\u003e\u003cbr\u003e To query for all of the latest operations for a project: \u003ccode\u003eproject:*,latest:true\u003c/code\u003e",
              "type": "string"
            },
            "name": {
              "location": "query",
              "description": "Must not be set.",
              "type": "string"
            },
            "pageToken": {
              "description": "Token identifying which result to start with, which is returned by a previous list call.\u003cbr\u003e\u003cbr\u003e Pagination is only supported when querying for a specific function.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of records that should be returned.\u003cbr\u003e Requested page size cannot exceed 100. If not set, the default page size is 100.\u003cbr\u003e\u003cbr\u003e Pagination is only supported when querying for a specific function.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta2/operations",
          "id": "cloudfunctions.operations.list",
          "path": "v1beta2/operations",
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^operations/[^/]+$"
            }
          },
          "flatPath": "v1beta2/operations/{operationsId}",
          "path": "v1beta2/{+name}",
          "id": "cloudfunctions.operations.get",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list filter."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/locations",
              "id": "cloudfunctions.projects.locations.list",
              "path": "v1beta2/{+name}/locations",
              "description": "Lists information about the supported locations for this service."
            }
          },
          "resources": {
            "functions": {
              "methods": {
                "generateDownloadUrl": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GenerateDownloadUrlResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of function for which source code Google Cloud Storage signed\nURL should be generated.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}:generateDownloadUrl",
                  "id": "cloudfunctions.projects.locations.functions.generateDownloadUrl",
                  "path": "v1beta2/{+name}:generateDownloadUrl",
                  "request": {
                    "$ref": "GenerateDownloadUrlRequest"
                  },
                  "description": "Returns a signed URL for downloading deployed function source code.\nThe URL is only valid for a limited period and should be used within\nminutes after generation.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls"
                },
                "get": {
                  "response": {
                    "$ref": "CloudFunction"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the function which details should be obtained."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "path": "v1beta2/{+name}",
                  "id": "cloudfunctions.projects.locations.functions.get",
                  "description": "Returns a function with the given name from the requested project."
                },
                "update": {
                  "description": "Updates existing function.",
                  "request": {
                    "$ref": "CloudFunction"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the function to be updated.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "path": "v1beta2/{+name}",
                  "id": "cloudfunctions.projects.locations.functions.update"
                },
                "delete": {
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "id": "cloudfunctions.projects.locations.functions.delete",
                  "path": "v1beta2/{+name}",
                  "description": "Deletes a function with the given name from the specified project. If the\ngiven function is used by some trigger, the trigger will be updated to\nremove this function.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the function which should be deleted.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListFunctionsResponse"
                  },
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "Required. The project and location from which the function should be listed,\nspecified in the format `projects/*/locations/*`\nIf you want to list functions in all locations, use \"-\" in place of a\nlocation. When listing functions in all locations, if one or more\nlocation(s) are unreachable, the response will contain functions from all\nreachable locations along with the names of any unreachable locations.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last\n`ListFunctionsResponse`; indicates that\nthis is a continuation of a prior `ListFunctions` call, and that the\nsystem should return the next page of data."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of functions to return per call.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions",
                  "id": "cloudfunctions.projects.locations.functions.list",
                  "path": "v1beta2/{+location}/functions",
                  "description": "Returns a list of functions that belong to the requested project."
                },
                "call": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the function to be called."
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}:call",
                  "path": "v1beta2/{+name}:call",
                  "id": "cloudfunctions.projects.locations.functions.call",
                  "request": {
                    "$ref": "CallFunctionRequest"
                  },
                  "description": "Synchronously invokes a deployed Cloud Function. To be used for testing\npurposes as very limited traffic is allowed. For more information on\nthe actual limits refer to [API Calls](\nhttps://cloud.google.com/functions/quotas#rate_limits).",
                  "response": {
                    "$ref": "CallFunctionResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The project and location in which the function should be created, specified\nin the format `projects/*/locations/*`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions",
                  "id": "cloudfunctions.projects.locations.functions.create",
                  "path": "v1beta2/{+location}/functions",
                  "description": "Creates a new function. If a function with the given name already exists in\nthe specified project, the long running operation will return\n`ALREADY_EXISTS` error.",
                  "request": {
                    "$ref": "CloudFunction"
                  }
                },
                "generateUploadUrl": {
                  "id": "cloudfunctions.projects.locations.functions.generateUploadUrl",
                  "path": "v1beta2/{+parent}/functions:generateUploadUrl",
                  "description": "Returns a signed URL for uploading a function source code.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\nOnce the function source code upload is complete, the used signed\nURL should be provided in CreateFunction or UpdateFunction request\nas a reference to the function source code.\n\nWhen uploading source code to the generated signed URL, please follow\nthese restrictions:\n\n* Source file type should be a zip file.\n* Source file size should not exceed 100MB limit.\n* No credentials should be attached - the signed URLs provide access to the\n  target bucket using internal service identity; if credentials were\n  attached, the identity from the credentials would be used, but that\n  identity does not have permissions to upload files to the URL.\n\nWhen making a HTTP PUT request, these two headers need to be specified:\n\n* `content-type: application/zip`\n* `x-goog-content-length-range: 0,104857600`\n\nAnd this header SHOULD NOT be specified:\n\n* `Authorization: Bearer YOUR_TOKEN`",
                  "request": {
                    "$ref": "GenerateUploadUrlRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GenerateUploadUrlResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "The project and location in which the Google Cloud Storage signed URL\nshould be generated, specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions:generateUploadUrl"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  },
  "version": "v1beta2",
  "baseUrl": "https://cloudfunctions.googleapis.com/",
  "servicePath": "",
  "description": "Manages lightweight user-provided functions executed in response to events.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "revision": "20191003",
  "documentationLink": "https://cloud.google.com/functions",
  "id": "cloudfunctions:v1beta2",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "OperationMetadataV1Beta2": {
      "description": "Metadata describing an Operation",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The last update timestamp of the operation.",
          "format": "google-datetime"
        },
        "target": {
          "type": "string",
          "description": "Target of the operation - for example\nprojects/project-1/locations/region-1/functions/function-1"
        },
        "request": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The original request that started the operation."
        },
        "versionId": {
          "description": "Version id of the function created or updated by an API call.\nThis field is only populated for Create and Update operations.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unknown operation type.",
            "Triggered by CreateFunction call",
            "Triggered by UpdateFunction call",
            "Triggered by DeleteFunction call."
          ],
          "enum": [
            "OPERATION_UNSPECIFIED",
            "CREATE_FUNCTION",
            "UPDATE_FUNCTION",
            "DELETE_FUNCTION"
          ],
          "description": "Type of operation."
        }
      },
      "id": "OperationMetadataV1Beta2"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "id": "Status"
    },
    "CallFunctionRequest": {
      "description": "Request for the `CallFunction` method.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Required. Input to be passed to the function.",
          "type": "string"
        }
      },
      "id": "CallFunctionRequest"
    },
    "SourceRepository": {
      "description": "Describes the location of the function source in a remote repository.",
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the branch from which the function should be fetched."
        },
        "sourcePath": {
          "type": "string",
          "description": "The path within the repository where the function is defined. The path\nshould point to the directory where Cloud Functions files are located. Use\n\"/\" if the function is defined directly in the root directory of a\nrepository."
        },
        "deployedRevision": {
          "description": "Output only. The id of the revision that was resolved at the moment of\nfunction creation or update. For example when a user deployed from a\nbranch, it will be the revision id of the latest change on this branch at\nthat time. If user deployed from revision then this value will be always\nequal to the revision specified by the user.",
          "type": "string"
        },
        "revision": {
          "description": "The id of the revision that captures the state of the repository from\nwhich the function should be fetched.",
          "type": "string"
        },
        "repositoryUrl": {
          "type": "string",
          "description": "URL to the hosted repository where the function is defined. Only paths in\nhttps://source.developers.google.com domain are supported. The path should\ncontain the name of the repository."
        },
        "tag": {
          "description": "The name of the tag that captures the state of the repository from\nwhich the function should be fetched.",
          "type": "string"
        }
      },
      "id": "SourceRepository"
    },
    "CloudFunction": {
      "id": "CloudFunction",
      "description": "Describes a Cloud Function that contains user computation executed in\nresponse to an event. It encapsulate function and triggers configurations.",
      "type": "object",
      "properties": {
        "httpsTrigger": {
          "$ref": "HTTPSTrigger",
          "description": "An HTTPS endpoint type of source that can be triggered via URL."
        },
        "maxInstances": {
          "description": "The limit on the maximum number of function instances that may coexist at a\ngiven time.",
          "format": "int32",
          "type": "integer"
        },
        "environmentVariables": {
          "description": "Environment variables that shall be available during function execution.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Status not specified.",
            "Successfully deployed.",
            "Not deployed correctly - behavior is undefined. The item should be updated\nor deleted to move it out of this state.",
            "Creation or update in progress.",
            "Deletion in progress."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "READY",
            "FAILED",
            "DEPLOYING",
            "DELETING"
          ],
          "description": "Output only. Status of the function deployment."
        },
        "eventTrigger": {
          "$ref": "EventTrigger",
          "description": "A source that fires events in response to a condition in another service."
        },
        "sourceUploadUrl": {
          "description": "The Google Cloud Storage signed URL used for source uploading, generated\nby google.cloud.functions.v1beta2.GenerateUploadUrl",
          "type": "string"
        },
        "timeout": {
          "description": "The function execution timeout. Execution is considered failed and\ncan be terminated if the function is not completed at the end of the\ntimeout period. Defaults to 60 seconds.",
          "format": "google-duration",
          "type": "string"
        },
        "availableMemoryMb": {
          "description": "The amount of memory in MB available for a function.\nDefaults to 256MB.",
          "format": "int32",
          "type": "integer"
        },
        "runtime": {
          "type": "string",
          "description": "The runtime in which to run the function. Required when deploying a new\nfunction, optional when updating an existing function. For a complete\nlist of possible choices, see the\n[`gcloud` command\nreference](/sdk/gcloud/reference/functions/deploy#--runtime)."
        },
        "name": {
          "description": "A user-defined name of the function. Function names must be unique\nglobally and match pattern `projects/*/locations/*/functions/*`",
          "type": "string"
        },
        "versionId": {
          "description": "Output only. The version identifier of the Cloud Function. Each deployment attempt\nresults in a new version of a function being created.",
          "format": "int64",
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email of the function's service account. If empty, defaults to\n`{project_id}@appspot.gserviceaccount.com`."
        },
        "sourceArchiveUrl": {
          "type": "string",
          "description": "The Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function."
        },
        "sourceRepository": {
          "$ref": "SourceRepository",
          "description": "The hosted repository where the function is defined."
        },
        "network": {
          "type": "string",
          "description": "The VPC Network that this cloud function can connect to. It can be\neither the fully-qualified URI, or the short name of the network resource.\nIf the short network name is used, the network must belong to the same\nproject. Otherwise, it must belong to a project within the same\norganization. The format of this field is either\n`projects/{project}/global/networks/{network}` or `{network}`, where\n{project} is a project id where the network is defined, and {network} is\nthe short name of the network.\n\nThis field is mutually exclusive with `vpc_connector` and will be replaced\nby it.\n\nSee [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for\nmore information on connecting Cloud projects."
        },
        "vpcConnector": {
          "description": "The VPC Network Connector that this cloud function can connect to. It can\nbe either the fully-qualified URI, or the short name of the network\nconnector resource. The format of this field is\n`projects/*/locations/*/connectors/*`\n\nThis field is mutually exclusive with `network` field and will eventually\nreplace it.\n\nSee [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for\nmore information on connecting Cloud projects.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels associated with this Cloud Function.",
          "type": "object"
        },
        "entryPoint": {
          "description": "The name of the function (as defined in source code) that will be\nexecuted. Defaults to the resource name suffix, if not specified. For\nbackward compatibility, if function with given name is not found, then the\nsystem will try to use function named \"function\".\nFor Node.js this is name of a function exported by the module specified\nin `source_location`.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a Cloud Function.",
          "format": "google-datetime",
          "type": "string"
        },
        "sourceRepositoryUrl": {
          "description": "The URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:\n\nTo refer to a specific commit:\n`https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*`\nTo refer to a moveable alias (branch):\n`https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*`\nIn particular, to refer to HEAD use `master` moveable alias.\nTo refer to a specific fixed alias (tag):\n`https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*`\n\nYou may omit `paths/*` if you want to use the main directory.",
          "type": "string"
        },
        "latestOperation": {
          "type": "string",
          "description": "Output only. Name of the most recent operation modifying the function. If\nthe function status is `DEPLOYING` or `DELETING`, then it points to the\nactive operation."
        }
      }
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        }
      },
      "id": "Location"
    },
    "GenerateDownloadUrlResponse": {
      "description": "Response of `GenerateDownloadUrl` method.",
      "type": "object",
      "properties": {
        "downloadUrl": {
          "description": "The generated Google Cloud Storage signed URL that should be used for\nfunction source code download.",
          "type": "string"
        }
      },
      "id": "GenerateDownloadUrlResponse"
    },
    "Retry": {
      "type": "object",
      "properties": {},
      "id": "Retry",
      "description": "Describes the retry policy in case of function's execution failure.\nA function execution will be retried on any failure.\nA failed execution will be retried up to 7 days with an exponential backoff\n(capped at 10 seconds).\nRetried execution is charged as any other execution."
    },
    "GenerateUploadUrlRequest": {
      "description": "Request of `GenerateUploadUrl` method.",
      "type": "object",
      "properties": {},
      "id": "GenerateUploadUrlRequest"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "GenerateUploadUrlResponse": {
      "type": "object",
      "properties": {
        "uploadUrl": {
          "description": "The generated Google Cloud Storage signed URL that should be used for a\nfunction source code upload. The uploaded file should be a zip archive\nwhich contains a function.",
          "type": "string"
        }
      },
      "id": "GenerateUploadUrlResponse",
      "description": "Response of `GenerateUploadUrl` method."
    },
    "ListFunctionsResponse": {
      "description": "Response for the `ListFunctions` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If not empty, indicates that there may be more functions that match\nthe request; this value should be passed in a new\ngoogle.cloud.functions.v1beta2.ListFunctionsRequest\nto get more functions."
        },
        "unreachable": {
          "description": "Locations that could not be reached. The response does not include any\nfunctions from these locations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "CloudFunction"
          },
          "description": "The functions that match the request."
        }
      },
      "id": "ListFunctionsResponse"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse"
    },
    "CallFunctionResponse": {
      "type": "object",
      "properties": {
        "executionId": {
          "description": "Execution id of function invocation.",
          "type": "string"
        },
        "result": {
          "type": "string",
          "description": "Result populated for successful execution of synchronous function. Will\nnot be populated if function does not return a result through context."
        },
        "error": {
          "type": "string",
          "description": "Either system or user-function generated error. Set if execution\nwas not successful."
        }
      },
      "id": "CallFunctionResponse",
      "description": "Response of `CallFunction` method."
    },
    "EventTrigger": {
      "id": "EventTrigger",
      "description": "Describes EventTrigger, used to request events be sent from another\nservice.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "Which instance of the source's service should send events. E.g. for Pub/Sub\nthis would be a Pub/Sub topic at `projects/*/topics/*`. For Google Cloud\nStorage this would be a bucket at `projects/*/buckets/*`. For any source\nthat only supports one instance per-project, this should be the name of the\nproject (`projects/*`)",
          "type": "string"
        },
        "service": {
          "description": "The hostname of the service that should be observed.\n\nIf no string is provided, the default service implementing the API will\nbe used. For example, `storage.googleapis.com` is the default for all\nevent types in the `google.storage` namespace.",
          "type": "string"
        },
        "failurePolicy": {
          "$ref": "FailurePolicy",
          "description": "Specifies policy for failed executions."
        },
        "eventType": {
          "description": "`event_type` names contain the service that is sending an event and the\nkind of event that was fired. Must be of the form\n`providers/*/eventTypes/*` e.g. Directly handle a Message published to\nGoogle Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`.\n\nHandle an object changing in Google Cloud Storage:\n`providers/cloud.storage/eventTypes/object.change`\n\nHandle a write to the Firebase Realtime Database:\n`providers/google.firebase.database/eventTypes/ref.write`",
          "type": "string"
        }
      }
    },
    "HTTPSTrigger": {
      "description": "Describes HTTPSTrigger, could be used to connect web hooks to function.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Output only. The deployed url for the function.",
          "type": "string"
        }
      },
      "id": "HTTPSTrigger"
    },
    "FailurePolicy": {
      "description": "Describes the policy in case of function's execution failure.\nIf empty, then defaults to ignoring failures (i.e. not retrying them).",
      "type": "object",
      "properties": {
        "retry": {
          "$ref": "Retry",
          "description": "If specified, then the function will be retried in case of a failure."
        }
      },
      "id": "FailurePolicy"
    },
    "GenerateDownloadUrlRequest": {
      "id": "GenerateDownloadUrlRequest",
      "description": "Request of `GenerateDownloadUrl` method.",
      "type": "object",
      "properties": {
        "versionId": {
          "description": "The optional version of function.",
          "format": "uint64",
          "type": "string"
        }
      }
    },
    "OperationMetadataV1": {
      "description": "Metadata describing an Operation",
      "type": "object",
      "properties": {
        "target": {
          "description": "Target of the operation - for example\nprojects/project-1/locations/region-1/functions/function-1",
          "type": "string"
        },
        "request": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The original request that started the operation."
        },
        "versionId": {
          "description": "Version id of the function created or updated by an API call.\nThis field is only populated for Create and Update operations.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "enum": [
            "OPERATION_UNSPECIFIED",
            "CREATE_FUNCTION",
            "UPDATE_FUNCTION",
            "DELETE_FUNCTION"
          ],
          "description": "Type of operation.",
          "type": "string",
          "enumDescriptions": [
            "Unknown operation type.",
            "Triggered by CreateFunction call",
            "Triggered by UpdateFunction call",
            "Triggered by DeleteFunction call."
          ]
        },
        "updateTime": {
          "description": "The last update timestamp of the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "Operation"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Cloud Functions",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://cloudfunctions.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudfunctions",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Functions API",
  "ownerName": "Google"
}
