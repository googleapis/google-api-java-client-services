/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for RepositoryWebrefPatternInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefPatternInfo extends com.google.api.client.json.GenericJson {

  /**
   * The confidence we can trust this pattern.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float matchProbability;

  /**
   * Whether other slots is mentioned in annotator. If they is no other slot, it is set to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean otherSlotsMentioned;

  /**
   * The corresponding patterns matched on this candidate, which contains the pattern string and the
   * slot number of the candidate in this pattern, such as [|/athletes|vs|/athletes|]_1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pattern;

  /**
   * The confidence we can trust this pattern.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMatchProbability() {
    return matchProbability;
  }

  /**
   * The confidence we can trust this pattern.
   * @param matchProbability matchProbability or {@code null} for none
   */
  public RepositoryWebrefPatternInfo setMatchProbability(java.lang.Float matchProbability) {
    this.matchProbability = matchProbability;
    return this;
  }

  /**
   * Whether other slots is mentioned in annotator. If they is no other slot, it is set to true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOtherSlotsMentioned() {
    return otherSlotsMentioned;
  }

  /**
   * Whether other slots is mentioned in annotator. If they is no other slot, it is set to true.
   * @param otherSlotsMentioned otherSlotsMentioned or {@code null} for none
   */
  public RepositoryWebrefPatternInfo setOtherSlotsMentioned(java.lang.Boolean otherSlotsMentioned) {
    this.otherSlotsMentioned = otherSlotsMentioned;
    return this;
  }

  /**
   * The corresponding patterns matched on this candidate, which contains the pattern string and the
   * slot number of the candidate in this pattern, such as [|/athletes|vs|/athletes|]_1.
   * @return value or {@code null} for none
   */
  public java.lang.String getPattern() {
    return pattern;
  }

  /**
   * The corresponding patterns matched on this candidate, which contains the pattern string and the
   * slot number of the candidate in this pattern, such as [|/athletes|vs|/athletes|]_1.
   * @param pattern pattern or {@code null} for none
   */
  public RepositoryWebrefPatternInfo setPattern(java.lang.String pattern) {
    this.pattern = pattern;
    return this;
  }

  @Override
  public RepositoryWebrefPatternInfo set(String fieldName, Object value) {
    return (RepositoryWebrefPatternInfo) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefPatternInfo clone() {
    return (RepositoryWebrefPatternInfo) super.clone();
  }

}
