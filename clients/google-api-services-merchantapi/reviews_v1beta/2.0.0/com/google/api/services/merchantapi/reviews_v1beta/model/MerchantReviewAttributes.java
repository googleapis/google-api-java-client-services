/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.reviews_v1beta.model;

/**
 * Attributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MerchantReviewAttributes extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The method used to collect the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String collectionMethod;

  /**
   * Required. This should be any freeform text provided by the user and should not be truncated. If
   * multiple responses to different questions are provided, all responses should be included, with
   * the minimal context for the responses to make sense. Context should not be provided if
   * questions were left unanswered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String content;

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isAnonymous;

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min rating.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maxRating;

  /**
   * Optional. Human-readable display name for the merchant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantDisplayName;

  /**
   * Required. Must be unique and stable across all requests. In other words, if a request today and
   * another 90 days ago refer to the same merchant, they must have the same id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantId;

  /**
   * Optional. URL to the merchant's main website. Do not use a redirect URL for this value. In
   * other words, the value should point directly to the merchant's site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantLink;

  /**
   * Optional. URL to the landing page that hosts the reviews for this merchant. Do not use a
   * redirect URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantRatingLink;

  /**
   * Optional. The minimum possible number for the rating. This should be the worst possible rating
   * and should not be a value for no rating.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long minRating;

  /**
   * Optional. The reviewer's overall rating of the merchant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double rating;

  /**
   * Optional. The country where the reviewer made the order defined by ISO 3166-1 Alpha-2 Country
   * Code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewCountry;

  /**
   * Required. The language of the review defined by BCP-47 language code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewLanguage;

  /**
   * Required. The timestamp indicating when the review was written.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reviewTime;

  /**
   * Optional. A permanent, unique identifier for the author of the review in the publisher's
   * system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewerId;

  /**
   * Optional. Display name of the review author.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewerUsername;

  /**
   * Optional. The title of the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Optional. The method used to collect the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getCollectionMethod() {
    return collectionMethod;
  }

  /**
   * Optional. The method used to collect the review.
   * @param collectionMethod collectionMethod or {@code null} for none
   */
  public MerchantReviewAttributes setCollectionMethod(java.lang.String collectionMethod) {
    this.collectionMethod = collectionMethod;
    return this;
  }

  /**
   * Required. This should be any freeform text provided by the user and should not be truncated. If
   * multiple responses to different questions are provided, all responses should be included, with
   * the minimal context for the responses to make sense. Context should not be provided if
   * questions were left unanswered.
   * @return value or {@code null} for none
   */
  public java.lang.String getContent() {
    return content;
  }

  /**
   * Required. This should be any freeform text provided by the user and should not be truncated. If
   * multiple responses to different questions are provided, all responses should be included, with
   * the minimal context for the responses to make sense. Context should not be provided if
   * questions were left unanswered.
   * @param content content or {@code null} for none
   */
  public MerchantReviewAttributes setContent(java.lang.String content) {
    this.content = content;
    return this;
  }

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsAnonymous() {
    return isAnonymous;
  }

  /**
   * Optional. Set to true if the reviewer should remain anonymous.
   * @param isAnonymous isAnonymous or {@code null} for none
   */
  public MerchantReviewAttributes setIsAnonymous(java.lang.Boolean isAnonymous) {
    this.isAnonymous = isAnonymous;
    return this;
  }

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min rating.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaxRating() {
    return maxRating;
  }

  /**
   * Optional. The maximum possible number for the rating. The value of the max rating must be
   * greater than the value of the min rating.
   * @param maxRating maxRating or {@code null} for none
   */
  public MerchantReviewAttributes setMaxRating(java.lang.Long maxRating) {
    this.maxRating = maxRating;
    return this;
  }

  /**
   * Optional. Human-readable display name for the merchant.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantDisplayName() {
    return merchantDisplayName;
  }

  /**
   * Optional. Human-readable display name for the merchant.
   * @param merchantDisplayName merchantDisplayName or {@code null} for none
   */
  public MerchantReviewAttributes setMerchantDisplayName(java.lang.String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
    return this;
  }

  /**
   * Required. Must be unique and stable across all requests. In other words, if a request today and
   * another 90 days ago refer to the same merchant, they must have the same id.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantId() {
    return merchantId;
  }

  /**
   * Required. Must be unique and stable across all requests. In other words, if a request today and
   * another 90 days ago refer to the same merchant, they must have the same id.
   * @param merchantId merchantId or {@code null} for none
   */
  public MerchantReviewAttributes setMerchantId(java.lang.String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Optional. URL to the merchant's main website. Do not use a redirect URL for this value. In
   * other words, the value should point directly to the merchant's site.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantLink() {
    return merchantLink;
  }

  /**
   * Optional. URL to the merchant's main website. Do not use a redirect URL for this value. In
   * other words, the value should point directly to the merchant's site.
   * @param merchantLink merchantLink or {@code null} for none
   */
  public MerchantReviewAttributes setMerchantLink(java.lang.String merchantLink) {
    this.merchantLink = merchantLink;
    return this;
  }

  /**
   * Optional. URL to the landing page that hosts the reviews for this merchant. Do not use a
   * redirect URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantRatingLink() {
    return merchantRatingLink;
  }

  /**
   * Optional. URL to the landing page that hosts the reviews for this merchant. Do not use a
   * redirect URL.
   * @param merchantRatingLink merchantRatingLink or {@code null} for none
   */
  public MerchantReviewAttributes setMerchantRatingLink(java.lang.String merchantRatingLink) {
    this.merchantRatingLink = merchantRatingLink;
    return this;
  }

  /**
   * Optional. The minimum possible number for the rating. This should be the worst possible rating
   * and should not be a value for no rating.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMinRating() {
    return minRating;
  }

  /**
   * Optional. The minimum possible number for the rating. This should be the worst possible rating
   * and should not be a value for no rating.
   * @param minRating minRating or {@code null} for none
   */
  public MerchantReviewAttributes setMinRating(java.lang.Long minRating) {
    this.minRating = minRating;
    return this;
  }

  /**
   * Optional. The reviewer's overall rating of the merchant.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRating() {
    return rating;
  }

  /**
   * Optional. The reviewer's overall rating of the merchant.
   * @param rating rating or {@code null} for none
   */
  public MerchantReviewAttributes setRating(java.lang.Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Optional. The country where the reviewer made the order defined by ISO 3166-1 Alpha-2 Country
   * Code.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewCountry() {
    return reviewCountry;
  }

  /**
   * Optional. The country where the reviewer made the order defined by ISO 3166-1 Alpha-2 Country
   * Code.
   * @param reviewCountry reviewCountry or {@code null} for none
   */
  public MerchantReviewAttributes setReviewCountry(java.lang.String reviewCountry) {
    this.reviewCountry = reviewCountry;
    return this;
  }

  /**
   * Required. The language of the review defined by BCP-47 language code.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewLanguage() {
    return reviewLanguage;
  }

  /**
   * Required. The language of the review defined by BCP-47 language code.
   * @param reviewLanguage reviewLanguage or {@code null} for none
   */
  public MerchantReviewAttributes setReviewLanguage(java.lang.String reviewLanguage) {
    this.reviewLanguage = reviewLanguage;
    return this;
  }

  /**
   * Required. The timestamp indicating when the review was written.
   * @return value or {@code null} for none
   */
  public String getReviewTime() {
    return reviewTime;
  }

  /**
   * Required. The timestamp indicating when the review was written.
   * @param reviewTime reviewTime or {@code null} for none
   */
  public MerchantReviewAttributes setReviewTime(String reviewTime) {
    this.reviewTime = reviewTime;
    return this;
  }

  /**
   * Optional. A permanent, unique identifier for the author of the review in the publisher's
   * system.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewerId() {
    return reviewerId;
  }

  /**
   * Optional. A permanent, unique identifier for the author of the review in the publisher's
   * system.
   * @param reviewerId reviewerId or {@code null} for none
   */
  public MerchantReviewAttributes setReviewerId(java.lang.String reviewerId) {
    this.reviewerId = reviewerId;
    return this;
  }

  /**
   * Optional. Display name of the review author.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewerUsername() {
    return reviewerUsername;
  }

  /**
   * Optional. Display name of the review author.
   * @param reviewerUsername reviewerUsername or {@code null} for none
   */
  public MerchantReviewAttributes setReviewerUsername(java.lang.String reviewerUsername) {
    this.reviewerUsername = reviewerUsername;
    return this;
  }

  /**
   * Optional. The title of the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Optional. The title of the review.
   * @param title title or {@code null} for none
   */
  public MerchantReviewAttributes setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public MerchantReviewAttributes set(String fieldName, Object value) {
    return (MerchantReviewAttributes) super.set(fieldName, value);
  }

  @Override
  public MerchantReviewAttributes clone() {
    return (MerchantReviewAttributes) super.clone();
  }

}
