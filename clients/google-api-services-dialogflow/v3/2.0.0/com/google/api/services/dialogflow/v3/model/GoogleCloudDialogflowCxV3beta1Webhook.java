/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3.model;

/**
 * Webhooks host the developer's business logic. During a session, webhooks allow the developer to
 * use the data extracted by Dialogflow's natural language processing to generate dynamic responses,
 * validate collected data, or trigger actions on the backend.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1Webhook extends com.google.api.client.json.GenericJson {

  /**
   * Indicates whether the webhook is disabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disabled;

  /**
   * Required. The human-readable name of the webhook, unique within the agent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Configuration for a generic web service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1WebhookGenericWebService genericWebService;

  /**
   * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method.
   * Webhooks.CreateWebhook populates the name automatically. Format:
   * `projects//locations//agents//webhooks/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig serviceDirectory;

  /**
   * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a
   * response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed
   * timeout is 30 seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timeout;

  /**
   * Indicates whether the webhook is disabled.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisabled() {
    return disabled;
  }

  /**
   * Indicates whether the webhook is disabled.
   * @param disabled disabled or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setDisabled(java.lang.Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Required. The human-readable name of the webhook, unique within the agent.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The human-readable name of the webhook, unique within the agent.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Configuration for a generic web service.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1WebhookGenericWebService getGenericWebService() {
    return genericWebService;
  }

  /**
   * Configuration for a generic web service.
   * @param genericWebService genericWebService or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setGenericWebService(GoogleCloudDialogflowCxV3beta1WebhookGenericWebService genericWebService) {
    this.genericWebService = genericWebService;
    return this;
  }

  /**
   * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method.
   * Webhooks.CreateWebhook populates the name automatically. Format:
   * `projects//locations//agents//webhooks/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method.
   * Webhooks.CreateWebhook populates the name automatically. Format:
   * `projects//locations//agents//webhooks/`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig getServiceDirectory() {
    return serviceDirectory;
  }

  /**
   * Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
   * @param serviceDirectory serviceDirectory or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setServiceDirectory(GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig serviceDirectory) {
    this.serviceDirectory = serviceDirectory;
    return this;
  }

  /**
   * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a
   * response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed
   * timeout is 30 seconds.
   * @return value or {@code null} for none
   */
  public String getTimeout() {
    return timeout;
  }

  /**
   * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a
   * response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed
   * timeout is 30 seconds.
   * @param timeout timeout or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Webhook setTimeout(String timeout) {
    this.timeout = timeout;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Webhook set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1Webhook) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Webhook clone() {
    return (GoogleCloudDialogflowCxV3beta1Webhook) super.clone();
  }

}
