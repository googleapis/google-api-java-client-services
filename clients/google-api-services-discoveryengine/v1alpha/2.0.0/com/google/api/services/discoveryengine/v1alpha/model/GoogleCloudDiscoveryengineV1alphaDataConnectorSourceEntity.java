/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Represents an entity in the data source. For example, the `Account` object in Salesforce.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The full resource name of the associated data store for the source entity. Format:
   * `projects/locations/collections/dataStores`. When the connector is initialized by the
   * DataConnectorService.SetUpDataConnector method, a DataStore is automatically created for each
   * source entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataStore;

  /**
   * The name of the entity. Supported values by data source: * Salesforce: `Lead`, `Opportunity`,
   * `Contact`, `Account`, `Case`, `Contract`, `Campaign` * Jira: `Issue` * Confluence: `Content`,
   * `Space`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityName;

  /**
   * Optional. Configuration for `HEALTHCARE_FHIR` vertical.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig healthcareFhirConfig;

  /**
   * Attributes for indexing. Key: Field name. Value: The key property to map a field to, such as
   * `title`, and `description`. Supported key properties: * `title`: The title for data record.
   * This would be displayed on search results. * `description`: The description for data record.
   * This would be displayed on search results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> keyPropertyMappings;

  /**
   * The parameters for the entity to facilitate data ingestion. E.g. for BigQuery connectors: *
   * Key: `document_id_column` * Value: type STRING. The value of the column ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> params;

  /**
   * Optional. The start schema to use for the DataStore created from this SourceEntity. If unset, a
   * default vertical specialized schema will be used. This field is only used by SetUpDataConnector
   * API, and will be ignored if used in other APIs. This field will be omitted from all API
   * responses including GetDataConnector API. To retrieve a schema of a DataStore, use
   * SchemaService.GetSchema API instead. The provided schema will be validated against certain
   * rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-
   * builder/docs/provide-schema).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDiscoveryengineV1alphaSchema startingSchema;

  /**
   * Output only. The full resource name of the associated data store for the source entity. Format:
   * `projects/locations/collections/dataStores`. When the connector is initialized by the
   * DataConnectorService.SetUpDataConnector method, a DataStore is automatically created for each
   * source entity.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataStore() {
    return dataStore;
  }

  /**
   * Output only. The full resource name of the associated data store for the source entity. Format:
   * `projects/locations/collections/dataStores`. When the connector is initialized by the
   * DataConnectorService.SetUpDataConnector method, a DataStore is automatically created for each
   * source entity.
   * @param dataStore dataStore or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setDataStore(java.lang.String dataStore) {
    this.dataStore = dataStore;
    return this;
  }

  /**
   * The name of the entity. Supported values by data source: * Salesforce: `Lead`, `Opportunity`,
   * `Contact`, `Account`, `Case`, `Contract`, `Campaign` * Jira: `Issue` * Confluence: `Content`,
   * `Space`
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityName() {
    return entityName;
  }

  /**
   * The name of the entity. Supported values by data source: * Salesforce: `Lead`, `Opportunity`,
   * `Contact`, `Account`, `Case`, `Contract`, `Campaign` * Jira: `Issue` * Confluence: `Content`,
   * `Space`
   * @param entityName entityName or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setEntityName(java.lang.String entityName) {
    this.entityName = entityName;
    return this;
  }

  /**
   * Optional. Configuration for `HEALTHCARE_FHIR` vertical.
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig getHealthcareFhirConfig() {
    return healthcareFhirConfig;
  }

  /**
   * Optional. Configuration for `HEALTHCARE_FHIR` vertical.
   * @param healthcareFhirConfig healthcareFhirConfig or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setHealthcareFhirConfig(GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig healthcareFhirConfig) {
    this.healthcareFhirConfig = healthcareFhirConfig;
    return this;
  }

  /**
   * Attributes for indexing. Key: Field name. Value: The key property to map a field to, such as
   * `title`, and `description`. Supported key properties: * `title`: The title for data record.
   * This would be displayed on search results. * `description`: The description for data record.
   * This would be displayed on search results.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getKeyPropertyMappings() {
    return keyPropertyMappings;
  }

  /**
   * Attributes for indexing. Key: Field name. Value: The key property to map a field to, such as
   * `title`, and `description`. Supported key properties: * `title`: The title for data record.
   * This would be displayed on search results. * `description`: The description for data record.
   * This would be displayed on search results.
   * @param keyPropertyMappings keyPropertyMappings or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setKeyPropertyMappings(java.util.Map<String, java.lang.String> keyPropertyMappings) {
    this.keyPropertyMappings = keyPropertyMappings;
    return this;
  }

  /**
   * The parameters for the entity to facilitate data ingestion. E.g. for BigQuery connectors: *
   * Key: `document_id_column` * Value: type STRING. The value of the column ID.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getParams() {
    return params;
  }

  /**
   * The parameters for the entity to facilitate data ingestion. E.g. for BigQuery connectors: *
   * Key: `document_id_column` * Value: type STRING. The value of the column ID.
   * @param params params or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setParams(java.util.Map<String, java.lang.Object> params) {
    this.params = params;
    return this;
  }

  /**
   * Optional. The start schema to use for the DataStore created from this SourceEntity. If unset, a
   * default vertical specialized schema will be used. This field is only used by SetUpDataConnector
   * API, and will be ignored if used in other APIs. This field will be omitted from all API
   * responses including GetDataConnector API. To retrieve a schema of a DataStore, use
   * SchemaService.GetSchema API instead. The provided schema will be validated against certain
   * rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-
   * builder/docs/provide-schema).
   * @return value or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaSchema getStartingSchema() {
    return startingSchema;
  }

  /**
   * Optional. The start schema to use for the DataStore created from this SourceEntity. If unset, a
   * default vertical specialized schema will be used. This field is only used by SetUpDataConnector
   * API, and will be ignored if used in other APIs. This field will be omitted from all API
   * responses including GetDataConnector API. To retrieve a schema of a DataStore, use
   * SchemaService.GetSchema API instead. The provided schema will be validated against certain
   * rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-
   * builder/docs/provide-schema).
   * @param startingSchema startingSchema or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity setStartingSchema(GoogleCloudDiscoveryengineV1alphaSchema startingSchema) {
    this.startingSchema = startingSchema;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity clone() {
    return (GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity) super.clone();
  }

}
