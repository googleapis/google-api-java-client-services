/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Metadata for the entire Person resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiPersonMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Affinities associated with the person, with respect to the requester.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsPeopleOzExternalMergedpeopleapiAffinity> affinity;

  static {
    // hack to force ProGuard to consider AppsPeopleOzExternalMergedpeopleapiAffinity used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsPeopleOzExternalMergedpeopleapiAffinity.class);
  }

  /**
   * Populated when the data for the MergedPerson comes from a 3rd party provider or data source.
   * Clients must display these attributions to the user if they are present. NOTE: This field is
   * only relevant when requesting the following containers: - PLACE (data read from Maps)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> attribution;

  /**
   * The best name to use for this person for user-facing display. See go/people-api-howto:names for
   * details about how this field is computed. In many cases this will simply be Person.name[0].
   * However, Person.name returns only explicit Name fields, but other fields maybe usable as a name
   * (for example: nicknames, file_as, ...). `best_display_name` will be calculated from all fields
   * in storage which are usable as a name, even fields which are not explicitly requested in the
   * MergedPerson result. See PersonNameFormatter.java: go/lvztl.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiBestDisplayName bestDisplayName;

  /**
   * DEPRECATED. Indicates whether the profile owner has blocked this person. Please use
   * `person.read_only_profile_info.block_type` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> blockType;

  /**
   * DEPRECATED. The circles the person belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> circleId;

  /**
   * DEPRECATED. Please use `person.contact_group_memberships` instead. The contact groups the
   * person belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> contactGroupId;

  /**
   * The IDs of all contacts contributing to this person.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> contactId;

  /**
   * DEPRECATED. Customized masking of the response similar to the legacy People2RequestMask
   * People2Params request message. NOTE: This param is inherently client-specific, limited to
   * specific legacy clients, and not open to new usage. NOTE: Effects may be applied to a subset of
   * people in the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customResponseMaskingType;

  /**
   * For sync requests (i.e., changed since the provided sync_token), indicates the resource is a
   * tombstone for a Person resource that has been entirely deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deleted;

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.block_type` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deprecatedBlocked;

  /**
   * DEPRECATED. This field is no longer populated or read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> deprecatedMembershipCircleId;

  /**
   * DEPRECATED. This field is no longer populated or read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> deprecatedMembershipContactGroupId;

  /**
   * Info about the aggregated device contacts. When the person contains RAW_DEVICE_CONTACT
   * containers, each DeviceContactInfo represents a single aggregate device contact made up of one
   * or more raw device contacts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo> deviceContactInfo;

  static {
    // hack to force ProGuard to consider AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo.class);
  }

  /**
   * Detailed metadata about the lookup IDs and data sources included in a MergedPerson result.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiIdentityInfo identityInfo;

  /**
   * DEPRECATED. Indicates whether this person is in the same domain as the viewer. For proxying
   * trust between two users based on organization membership, see: - go/flex-orgs-platform - go
   * /flex-orgs-compliance-handbook (especially http://shortn/_ChwfAY36Ys)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inViewerDomain;

  /**
   * DEPRECATED. Indicates whether this person is blocking the profile owner. Please use
   * `person.read_only_profile_info.incoming_block_type` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> incomingBlockType;

  /**
   * DEPRECATED. The last update timestamps for the constituent components of this person are
   * available in `identity_info.source_ids`. The time of the most recent change to this person, in
   * !!!NANOS!!! (due to a bug). May be a change to any of the underlying parts of the person
   * (profile, contact, etc.). Not guaranteed to be the timestamp of the most recent change, due to
   * limitations in the backend. This field is not fully deprecated for backend container-specific
   * storage services like ProfileService which lack identity_info. The use is still discouraged in
   * such systems and they should prefer to use the `last_update_time` field of this message
   * instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastUpdateTimeMicros;

  /**
   * The person model that is used to construct this person.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String model;

  /**
   * DEPRECATED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String objectType;

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.owner_id` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ownerId;

  /**
   * DEPRECATED. See `person.read_only_profile_info.owner_user_type` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ownerUserType;

  /**
   * DEPRECATED. Please use `Person.plus_page_info` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String plusPageType;

  /**
   * DEPRECATED. This field is no longer populated or read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> previousPersonId;

  /**
   * DEPRECATED. Stats/counters pertaining to followers and incoming edges. Please use
   * `person.read_only_profile_info.profile_owner_stats` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats profileOwnerStats;

  /**
   * Contact people-directory-dev-team@ if you want to use this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo scoringInfo;

  /**
   * DEPRECATED. This field is no longer populated or read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiUserVisibleStats userVisibleStats;

  /**
   * Affinities associated with the person, with respect to the requester.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsPeopleOzExternalMergedpeopleapiAffinity> getAffinity() {
    return affinity;
  }

  /**
   * Affinities associated with the person, with respect to the requester.
   * @param affinity affinity or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setAffinity(java.util.List<AppsPeopleOzExternalMergedpeopleapiAffinity> affinity) {
    this.affinity = affinity;
    return this;
  }

  /**
   * Populated when the data for the MergedPerson comes from a 3rd party provider or data source.
   * Clients must display these attributions to the user if they are present. NOTE: This field is
   * only relevant when requesting the following containers: - PLACE (data read from Maps)
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAttribution() {
    return attribution;
  }

  /**
   * Populated when the data for the MergedPerson comes from a 3rd party provider or data source.
   * Clients must display these attributions to the user if they are present. NOTE: This field is
   * only relevant when requesting the following containers: - PLACE (data read from Maps)
   * @param attribution attribution or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setAttribution(java.util.List<java.lang.String> attribution) {
    this.attribution = attribution;
    return this;
  }

  /**
   * The best name to use for this person for user-facing display. See go/people-api-howto:names for
   * details about how this field is computed. In many cases this will simply be Person.name[0].
   * However, Person.name returns only explicit Name fields, but other fields maybe usable as a name
   * (for example: nicknames, file_as, ...). `best_display_name` will be calculated from all fields
   * in storage which are usable as a name, even fields which are not explicitly requested in the
   * MergedPerson result. See PersonNameFormatter.java: go/lvztl.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName getBestDisplayName() {
    return bestDisplayName;
  }

  /**
   * The best name to use for this person for user-facing display. See go/people-api-howto:names for
   * details about how this field is computed. In many cases this will simply be Person.name[0].
   * However, Person.name returns only explicit Name fields, but other fields maybe usable as a name
   * (for example: nicknames, file_as, ...). `best_display_name` will be calculated from all fields
   * in storage which are usable as a name, even fields which are not explicitly requested in the
   * MergedPerson result. See PersonNameFormatter.java: go/lvztl.
   * @param bestDisplayName bestDisplayName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setBestDisplayName(AppsPeopleOzExternalMergedpeopleapiBestDisplayName bestDisplayName) {
    this.bestDisplayName = bestDisplayName;
    return this;
  }

  /**
   * DEPRECATED. Indicates whether the profile owner has blocked this person. Please use
   * `person.read_only_profile_info.block_type` instead.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getBlockType() {
    return blockType;
  }

  /**
   * DEPRECATED. Indicates whether the profile owner has blocked this person. Please use
   * `person.read_only_profile_info.block_type` instead.
   * @param blockType blockType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setBlockType(java.util.List<java.lang.String> blockType) {
    this.blockType = blockType;
    return this;
  }

  /**
   * DEPRECATED. The circles the person belongs to.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCircleId() {
    return circleId;
  }

  /**
   * DEPRECATED. The circles the person belongs to.
   * @param circleId circleId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setCircleId(java.util.List<java.lang.String> circleId) {
    this.circleId = circleId;
    return this;
  }

  /**
   * DEPRECATED. Please use `person.contact_group_memberships` instead. The contact groups the
   * person belongs to.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getContactGroupId() {
    return contactGroupId;
  }

  /**
   * DEPRECATED. Please use `person.contact_group_memberships` instead. The contact groups the
   * person belongs to.
   * @param contactGroupId contactGroupId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setContactGroupId(java.util.List<java.lang.String> contactGroupId) {
    this.contactGroupId = contactGroupId;
    return this;
  }

  /**
   * The IDs of all contacts contributing to this person.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getContactId() {
    return contactId;
  }

  /**
   * The IDs of all contacts contributing to this person.
   * @param contactId contactId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setContactId(java.util.List<java.lang.Long> contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * DEPRECATED. Customized masking of the response similar to the legacy People2RequestMask
   * People2Params request message. NOTE: This param is inherently client-specific, limited to
   * specific legacy clients, and not open to new usage. NOTE: Effects may be applied to a subset of
   * people in the response.
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomResponseMaskingType() {
    return customResponseMaskingType;
  }

  /**
   * DEPRECATED. Customized masking of the response similar to the legacy People2RequestMask
   * People2Params request message. NOTE: This param is inherently client-specific, limited to
   * specific legacy clients, and not open to new usage. NOTE: Effects may be applied to a subset of
   * people in the response.
   * @param customResponseMaskingType customResponseMaskingType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setCustomResponseMaskingType(java.lang.String customResponseMaskingType) {
    this.customResponseMaskingType = customResponseMaskingType;
    return this;
  }

  /**
   * For sync requests (i.e., changed since the provided sync_token), indicates the resource is a
   * tombstone for a Person resource that has been entirely deleted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeleted() {
    return deleted;
  }

  /**
   * For sync requests (i.e., changed since the provided sync_token), indicates the resource is a
   * tombstone for a Person resource that has been entirely deleted.
   * @param deleted deleted or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setDeleted(java.lang.Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.block_type` instead.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeprecatedBlocked() {
    return deprecatedBlocked;
  }

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.block_type` instead.
   * @param deprecatedBlocked deprecatedBlocked or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setDeprecatedBlocked(java.lang.Boolean deprecatedBlocked) {
    this.deprecatedBlocked = deprecatedBlocked;
    return this;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getDeprecatedMembershipCircleId() {
    return deprecatedMembershipCircleId;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @param deprecatedMembershipCircleId deprecatedMembershipCircleId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setDeprecatedMembershipCircleId(java.util.List<java.lang.Long> deprecatedMembershipCircleId) {
    this.deprecatedMembershipCircleId = deprecatedMembershipCircleId;
    return this;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getDeprecatedMembershipContactGroupId() {
    return deprecatedMembershipContactGroupId;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @param deprecatedMembershipContactGroupId deprecatedMembershipContactGroupId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setDeprecatedMembershipContactGroupId(java.util.List<java.lang.Long> deprecatedMembershipContactGroupId) {
    this.deprecatedMembershipContactGroupId = deprecatedMembershipContactGroupId;
    return this;
  }

  /**
   * Info about the aggregated device contacts. When the person contains RAW_DEVICE_CONTACT
   * containers, each DeviceContactInfo represents a single aggregate device contact made up of one
   * or more raw device contacts.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo> getDeviceContactInfo() {
    return deviceContactInfo;
  }

  /**
   * Info about the aggregated device contacts. When the person contains RAW_DEVICE_CONTACT
   * containers, each DeviceContactInfo represents a single aggregate device contact made up of one
   * or more raw device contacts.
   * @param deviceContactInfo deviceContactInfo or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setDeviceContactInfo(java.util.List<AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo> deviceContactInfo) {
    this.deviceContactInfo = deviceContactInfo;
    return this;
  }

  /**
   * Detailed metadata about the lookup IDs and data sources included in a MergedPerson result.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiIdentityInfo getIdentityInfo() {
    return identityInfo;
  }

  /**
   * Detailed metadata about the lookup IDs and data sources included in a MergedPerson result.
   * @param identityInfo identityInfo or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setIdentityInfo(AppsPeopleOzExternalMergedpeopleapiIdentityInfo identityInfo) {
    this.identityInfo = identityInfo;
    return this;
  }

  /**
   * DEPRECATED. Indicates whether this person is in the same domain as the viewer. For proxying
   * trust between two users based on organization membership, see: - go/flex-orgs-platform - go
   * /flex-orgs-compliance-handbook (especially http://shortn/_ChwfAY36Ys)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInViewerDomain() {
    return inViewerDomain;
  }

  /**
   * DEPRECATED. Indicates whether this person is in the same domain as the viewer. For proxying
   * trust between two users based on organization membership, see: - go/flex-orgs-platform - go
   * /flex-orgs-compliance-handbook (especially http://shortn/_ChwfAY36Ys)
   * @param inViewerDomain inViewerDomain or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setInViewerDomain(java.lang.Boolean inViewerDomain) {
    this.inViewerDomain = inViewerDomain;
    return this;
  }

  /**
   * DEPRECATED. Indicates whether this person is blocking the profile owner. Please use
   * `person.read_only_profile_info.incoming_block_type` instead.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIncomingBlockType() {
    return incomingBlockType;
  }

  /**
   * DEPRECATED. Indicates whether this person is blocking the profile owner. Please use
   * `person.read_only_profile_info.incoming_block_type` instead.
   * @param incomingBlockType incomingBlockType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setIncomingBlockType(java.util.List<java.lang.String> incomingBlockType) {
    this.incomingBlockType = incomingBlockType;
    return this;
  }

  /**
   * DEPRECATED. The last update timestamps for the constituent components of this person are
   * available in `identity_info.source_ids`. The time of the most recent change to this person, in
   * !!!NANOS!!! (due to a bug). May be a change to any of the underlying parts of the person
   * (profile, contact, etc.). Not guaranteed to be the timestamp of the most recent change, due to
   * limitations in the backend. This field is not fully deprecated for backend container-specific
   * storage services like ProfileService which lack identity_info. The use is still discouraged in
   * such systems and they should prefer to use the `last_update_time` field of this message
   * instead.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastUpdateTimeMicros() {
    return lastUpdateTimeMicros;
  }

  /**
   * DEPRECATED. The last update timestamps for the constituent components of this person are
   * available in `identity_info.source_ids`. The time of the most recent change to this person, in
   * !!!NANOS!!! (due to a bug). May be a change to any of the underlying parts of the person
   * (profile, contact, etc.). Not guaranteed to be the timestamp of the most recent change, due to
   * limitations in the backend. This field is not fully deprecated for backend container-specific
   * storage services like ProfileService which lack identity_info. The use is still discouraged in
   * such systems and they should prefer to use the `last_update_time` field of this message
   * instead.
   * @param lastUpdateTimeMicros lastUpdateTimeMicros or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setLastUpdateTimeMicros(java.lang.Long lastUpdateTimeMicros) {
    this.lastUpdateTimeMicros = lastUpdateTimeMicros;
    return this;
  }

  /**
   * The person model that is used to construct this person.
   * @return value or {@code null} for none
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * The person model that is used to construct this person.
   * @param model model or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setModel(java.lang.String model) {
    this.model = model;
    return this;
  }

  /**
   * DEPRECATED.
   * @return value or {@code null} for none
   */
  public java.lang.String getObjectType() {
    return objectType;
  }

  /**
   * DEPRECATED.
   * @param objectType objectType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setObjectType(java.lang.String objectType) {
    this.objectType = objectType;
    return this;
  }

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.owner_id` instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getOwnerId() {
    return ownerId;
  }

  /**
   * DEPRECATED. Please use `person.read_only_profile_info.owner_id` instead.
   * @param ownerId ownerId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setOwnerId(java.lang.String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * DEPRECATED. See `person.read_only_profile_info.owner_user_type` instead.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOwnerUserType() {
    return ownerUserType;
  }

  /**
   * DEPRECATED. See `person.read_only_profile_info.owner_user_type` instead.
   * @param ownerUserType ownerUserType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setOwnerUserType(java.util.List<java.lang.String> ownerUserType) {
    this.ownerUserType = ownerUserType;
    return this;
  }

  /**
   * DEPRECATED. Please use `Person.plus_page_info` instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlusPageType() {
    return plusPageType;
  }

  /**
   * DEPRECATED. Please use `Person.plus_page_info` instead.
   * @param plusPageType plusPageType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setPlusPageType(java.lang.String plusPageType) {
    this.plusPageType = plusPageType;
    return this;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPreviousPersonId() {
    return previousPersonId;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @param previousPersonId previousPersonId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setPreviousPersonId(java.util.List<java.lang.String> previousPersonId) {
    this.previousPersonId = previousPersonId;
    return this;
  }

  /**
   * DEPRECATED. Stats/counters pertaining to followers and incoming edges. Please use
   * `person.read_only_profile_info.profile_owner_stats` instead.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats getProfileOwnerStats() {
    return profileOwnerStats;
  }

  /**
   * DEPRECATED. Stats/counters pertaining to followers and incoming edges. Please use
   * `person.read_only_profile_info.profile_owner_stats` instead.
   * @param profileOwnerStats profileOwnerStats or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setProfileOwnerStats(AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats profileOwnerStats) {
    this.profileOwnerStats = profileOwnerStats;
    return this;
  }

  /**
   * Contact people-directory-dev-team@ if you want to use this field.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo getScoringInfo() {
    return scoringInfo;
  }

  /**
   * Contact people-directory-dev-team@ if you want to use this field.
   * @param scoringInfo scoringInfo or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setScoringInfo(AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo scoringInfo) {
    this.scoringInfo = scoringInfo;
    return this;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiUserVisibleStats getUserVisibleStats() {
    return userVisibleStats;
  }

  /**
   * DEPRECATED. This field is no longer populated or read.
   * @param userVisibleStats userVisibleStats or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata setUserVisibleStats(AppsPeopleOzExternalMergedpeopleapiUserVisibleStats userVisibleStats) {
    this.userVisibleStats = userVisibleStats;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiPersonMetadata) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPersonMetadata clone() {
    return (AppsPeopleOzExternalMergedpeopleapiPersonMetadata) super.clone();
  }

}
