/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Annotation metadata for a Weblink. In case of pasted link it can qualify to be other types in
 * addition to being a URL - like DRIVE_DOC/DRIVE_SHEET and so on. The URL metadata will also be
 * present and it's up to the client to decide which metadata to render it with. These fields are
 * filled in using page render service.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UrlMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Domain for this url. If it's an IP address the address is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String domain;

  /**
   * The signed GWS URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SafeUrlProto gwsUrl;

  /**
   * The expiration timestamp for GWS URL, only set when gws_url is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long gwsUrlExpirationTimestamp;

  /**
   * Dimensions of the image: height. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageHeight;

  /**
   * Representative image of the website.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUrl;

  /**
   * Dimensions of the image: width. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageWidth;

  /**
   * Dimensions of the image: height.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer intImageHeight;

  /**
   * Dimensions of the image: width.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer intImageWidth;

  /**
   * Mime type of the content (Currently mapped from Page Render Service ItemType) Note that this is
   * not necessarily the mime type of the http resource. For example a text/html from youtube or
   * vimeo may actually be classified as a video type. Then we shall mark it as video since we don't
   * know exactly what type of video it is.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * The stable redirect URL pointing to frontend server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SafeUrlProto redirectUrl;

  /**
   * If the UrlMetadata is missing data for rendering a chip. Deprecated. Use
   * Annotation.ChipRenderType instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean shouldNotRender;

  /**
   * Snippet/small description of the weblink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snippet;

  /**
   * Title of the Weblink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The original URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SafeUrlProto url;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String urlSource;

  /**
   * Domain for this url. If it's an IP address the address is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getDomain() {
    return domain;
  }

  /**
   * Domain for this url. If it's an IP address the address is returned.
   * @param domain domain or {@code null} for none
   */
  public UrlMetadata setDomain(java.lang.String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * The signed GWS URL.
   * @return value or {@code null} for none
   */
  public SafeUrlProto getGwsUrl() {
    return gwsUrl;
  }

  /**
   * The signed GWS URL.
   * @param gwsUrl gwsUrl or {@code null} for none
   */
  public UrlMetadata setGwsUrl(SafeUrlProto gwsUrl) {
    this.gwsUrl = gwsUrl;
    return this;
  }

  /**
   * The expiration timestamp for GWS URL, only set when gws_url is set.
   * @return value or {@code null} for none
   */
  public java.lang.Long getGwsUrlExpirationTimestamp() {
    return gwsUrlExpirationTimestamp;
  }

  /**
   * The expiration timestamp for GWS URL, only set when gws_url is set.
   * @param gwsUrlExpirationTimestamp gwsUrlExpirationTimestamp or {@code null} for none
   */
  public UrlMetadata setGwsUrlExpirationTimestamp(java.lang.Long gwsUrlExpirationTimestamp) {
    this.gwsUrlExpirationTimestamp = gwsUrlExpirationTimestamp;
    return this;
  }

  /**
   * Dimensions of the image: height. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageHeight() {
    return imageHeight;
  }

  /**
   * Dimensions of the image: height. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * @param imageHeight imageHeight or {@code null} for none
   */
  public UrlMetadata setImageHeight(java.lang.String imageHeight) {
    this.imageHeight = imageHeight;
    return this;
  }

  /**
   * Representative image of the website.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * Representative image of the website.
   * @param imageUrl imageUrl or {@code null} for none
   */
  public UrlMetadata setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Dimensions of the image: width. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageWidth() {
    return imageWidth;
  }

  /**
   * Dimensions of the image: width. This field is string to match with page render service
   * response. Deprecated. Use int_image_height instead.
   * @param imageWidth imageWidth or {@code null} for none
   */
  public UrlMetadata setImageWidth(java.lang.String imageWidth) {
    this.imageWidth = imageWidth;
    return this;
  }

  /**
   * Dimensions of the image: height.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIntImageHeight() {
    return intImageHeight;
  }

  /**
   * Dimensions of the image: height.
   * @param intImageHeight intImageHeight or {@code null} for none
   */
  public UrlMetadata setIntImageHeight(java.lang.Integer intImageHeight) {
    this.intImageHeight = intImageHeight;
    return this;
  }

  /**
   * Dimensions of the image: width.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIntImageWidth() {
    return intImageWidth;
  }

  /**
   * Dimensions of the image: width.
   * @param intImageWidth intImageWidth or {@code null} for none
   */
  public UrlMetadata setIntImageWidth(java.lang.Integer intImageWidth) {
    this.intImageWidth = intImageWidth;
    return this;
  }

  /**
   * Mime type of the content (Currently mapped from Page Render Service ItemType) Note that this is
   * not necessarily the mime type of the http resource. For example a text/html from youtube or
   * vimeo may actually be classified as a video type. Then we shall mark it as video since we don't
   * know exactly what type of video it is.
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * Mime type of the content (Currently mapped from Page Render Service ItemType) Note that this is
   * not necessarily the mime type of the http resource. For example a text/html from youtube or
   * vimeo may actually be classified as a video type. Then we shall mark it as video since we don't
   * know exactly what type of video it is.
   * @param mimeType mimeType or {@code null} for none
   */
  public UrlMetadata setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * The stable redirect URL pointing to frontend server.
   * @return value or {@code null} for none
   */
  public SafeUrlProto getRedirectUrl() {
    return redirectUrl;
  }

  /**
   * The stable redirect URL pointing to frontend server.
   * @param redirectUrl redirectUrl or {@code null} for none
   */
  public UrlMetadata setRedirectUrl(SafeUrlProto redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

  /**
   * If the UrlMetadata is missing data for rendering a chip. Deprecated. Use
   * Annotation.ChipRenderType instead.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShouldNotRender() {
    return shouldNotRender;
  }

  /**
   * If the UrlMetadata is missing data for rendering a chip. Deprecated. Use
   * Annotation.ChipRenderType instead.
   * @param shouldNotRender shouldNotRender or {@code null} for none
   */
  public UrlMetadata setShouldNotRender(java.lang.Boolean shouldNotRender) {
    this.shouldNotRender = shouldNotRender;
    return this;
  }

  /**
   * Snippet/small description of the weblink.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnippet() {
    return snippet;
  }

  /**
   * Snippet/small description of the weblink.
   * @param snippet snippet or {@code null} for none
   */
  public UrlMetadata setSnippet(java.lang.String snippet) {
    this.snippet = snippet;
    return this;
  }

  /**
   * Title of the Weblink.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title of the Weblink.
   * @param title title or {@code null} for none
   */
  public UrlMetadata setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * The original URL.
   * @return value or {@code null} for none
   */
  public SafeUrlProto getUrl() {
    return url;
  }

  /**
   * The original URL.
   * @param url url or {@code null} for none
   */
  public UrlMetadata setUrl(SafeUrlProto url) {
    this.url = url;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUrlSource() {
    return urlSource;
  }

  /**
   * @param urlSource urlSource or {@code null} for none
   */
  public UrlMetadata setUrlSource(java.lang.String urlSource) {
    this.urlSource = urlSource;
    return this;
  }

  @Override
  public UrlMetadata set(String fieldName, Object value) {
    return (UrlMetadata) super.set(fieldName, value);
  }

  @Override
  public UrlMetadata clone() {
    return (UrlMetadata) super.clone();
  }

}
