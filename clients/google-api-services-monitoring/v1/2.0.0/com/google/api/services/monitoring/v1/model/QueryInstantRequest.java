/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * QueryInstantRequest holds all parameters of the Prometheus upstream instant query API plus GCM
 * specific parameters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QueryInstantRequest extends com.google.api.client.json.GenericJson {

  /**
   * A PromQL query string. Query lanauge documentation:
   * https://prometheus.io/docs/prometheus/latest/querying/basics/.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * The single point in time to evaluate the query for. Either floating point UNIX seconds or
   * RFC3339 formatted timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String time;

  /**
   * An upper bound timeout for the query. Either a Prometheus duration string
   * (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating
   * point seconds. This non-standard encoding must be used for compatibility with the open source
   * API. Clients may still implement timeouts at the connection level while ignoring this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeout;

  /**
   * A PromQL query string. Query lanauge documentation:
   * https://prometheus.io/docs/prometheus/latest/querying/basics/.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * A PromQL query string. Query lanauge documentation:
   * https://prometheus.io/docs/prometheus/latest/querying/basics/.
   * @param query query or {@code null} for none
   */
  public QueryInstantRequest setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * The single point in time to evaluate the query for. Either floating point UNIX seconds or
   * RFC3339 formatted timestamp.
   * @return value or {@code null} for none
   */
  public java.lang.String getTime() {
    return time;
  }

  /**
   * The single point in time to evaluate the query for. Either floating point UNIX seconds or
   * RFC3339 formatted timestamp.
   * @param time time or {@code null} for none
   */
  public QueryInstantRequest setTime(java.lang.String time) {
    this.time = time;
    return this;
  }

  /**
   * An upper bound timeout for the query. Either a Prometheus duration string
   * (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating
   * point seconds. This non-standard encoding must be used for compatibility with the open source
   * API. Clients may still implement timeouts at the connection level while ignoring this field.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeout() {
    return timeout;
  }

  /**
   * An upper bound timeout for the query. Either a Prometheus duration string
   * (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating
   * point seconds. This non-standard encoding must be used for compatibility with the open source
   * API. Clients may still implement timeouts at the connection level while ignoring this field.
   * @param timeout timeout or {@code null} for none
   */
  public QueryInstantRequest setTimeout(java.lang.String timeout) {
    this.timeout = timeout;
    return this;
  }

  @Override
  public QueryInstantRequest set(String fieldName, Object value) {
    return (QueryInstantRequest) super.set(fieldName, value);
  }

  @Override
  public QueryInstantRequest clone() {
    return (QueryInstantRequest) super.clone();
  }

}
