/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseml.v2beta.model;

/**
 * A `Maps` chunk is a piece of evidence that comes from Google Maps. It contains information about
 * a place, such as its name, address, and reviews. This is used to provide the user with rich,
 * location-based information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase ML API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1GroundingChunkMaps extends com.google.api.client.json.GenericJson {

  /**
   * The sources that were used to generate the place answer. This includes review snippets and
   * photos that were used to generate the answer, as well as URIs to flag content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1GroundingChunkMapsPlaceAnswerSources placeAnswerSources;

  /**
   * This Place's resource name, in `places/{place_id}` format. This can be used to look up the
   * place in the Google Maps API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeId;

  /**
   * The text of the place answer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * The title of the place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The URI of the place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * The sources that were used to generate the place answer. This includes review snippets and
   * photos that were used to generate the answer, as well as URIs to flag content.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMapsPlaceAnswerSources getPlaceAnswerSources() {
    return placeAnswerSources;
  }

  /**
   * The sources that were used to generate the place answer. This includes review snippets and
   * photos that were used to generate the answer, as well as URIs to flag content.
   * @param placeAnswerSources placeAnswerSources or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps setPlaceAnswerSources(GoogleCloudAiplatformV1beta1GroundingChunkMapsPlaceAnswerSources placeAnswerSources) {
    this.placeAnswerSources = placeAnswerSources;
    return this;
  }

  /**
   * This Place's resource name, in `places/{place_id}` format. This can be used to look up the
   * place in the Google Maps API.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceId() {
    return placeId;
  }

  /**
   * This Place's resource name, in `places/{place_id}` format. This can be used to look up the
   * place in the Google Maps API.
   * @param placeId placeId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps setPlaceId(java.lang.String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * The text of the place answer.
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * The text of the place answer.
   * @param text text or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * The title of the place.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The title of the place.
   * @param title title or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * The URI of the place.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * The URI of the place.
   * @param uri uri or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1GroundingChunkMaps) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1GroundingChunkMaps clone() {
    return (GoogleCloudAiplatformV1beta1GroundingChunkMaps) super.clone();
  }

}
