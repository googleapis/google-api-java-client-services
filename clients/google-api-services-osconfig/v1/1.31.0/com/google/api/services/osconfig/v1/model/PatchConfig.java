/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1.model;

/**
 * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM
 * instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PatchConfig extends com.google.api.client.json.GenericJson {

  /**
   * Apt update settings. Use this setting to override the default `apt` patch rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AptSettings apt;

  /**
   * Goo update settings. Use this setting to override the default `goo` patch rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooSettings goo;

  /**
   * The `ExecStep` to run after the patch update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExecStep postStep;

  /**
   * The `ExecStep` to run before the patch update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExecStep preStep;

  /**
   * Post-patch reboot settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rebootConfig;

  /**
   * Windows update settings. Use this override the default windows patch rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WindowsUpdateSettings windowsUpdate;

  /**
   * Yum update settings. Use this setting to override the default `yum` patch rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private YumSettings yum;

  /**
   * Zypper update settings. Use this setting to override the default `zypper` patch rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ZypperSettings zypper;

  /**
   * Apt update settings. Use this setting to override the default `apt` patch rules.
   * @return value or {@code null} for none
   */
  public AptSettings getApt() {
    return apt;
  }

  /**
   * Apt update settings. Use this setting to override the default `apt` patch rules.
   * @param apt apt or {@code null} for none
   */
  public PatchConfig setApt(AptSettings apt) {
    this.apt = apt;
    return this;
  }

  /**
   * Goo update settings. Use this setting to override the default `goo` patch rules.
   * @return value or {@code null} for none
   */
  public GooSettings getGoo() {
    return goo;
  }

  /**
   * Goo update settings. Use this setting to override the default `goo` patch rules.
   * @param goo goo or {@code null} for none
   */
  public PatchConfig setGoo(GooSettings goo) {
    this.goo = goo;
    return this;
  }

  /**
   * The `ExecStep` to run after the patch update.
   * @return value or {@code null} for none
   */
  public ExecStep getPostStep() {
    return postStep;
  }

  /**
   * The `ExecStep` to run after the patch update.
   * @param postStep postStep or {@code null} for none
   */
  public PatchConfig setPostStep(ExecStep postStep) {
    this.postStep = postStep;
    return this;
  }

  /**
   * The `ExecStep` to run before the patch update.
   * @return value or {@code null} for none
   */
  public ExecStep getPreStep() {
    return preStep;
  }

  /**
   * The `ExecStep` to run before the patch update.
   * @param preStep preStep or {@code null} for none
   */
  public PatchConfig setPreStep(ExecStep preStep) {
    this.preStep = preStep;
    return this;
  }

  /**
   * Post-patch reboot settings.
   * @return value or {@code null} for none
   */
  public java.lang.String getRebootConfig() {
    return rebootConfig;
  }

  /**
   * Post-patch reboot settings.
   * @param rebootConfig rebootConfig or {@code null} for none
   */
  public PatchConfig setRebootConfig(java.lang.String rebootConfig) {
    this.rebootConfig = rebootConfig;
    return this;
  }

  /**
   * Windows update settings. Use this override the default windows patch rules.
   * @return value or {@code null} for none
   */
  public WindowsUpdateSettings getWindowsUpdate() {
    return windowsUpdate;
  }

  /**
   * Windows update settings. Use this override the default windows patch rules.
   * @param windowsUpdate windowsUpdate or {@code null} for none
   */
  public PatchConfig setWindowsUpdate(WindowsUpdateSettings windowsUpdate) {
    this.windowsUpdate = windowsUpdate;
    return this;
  }

  /**
   * Yum update settings. Use this setting to override the default `yum` patch rules.
   * @return value or {@code null} for none
   */
  public YumSettings getYum() {
    return yum;
  }

  /**
   * Yum update settings. Use this setting to override the default `yum` patch rules.
   * @param yum yum or {@code null} for none
   */
  public PatchConfig setYum(YumSettings yum) {
    this.yum = yum;
    return this;
  }

  /**
   * Zypper update settings. Use this setting to override the default `zypper` patch rules.
   * @return value or {@code null} for none
   */
  public ZypperSettings getZypper() {
    return zypper;
  }

  /**
   * Zypper update settings. Use this setting to override the default `zypper` patch rules.
   * @param zypper zypper or {@code null} for none
   */
  public PatchConfig setZypper(ZypperSettings zypper) {
    this.zypper = zypper;
    return this;
  }

  @Override
  public PatchConfig set(String fieldName, Object value) {
    return (PatchConfig) super.set(fieldName, value);
  }

  @Override
  public PatchConfig clone() {
    return (PatchConfig) super.clone();
  }

}
