/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Configuration to enable an app as an extension app, with the capability of interacting with
 * Android Device Policy offline. For Android versions 11 and above, extension apps are exempt from
 * battery restrictions so will not be placed into the restricted App Standby Bucket
 * (https://developer.android.com/topic/performance/appstandby#restricted-bucket). Extensions apps
 * are also protected against users clearing their data or force-closing the application, although
 * admins can continue to use the clear app data command on extension apps if needed for Android 11
 * and above.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExtensionConfig extends com.google.api.client.json.GenericJson {

  /**
   * Fully qualified class name of the receiver service class for Android Device Policy to notify
   * the extension app of any local command status updates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notificationReceiver;

  /**
   * Hex-encoded SHA-256 hashes of the signing key certificates of the extension app. Only
   * hexadecimal string representations of 64 characters are valid.The signing key certificate
   * fingerprints are always obtained from the Play Store and this field is used to provide
   * additional signing key certificate fingerprints. However, if the application is not available
   * on the Play Store, this field needs to be set. A NonComplianceDetail with INVALID_VALUE is
   * reported if this field is not set when the application is not available on the Play Store.The
   * signing key certificate fingerprint of the extension app on the device must match one of the
   * signing key certificate fingerprints obtained from the Play Store or the ones provided in this
   * field for the app to be able to communicate with Android Device Policy.In production use cases,
   * it is recommended to leave this empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> signingKeyFingerprintsSha256;

  /**
   * Fully qualified class name of the receiver service class for Android Device Policy to notify
   * the extension app of any local command status updates.
   * @return value or {@code null} for none
   */
  public java.lang.String getNotificationReceiver() {
    return notificationReceiver;
  }

  /**
   * Fully qualified class name of the receiver service class for Android Device Policy to notify
   * the extension app of any local command status updates.
   * @param notificationReceiver notificationReceiver or {@code null} for none
   */
  public ExtensionConfig setNotificationReceiver(java.lang.String notificationReceiver) {
    this.notificationReceiver = notificationReceiver;
    return this;
  }

  /**
   * Hex-encoded SHA-256 hashes of the signing key certificates of the extension app. Only
   * hexadecimal string representations of 64 characters are valid.The signing key certificate
   * fingerprints are always obtained from the Play Store and this field is used to provide
   * additional signing key certificate fingerprints. However, if the application is not available
   * on the Play Store, this field needs to be set. A NonComplianceDetail with INVALID_VALUE is
   * reported if this field is not set when the application is not available on the Play Store.The
   * signing key certificate fingerprint of the extension app on the device must match one of the
   * signing key certificate fingerprints obtained from the Play Store or the ones provided in this
   * field for the app to be able to communicate with Android Device Policy.In production use cases,
   * it is recommended to leave this empty.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSigningKeyFingerprintsSha256() {
    return signingKeyFingerprintsSha256;
  }

  /**
   * Hex-encoded SHA-256 hashes of the signing key certificates of the extension app. Only
   * hexadecimal string representations of 64 characters are valid.The signing key certificate
   * fingerprints are always obtained from the Play Store and this field is used to provide
   * additional signing key certificate fingerprints. However, if the application is not available
   * on the Play Store, this field needs to be set. A NonComplianceDetail with INVALID_VALUE is
   * reported if this field is not set when the application is not available on the Play Store.The
   * signing key certificate fingerprint of the extension app on the device must match one of the
   * signing key certificate fingerprints obtained from the Play Store or the ones provided in this
   * field for the app to be able to communicate with Android Device Policy.In production use cases,
   * it is recommended to leave this empty.
   * @param signingKeyFingerprintsSha256 signingKeyFingerprintsSha256 or {@code null} for none
   */
  public ExtensionConfig setSigningKeyFingerprintsSha256(java.util.List<java.lang.String> signingKeyFingerprintsSha256) {
    this.signingKeyFingerprintsSha256 = signingKeyFingerprintsSha256;
    return this;
  }

  @Override
  public ExtensionConfig set(String fieldName, Object value) {
    return (ExtensionConfig) super.set(fieldName, value);
  }

  @Override
  public ExtensionConfig clone() {
    return (ExtensionConfig) super.clone();
  }

}
