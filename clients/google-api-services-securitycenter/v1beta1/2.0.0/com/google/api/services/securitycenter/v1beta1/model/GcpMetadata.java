/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1beta1.model;

/**
 * GCP metadata associated with the resource, only applicable if the finding's cloud provider is
 * Google Cloud Platform.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GcpMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Contains a Folder message for each folder in the assets ancestry. The first folder
   * is the deepest nested folder, and the last folder is the folder directly under the
   * Organization.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudSecuritycenterV2Folder> folders;

  /**
   * The name of the organization that the resource belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organization;

  /**
   * The full resource name of resource's parent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parent;

  /**
   * The human readable name of resource's parent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentDisplayName;

  /**
   * The full resource name of project that the resource belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String project;

  /**
   * The project ID that the resource belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectDisplayName;

  /**
   * Output only. Contains a Folder message for each folder in the assets ancestry. The first folder
   * is the deepest nested folder, and the last folder is the folder directly under the
   * Organization.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudSecuritycenterV2Folder> getFolders() {
    return folders;
  }

  /**
   * Output only. Contains a Folder message for each folder in the assets ancestry. The first folder
   * is the deepest nested folder, and the last folder is the folder directly under the
   * Organization.
   * @param folders folders or {@code null} for none
   */
  public GcpMetadata setFolders(java.util.List<GoogleCloudSecuritycenterV2Folder> folders) {
    this.folders = folders;
    return this;
  }

  /**
   * The name of the organization that the resource belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganization() {
    return organization;
  }

  /**
   * The name of the organization that the resource belongs to.
   * @param organization organization or {@code null} for none
   */
  public GcpMetadata setOrganization(java.lang.String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * The full resource name of resource's parent.
   * @return value or {@code null} for none
   */
  public java.lang.String getParent() {
    return parent;
  }

  /**
   * The full resource name of resource's parent.
   * @param parent parent or {@code null} for none
   */
  public GcpMetadata setParent(java.lang.String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * The human readable name of resource's parent.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentDisplayName() {
    return parentDisplayName;
  }

  /**
   * The human readable name of resource's parent.
   * @param parentDisplayName parentDisplayName or {@code null} for none
   */
  public GcpMetadata setParentDisplayName(java.lang.String parentDisplayName) {
    this.parentDisplayName = parentDisplayName;
    return this;
  }

  /**
   * The full resource name of project that the resource belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getProject() {
    return project;
  }

  /**
   * The full resource name of project that the resource belongs to.
   * @param project project or {@code null} for none
   */
  public GcpMetadata setProject(java.lang.String project) {
    this.project = project;
    return this;
  }

  /**
   * The project ID that the resource belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectDisplayName() {
    return projectDisplayName;
  }

  /**
   * The project ID that the resource belongs to.
   * @param projectDisplayName projectDisplayName or {@code null} for none
   */
  public GcpMetadata setProjectDisplayName(java.lang.String projectDisplayName) {
    this.projectDisplayName = projectDisplayName;
    return this;
  }

  @Override
  public GcpMetadata set(String fieldName, Object value) {
    return (GcpMetadata) super.set(fieldName, value);
  }

  @Override
  public GcpMetadata clone() {
    return (GcpMetadata) super.clone();
  }

}
