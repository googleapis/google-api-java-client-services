/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1beta1.model;

/**
 * Specifies the parameters needed for the de-identification of DICOM stores.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DicomTagConfig extends com.google.api.client.json.GenericJson {

  /**
   * Specifies custom tag selections and `Actions` to apply to them. Overrides `options` and
   * `profile`. Conflicting `Actions` are applied in the order given.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Action> actions;

  static {
    // hack to force ProGuard to consider Action used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Action.class);
  }

  /**
   * Specifies additional options to apply, overriding the base `profile`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Options options;

  /**
   * Base profile type for handling DICOM tags.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profileType;

  /**
   * Specifies custom tag selections and `Actions` to apply to them. Overrides `options` and
   * `profile`. Conflicting `Actions` are applied in the order given.
   * @return value or {@code null} for none
   */
  public java.util.List<Action> getActions() {
    return actions;
  }

  /**
   * Specifies custom tag selections and `Actions` to apply to them. Overrides `options` and
   * `profile`. Conflicting `Actions` are applied in the order given.
   * @param actions actions or {@code null} for none
   */
  public DicomTagConfig setActions(java.util.List<Action> actions) {
    this.actions = actions;
    return this;
  }

  /**
   * Specifies additional options to apply, overriding the base `profile`.
   * @return value or {@code null} for none
   */
  public Options getOptions() {
    return options;
  }

  /**
   * Specifies additional options to apply, overriding the base `profile`.
   * @param options options or {@code null} for none
   */
  public DicomTagConfig setOptions(Options options) {
    this.options = options;
    return this;
  }

  /**
   * Base profile type for handling DICOM tags.
   * @return value or {@code null} for none
   */
  public java.lang.String getProfileType() {
    return profileType;
  }

  /**
   * Base profile type for handling DICOM tags.
   * @param profileType profileType or {@code null} for none
   */
  public DicomTagConfig setProfileType(java.lang.String profileType) {
    this.profileType = profileType;
    return this;
  }

  @Override
  public DicomTagConfig set(String fieldName, Object value) {
    return (DicomTagConfig) super.set(fieldName, value);
  }

  @Override
  public DicomTagConfig clone() {
    return (DicomTagConfig) super.clone();
  }

}
