/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1.model;

/**
 * Details the properties of the underlying storage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Data Catalog API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatacatalogV1StorageProperties extends com.google.api.client.json.GenericJson {

  /**
   * Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: *
   * `gs://bucket_name/dir`: matches all files in the `bucket_name/dir` directory *
   * `gs://bucket_name/dir*`: matches all files in the `bucket_name/dir` and all subdirectories
   * recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` *
   * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in
   * `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel
   * character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files
   * that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/b`:
   * matches all files in `bucket_name` that match the `a/b` pattern, such as `a/c/b`, `a/d/b` *
   * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> filePattern;

  /**
   * File type in MIME format, for example, `text/plain`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileType;

  /**
   * Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: *
   * `gs://bucket_name/dir`: matches all files in the `bucket_name/dir` directory *
   * `gs://bucket_name/dir*`: matches all files in the `bucket_name/dir` and all subdirectories
   * recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` *
   * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in
   * `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel
   * character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files
   * that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/b`:
   * matches all files in `bucket_name` that match the `a/b` pattern, such as `a/c/b`, `a/d/b` *
   * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFilePattern() {
    return filePattern;
  }

  /**
   * Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: *
   * `gs://bucket_name/dir`: matches all files in the `bucket_name/dir` directory *
   * `gs://bucket_name/dir*`: matches all files in the `bucket_name/dir` and all subdirectories
   * recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` *
   * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in
   * `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel
   * character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files
   * that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/b`:
   * matches all files in `bucket_name` that match the `a/b` pattern, such as `a/c/b`, `a/d/b` *
   * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
   * @param filePattern filePattern or {@code null} for none
   */
  public GoogleCloudDatacatalogV1StorageProperties setFilePattern(java.util.List<java.lang.String> filePattern) {
    this.filePattern = filePattern;
    return this;
  }

  /**
   * File type in MIME format, for example, `text/plain`.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileType() {
    return fileType;
  }

  /**
   * File type in MIME format, for example, `text/plain`.
   * @param fileType fileType or {@code null} for none
   */
  public GoogleCloudDatacatalogV1StorageProperties setFileType(java.lang.String fileType) {
    this.fileType = fileType;
    return this;
  }

  @Override
  public GoogleCloudDatacatalogV1StorageProperties set(String fieldName, Object value) {
    return (GoogleCloudDatacatalogV1StorageProperties) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatacatalogV1StorageProperties clone() {
    return (GoogleCloudDatacatalogV1StorageProperties) super.clone();
  }

}
