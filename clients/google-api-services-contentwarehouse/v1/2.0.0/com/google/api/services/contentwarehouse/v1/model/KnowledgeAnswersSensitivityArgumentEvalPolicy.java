/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Policy controlling argument level eval.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersSensitivityArgumentEvalPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Optional cannery policy name. If it presents then Intent Scrubber will use the corresponding
   * Cannery rule for argument scrubbing and redaction instead. It should only be used for existing
   * complex argment value types such as HomeAutomationDevice.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String policyName;

  /**
   * Redact corresponding span of the string query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean redactQuerySpan;

  /**
   * Customized replacement phrase, if missing ${ArgumentName}_REDACTED is used as default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String replacement;

  /**
   * Scrub argument value and signals before saving to eval storage. If not set, 1) inherit the
   * policy from the outer argument if there is one (for nested intents); 2) finally default to type
   * based scrubbing: see go/argument-type-scrubbing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean scrubArgumentValue;

  /**
   * Optional cannery policy name. If it presents then Intent Scrubber will use the corresponding
   * Cannery rule for argument scrubbing and redaction instead. It should only be used for existing
   * complex argment value types such as HomeAutomationDevice.
   * @return value or {@code null} for none
   */
  public java.lang.String getPolicyName() {
    return policyName;
  }

  /**
   * Optional cannery policy name. If it presents then Intent Scrubber will use the corresponding
   * Cannery rule for argument scrubbing and redaction instead. It should only be used for existing
   * complex argment value types such as HomeAutomationDevice.
   * @param policyName policyName or {@code null} for none
   */
  public KnowledgeAnswersSensitivityArgumentEvalPolicy setPolicyName(java.lang.String policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * Redact corresponding span of the string query.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRedactQuerySpan() {
    return redactQuerySpan;
  }

  /**
   * Redact corresponding span of the string query.
   * @param redactQuerySpan redactQuerySpan or {@code null} for none
   */
  public KnowledgeAnswersSensitivityArgumentEvalPolicy setRedactQuerySpan(java.lang.Boolean redactQuerySpan) {
    this.redactQuerySpan = redactQuerySpan;
    return this;
  }

  /**
   * Customized replacement phrase, if missing ${ArgumentName}_REDACTED is used as default.
   * @return value or {@code null} for none
   */
  public java.lang.String getReplacement() {
    return replacement;
  }

  /**
   * Customized replacement phrase, if missing ${ArgumentName}_REDACTED is used as default.
   * @param replacement replacement or {@code null} for none
   */
  public KnowledgeAnswersSensitivityArgumentEvalPolicy setReplacement(java.lang.String replacement) {
    this.replacement = replacement;
    return this;
  }

  /**
   * Scrub argument value and signals before saving to eval storage. If not set, 1) inherit the
   * policy from the outer argument if there is one (for nested intents); 2) finally default to type
   * based scrubbing: see go/argument-type-scrubbing.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getScrubArgumentValue() {
    return scrubArgumentValue;
  }

  /**
   * Scrub argument value and signals before saving to eval storage. If not set, 1) inherit the
   * policy from the outer argument if there is one (for nested intents); 2) finally default to type
   * based scrubbing: see go/argument-type-scrubbing.
   * @param scrubArgumentValue scrubArgumentValue or {@code null} for none
   */
  public KnowledgeAnswersSensitivityArgumentEvalPolicy setScrubArgumentValue(java.lang.Boolean scrubArgumentValue) {
    this.scrubArgumentValue = scrubArgumentValue;
    return this;
  }

  @Override
  public KnowledgeAnswersSensitivityArgumentEvalPolicy set(String fieldName, Object value) {
    return (KnowledgeAnswersSensitivityArgumentEvalPolicy) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersSensitivityArgumentEvalPolicy clone() {
    return (KnowledgeAnswersSensitivityArgumentEvalPolicy) super.clone();
  }

}
