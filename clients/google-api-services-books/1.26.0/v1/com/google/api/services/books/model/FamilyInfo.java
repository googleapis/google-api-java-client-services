/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.books.model;

/**
 * Model definition for FamilyInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Books API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FamilyInfo extends com.google.api.client.json.GenericJson {

  /**
   * Resource type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Family membership info of the user that made the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Membership membership;

  /**
   * Resource type.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Resource type.
   * @param kind kind or {@code null} for none
   */
  public FamilyInfo setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Family membership info of the user that made the request.
   * @return value or {@code null} for none
   */
  public Membership getMembership() {
    return membership;
  }

  /**
   * Family membership info of the user that made the request.
   * @param membership membership or {@code null} for none
   */
  public FamilyInfo setMembership(Membership membership) {
    this.membership = membership;
    return this;
  }

  @Override
  public FamilyInfo set(String fieldName, Object value) {
    return (FamilyInfo) super.set(fieldName, value);
  }

  @Override
  public FamilyInfo clone() {
    return (FamilyInfo) super.clone();
  }

  /**
   * Family membership info of the user that made the request.
   */
  public static final class Membership extends com.google.api.client.json.GenericJson {

    /**
     * Restrictions on user buying and acquiring content.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String acquirePermission;

    /**
     * The age group of the user.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String ageGroup;

    /**
     * The maximum allowed maturity rating for the user.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String allowedMaturityRating;

    /**
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Boolean isInFamily;

    /**
     * The role of the user in the family.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String role;

    /**
     * Restrictions on user buying and acquiring content.
     * @return value or {@code null} for none
     */
    public java.lang.String getAcquirePermission() {
      return acquirePermission;
    }

    /**
     * Restrictions on user buying and acquiring content.
     * @param acquirePermission acquirePermission or {@code null} for none
     */
    public Membership setAcquirePermission(java.lang.String acquirePermission) {
      this.acquirePermission = acquirePermission;
      return this;
    }

    /**
     * The age group of the user.
     * @return value or {@code null} for none
     */
    public java.lang.String getAgeGroup() {
      return ageGroup;
    }

    /**
     * The age group of the user.
     * @param ageGroup ageGroup or {@code null} for none
     */
    public Membership setAgeGroup(java.lang.String ageGroup) {
      this.ageGroup = ageGroup;
      return this;
    }

    /**
     * The maximum allowed maturity rating for the user.
     * @return value or {@code null} for none
     */
    public java.lang.String getAllowedMaturityRating() {
      return allowedMaturityRating;
    }

    /**
     * The maximum allowed maturity rating for the user.
     * @param allowedMaturityRating allowedMaturityRating or {@code null} for none
     */
    public Membership setAllowedMaturityRating(java.lang.String allowedMaturityRating) {
      this.allowedMaturityRating = allowedMaturityRating;
      return this;
    }

    /**
     * @return value or {@code null} for none
     */
    public java.lang.Boolean getIsInFamily() {
      return isInFamily;
    }

    /**
     * @param isInFamily isInFamily or {@code null} for none
     */
    public Membership setIsInFamily(java.lang.Boolean isInFamily) {
      this.isInFamily = isInFamily;
      return this;
    }

    /**
     * The role of the user in the family.
     * @return value or {@code null} for none
     */
    public java.lang.String getRole() {
      return role;
    }

    /**
     * The role of the user in the family.
     * @param role role or {@code null} for none
     */
    public Membership setRole(java.lang.String role) {
      this.role = role;
      return this;
    }

    @Override
    public Membership set(String fieldName, Object value) {
      return (Membership) super.set(fieldName, value);
    }

    @Override
    public Membership clone() {
      return (Membership) super.clone();
    }

  }
}
