/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.libraryagent.v1;

/**
 * Service definition for Libraryagent (v1).
 *
 * <p>
 * A simple Google Example Library API.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/docs/quota" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link LibraryagentRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Libraryagent extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Library Agent API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://libraryagent.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Libraryagent(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Libraryagent(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Shelves collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Libraryagent libraryagent = new Libraryagent(...);}
   *   {@code Libraryagent.Shelves.List request = libraryagent.shelves().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Shelves shelves() {
    return new Shelves();
  }

  /**
   * The "shelves" collection of methods.
   */
  public class Shelves {

    /**
     * Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
     *
     * Create a request for the method "shelves.get".
     *
     * This request holds the parameters needed by the libraryagent server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the shelf to retrieve.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Shelf> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^shelves/[^/]+$");

      /**
       * Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
       *
       * Create a request for the method "shelves.get".
       *
       * This request holds the parameters needed by the the libraryagent server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the shelf to retrieve.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Libraryagent.this, "GET", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Shelf.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^shelves/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the shelf to retrieve. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the shelf to retrieve.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the shelf to retrieve. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^shelves/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists shelves. The order is unspecified but deterministic. Newly created shelves will not
     * necessarily be added to the end of this list.
     *
     * Create a request for the method "shelves.list".
     *
     * This request holds the parameters needed by the libraryagent server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1ListShelvesResponse> {

      private static final String REST_PATH = "v1/shelves";

      /**
       * Lists shelves. The order is unspecified but deterministic. Newly created shelves will not
       * necessarily be added to the end of this list.
       *
       * Create a request for the method "shelves.list".
       *
       * This request holds the parameters needed by the the libraryagent server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Libraryagent.this, "GET", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1ListShelvesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Requested page size. Server may return fewer shelves than requested. If unspecified, server
       * will pick an appropriate default.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Requested page size. Server may return fewer shelves than requested. If unspecified, server will
     pick an appropriate default.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Requested page size. Server may return fewer shelves than requested. If unspecified, server
       * will pick an appropriate default.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A token identifying a page of results the server should return. Typically, this is the
       * value of ListShelvesResponse.next_page_token returned from the previous call to
       * `ListShelves` method.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A token identifying a page of results the server should return. Typically, this is the value of
     ListShelvesResponse.next_page_token returned from the previous call to `ListShelves` method.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A token identifying a page of results the server should return. Typically, this is the
       * value of ListShelvesResponse.next_page_token returned from the previous call to
       * `ListShelves` method.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Books collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Libraryagent libraryagent = new Libraryagent(...);}
     *   {@code Libraryagent.Books.List request = libraryagent.books().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Books books() {
      return new Books();
    }

    /**
     * The "books" collection of methods.
     */
    public class Books {

      /**
       * Borrow a book from the library. Returns the book if it is borrowed successfully. Returns
       * NOT_FOUND if the book does not exist in the library. Returns quota exceeded error if the amount
       * of books borrowed exceeds allocation quota in any dimensions.
       *
       * Create a request for the method "books.borrow".
       *
       * This request holds the parameters needed by the libraryagent server.  After setting any optional
       * parameters, call the {@link Borrow#execute()} method to invoke the remote operation.
       *
       * @param name The name of the book to borrow.
       * @return the request
       */
      public Borrow borrow(java.lang.String name) throws java.io.IOException {
        Borrow result = new Borrow(name);
        initialize(result);
        return result;
      }

      public class Borrow extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book> {

        private static final String REST_PATH = "v1/{+name}:borrow";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^shelves/[^/]+/books/[^/]+$");

        /**
         * Borrow a book from the library. Returns the book if it is borrowed successfully. Returns
         * NOT_FOUND if the book does not exist in the library. Returns quota exceeded error if the amount
         * of books borrowed exceeds allocation quota in any dimensions.
         *
         * Create a request for the method "books.borrow".
         *
         * This request holds the parameters needed by the the libraryagent server.  After setting any
         * optional parameters, call the {@link Borrow#execute()} method to invoke the remote operation.
         * <p> {@link
         * Borrow#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the book to borrow.
         * @since 1.13
         */
        protected Borrow(java.lang.String name) {
          super(Libraryagent.this, "POST", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
        }

        @Override
        public Borrow set$Xgafv(java.lang.String $Xgafv) {
          return (Borrow) super.set$Xgafv($Xgafv);
        }

        @Override
        public Borrow setAccessToken(java.lang.String accessToken) {
          return (Borrow) super.setAccessToken(accessToken);
        }

        @Override
        public Borrow setAlt(java.lang.String alt) {
          return (Borrow) super.setAlt(alt);
        }

        @Override
        public Borrow setCallback(java.lang.String callback) {
          return (Borrow) super.setCallback(callback);
        }

        @Override
        public Borrow setFields(java.lang.String fields) {
          return (Borrow) super.setFields(fields);
        }

        @Override
        public Borrow setKey(java.lang.String key) {
          return (Borrow) super.setKey(key);
        }

        @Override
        public Borrow setOauthToken(java.lang.String oauthToken) {
          return (Borrow) super.setOauthToken(oauthToken);
        }

        @Override
        public Borrow setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Borrow) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Borrow setQuotaUser(java.lang.String quotaUser) {
          return (Borrow) super.setQuotaUser(quotaUser);
        }

        @Override
        public Borrow setUploadType(java.lang.String uploadType) {
          return (Borrow) super.setUploadType(uploadType);
        }

        @Override
        public Borrow setUploadProtocol(java.lang.String uploadProtocol) {
          return (Borrow) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the book to borrow. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the book to borrow.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the book to borrow. */
        public Borrow setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Borrow set(String parameterName, Object value) {
          return (Borrow) super.set(parameterName, value);
        }
      }
      /**
       * Gets a book. Returns NOT_FOUND if the book does not exist.
       *
       * Create a request for the method "books.get".
       *
       * This request holds the parameters needed by the libraryagent server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the book to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^shelves/[^/]+/books/[^/]+$");

        /**
         * Gets a book. Returns NOT_FOUND if the book does not exist.
         *
         * Create a request for the method "books.get".
         *
         * This request holds the parameters needed by the the libraryagent server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the book to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Libraryagent.this, "GET", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the book to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the book to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the book to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists books in a shelf. The order is unspecified but deterministic. Newly created books will not
       * necessarily be added to the end of this list. Returns NOT_FOUND if the shelf does not exist.
       *
       * Create a request for the method "books.list".
       *
       * This request holds the parameters needed by the libraryagent server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The name of the shelf whose books we'd like to list.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1ListBooksResponse> {

        private static final String REST_PATH = "v1/{+parent}/books";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^shelves/[^/]+$");

        /**
         * Lists books in a shelf. The order is unspecified but deterministic. Newly created books will
         * not necessarily be added to the end of this list. Returns NOT_FOUND if the shelf does not
         * exist.
         *
         * Create a request for the method "books.list".
         *
         * This request holds the parameters needed by the the libraryagent server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The name of the shelf whose books we'd like to list.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Libraryagent.this, "GET", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1ListBooksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^shelves/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the shelf whose books we'd like to list. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The name of the shelf whose books we'd like to list.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The name of the shelf whose books we'd like to list. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^shelves/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Requested page size. Server may return fewer books than requested. If unspecified, server
         * will pick an appropriate default.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. Server may return fewer books than requested. If unspecified, server will pick
       an appropriate default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. Server may return fewer books than requested. If unspecified, server
         * will pick an appropriate default.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A token identifying a page of results the server should return. Typically, this is the
         * value of ListBooksResponse.next_page_token. returned from the previous call to
         * `ListBooks` method.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying a page of results the server should return. Typically, this is the value of
       ListBooksResponse.next_page_token. returned from the previous call to `ListBooks` method.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A token identifying a page of results the server should return. Typically, this is the
         * value of ListBooksResponse.next_page_token. returned from the previous call to
         * `ListBooks` method.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Return a book to the library. Returns the book if it is returned to the library successfully.
       * Returns error if the book does not belong to the library or the users didn't borrow before.
       *
       * Create a request for the method "books.return".
       *
       * This request holds the parameters needed by the libraryagent server.  After setting any optional
       * parameters, call the {@link LibraryagentReturn#execute()} method to invoke the remote operation.
       *
       * @param name The name of the book to return.
       * @return the request
       */
      public LibraryagentReturn libraryagentReturn(java.lang.String name) throws java.io.IOException {
        LibraryagentReturn result = new LibraryagentReturn(name);
        initialize(result);
        return result;
      }

      public class LibraryagentReturn extends LibraryagentRequest<com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book> {

        private static final String REST_PATH = "v1/{+name}:return";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^shelves/[^/]+/books/[^/]+$");

        /**
         * Return a book to the library. Returns the book if it is returned to the library successfully.
         * Returns error if the book does not belong to the library or the users didn't borrow before.
         *
         * Create a request for the method "books.return".
         *
         * This request holds the parameters needed by the the libraryagent server.  After setting any
         * optional parameters, call the {@link LibraryagentReturn#execute()} method to invoke the remote
         * operation. <p> {@link LibraryagentReturn#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name The name of the book to return.
         * @since 1.13
         */
        protected LibraryagentReturn(java.lang.String name) {
          super(Libraryagent.this, "POST", REST_PATH, null, com.google.api.services.libraryagent.v1.model.GoogleExampleLibraryagentV1Book.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
        }

        @Override
        public LibraryagentReturn set$Xgafv(java.lang.String $Xgafv) {
          return (LibraryagentReturn) super.set$Xgafv($Xgafv);
        }

        @Override
        public LibraryagentReturn setAccessToken(java.lang.String accessToken) {
          return (LibraryagentReturn) super.setAccessToken(accessToken);
        }

        @Override
        public LibraryagentReturn setAlt(java.lang.String alt) {
          return (LibraryagentReturn) super.setAlt(alt);
        }

        @Override
        public LibraryagentReturn setCallback(java.lang.String callback) {
          return (LibraryagentReturn) super.setCallback(callback);
        }

        @Override
        public LibraryagentReturn setFields(java.lang.String fields) {
          return (LibraryagentReturn) super.setFields(fields);
        }

        @Override
        public LibraryagentReturn setKey(java.lang.String key) {
          return (LibraryagentReturn) super.setKey(key);
        }

        @Override
        public LibraryagentReturn setOauthToken(java.lang.String oauthToken) {
          return (LibraryagentReturn) super.setOauthToken(oauthToken);
        }

        @Override
        public LibraryagentReturn setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (LibraryagentReturn) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public LibraryagentReturn setQuotaUser(java.lang.String quotaUser) {
          return (LibraryagentReturn) super.setQuotaUser(quotaUser);
        }

        @Override
        public LibraryagentReturn setUploadType(java.lang.String uploadType) {
          return (LibraryagentReturn) super.setUploadType(uploadType);
        }

        @Override
        public LibraryagentReturn setUploadProtocol(java.lang.String uploadProtocol) {
          return (LibraryagentReturn) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the book to return. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the book to return.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the book to return. */
        public LibraryagentReturn setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^shelves/[^/]+/books/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public LibraryagentReturn set(String parameterName, Object value) {
          return (LibraryagentReturn) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Libraryagent}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Libraryagent}. */
    @Override
    public Libraryagent build() {
      return new Libraryagent(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link LibraryagentRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setLibraryagentRequestInitializer(
        LibraryagentRequestInitializer libraryagentRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(libraryagentRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
