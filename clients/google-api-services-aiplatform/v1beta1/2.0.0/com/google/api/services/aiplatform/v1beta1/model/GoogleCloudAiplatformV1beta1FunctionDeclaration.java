/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Structured representation of a function declaration as defined by the [OpenAPI 3.0
 * specification](https://spec.openapis.org/oas/v3.0.3). Included in this declaration are the
 * function name, description, parameters and response type. This FunctionDeclaration is a
 * representation of a block of code that can be used as a `Tool` by the model and executed by the
 * client.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1FunctionDeclaration extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Description and purpose of the function. Model uses it to decide how and whether to
   * call the function.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The name of the function to call. Must start with a letter or an underscore. Must be
   * a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a maximum length of 64.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the
   * Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case
   * sensitive. Schema Value: the Schema defining the type used for the parameter. For function with
   * no parameters, this can be left unset. Parameter names must start with a letter or an
   * underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a maximum length of
   * 64. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type:
   * STRING param2: type: INTEGER required: - param1
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1Schema parameters;

  /**
   * Optional. Describes the output from this function in JSON Schema format. Reflects the Open API
   * 3.03 Response Object. The Schema defines the type used for the response value of the function.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1Schema response;

  /**
   * Optional. Description and purpose of the function. Model uses it to decide how and whether to
   * call the function.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description and purpose of the function. Model uses it to decide how and whether to
   * call the function.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FunctionDeclaration setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The name of the function to call. Must start with a letter or an underscore. Must be
   * a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a maximum length of 64.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. The name of the function to call. Must start with a letter or an underscore. Must be
   * a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a maximum length of 64.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FunctionDeclaration setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the
   * Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case
   * sensitive. Schema Value: the Schema defining the type used for the parameter. For function with
   * no parameters, this can be left unset. Parameter names must start with a letter or an
   * underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a maximum length of
   * 64. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type:
   * STRING param2: type: INTEGER required: - param1
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema getParameters() {
    return parameters;
  }

  /**
   * Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the
   * Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case
   * sensitive. Schema Value: the Schema defining the type used for the parameter. For function with
   * no parameters, this can be left unset. Parameter names must start with a letter or an
   * underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a maximum length of
   * 64. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type:
   * STRING param2: type: INTEGER required: - param1
   * @param parameters parameters or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FunctionDeclaration setParameters(GoogleCloudAiplatformV1beta1Schema parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Optional. Describes the output from this function in JSON Schema format. Reflects the Open API
   * 3.03 Response Object. The Schema defines the type used for the response value of the function.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema getResponse() {
    return response;
  }

  /**
   * Optional. Describes the output from this function in JSON Schema format. Reflects the Open API
   * 3.03 Response Object. The Schema defines the type used for the response value of the function.
   * @param response response or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FunctionDeclaration setResponse(GoogleCloudAiplatformV1beta1Schema response) {
    this.response = response;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1FunctionDeclaration set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1FunctionDeclaration) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1FunctionDeclaration clone() {
    return (GoogleCloudAiplatformV1beta1FunctionDeclaration) super.clone();
  }

}
