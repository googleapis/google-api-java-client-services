/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Generative model parameters to control the model behavior.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters extends com.google.api.client.json.GenericJson {

  /**
   * The input token limit. This setting is currently only supported by playbooks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inputTokenLimit;

  /**
   * The output token limit. This setting is currently only supported by playbooks. Only one of
   * output_token_limit and max_output_tokens is allowed to be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String outputTokenLimit;

  /**
   * The temperature used for sampling during response generation. Value ranges from 0 to 1.
   * Temperature controls the degree of randomness in token selection. Lower temperature means less
   * randomness, while higher temperature means more randomness. Valid range: [0.0, 1.0]
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float temperature;

  /**
   * The input token limit. This setting is currently only supported by playbooks.
   * @return value or {@code null} for none
   */
  public java.lang.String getInputTokenLimit() {
    return inputTokenLimit;
  }

  /**
   * The input token limit. This setting is currently only supported by playbooks.
   * @param inputTokenLimit inputTokenLimit or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters setInputTokenLimit(java.lang.String inputTokenLimit) {
    this.inputTokenLimit = inputTokenLimit;
    return this;
  }

  /**
   * The output token limit. This setting is currently only supported by playbooks. Only one of
   * output_token_limit and max_output_tokens is allowed to be set.
   * @return value or {@code null} for none
   */
  public java.lang.String getOutputTokenLimit() {
    return outputTokenLimit;
  }

  /**
   * The output token limit. This setting is currently only supported by playbooks. Only one of
   * output_token_limit and max_output_tokens is allowed to be set.
   * @param outputTokenLimit outputTokenLimit or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters setOutputTokenLimit(java.lang.String outputTokenLimit) {
    this.outputTokenLimit = outputTokenLimit;
    return this;
  }

  /**
   * The temperature used for sampling during response generation. Value ranges from 0 to 1.
   * Temperature controls the degree of randomness in token selection. Lower temperature means less
   * randomness, while higher temperature means more randomness. Valid range: [0.0, 1.0]
   * @return value or {@code null} for none
   */
  public java.lang.Float getTemperature() {
    return temperature;
  }

  /**
   * The temperature used for sampling during response generation. Value ranges from 0 to 1.
   * Temperature controls the degree of randomness in token selection. Lower temperature means less
   * randomness, while higher temperature means more randomness. Valid range: [0.0, 1.0]
   * @param temperature temperature or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters setTemperature(java.lang.Float temperature) {
    this.temperature = temperature;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters clone() {
    return (GoogleCloudDialogflowCxV3beta1LlmModelSettingsParameters) super.clone();
  }

}
