/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Model definition for NetworkConnection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NetworkConnection extends com.google.api.client.json.GenericJson {

  /**
   * Local IP address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localIpAddress;

  /**
   * Local port.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer localPort;

  /**
   * Process ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long pid;

  /**
   * Process or service name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String processName;

  /**
   * Connection protocol (e.g. TCP/UDP).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protocol;

  /**
   * Remote IP address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String remoteIpAddress;

  /**
   * Remote port.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer remotePort;

  /**
   * Connection state (e.g. CONNECTED).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Local IP address.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalIpAddress() {
    return localIpAddress;
  }

  /**
   * Local IP address.
   * @param localIpAddress localIpAddress or {@code null} for none
   */
  public NetworkConnection setLocalIpAddress(java.lang.String localIpAddress) {
    this.localIpAddress = localIpAddress;
    return this;
  }

  /**
   * Local port.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLocalPort() {
    return localPort;
  }

  /**
   * Local port.
   * @param localPort localPort or {@code null} for none
   */
  public NetworkConnection setLocalPort(java.lang.Integer localPort) {
    this.localPort = localPort;
    return this;
  }

  /**
   * Process ID.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPid() {
    return pid;
  }

  /**
   * Process ID.
   * @param pid pid or {@code null} for none
   */
  public NetworkConnection setPid(java.lang.Long pid) {
    this.pid = pid;
    return this;
  }

  /**
   * Process or service name.
   * @return value or {@code null} for none
   */
  public java.lang.String getProcessName() {
    return processName;
  }

  /**
   * Process or service name.
   * @param processName processName or {@code null} for none
   */
  public NetworkConnection setProcessName(java.lang.String processName) {
    this.processName = processName;
    return this;
  }

  /**
   * Connection protocol (e.g. TCP/UDP).
   * @return value or {@code null} for none
   */
  public java.lang.String getProtocol() {
    return protocol;
  }

  /**
   * Connection protocol (e.g. TCP/UDP).
   * @param protocol protocol or {@code null} for none
   */
  public NetworkConnection setProtocol(java.lang.String protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Remote IP address.
   * @return value or {@code null} for none
   */
  public java.lang.String getRemoteIpAddress() {
    return remoteIpAddress;
  }

  /**
   * Remote IP address.
   * @param remoteIpAddress remoteIpAddress or {@code null} for none
   */
  public NetworkConnection setRemoteIpAddress(java.lang.String remoteIpAddress) {
    this.remoteIpAddress = remoteIpAddress;
    return this;
  }

  /**
   * Remote port.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRemotePort() {
    return remotePort;
  }

  /**
   * Remote port.
   * @param remotePort remotePort or {@code null} for none
   */
  public NetworkConnection setRemotePort(java.lang.Integer remotePort) {
    this.remotePort = remotePort;
    return this;
  }

  /**
   * Connection state (e.g. CONNECTED).
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Connection state (e.g. CONNECTED).
   * @param state state or {@code null} for none
   */
  public NetworkConnection setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public NetworkConnection set(String fieldName, Object value) {
    return (NetworkConnection) super.set(fieldName, value);
  }

  @Override
  public NetworkConnection clone() {
    return (NetworkConnection) super.clone();
  }

}
