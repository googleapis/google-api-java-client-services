/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A membership that the person has. The person can be a member of multiple circles and multiple
 * contact-groups. A circle membership is created by adding a person to a circle by person-id or by
 * email. A contact-group membership is created by adding a contact to a contact-group.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiMembership extends com.google.api.client.json.GenericJson {

  /**
   * A circle that the person belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String circleId;

  /**
   * A contact-group that the person belong to. The id can be either a hex-formatted id or a camel-
   * cased SystemContactGroup predefined group name. The id will be predefined group name iff the
   * system_contact_group_id has a value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contactGroupId;

  /**
   * The metadata field can be used to determine which container generated the membership. For
   * example, when the membership has a contact_group_id, the metadata.container will be CONTACT and
   * the container_id will be the contact Id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata;

  /**
   * The membership has a contact_group_id, this field will be populated when the membership is in a
   * system-reserved contact-group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String systemContactGroupId;

  /**
   * A circle that the person belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getCircleId() {
    return circleId;
  }

  /**
   * A circle that the person belongs to.
   * @param circleId circleId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiMembership setCircleId(java.lang.String circleId) {
    this.circleId = circleId;
    return this;
  }

  /**
   * A contact-group that the person belong to. The id can be either a hex-formatted id or a camel-
   * cased SystemContactGroup predefined group name. The id will be predefined group name iff the
   * system_contact_group_id has a value.
   * @return value or {@code null} for none
   */
  public java.lang.String getContactGroupId() {
    return contactGroupId;
  }

  /**
   * A contact-group that the person belong to. The id can be either a hex-formatted id or a camel-
   * cased SystemContactGroup predefined group name. The id will be predefined group name iff the
   * system_contact_group_id has a value.
   * @param contactGroupId contactGroupId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiMembership setContactGroupId(java.lang.String contactGroupId) {
    this.contactGroupId = contactGroupId;
    return this;
  }

  /**
   * The metadata field can be used to determine which container generated the membership. For
   * example, when the membership has a contact_group_id, the metadata.container will be CONTACT and
   * the container_id will be the contact Id.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata getMetadata() {
    return metadata;
  }

  /**
   * The metadata field can be used to determine which container generated the membership. For
   * example, when the membership has a contact_group_id, the metadata.container will be CONTACT and
   * the container_id will be the contact Id.
   * @param metadata metadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiMembership setMetadata(AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The membership has a contact_group_id, this field will be populated when the membership is in a
   * system-reserved contact-group.
   * @return value or {@code null} for none
   */
  public java.lang.String getSystemContactGroupId() {
    return systemContactGroupId;
  }

  /**
   * The membership has a contact_group_id, this field will be populated when the membership is in a
   * system-reserved contact-group.
   * @param systemContactGroupId systemContactGroupId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiMembership setSystemContactGroupId(java.lang.String systemContactGroupId) {
    this.systemContactGroupId = systemContactGroupId;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiMembership set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiMembership) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiMembership clone() {
    return (AppsPeopleOzExternalMergedpeopleapiMembership) super.clone();
  }

}
