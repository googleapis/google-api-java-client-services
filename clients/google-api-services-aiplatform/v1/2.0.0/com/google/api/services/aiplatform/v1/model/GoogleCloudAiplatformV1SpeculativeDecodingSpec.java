/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Configuration for Speculative Decoding.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1SpeculativeDecodingSpec extends com.google.api.client.json.GenericJson {

  /**
   * draft model speculation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SpeculativeDecodingSpecDraftModelSpeculation draftModelSpeculation;

  /**
   * N-Gram speculation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SpeculativeDecodingSpecNgramSpeculation ngramSpeculation;

  /**
   * The number of speculative tokens to generate at each step.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer speculativeTokenCount;

  /**
   * draft model speculation.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SpeculativeDecodingSpecDraftModelSpeculation getDraftModelSpeculation() {
    return draftModelSpeculation;
  }

  /**
   * draft model speculation.
   * @param draftModelSpeculation draftModelSpeculation or {@code null} for none
   */
  public GoogleCloudAiplatformV1SpeculativeDecodingSpec setDraftModelSpeculation(GoogleCloudAiplatformV1SpeculativeDecodingSpecDraftModelSpeculation draftModelSpeculation) {
    this.draftModelSpeculation = draftModelSpeculation;
    return this;
  }

  /**
   * N-Gram speculation.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SpeculativeDecodingSpecNgramSpeculation getNgramSpeculation() {
    return ngramSpeculation;
  }

  /**
   * N-Gram speculation.
   * @param ngramSpeculation ngramSpeculation or {@code null} for none
   */
  public GoogleCloudAiplatformV1SpeculativeDecodingSpec setNgramSpeculation(GoogleCloudAiplatformV1SpeculativeDecodingSpecNgramSpeculation ngramSpeculation) {
    this.ngramSpeculation = ngramSpeculation;
    return this;
  }

  /**
   * The number of speculative tokens to generate at each step.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSpeculativeTokenCount() {
    return speculativeTokenCount;
  }

  /**
   * The number of speculative tokens to generate at each step.
   * @param speculativeTokenCount speculativeTokenCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1SpeculativeDecodingSpec setSpeculativeTokenCount(java.lang.Integer speculativeTokenCount) {
    this.speculativeTokenCount = speculativeTokenCount;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1SpeculativeDecodingSpec set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1SpeculativeDecodingSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1SpeculativeDecodingSpec clone() {
    return (GoogleCloudAiplatformV1SpeculativeDecodingSpec) super.clone();
  }

}
