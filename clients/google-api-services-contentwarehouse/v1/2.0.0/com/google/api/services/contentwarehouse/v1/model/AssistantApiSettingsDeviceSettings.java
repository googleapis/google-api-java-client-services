/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next ID: 73
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiSettingsDeviceSettings extends com.google.api.client.json.GenericJson {

  /**
   * LINT.ThenChange(//depot/google3/assistant/ui/assistant_device_settings_ui.proto)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ackStatus;

  /**
   * A human-readable address string for the location; generally a one-line address such as "34
   * Masonic Ave, San Francisco CA 94117, United States". Set this field to empty string for
   * deletion, in which case the rest of the location related fields below will be cleared as well.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String address;

  /**
   * The alias names of the device, e.g. my living room tv, tv, living room and etc., which user
   * will usually use to refer to the device in addition to human_friendly_name. It can help speech
   * biasing and query understanding. This field is set by the user and already localized.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> aliasName;

  /**
   * Whether this device is allowed to receive incoming calls.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowIncomingCalls;

  /**
   * Ambient settings contains the configuration of Photo Frame on DG device. This field relies on
   * IMAX service to do the update, sync happenes after user updates IMAX device settings or a
   * device registers in CloudCastDevice. So it's more like a cached version instead of definitive
   * source-of-truth. More details at go/ambient-setting-in-assistant-design.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsAmbientSettings ambientSettings;

  /**
   * The additional device ids. Currently used only for ATV. go/project-yellowstone Note: This field
   * is for internal (Within settings) use only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsInternalAncillaryDeviceId ancillaryDeviceId;

  /**
   * Auto framing settings associated with a device. See go/auto-framing-presentation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsAutoFramingSettings autoFramingSettings;

  /**
   * Indicates whether the user has enabled Blue Steel. See go/blue-steel for more info on this
   * project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean blueSteelEnabled;

  /**
   * Describes roughly what a device is capable of doing and metadata around those capabilities.
   * Note: this includes device limitations as well as user configurable settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiDeviceCapabilities capabilities;

  /**
   * city and postal_code are sent to third party AoG Apps as location when permission is granted
   * for precise or coarse location.
   * https://developers.google.com/actions/reference/rest/Shared.Types/Permission city and
   * postal_code have the same description as in Proto Postal Address:
   * https://cs.corp.google.com/piperdepot/google3/location/country/postaladdress.proto city
   * corresponds to locality_name, postal_code corresponds to postal_code_number. These two fields
   * are set in assistant_settings_service by AddressConverter. https://cs.corp.google.com/piperdepo
   * t/google3/location/addressformatter/public/addressconverter.h See go/aog-i18n-address-parse for
   * more information
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String city;

  /**
   * Status of colocation. go/co-location-work-v2 Note: this is a cache at the Assistant level. The
   * source of truth is inside CastAuthenticationServer, which is only used for Home devices.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String colocationStatus;

  /**
   * The timestamp that the device is linked with the user in milliseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long creationTimestampMs;

  /**
   * Availability of this device for Assistant Cross-surface handoffs. (go/assistant-cross-surface)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsDeviceSettingsCrossSurfaceAvailability crossSurfaceAvailability;

  /**
   * The identification of the default device which user want to output audio. See go/default-media-
   * output-design for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesDeviceId defaultAudioDeviceId;

  /**
   * The identification of the default device which user want to output video. Note that, we don't
   * fallback to this for audio playback when default_audio_device_id is not set. See go/default-
   * media-output-design for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesDeviceId defaultVideoDeviceId;

  /**
   * The brand of the device, populated from DeviceOemParams. Examples: "google", "samsung".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceBrand;

  /**
   * The identification of the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesDeviceId deviceId;

  /**
   * The model ID of the device. This should be globally unique across manufactures/OEMs. Examples:
   * "nest_cam_iq_2017", "comcast_voice_box_2017".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceModelId;

  /**
   * The Device Platform Service lookup revision. (go/device-model-revision) For 1p devices, and
   * most 3p devices with no custom feature, this should be always 0, which means no lookup needed.
   * For 3p devices with custom assistant feature, this is provided directly by OEM as incremental
   * (e.g. 1, 2, 3, ...)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer deviceModelRevision;

  /**
   * Only valid for ATV. Stores the android DUSI for the corresponding user. More details: go/auto-
   * logout-on-unlink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dusi;

  /**
   * List of errors that happened during the face enrollment process if it failed. See go/face-
   * match-enrollment-error for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> faceEnrollmentErrors;

  /**
   * Indicates whether the user's face has been successfully enrolled on this device. See go/face-
   * match-server-design for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String faceEnrollmentStatus;

  /**
   * Indicates whether the user has enabled Face Match for this device. See go/face-match-server-
   * design for more info on this project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean faceMatchEnabled;

  /**
   * When true, allow data collection of audio on this device for Federated Learning.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean flAudioCacheEnabled;

  /**
   * When true, allow data collection of frames on this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean flVisualFramesCacheEnabled;

  /**
   * Stores GCM info associated with a device. See go/quartz-design-doc for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsGcmSettings gcmSettings;

  /**
   * Holds the data that should be written to HomeGraph. Note: this field is not persisted in
   * Assistant Settings storage. It is simply used for transporting data when client calls
   * UpdateSettings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsHomeGraphData homeGraphData;

  /**
   * The home graph ID that can be used to lookup the corresponding entry in HomeGraph. go/home-
   * graph. Note: when this field is empty, it doesn't necessarily mean that the device is not in
   * home graph. It just means that Assistant doesn't know about the mapping.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String homeGraphId;

  /**
   * Indicates whether the device is currently in Hospitality mode. go/hospitality-mode-design. This
   * is moved to a per user setting in assistant settings. ref. go/hospitality-settings-v2
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsHospitalityMode hospitalityModeStatus;

  /**
   * The level of hotword sensitivity. go/hotword-sensitivity-prd
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hotwordSensitivity;

  /**
   * HotwordThresholdAdjustmentFactor contains threshold_adjustment_factor, and it's validity. TAF
   * is a measure of adjustment applied to the hotword threshold as a result of go/autotune.
   * Currently, this is updated from query_settings_frame, but if we move to updating it from the
   * client, this could also contain TAFs as a result of Hotword Sensitivity, in addition to
   * Autotune.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsHotwordThresholdAdjustmentFactor hotwordThresholdAdjustmentFactor;

  /**
   * The human-friendly name of the cast device, e.g., my living room tv. This field is set by the
   * user and already localized.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String humanFriendlyName;

  /**
   * Internal version of the DeviceSettings for measurement of the DeviceSettings mutation race
   * conditions. See go/consistent-assistant-settings-update.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsInternalVersion internalVersion;

  /**
   * Indicates whether the device is also managed through HA cloud sync. go/ha-dev-guide
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCloudSyncDevice;

  /**
   * When true, the user has explicitly allowed audio and visual data collection on this device
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDeviceActivationCacheEnabled;

  /**
   * Specifies if kids-mode is enabled for the device. See go/aff-parentalsupervision-dd.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsKidsMode kidsMode;

  /**
   * Device's latest registration timestamp provided by Cast side. This field is not necessarily up
   * to date. The update frequency is defined in last_registration_update_frequency_in_days field of
   * AssistantConfig in java/com/google/chrome/dongle/common/proto/home_assistant_config.proto. go
   * /cast-last-registration-time
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastCastRegistrationTimestamp;

  /**
   * Coarsened hourly timestamp of when the device was last used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastUsedCoarseTimestamp;

  /**
   * Stores pairing between different devices. See go/quartz-design-doc for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantApiCoreTypesDeviceId> linkedDeviceId;

  static {
    // hack to force ProGuard to consider AssistantApiCoreTypesDeviceId used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantApiCoreTypesDeviceId.class);
  }

  /**
   * Please do NOT use this field without prior approval from PWG. Users who have signed in onto
   * this device, go/linked-users-in-pkg.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantApiSettingsLinkedUser> linkedUsers;

  /**
   * The locale for the device: language + region, i.e., en-US, ja-JP.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locale;

  /**
   * Coordinate information of the device location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesLocationCoordinates locationCoordinates;

  /**
   * The feature proto of the location of the device. Note: client does not need to populate this.
   * It will be auto-populated based on "address" field on server side. Currently, only "bound" and
   * "type" are persisted, since the entire FeatureProto is too big.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostoreFeatureProto locationFeature;

  /**
   * See go/marketplace-disclosure for more info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsMarketplaceDisclosure marketplaceDisclosure;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsMasqueradeMode masqueradeMode;

  /**
   * Information about how to send the user a notification. This won't be populated for fb-conv
   * users (allo group chat users).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsNotificationProfile notificationProfile;

  /**
   * OAuth client id for the device. This field is available for Assistant SDK devices. It is
   * written when the device is registered to the user
   * (AssistantSettingsUiService.LinkAssistantDeviceUi). When user revokes grant on the Assistant
   * device, Assistant Devices Platform Service will receive Pubsub notification with OAuth client
   * id for the revoked device, and we will compare that with this stored id to identity device to
   * remove.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String oauthClientId;

  /**
   * Device specific app related settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsOnDeviceAppSettings onDeviceAppSettings;

  /**
   * Specifies if device logs and crashes can be captured during SendFeedback
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsDeviceLogsOptIn optInStatus;

  /**
   * DEPRECATED: Use DeviceCapabilities.OutputRestrictions.personal_data instead. Whether the user
   * has enabled payments for this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean paymentsEnabled;

  /**
   * Metadata about how personalization settings were configured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsPersonalizationMetadata personalizationMetadata;

  /**
   * Specify whether polite mode is enabled for this device. See go/pretty-please-dd.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsPoliteMode politeMode;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String postalCode;

  /**
   * Trusted device preferences Assistant reauth. go/assistant-reauth-verify-skip.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsReauthTrustedDeviceSettings reauthTrustedDeviceSettings;

  /**
   * A human-readable shortened address. This is usually the street address. Note: client does not
   * need to populate this. It will be auto-populated based on "address" field on server side.
   * Developers can use this field to avoid reading out the full address everytime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shortenedAddress;

  /**
   * Indicates whether the user has enabled speaker-id for this device. See go/google-assistant-
   * multi-user for more info on this project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean speakerIdEnabled;

  /**
   * Settings related to TTS output.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsSpeechOutputSettings speechOutputSettings;

  /**
   * Speech/hotword detection related settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsSpeechSettings speechSettings;

  /**
   * Restrictions on how and when certain users can use a device. See go/home-ft-prd.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsDeviceSupervisionSettings supervisionSettings;

  /**
   * The type of assistant surface. Only use this field when device type is ASSISTANT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesSurfaceType surfaceType;

  /**
   * Presence indicates a tethered wearable. go/wearable-device-ids.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiSettingsTetheredInfo tetheredInfo;

  /**
   * Device time zone. It's mainly used for a one-time notification for new users when they just
   * bought and activated their devices. They may not have used Search or Assistant before, so their
   * timezone info may not available elsewhere when we want to send a notification. This should be
   * used as a fallback only when other timezone sources such as
   * assistant_settings:user_attribute#inferred_user_timezone are not available. Also, when both
   * |time_zone| and |location| are set, the |location| should be preferred to derive the most up to
   * date timezone. This info directly comes from the device through early device setting recording
   * mechanism. See more details at go/early-device-setting-recording.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiTimeZone timeZone;

  /**
   * Local network ID of the device (truncated to obfuscate devices and households globally). This
   * is a temporary signal to determine proximity of Assistant devices in a house (HGS place).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String truncatedLocalNetworkId;

  /**
   * DEPRECATED: Use speech_settings instead. Indicates whether the user has enabled trusted voice
   * for this device. See go/hotword-settings-on-cloud for more info on this project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trustedVoiceEnabled;

  /**
   * The type of the device. Note: this should only be used for grouping devices for UI presentation
   * purpose. Use |capabilities| to decide what the device can do.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Indicates whether to play verbose tts for Elementary on chirp. See: go/opa-cast-a11y-impl-
   * design fore more info on this project. Note: this should probably be in SpeechOutputSetting
   * below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean verboseTtsForChromecastEnabled;

  /**
   * Coarsened hourly timestamp of when the user was last verified by VoiceMatch on this device.
   * This is used for enforcing VoiceMatch model TTL. go/voicematch-pdd-ttl
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String vmLastUsedCoarseTimestamp;

  /**
   * Indicates whether the user's voice has been successfully enrolled on this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String voiceEnrollmentStatus;

  /**
   * A boolean indicates whether voice input (mic-button, hotword, etc) is enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean voiceInputEnabled;

  /**
   * LINT.ThenChange(//depot/google3/assistant/ui/assistant_device_settings_ui.proto)
   * @return value or {@code null} for none
   */
  public java.lang.String getAckStatus() {
    return ackStatus;
  }

  /**
   * LINT.ThenChange(//depot/google3/assistant/ui/assistant_device_settings_ui.proto)
   * @param ackStatus ackStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAckStatus(java.lang.String ackStatus) {
    this.ackStatus = ackStatus;
    return this;
  }

  /**
   * A human-readable address string for the location; generally a one-line address such as "34
   * Masonic Ave, San Francisco CA 94117, United States". Set this field to empty string for
   * deletion, in which case the rest of the location related fields below will be cleared as well.
   * @return value or {@code null} for none
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * A human-readable address string for the location; generally a one-line address such as "34
   * Masonic Ave, San Francisco CA 94117, United States". Set this field to empty string for
   * deletion, in which case the rest of the location related fields below will be cleared as well.
   * @param address address or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  /**
   * The alias names of the device, e.g. my living room tv, tv, living room and etc., which user
   * will usually use to refer to the device in addition to human_friendly_name. It can help speech
   * biasing and query understanding. This field is set by the user and already localized.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAliasName() {
    return aliasName;
  }

  /**
   * The alias names of the device, e.g. my living room tv, tv, living room and etc., which user
   * will usually use to refer to the device in addition to human_friendly_name. It can help speech
   * biasing and query understanding. This field is set by the user and already localized.
   * @param aliasName aliasName or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAliasName(java.util.List<java.lang.String> aliasName) {
    this.aliasName = aliasName;
    return this;
  }

  /**
   * Whether this device is allowed to receive incoming calls.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowIncomingCalls() {
    return allowIncomingCalls;
  }

  /**
   * Whether this device is allowed to receive incoming calls.
   * @param allowIncomingCalls allowIncomingCalls or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAllowIncomingCalls(java.lang.Boolean allowIncomingCalls) {
    this.allowIncomingCalls = allowIncomingCalls;
    return this;
  }

  /**
   * Ambient settings contains the configuration of Photo Frame on DG device. This field relies on
   * IMAX service to do the update, sync happenes after user updates IMAX device settings or a
   * device registers in CloudCastDevice. So it's more like a cached version instead of definitive
   * source-of-truth. More details at go/ambient-setting-in-assistant-design.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsAmbientSettings getAmbientSettings() {
    return ambientSettings;
  }

  /**
   * Ambient settings contains the configuration of Photo Frame on DG device. This field relies on
   * IMAX service to do the update, sync happenes after user updates IMAX device settings or a
   * device registers in CloudCastDevice. So it's more like a cached version instead of definitive
   * source-of-truth. More details at go/ambient-setting-in-assistant-design.
   * @param ambientSettings ambientSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAmbientSettings(AssistantApiSettingsAmbientSettings ambientSettings) {
    this.ambientSettings = ambientSettings;
    return this;
  }

  /**
   * The additional device ids. Currently used only for ATV. go/project-yellowstone Note: This field
   * is for internal (Within settings) use only.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsInternalAncillaryDeviceId getAncillaryDeviceId() {
    return ancillaryDeviceId;
  }

  /**
   * The additional device ids. Currently used only for ATV. go/project-yellowstone Note: This field
   * is for internal (Within settings) use only.
   * @param ancillaryDeviceId ancillaryDeviceId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAncillaryDeviceId(AssistantApiSettingsInternalAncillaryDeviceId ancillaryDeviceId) {
    this.ancillaryDeviceId = ancillaryDeviceId;
    return this;
  }

  /**
   * Auto framing settings associated with a device. See go/auto-framing-presentation.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsAutoFramingSettings getAutoFramingSettings() {
    return autoFramingSettings;
  }

  /**
   * Auto framing settings associated with a device. See go/auto-framing-presentation.
   * @param autoFramingSettings autoFramingSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setAutoFramingSettings(AssistantApiSettingsAutoFramingSettings autoFramingSettings) {
    this.autoFramingSettings = autoFramingSettings;
    return this;
  }

  /**
   * Indicates whether the user has enabled Blue Steel. See go/blue-steel for more info on this
   * project.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBlueSteelEnabled() {
    return blueSteelEnabled;
  }

  /**
   * Indicates whether the user has enabled Blue Steel. See go/blue-steel for more info on this
   * project.
   * @param blueSteelEnabled blueSteelEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setBlueSteelEnabled(java.lang.Boolean blueSteelEnabled) {
    this.blueSteelEnabled = blueSteelEnabled;
    return this;
  }

  /**
   * Describes roughly what a device is capable of doing and metadata around those capabilities.
   * Note: this includes device limitations as well as user configurable settings.
   * @return value or {@code null} for none
   */
  public AssistantApiDeviceCapabilities getCapabilities() {
    return capabilities;
  }

  /**
   * Describes roughly what a device is capable of doing and metadata around those capabilities.
   * Note: this includes device limitations as well as user configurable settings.
   * @param capabilities capabilities or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setCapabilities(AssistantApiDeviceCapabilities capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  /**
   * city and postal_code are sent to third party AoG Apps as location when permission is granted
   * for precise or coarse location.
   * https://developers.google.com/actions/reference/rest/Shared.Types/Permission city and
   * postal_code have the same description as in Proto Postal Address:
   * https://cs.corp.google.com/piperdepot/google3/location/country/postaladdress.proto city
   * corresponds to locality_name, postal_code corresponds to postal_code_number. These two fields
   * are set in assistant_settings_service by AddressConverter. https://cs.corp.google.com/piperdepo
   * t/google3/location/addressformatter/public/addressconverter.h See go/aog-i18n-address-parse for
   * more information
   * @return value or {@code null} for none
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * city and postal_code are sent to third party AoG Apps as location when permission is granted
   * for precise or coarse location.
   * https://developers.google.com/actions/reference/rest/Shared.Types/Permission city and
   * postal_code have the same description as in Proto Postal Address:
   * https://cs.corp.google.com/piperdepot/google3/location/country/postaladdress.proto city
   * corresponds to locality_name, postal_code corresponds to postal_code_number. These two fields
   * are set in assistant_settings_service by AddressConverter. https://cs.corp.google.com/piperdepo
   * t/google3/location/addressformatter/public/addressconverter.h See go/aog-i18n-address-parse for
   * more information
   * @param city city or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setCity(java.lang.String city) {
    this.city = city;
    return this;
  }

  /**
   * Status of colocation. go/co-location-work-v2 Note: this is a cache at the Assistant level. The
   * source of truth is inside CastAuthenticationServer, which is only used for Home devices.
   * @return value or {@code null} for none
   */
  public java.lang.String getColocationStatus() {
    return colocationStatus;
  }

  /**
   * Status of colocation. go/co-location-work-v2 Note: this is a cache at the Assistant level. The
   * source of truth is inside CastAuthenticationServer, which is only used for Home devices.
   * @param colocationStatus colocationStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setColocationStatus(java.lang.String colocationStatus) {
    this.colocationStatus = colocationStatus;
    return this;
  }

  /**
   * The timestamp that the device is linked with the user in milliseconds.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreationTimestampMs() {
    return creationTimestampMs;
  }

  /**
   * The timestamp that the device is linked with the user in milliseconds.
   * @param creationTimestampMs creationTimestampMs or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setCreationTimestampMs(java.lang.Long creationTimestampMs) {
    this.creationTimestampMs = creationTimestampMs;
    return this;
  }

  /**
   * Availability of this device for Assistant Cross-surface handoffs. (go/assistant-cross-surface)
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettingsCrossSurfaceAvailability getCrossSurfaceAvailability() {
    return crossSurfaceAvailability;
  }

  /**
   * Availability of this device for Assistant Cross-surface handoffs. (go/assistant-cross-surface)
   * @param crossSurfaceAvailability crossSurfaceAvailability or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setCrossSurfaceAvailability(AssistantApiSettingsDeviceSettingsCrossSurfaceAvailability crossSurfaceAvailability) {
    this.crossSurfaceAvailability = crossSurfaceAvailability;
    return this;
  }

  /**
   * The identification of the default device which user want to output audio. See go/default-media-
   * output-design for more info.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesDeviceId getDefaultAudioDeviceId() {
    return defaultAudioDeviceId;
  }

  /**
   * The identification of the default device which user want to output audio. See go/default-media-
   * output-design for more info.
   * @param defaultAudioDeviceId defaultAudioDeviceId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDefaultAudioDeviceId(AssistantApiCoreTypesDeviceId defaultAudioDeviceId) {
    this.defaultAudioDeviceId = defaultAudioDeviceId;
    return this;
  }

  /**
   * The identification of the default device which user want to output video. Note that, we don't
   * fallback to this for audio playback when default_audio_device_id is not set. See go/default-
   * media-output-design for more info.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesDeviceId getDefaultVideoDeviceId() {
    return defaultVideoDeviceId;
  }

  /**
   * The identification of the default device which user want to output video. Note that, we don't
   * fallback to this for audio playback when default_audio_device_id is not set. See go/default-
   * media-output-design for more info.
   * @param defaultVideoDeviceId defaultVideoDeviceId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDefaultVideoDeviceId(AssistantApiCoreTypesDeviceId defaultVideoDeviceId) {
    this.defaultVideoDeviceId = defaultVideoDeviceId;
    return this;
  }

  /**
   * The brand of the device, populated from DeviceOemParams. Examples: "google", "samsung".
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceBrand() {
    return deviceBrand;
  }

  /**
   * The brand of the device, populated from DeviceOemParams. Examples: "google", "samsung".
   * @param deviceBrand deviceBrand or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDeviceBrand(java.lang.String deviceBrand) {
    this.deviceBrand = deviceBrand;
    return this;
  }

  /**
   * The identification of the device.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesDeviceId getDeviceId() {
    return deviceId;
  }

  /**
   * The identification of the device.
   * @param deviceId deviceId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDeviceId(AssistantApiCoreTypesDeviceId deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * The model ID of the device. This should be globally unique across manufactures/OEMs. Examples:
   * "nest_cam_iq_2017", "comcast_voice_box_2017".
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceModelId() {
    return deviceModelId;
  }

  /**
   * The model ID of the device. This should be globally unique across manufactures/OEMs. Examples:
   * "nest_cam_iq_2017", "comcast_voice_box_2017".
   * @param deviceModelId deviceModelId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDeviceModelId(java.lang.String deviceModelId) {
    this.deviceModelId = deviceModelId;
    return this;
  }

  /**
   * The Device Platform Service lookup revision. (go/device-model-revision) For 1p devices, and
   * most 3p devices with no custom feature, this should be always 0, which means no lookup needed.
   * For 3p devices with custom assistant feature, this is provided directly by OEM as incremental
   * (e.g. 1, 2, 3, ...)
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDeviceModelRevision() {
    return deviceModelRevision;
  }

  /**
   * The Device Platform Service lookup revision. (go/device-model-revision) For 1p devices, and
   * most 3p devices with no custom feature, this should be always 0, which means no lookup needed.
   * For 3p devices with custom assistant feature, this is provided directly by OEM as incremental
   * (e.g. 1, 2, 3, ...)
   * @param deviceModelRevision deviceModelRevision or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDeviceModelRevision(java.lang.Integer deviceModelRevision) {
    this.deviceModelRevision = deviceModelRevision;
    return this;
  }

  /**
   * Only valid for ATV. Stores the android DUSI for the corresponding user. More details: go/auto-
   * logout-on-unlink.
   * @return value or {@code null} for none
   */
  public java.lang.String getDusi() {
    return dusi;
  }

  /**
   * Only valid for ATV. Stores the android DUSI for the corresponding user. More details: go/auto-
   * logout-on-unlink.
   * @param dusi dusi or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setDusi(java.lang.String dusi) {
    this.dusi = dusi;
    return this;
  }

  /**
   * List of errors that happened during the face enrollment process if it failed. See go/face-
   * match-enrollment-error for more info.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFaceEnrollmentErrors() {
    return faceEnrollmentErrors;
  }

  /**
   * List of errors that happened during the face enrollment process if it failed. See go/face-
   * match-enrollment-error for more info.
   * @param faceEnrollmentErrors faceEnrollmentErrors or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setFaceEnrollmentErrors(java.util.List<java.lang.String> faceEnrollmentErrors) {
    this.faceEnrollmentErrors = faceEnrollmentErrors;
    return this;
  }

  /**
   * Indicates whether the user's face has been successfully enrolled on this device. See go/face-
   * match-server-design for more info.
   * @return value or {@code null} for none
   */
  public java.lang.String getFaceEnrollmentStatus() {
    return faceEnrollmentStatus;
  }

  /**
   * Indicates whether the user's face has been successfully enrolled on this device. See go/face-
   * match-server-design for more info.
   * @param faceEnrollmentStatus faceEnrollmentStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setFaceEnrollmentStatus(java.lang.String faceEnrollmentStatus) {
    this.faceEnrollmentStatus = faceEnrollmentStatus;
    return this;
  }

  /**
   * Indicates whether the user has enabled Face Match for this device. See go/face-match-server-
   * design for more info on this project.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFaceMatchEnabled() {
    return faceMatchEnabled;
  }

  /**
   * Indicates whether the user has enabled Face Match for this device. See go/face-match-server-
   * design for more info on this project.
   * @param faceMatchEnabled faceMatchEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setFaceMatchEnabled(java.lang.Boolean faceMatchEnabled) {
    this.faceMatchEnabled = faceMatchEnabled;
    return this;
  }

  /**
   * When true, allow data collection of audio on this device for Federated Learning.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFlAudioCacheEnabled() {
    return flAudioCacheEnabled;
  }

  /**
   * When true, allow data collection of audio on this device for Federated Learning.
   * @param flAudioCacheEnabled flAudioCacheEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setFlAudioCacheEnabled(java.lang.Boolean flAudioCacheEnabled) {
    this.flAudioCacheEnabled = flAudioCacheEnabled;
    return this;
  }

  /**
   * When true, allow data collection of frames on this device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFlVisualFramesCacheEnabled() {
    return flVisualFramesCacheEnabled;
  }

  /**
   * When true, allow data collection of frames on this device.
   * @param flVisualFramesCacheEnabled flVisualFramesCacheEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setFlVisualFramesCacheEnabled(java.lang.Boolean flVisualFramesCacheEnabled) {
    this.flVisualFramesCacheEnabled = flVisualFramesCacheEnabled;
    return this;
  }

  /**
   * Stores GCM info associated with a device. See go/quartz-design-doc for more info.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsGcmSettings getGcmSettings() {
    return gcmSettings;
  }

  /**
   * Stores GCM info associated with a device. See go/quartz-design-doc for more info.
   * @param gcmSettings gcmSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setGcmSettings(AssistantApiSettingsGcmSettings gcmSettings) {
    this.gcmSettings = gcmSettings;
    return this;
  }

  /**
   * Holds the data that should be written to HomeGraph. Note: this field is not persisted in
   * Assistant Settings storage. It is simply used for transporting data when client calls
   * UpdateSettings.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsHomeGraphData getHomeGraphData() {
    return homeGraphData;
  }

  /**
   * Holds the data that should be written to HomeGraph. Note: this field is not persisted in
   * Assistant Settings storage. It is simply used for transporting data when client calls
   * UpdateSettings.
   * @param homeGraphData homeGraphData or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHomeGraphData(AssistantApiSettingsHomeGraphData homeGraphData) {
    this.homeGraphData = homeGraphData;
    return this;
  }

  /**
   * The home graph ID that can be used to lookup the corresponding entry in HomeGraph. go/home-
   * graph. Note: when this field is empty, it doesn't necessarily mean that the device is not in
   * home graph. It just means that Assistant doesn't know about the mapping.
   * @return value or {@code null} for none
   */
  public java.lang.String getHomeGraphId() {
    return homeGraphId;
  }

  /**
   * The home graph ID that can be used to lookup the corresponding entry in HomeGraph. go/home-
   * graph. Note: when this field is empty, it doesn't necessarily mean that the device is not in
   * home graph. It just means that Assistant doesn't know about the mapping.
   * @param homeGraphId homeGraphId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHomeGraphId(java.lang.String homeGraphId) {
    this.homeGraphId = homeGraphId;
    return this;
  }

  /**
   * Indicates whether the device is currently in Hospitality mode. go/hospitality-mode-design. This
   * is moved to a per user setting in assistant settings. ref. go/hospitality-settings-v2
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsHospitalityMode getHospitalityModeStatus() {
    return hospitalityModeStatus;
  }

  /**
   * Indicates whether the device is currently in Hospitality mode. go/hospitality-mode-design. This
   * is moved to a per user setting in assistant settings. ref. go/hospitality-settings-v2
   * @param hospitalityModeStatus hospitalityModeStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHospitalityModeStatus(AssistantApiSettingsHospitalityMode hospitalityModeStatus) {
    this.hospitalityModeStatus = hospitalityModeStatus;
    return this;
  }

  /**
   * The level of hotword sensitivity. go/hotword-sensitivity-prd
   * @return value or {@code null} for none
   */
  public java.lang.String getHotwordSensitivity() {
    return hotwordSensitivity;
  }

  /**
   * The level of hotword sensitivity. go/hotword-sensitivity-prd
   * @param hotwordSensitivity hotwordSensitivity or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHotwordSensitivity(java.lang.String hotwordSensitivity) {
    this.hotwordSensitivity = hotwordSensitivity;
    return this;
  }

  /**
   * HotwordThresholdAdjustmentFactor contains threshold_adjustment_factor, and it's validity. TAF
   * is a measure of adjustment applied to the hotword threshold as a result of go/autotune.
   * Currently, this is updated from query_settings_frame, but if we move to updating it from the
   * client, this could also contain TAFs as a result of Hotword Sensitivity, in addition to
   * Autotune.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsHotwordThresholdAdjustmentFactor getHotwordThresholdAdjustmentFactor() {
    return hotwordThresholdAdjustmentFactor;
  }

  /**
   * HotwordThresholdAdjustmentFactor contains threshold_adjustment_factor, and it's validity. TAF
   * is a measure of adjustment applied to the hotword threshold as a result of go/autotune.
   * Currently, this is updated from query_settings_frame, but if we move to updating it from the
   * client, this could also contain TAFs as a result of Hotword Sensitivity, in addition to
   * Autotune.
   * @param hotwordThresholdAdjustmentFactor hotwordThresholdAdjustmentFactor or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHotwordThresholdAdjustmentFactor(AssistantApiSettingsHotwordThresholdAdjustmentFactor hotwordThresholdAdjustmentFactor) {
    this.hotwordThresholdAdjustmentFactor = hotwordThresholdAdjustmentFactor;
    return this;
  }

  /**
   * The human-friendly name of the cast device, e.g., my living room tv. This field is set by the
   * user and already localized.
   * @return value or {@code null} for none
   */
  public java.lang.String getHumanFriendlyName() {
    return humanFriendlyName;
  }

  /**
   * The human-friendly name of the cast device, e.g., my living room tv. This field is set by the
   * user and already localized.
   * @param humanFriendlyName humanFriendlyName or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setHumanFriendlyName(java.lang.String humanFriendlyName) {
    this.humanFriendlyName = humanFriendlyName;
    return this;
  }

  /**
   * Internal version of the DeviceSettings for measurement of the DeviceSettings mutation race
   * conditions. See go/consistent-assistant-settings-update.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsInternalVersion getInternalVersion() {
    return internalVersion;
  }

  /**
   * Internal version of the DeviceSettings for measurement of the DeviceSettings mutation race
   * conditions. See go/consistent-assistant-settings-update.
   * @param internalVersion internalVersion or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setInternalVersion(AssistantApiSettingsInternalVersion internalVersion) {
    this.internalVersion = internalVersion;
    return this;
  }

  /**
   * Indicates whether the device is also managed through HA cloud sync. go/ha-dev-guide
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCloudSyncDevice() {
    return isCloudSyncDevice;
  }

  /**
   * Indicates whether the device is also managed through HA cloud sync. go/ha-dev-guide
   * @param isCloudSyncDevice isCloudSyncDevice or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setIsCloudSyncDevice(java.lang.Boolean isCloudSyncDevice) {
    this.isCloudSyncDevice = isCloudSyncDevice;
    return this;
  }

  /**
   * When true, the user has explicitly allowed audio and visual data collection on this device
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDeviceActivationCacheEnabled() {
    return isDeviceActivationCacheEnabled;
  }

  /**
   * When true, the user has explicitly allowed audio and visual data collection on this device
   * @param isDeviceActivationCacheEnabled isDeviceActivationCacheEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setIsDeviceActivationCacheEnabled(java.lang.Boolean isDeviceActivationCacheEnabled) {
    this.isDeviceActivationCacheEnabled = isDeviceActivationCacheEnabled;
    return this;
  }

  /**
   * Specifies if kids-mode is enabled for the device. See go/aff-parentalsupervision-dd.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsKidsMode getKidsMode() {
    return kidsMode;
  }

  /**
   * Specifies if kids-mode is enabled for the device. See go/aff-parentalsupervision-dd.
   * @param kidsMode kidsMode or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setKidsMode(AssistantApiSettingsKidsMode kidsMode) {
    this.kidsMode = kidsMode;
    return this;
  }

  /**
   * Device's latest registration timestamp provided by Cast side. This field is not necessarily up
   * to date. The update frequency is defined in last_registration_update_frequency_in_days field of
   * AssistantConfig in java/com/google/chrome/dongle/common/proto/home_assistant_config.proto. go
   * /cast-last-registration-time
   * @return value or {@code null} for none
   */
  public String getLastCastRegistrationTimestamp() {
    return lastCastRegistrationTimestamp;
  }

  /**
   * Device's latest registration timestamp provided by Cast side. This field is not necessarily up
   * to date. The update frequency is defined in last_registration_update_frequency_in_days field of
   * AssistantConfig in java/com/google/chrome/dongle/common/proto/home_assistant_config.proto. go
   * /cast-last-registration-time
   * @param lastCastRegistrationTimestamp lastCastRegistrationTimestamp or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLastCastRegistrationTimestamp(String lastCastRegistrationTimestamp) {
    this.lastCastRegistrationTimestamp = lastCastRegistrationTimestamp;
    return this;
  }

  /**
   * Coarsened hourly timestamp of when the device was last used.
   * @return value or {@code null} for none
   */
  public String getLastUsedCoarseTimestamp() {
    return lastUsedCoarseTimestamp;
  }

  /**
   * Coarsened hourly timestamp of when the device was last used.
   * @param lastUsedCoarseTimestamp lastUsedCoarseTimestamp or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLastUsedCoarseTimestamp(String lastUsedCoarseTimestamp) {
    this.lastUsedCoarseTimestamp = lastUsedCoarseTimestamp;
    return this;
  }

  /**
   * Stores pairing between different devices. See go/quartz-design-doc for more info.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantApiCoreTypesDeviceId> getLinkedDeviceId() {
    return linkedDeviceId;
  }

  /**
   * Stores pairing between different devices. See go/quartz-design-doc for more info.
   * @param linkedDeviceId linkedDeviceId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLinkedDeviceId(java.util.List<AssistantApiCoreTypesDeviceId> linkedDeviceId) {
    this.linkedDeviceId = linkedDeviceId;
    return this;
  }

  /**
   * Please do NOT use this field without prior approval from PWG. Users who have signed in onto
   * this device, go/linked-users-in-pkg.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantApiSettingsLinkedUser> getLinkedUsers() {
    return linkedUsers;
  }

  /**
   * Please do NOT use this field without prior approval from PWG. Users who have signed in onto
   * this device, go/linked-users-in-pkg.
   * @param linkedUsers linkedUsers or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLinkedUsers(java.util.List<AssistantApiSettingsLinkedUser> linkedUsers) {
    this.linkedUsers = linkedUsers;
    return this;
  }

  /**
   * The locale for the device: language + region, i.e., en-US, ja-JP.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocale() {
    return locale;
  }

  /**
   * The locale for the device: language + region, i.e., en-US, ja-JP.
   * @param locale locale or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLocale(java.lang.String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Coordinate information of the device location.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesLocationCoordinates getLocationCoordinates() {
    return locationCoordinates;
  }

  /**
   * Coordinate information of the device location.
   * @param locationCoordinates locationCoordinates or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLocationCoordinates(AssistantApiCoreTypesLocationCoordinates locationCoordinates) {
    this.locationCoordinates = locationCoordinates;
    return this;
  }

  /**
   * The feature proto of the location of the device. Note: client does not need to populate this.
   * It will be auto-populated based on "address" field on server side. Currently, only "bound" and
   * "type" are persisted, since the entire FeatureProto is too big.
   * @return value or {@code null} for none
   */
  public GeostoreFeatureProto getLocationFeature() {
    return locationFeature;
  }

  /**
   * The feature proto of the location of the device. Note: client does not need to populate this.
   * It will be auto-populated based on "address" field on server side. Currently, only "bound" and
   * "type" are persisted, since the entire FeatureProto is too big.
   * @param locationFeature locationFeature or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setLocationFeature(GeostoreFeatureProto locationFeature) {
    this.locationFeature = locationFeature;
    return this;
  }

  /**
   * See go/marketplace-disclosure for more info.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsMarketplaceDisclosure getMarketplaceDisclosure() {
    return marketplaceDisclosure;
  }

  /**
   * See go/marketplace-disclosure for more info.
   * @param marketplaceDisclosure marketplaceDisclosure or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setMarketplaceDisclosure(AssistantApiSettingsMarketplaceDisclosure marketplaceDisclosure) {
    this.marketplaceDisclosure = marketplaceDisclosure;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsMasqueradeMode getMasqueradeMode() {
    return masqueradeMode;
  }

  /**
   * @param masqueradeMode masqueradeMode or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setMasqueradeMode(AssistantApiSettingsMasqueradeMode masqueradeMode) {
    this.masqueradeMode = masqueradeMode;
    return this;
  }

  /**
   * Information about how to send the user a notification. This won't be populated for fb-conv
   * users (allo group chat users).
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsNotificationProfile getNotificationProfile() {
    return notificationProfile;
  }

  /**
   * Information about how to send the user a notification. This won't be populated for fb-conv
   * users (allo group chat users).
   * @param notificationProfile notificationProfile or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setNotificationProfile(AssistantApiSettingsNotificationProfile notificationProfile) {
    this.notificationProfile = notificationProfile;
    return this;
  }

  /**
   * OAuth client id for the device. This field is available for Assistant SDK devices. It is
   * written when the device is registered to the user
   * (AssistantSettingsUiService.LinkAssistantDeviceUi). When user revokes grant on the Assistant
   * device, Assistant Devices Platform Service will receive Pubsub notification with OAuth client
   * id for the revoked device, and we will compare that with this stored id to identity device to
   * remove.
   * @return value or {@code null} for none
   */
  public java.lang.String getOauthClientId() {
    return oauthClientId;
  }

  /**
   * OAuth client id for the device. This field is available for Assistant SDK devices. It is
   * written when the device is registered to the user
   * (AssistantSettingsUiService.LinkAssistantDeviceUi). When user revokes grant on the Assistant
   * device, Assistant Devices Platform Service will receive Pubsub notification with OAuth client
   * id for the revoked device, and we will compare that with this stored id to identity device to
   * remove.
   * @param oauthClientId oauthClientId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setOauthClientId(java.lang.String oauthClientId) {
    this.oauthClientId = oauthClientId;
    return this;
  }

  /**
   * Device specific app related settings.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsOnDeviceAppSettings getOnDeviceAppSettings() {
    return onDeviceAppSettings;
  }

  /**
   * Device specific app related settings.
   * @param onDeviceAppSettings onDeviceAppSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setOnDeviceAppSettings(AssistantApiSettingsOnDeviceAppSettings onDeviceAppSettings) {
    this.onDeviceAppSettings = onDeviceAppSettings;
    return this;
  }

  /**
   * Specifies if device logs and crashes can be captured during SendFeedback
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsDeviceLogsOptIn getOptInStatus() {
    return optInStatus;
  }

  /**
   * Specifies if device logs and crashes can be captured during SendFeedback
   * @param optInStatus optInStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setOptInStatus(AssistantApiSettingsDeviceLogsOptIn optInStatus) {
    this.optInStatus = optInStatus;
    return this;
  }

  /**
   * DEPRECATED: Use DeviceCapabilities.OutputRestrictions.personal_data instead. Whether the user
   * has enabled payments for this device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPaymentsEnabled() {
    return paymentsEnabled;
  }

  /**
   * DEPRECATED: Use DeviceCapabilities.OutputRestrictions.personal_data instead. Whether the user
   * has enabled payments for this device.
   * @param paymentsEnabled paymentsEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setPaymentsEnabled(java.lang.Boolean paymentsEnabled) {
    this.paymentsEnabled = paymentsEnabled;
    return this;
  }

  /**
   * Metadata about how personalization settings were configured.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsPersonalizationMetadata getPersonalizationMetadata() {
    return personalizationMetadata;
  }

  /**
   * Metadata about how personalization settings were configured.
   * @param personalizationMetadata personalizationMetadata or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setPersonalizationMetadata(AssistantApiSettingsPersonalizationMetadata personalizationMetadata) {
    this.personalizationMetadata = personalizationMetadata;
    return this;
  }

  /**
   * Specify whether polite mode is enabled for this device. See go/pretty-please-dd.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsPoliteMode getPoliteMode() {
    return politeMode;
  }

  /**
   * Specify whether polite mode is enabled for this device. See go/pretty-please-dd.
   * @param politeMode politeMode or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setPoliteMode(AssistantApiSettingsPoliteMode politeMode) {
    this.politeMode = politeMode;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPostalCode() {
    return postalCode;
  }

  /**
   * @param postalCode postalCode or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setPostalCode(java.lang.String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Trusted device preferences Assistant reauth. go/assistant-reauth-verify-skip.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsReauthTrustedDeviceSettings getReauthTrustedDeviceSettings() {
    return reauthTrustedDeviceSettings;
  }

  /**
   * Trusted device preferences Assistant reauth. go/assistant-reauth-verify-skip.
   * @param reauthTrustedDeviceSettings reauthTrustedDeviceSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setReauthTrustedDeviceSettings(AssistantApiSettingsReauthTrustedDeviceSettings reauthTrustedDeviceSettings) {
    this.reauthTrustedDeviceSettings = reauthTrustedDeviceSettings;
    return this;
  }

  /**
   * A human-readable shortened address. This is usually the street address. Note: client does not
   * need to populate this. It will be auto-populated based on "address" field on server side.
   * Developers can use this field to avoid reading out the full address everytime.
   * @return value or {@code null} for none
   */
  public java.lang.String getShortenedAddress() {
    return shortenedAddress;
  }

  /**
   * A human-readable shortened address. This is usually the street address. Note: client does not
   * need to populate this. It will be auto-populated based on "address" field on server side.
   * Developers can use this field to avoid reading out the full address everytime.
   * @param shortenedAddress shortenedAddress or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setShortenedAddress(java.lang.String shortenedAddress) {
    this.shortenedAddress = shortenedAddress;
    return this;
  }

  /**
   * Indicates whether the user has enabled speaker-id for this device. See go/google-assistant-
   * multi-user for more info on this project.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSpeakerIdEnabled() {
    return speakerIdEnabled;
  }

  /**
   * Indicates whether the user has enabled speaker-id for this device. See go/google-assistant-
   * multi-user for more info on this project.
   * @param speakerIdEnabled speakerIdEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setSpeakerIdEnabled(java.lang.Boolean speakerIdEnabled) {
    this.speakerIdEnabled = speakerIdEnabled;
    return this;
  }

  /**
   * Settings related to TTS output.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsSpeechOutputSettings getSpeechOutputSettings() {
    return speechOutputSettings;
  }

  /**
   * Settings related to TTS output.
   * @param speechOutputSettings speechOutputSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setSpeechOutputSettings(AssistantApiSettingsSpeechOutputSettings speechOutputSettings) {
    this.speechOutputSettings = speechOutputSettings;
    return this;
  }

  /**
   * Speech/hotword detection related settings.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsSpeechSettings getSpeechSettings() {
    return speechSettings;
  }

  /**
   * Speech/hotword detection related settings.
   * @param speechSettings speechSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setSpeechSettings(AssistantApiSettingsSpeechSettings speechSettings) {
    this.speechSettings = speechSettings;
    return this;
  }

  /**
   * Restrictions on how and when certain users can use a device. See go/home-ft-prd.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsDeviceSupervisionSettings getSupervisionSettings() {
    return supervisionSettings;
  }

  /**
   * Restrictions on how and when certain users can use a device. See go/home-ft-prd.
   * @param supervisionSettings supervisionSettings or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setSupervisionSettings(AssistantApiSettingsDeviceSupervisionSettings supervisionSettings) {
    this.supervisionSettings = supervisionSettings;
    return this;
  }

  /**
   * The type of assistant surface. Only use this field when device type is ASSISTANT.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceType getSurfaceType() {
    return surfaceType;
  }

  /**
   * The type of assistant surface. Only use this field when device type is ASSISTANT.
   * @param surfaceType surfaceType or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setSurfaceType(AssistantApiCoreTypesSurfaceType surfaceType) {
    this.surfaceType = surfaceType;
    return this;
  }

  /**
   * Presence indicates a tethered wearable. go/wearable-device-ids.
   * @return value or {@code null} for none
   */
  public AssistantApiSettingsTetheredInfo getTetheredInfo() {
    return tetheredInfo;
  }

  /**
   * Presence indicates a tethered wearable. go/wearable-device-ids.
   * @param tetheredInfo tetheredInfo or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setTetheredInfo(AssistantApiSettingsTetheredInfo tetheredInfo) {
    this.tetheredInfo = tetheredInfo;
    return this;
  }

  /**
   * Device time zone. It's mainly used for a one-time notification for new users when they just
   * bought and activated their devices. They may not have used Search or Assistant before, so their
   * timezone info may not available elsewhere when we want to send a notification. This should be
   * used as a fallback only when other timezone sources such as
   * assistant_settings:user_attribute#inferred_user_timezone are not available. Also, when both
   * |time_zone| and |location| are set, the |location| should be preferred to derive the most up to
   * date timezone. This info directly comes from the device through early device setting recording
   * mechanism. See more details at go/early-device-setting-recording.
   * @return value or {@code null} for none
   */
  public AssistantApiTimeZone getTimeZone() {
    return timeZone;
  }

  /**
   * Device time zone. It's mainly used for a one-time notification for new users when they just
   * bought and activated their devices. They may not have used Search or Assistant before, so their
   * timezone info may not available elsewhere when we want to send a notification. This should be
   * used as a fallback only when other timezone sources such as
   * assistant_settings:user_attribute#inferred_user_timezone are not available. Also, when both
   * |time_zone| and |location| are set, the |location| should be preferred to derive the most up to
   * date timezone. This info directly comes from the device through early device setting recording
   * mechanism. See more details at go/early-device-setting-recording.
   * @param timeZone timeZone or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setTimeZone(AssistantApiTimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Local network ID of the device (truncated to obfuscate devices and households globally). This
   * is a temporary signal to determine proximity of Assistant devices in a house (HGS place).
   * @return value or {@code null} for none
   */
  public java.lang.String getTruncatedLocalNetworkId() {
    return truncatedLocalNetworkId;
  }

  /**
   * Local network ID of the device (truncated to obfuscate devices and households globally). This
   * is a temporary signal to determine proximity of Assistant devices in a house (HGS place).
   * @param truncatedLocalNetworkId truncatedLocalNetworkId or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setTruncatedLocalNetworkId(java.lang.String truncatedLocalNetworkId) {
    this.truncatedLocalNetworkId = truncatedLocalNetworkId;
    return this;
  }

  /**
   * DEPRECATED: Use speech_settings instead. Indicates whether the user has enabled trusted voice
   * for this device. See go/hotword-settings-on-cloud for more info on this project.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrustedVoiceEnabled() {
    return trustedVoiceEnabled;
  }

  /**
   * DEPRECATED: Use speech_settings instead. Indicates whether the user has enabled trusted voice
   * for this device. See go/hotword-settings-on-cloud for more info on this project.
   * @param trustedVoiceEnabled trustedVoiceEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setTrustedVoiceEnabled(java.lang.Boolean trustedVoiceEnabled) {
    this.trustedVoiceEnabled = trustedVoiceEnabled;
    return this;
  }

  /**
   * The type of the device. Note: this should only be used for grouping devices for UI presentation
   * purpose. Use |capabilities| to decide what the device can do.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the device. Note: this should only be used for grouping devices for UI presentation
   * purpose. Use |capabilities| to decide what the device can do.
   * @param type type or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Indicates whether to play verbose tts for Elementary on chirp. See: go/opa-cast-a11y-impl-
   * design fore more info on this project. Note: this should probably be in SpeechOutputSetting
   * below.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVerboseTtsForChromecastEnabled() {
    return verboseTtsForChromecastEnabled;
  }

  /**
   * Indicates whether to play verbose tts for Elementary on chirp. See: go/opa-cast-a11y-impl-
   * design fore more info on this project. Note: this should probably be in SpeechOutputSetting
   * below.
   * @param verboseTtsForChromecastEnabled verboseTtsForChromecastEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setVerboseTtsForChromecastEnabled(java.lang.Boolean verboseTtsForChromecastEnabled) {
    this.verboseTtsForChromecastEnabled = verboseTtsForChromecastEnabled;
    return this;
  }

  /**
   * Coarsened hourly timestamp of when the user was last verified by VoiceMatch on this device.
   * This is used for enforcing VoiceMatch model TTL. go/voicematch-pdd-ttl
   * @return value or {@code null} for none
   */
  public String getVmLastUsedCoarseTimestamp() {
    return vmLastUsedCoarseTimestamp;
  }

  /**
   * Coarsened hourly timestamp of when the user was last verified by VoiceMatch on this device.
   * This is used for enforcing VoiceMatch model TTL. go/voicematch-pdd-ttl
   * @param vmLastUsedCoarseTimestamp vmLastUsedCoarseTimestamp or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setVmLastUsedCoarseTimestamp(String vmLastUsedCoarseTimestamp) {
    this.vmLastUsedCoarseTimestamp = vmLastUsedCoarseTimestamp;
    return this;
  }

  /**
   * Indicates whether the user's voice has been successfully enrolled on this device.
   * @return value or {@code null} for none
   */
  public java.lang.String getVoiceEnrollmentStatus() {
    return voiceEnrollmentStatus;
  }

  /**
   * Indicates whether the user's voice has been successfully enrolled on this device.
   * @param voiceEnrollmentStatus voiceEnrollmentStatus or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setVoiceEnrollmentStatus(java.lang.String voiceEnrollmentStatus) {
    this.voiceEnrollmentStatus = voiceEnrollmentStatus;
    return this;
  }

  /**
   * A boolean indicates whether voice input (mic-button, hotword, etc) is enabled.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVoiceInputEnabled() {
    return voiceInputEnabled;
  }

  /**
   * A boolean indicates whether voice input (mic-button, hotword, etc) is enabled.
   * @param voiceInputEnabled voiceInputEnabled or {@code null} for none
   */
  public AssistantApiSettingsDeviceSettings setVoiceInputEnabled(java.lang.Boolean voiceInputEnabled) {
    this.voiceInputEnabled = voiceInputEnabled;
    return this;
  }

  @Override
  public AssistantApiSettingsDeviceSettings set(String fieldName, Object value) {
    return (AssistantApiSettingsDeviceSettings) super.set(fieldName, value);
  }

  @Override
  public AssistantApiSettingsDeviceSettings clone() {
    return (AssistantApiSettingsDeviceSettings) super.clone();
  }

}
