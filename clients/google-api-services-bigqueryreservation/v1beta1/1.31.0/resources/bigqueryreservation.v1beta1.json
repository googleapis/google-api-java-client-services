{
  "description": "A service to modify your BigQuery flat-rate reservations.",
  "revision": "20210217",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    }
  },
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        }
      }
    }
  },
  "rootUrl": "https://bigqueryreservation.googleapis.com/",
  "schemas": {
    "SplitCapacityCommitmentResponse": {
      "description": "The response for ReservationService.SplitCapacityCommitment.",
      "type": "object",
      "properties": {
        "first": {
          "$ref": "CapacityCommitment",
          "description": "First capacity commitment, result of a split."
        },
        "second": {
          "$ref": "CapacityCommitment",
          "description": "Second capacity commitment, result of a split."
        }
      },
      "id": "SplitCapacityCommitmentResponse"
    },
    "ListAssignmentsResponse": {
      "description": "The response for ReservationService.ListAssignments.",
      "id": "ListAssignmentsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "assignments": {
          "description": "List of assignments visible to the user.",
          "type": "array",
          "items": {
            "$ref": "Assignment"
          }
        }
      },
      "type": "object"
    },
    "ListReservationsResponse": {
      "id": "ListReservationsResponse",
      "type": "object",
      "properties": {
        "reservations": {
          "description": "List of reservations visible to the user.",
          "type": "array",
          "items": {
            "$ref": "Reservation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "The response for ReservationService.ListReservations."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Status"
    },
    "Assignment": {
      "description": "A Assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
      "properties": {
        "name": {
          "description": "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the assignment.",
          "type": "string",
          "enumDescriptions": [
            "Invalid state value.",
            "Queries from assignee will be executed as on-demand, if related assignment is pending.",
            "Assignment is ready."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE"
          ]
        },
        "jobType": {
          "enum": [
            "JOB_TYPE_UNSPECIFIED",
            "PIPELINE",
            "QUERY",
            "ML_EXTERNAL"
          ],
          "enumDescriptions": [
            "Invalid type. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Pipeline (load/export) jobs from the project will use the reservation.",
            "Query jobs from the project will use the reservation.",
            "BigQuery ML jobs that use services external to BigQuery for model training. These jobs will not utilize idle slots from other reservations."
          ],
          "type": "string",
          "description": "Which type of jobs will use the reservation."
        },
        "assignee": {
          "type": "string",
          "description": "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`."
        }
      },
      "type": "object",
      "id": "Assignment"
    },
    "MoveAssignmentRequest": {
      "type": "object",
      "id": "MoveAssignmentRequest",
      "description": "The request for ReservationService.MoveAssignment. **Note**: \"bigquery.reservationAssignments.create\" permission is required on the destination_id. **Note**: \"bigquery.reservationAssignments.create\" and \"bigquery.reservationAssignments.delete\" permission are required on the related assignee.",
      "properties": {
        "destinationId": {
          "type": "string",
          "description": "The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`"
        }
      }
    },
    "SearchAssignmentsResponse": {
      "properties": {
        "assignments": {
          "type": "array",
          "description": "List of assignments visible to the user.",
          "items": {
            "$ref": "Assignment"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "SearchAssignmentsResponse",
      "description": "The response for ReservationService.SearchAssignments.",
      "type": "object"
    },
    "Reservation": {
      "type": "object",
      "id": "Reservation",
      "properties": {
        "name": {
          "description": "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`.",
          "type": "string"
        },
        "ignoreIdleSlots": {
          "description": "If false, any query using this reservation will use idle slots from other reservations within the same admin project. If true, a query using this reservation will execute with the slot capacity specified above at most.",
          "type": "boolean"
        },
        "maxConcurrency": {
          "description": "Maximum number of queries that are allowed to run concurrently in this reservation. Default value is 0 which means that maximum concurrency will be automatically set based on the reservation size.",
          "format": "int64",
          "type": "string"
        },
        "slotCapacity": {
          "format": "int64",
          "description": "Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceed the parent's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the parent's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`.",
          "type": "string"
        },
        "creationTime": {
          "readOnly": true,
          "description": "Output only. Creation time of the reservation.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Last update time of the reservation."
        }
      },
      "description": "A reservation is a mechanism used to guarantee slots to users."
    },
    "ListCapacityCommitmentsResponse": {
      "description": "The response for ReservationService.ListCapacityCommitments.",
      "properties": {
        "capacityCommitments": {
          "type": "array",
          "items": {
            "$ref": "CapacityCommitment"
          },
          "description": "List of capacity commitments visible to the user."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "ListCapacityCommitmentsResponse",
      "type": "object"
    },
    "SplitCapacityCommitmentRequest": {
      "properties": {
        "slotCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of slots in the capacity commitment after the split."
        }
      },
      "id": "SplitCapacityCommitmentRequest",
      "description": "The request for ReservationService.SplitCapacityCommitment.",
      "type": "object"
    },
    "CreateSlotPoolMetadata": {
      "properties": {
        "slotPool": {
          "type": "string",
          "description": "Resource name of the slot pool that is being created. E.g., projects/myproject/locations/us-central1/reservations/foo/slotPools/123"
        }
      },
      "description": "The metadata for operation returned from ReservationService.CreateSlotPool.",
      "type": "object",
      "id": "CreateSlotPoolMetadata"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "type": "object",
      "properties": {}
    },
    "BiReservation": {
      "type": "object",
      "id": "BiReservation",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update timestamp of a reservation.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`."
        },
        "size": {
          "description": "Size of a reservation, in bytes.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents a BI Reservation."
    },
    "CapacityCommitment": {
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. State of the commitment.",
          "enumDescriptions": [
            "Invalid state value.",
            "Capacity commitment is pending provisioning. Pending capacity commitment does not contribute to the parent's slot_capacity.",
            "Once slots are provisioned, capacity commitment becomes active. slot_count is added to the parent's slot_capacity.",
            "Capacity commitment is failed to be activated by the backend."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED"
          ]
        },
        "commitmentStartTime": {
          "readOnly": true,
          "description": "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
          "format": "google-datetime",
          "type": "string"
        },
        "failureStatus": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. For FAILED commitment plan, provides the reason of failure."
        },
        "plan": {
          "type": "string",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "FLEX",
            "TRIAL",
            "MONTHLY",
            "ANNUAL"
          ],
          "enumDescriptions": [
            "Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.",
            "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.",
            "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.",
            "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
          ],
          "description": "Capacity commitment commitment plan."
        },
        "slotCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of slots in this commitment."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123`",
          "type": "string"
        },
        "commitmentEndTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
          "format": "google-datetime"
        },
        "renewalPlan": {
          "description": "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL commitments.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "FLEX",
            "TRIAL",
            "MONTHLY",
            "ANNUAL"
          ],
          "enumDescriptions": [
            "Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.",
            "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.",
            "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.",
            "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
          ],
          "type": "string"
        }
      },
      "id": "CapacityCommitment",
      "description": "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project."
    },
    "MergeCapacityCommitmentsRequest": {
      "properties": {
        "capacityCommitmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc"
        }
      },
      "type": "object",
      "id": "MergeCapacityCommitmentsRequest",
      "description": "The request for ReservationService.MergeCapacityCommitments."
    }
  },
  "servicePath": "",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "searchAssignments": {
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}:searchAssignments",
              "response": {
                "$ref": "SearchAssignmentsResponse"
              },
              "description": "Looks up assignments for a specified resource for a particular region. If the request is about a project: 1. Assignments created on the project will be returned if they exist. 2. Otherwise assignments created on the closest ancestor will be returned. 3. Assignments for different JobTypes will all be returned. The same logic applies if the request is about a folder. If the request is about an organization, then assignments created on the organization will be returned (organization doesn't have ancestors). Comparing to ListAssignments, there are some behavior differences: 1. permission on the assignee will be verified in this API. 2. Hierarchy lookup (project-\u003efolder-\u003eorganization) happens in this API. 3. Parent here is `projects/*/locations/*`, instead of `projects/*/locations/*reservations/*`. **Note** \"-\" cannot be used for projects nor locations.",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of items to return."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The resource name of the admin project(containing project and location), e.g.: `projects/myproject/locations/US`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                },
                "query": {
                  "description": "Please specify resource name as assignee in the query. Examples: * `assignee=projects/myproject` * `assignee=folders/123` * `assignee=organizations/456`",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "bigqueryreservation.projects.locations.searchAssignments",
              "path": "v1beta1/{+parent}:searchAssignments"
            },
            "updateBiReservation": {
              "request": {
                "$ref": "BiReservation"
              },
              "response": {
                "$ref": "BiReservation"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/biReservation",
              "description": "Updates a BI reservation. Only fields specified in the `field_mask` are updated. A singleton BI reservation always exists with default size 0. In order to reserve BI capacity it needs to be updated to an amount greater than 0. In order to release BI capacity reservation size must be set to 0.",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`.",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/biReservation$"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "A list of fields to be updated in this request."
                }
              },
              "id": "bigqueryreservation.projects.locations.updateBiReservation",
              "path": "v1beta1/{+name}"
            },
            "getBiReservation": {
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/biReservation",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "bigqueryreservation.projects.locations.getBiReservation",
              "description": "Retrieves a BI reservation.",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/biReservation$",
                  "type": "string",
                  "description": "Required. Name of the requested reservation, for example: `projects/{project_id}/locations/{location_id}/biReservation`"
                }
              },
              "response": {
                "$ref": "BiReservation"
              },
              "path": "v1beta1/{+name}"
            }
          },
          "resources": {
            "reservations": {
              "resources": {
                "assignments": {
                  "methods": {
                    "move": {
                      "path": "v1beta1/{+name}:move",
                      "description": "Moves an assignment under a new reservation. This differs from removing an existing assignment and recreating a new one by providing a transactional change that ensures an assignee always has an associated reservation.",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.move",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/assignments/[^/]+$",
                          "description": "Required. The resource name of the assignment, e.g. `projects/myproject/locations/US/reservations/team1-prod/assignments/123`"
                        }
                      },
                      "request": {
                        "$ref": "MoveAssignmentRequest"
                      },
                      "response": {
                        "$ref": "Assignment"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:move",
                      "httpMethod": "POST"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Assignment"
                      },
                      "response": {
                        "$ref": "Assignment"
                      },
                      "description": "Creates an assignment object which allows the given project to submit jobs of a certain type using slots from the specified reservation. Currently a resource (project, folder, organization) can only have one assignment per each (job_type, location) combination, and that reservation will be used for all jobs of the matching type. Different assignments can be created on different levels of the projects, folders or organization hierarchy. During query execution, the assignment is looked up at the project, folder and organization levels in that order. The first assignment found is applied to the query. When creating assignments, it does not matter if other assignments exist at higher levels. Example: * The organization `organizationA` contains two projects, `project1` and `project2`. * Assignments for all three entities (`organizationA`, `project1`, and `project2`) could all be created and mapped to the same or different reservations. \"None\" assignments represent an absence of the assignment. Projects assigned to None use on-demand pricing. To create a \"None\" assignment, use \"none\" as a reservation_id in the parent. Example parent: `projects/myproject/locations/US/reservations/none`. Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have 'bigquery.admin' permissions on the project using the reservation and the project that owns this reservation. Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment does not match location of the reservation.",
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.create",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource name of the assignment E.g. `projects/myproject/locations/US/reservations/team1-prod`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+parent}/assignments"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of items to return.",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource name e.g.: `projects/myproject/locations/US/reservations/team1-prod` Or: `projects/myproject/locations/US/reservations/-`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments",
                      "path": "v1beta1/{+parent}/assignments",
                      "response": {
                        "$ref": "ListAssignmentsResponse"
                      },
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.list",
                      "description": "Lists assignments. Only explicitly created assignments will be returned. Example: * Organization `organizationA` contains two projects, `project1` and `project2`. * Reservation `res1` exists and was created previously. * CreateAssignment was used previously to define the following associations between entities and reservations: `` and `` In this example, ListAssignments will just return the above two assignments for reservation `res1`, and no expansion/merge will happen. The wildcard \"-\" can be used for reservations in the request. In that case all assignments belongs to the specified project and location will be listed. **Note** \"-\" cannot be used for projects nor locations.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a assignment. No expansion will happen. Example: * Organization `organizationA` contains two projects, `project1` and `project2`. * Reservation `res1` exists and was created previously. * CreateAssignment was used previously to define the following associations between entities and reservations: `` and `` In this example, deletion of the `` assignment won't affect the other assignment ``. After said deletion, queries from `project1` will still use `res1` while queries from `project2` will switch to use on-demand mode.",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the resource, e.g. `projects/myproject/locations/US/reservations/team1-prod/assignments/123`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/assignments/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.delete",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      }
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a reservation. Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has assignments.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "bigqueryreservation.projects.locations.reservations.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Resource name of the reservation to retrieve. E.g., `projects/myproject/locations/US/reservations/team1-prod`"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListReservationsResponse"
                  },
                  "path": "v1beta1/{+parent}/reservations",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Can be used to filter out reservations based on names, capacity, etc, e.g.: filter=\"reservation.slot_capacity \u003e 200\" filter=\"reservation.name = \\\"*dev/*\\\"\" Advanced filtering syntax can be [here](https://cloud.google.com/logging/docs/view/advanced-filters).",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource name containing project and location, e.g.: `projects/myproject/locations/US`"
                    }
                  },
                  "description": "Lists all the reservations for the project in the specified location.",
                  "id": "bigqueryreservation.projects.locations.reservations.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a new reservation resource.",
                  "path": "v1beta1/{+parent}/reservations",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations",
                  "request": {
                    "$ref": "Reservation"
                  },
                  "id": "bigqueryreservation.projects.locations.reservations.create",
                  "response": {
                    "$ref": "Reservation"
                  },
                  "parameters": {
                    "reservationId": {
                      "description": "The reservation ID. This field must only contain lower case alphanumeric characters or dash. Max length is 64 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Project, location. E.g., `projects/myproject/locations/US`",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "id": "bigqueryreservation.projects.locations.reservations.patch",
                  "request": {
                    "$ref": "Reservation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}",
                  "response": {
                    "$ref": "Reservation"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1beta1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                      "description": "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`."
                    },
                    "updateMask": {
                      "description": "Standard field mask for the set of fields to be updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates an existing reservation resource."
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}",
                  "path": "v1beta1/{+name}",
                  "description": "Returns information about the reservation.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Reservation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigqueryreservation.projects.locations.reservations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Resource name of the reservation to retrieve. E.g., `projects/myproject/locations/US/reservations/team1-prod`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$"
                    }
                  }
                }
              }
            },
            "capacityCommitments": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "CapacityCommitment"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Resource name of the parent reservation. E.g., `projects/myproject/locations/US`",
                      "location": "path"
                    },
                    "enforceSingleAdminProjectPerOrg": {
                      "description": "If true, fail the request if another project in the organization has a capacity commitment.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.create",
                  "path": "v1beta1/{+parent}/capacityCommitments",
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new capacity commitment resource.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "description": "Returns information about the capacity commitment.",
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.get",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "description": "Required. Resource name of the capacity commitment to retrieve. E.g., `projects/myproject/locations/US/capacityCommitments/123`",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "CapacityCommitment"
                  },
                  "path": "v1beta1/{+name}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Standard field mask for the set of fields to be updated.",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.patch",
                  "description": "Updates an existing capacity commitment. Only `plan` and `renewal_plan` fields can be updated. Plan can only be changed to a plan of a longer commitment period. Attempting to change to a plan with shorter commitment period will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`.",
                  "response": {
                    "$ref": "CapacityCommitment"
                  }
                },
                "merge": {
                  "httpMethod": "POST",
                  "description": "Merges capacity commitments of the same plan into a single commitment. The resulting capacity commitment has the greater commitment_end_time out of the to-be-merged capacity commitments. Attempting to merge capacity commitments of different plan will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`.",
                  "parameters": {
                    "parent": {
                      "description": "Parent resource that identifies admin project and location e.g., `projects/myproject/locations/us`",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:merge",
                  "path": "v1beta1/{+parent}/capacityCommitments:merge",
                  "request": {
                    "$ref": "MergeCapacityCommitmentsRequest"
                  },
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.merge",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments",
                  "description": "Lists all the capacity commitments for the admin project.",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Resource name of the parent reservation. E.g., `projects/myproject/locations/US`",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+parent}/capacityCommitments",
                  "response": {
                    "$ref": "ListCapacityCommitmentsResponse"
                  }
                },
                "split": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "SplitCapacityCommitmentResponse"
                  },
                  "request": {
                    "$ref": "SplitCapacityCommitmentRequest"
                  },
                  "description": "Splits capacity commitment to two commitments of the same plan and `commitment_end_time`. A common use case is to enable downgrading commitments. For example, in order to downgrade from 10000 slots to 8000, you might split a 10000 capacity commitment into commitments of 2000 and 8000. Then, you would change the plan of the first one to `FLEX` and then delete it.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:split",
                  "httpMethod": "POST",
                  "path": "v1beta1/{+name}:split",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "description": "Required. The resource name e.g.,: `projects/myproject/locations/US/capacityCommitments/123`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.split"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "location": "path",
                      "description": "Required. Resource name of the capacity commitment to delete. E.g., `projects/myproject/locations/US/capacityCommitments/123`",
                      "type": "string"
                    }
                  },
                  "path": "v1beta1/{+name}",
                  "description": "Deletes a capacity commitment. Attempting to delete capacity commitment before its commitment_end_time will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`."
                }
              }
            }
          }
        }
      }
    }
  },
  "title": "BigQuery Reservation API",
  "baseUrl": "https://bigqueryreservation.googleapis.com/",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google",
  "mtlsRootUrl": "https://bigqueryreservation.mtls.googleapis.com/",
  "version_module": true,
  "canonicalName": "BigQuery Reservation",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "version": "v1beta1",
  "documentationLink": "https://cloud.google.com/bigquery/",
  "fullyEncodeReservedExpansion": true,
  "name": "bigqueryreservation",
  "id": "bigqueryreservation:v1beta1",
  "kind": "discovery#restDescription"
}
