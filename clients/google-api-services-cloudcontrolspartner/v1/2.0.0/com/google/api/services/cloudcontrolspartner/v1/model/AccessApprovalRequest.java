/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudcontrolspartner.v1.model;

/**
 * Details about the Access request.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Controls Partner API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AccessApprovalRequest extends com.google.api.client.json.GenericJson {

  /**
   * Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/wor
   * kloads/{workload}/accessApprovalRequests/{access_approval_request}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The time at which approval was requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String requestTime;

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String requestedExpirationTime;

  /**
   * The justification for which approval is being requested.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AccessReason requestedReason;

  /**
   * Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/wor
   * kloads/{workload}/accessApprovalRequests/{access_approval_request}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/wor
   * kloads/{workload}/accessApprovalRequests/{access_approval_request}`
   * @param name name or {@code null} for none
   */
  public AccessApprovalRequest setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The time at which approval was requested.
   * @return value or {@code null} for none
   */
  public String getRequestTime() {
    return requestTime;
  }

  /**
   * The time at which approval was requested.
   * @param requestTime requestTime or {@code null} for none
   */
  public AccessApprovalRequest setRequestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * @return value or {@code null} for none
   */
  public String getRequestedExpirationTime() {
    return requestedExpirationTime;
  }

  /**
   * The requested expiration for the approval. If the request is approved, access will be granted
   * from the time of approval until the expiration time.
   * @param requestedExpirationTime requestedExpirationTime or {@code null} for none
   */
  public AccessApprovalRequest setRequestedExpirationTime(String requestedExpirationTime) {
    this.requestedExpirationTime = requestedExpirationTime;
    return this;
  }

  /**
   * The justification for which approval is being requested.
   * @return value or {@code null} for none
   */
  public AccessReason getRequestedReason() {
    return requestedReason;
  }

  /**
   * The justification for which approval is being requested.
   * @param requestedReason requestedReason or {@code null} for none
   */
  public AccessApprovalRequest setRequestedReason(AccessReason requestedReason) {
    this.requestedReason = requestedReason;
    return this;
  }

  @Override
  public AccessApprovalRequest set(String fieldName, Object value) {
    return (AccessApprovalRequest) super.set(fieldName, value);
  }

  @Override
  public AccessApprovalRequest clone() {
    return (AccessApprovalRequest) super.clone();
  }

}
