/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.reports.model;

/**
 * Details of the resource on which the action was performed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResourceDetails extends com.google.api.client.json.GenericJson {

  /**
   * Id of the application to which this resource belongs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long applicationId;

  /**
   * List of labels applied on the resource
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppliedLabel> appliedLabels;

  static {
    // hack to force ProGuard to consider AppliedLabel used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppliedLabel.class);
  }

  /**
   * Identifier of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Owner of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ownerEmail;

  /**
   * Defines relationship of the resource to the events
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String relation;

  /**
   * Title of the resource. For instance, in case of a drive document, this would be the title of
   * the document. In case of an email, this would be the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Type of the resource - document, email, chat message
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Id of the application to which this resource belongs
   * @return value or {@code null} for none
   */
  public java.lang.Long getApplicationId() {
    return applicationId;
  }

  /**
   * Id of the application to which this resource belongs
   * @param applicationId applicationId or {@code null} for none
   */
  public ResourceDetails setApplicationId(java.lang.Long applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * List of labels applied on the resource
   * @return value or {@code null} for none
   */
  public java.util.List<AppliedLabel> getAppliedLabels() {
    return appliedLabels;
  }

  /**
   * List of labels applied on the resource
   * @param appliedLabels appliedLabels or {@code null} for none
   */
  public ResourceDetails setAppliedLabels(java.util.List<AppliedLabel> appliedLabels) {
    this.appliedLabels = appliedLabels;
    return this;
  }

  /**
   * Identifier of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Identifier of the resource.
   * @param id id or {@code null} for none
   */
  public ResourceDetails setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Owner of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getOwnerEmail() {
    return ownerEmail;
  }

  /**
   * Owner of the resource.
   * @param ownerEmail ownerEmail or {@code null} for none
   */
  public ResourceDetails setOwnerEmail(java.lang.String ownerEmail) {
    this.ownerEmail = ownerEmail;
    return this;
  }

  /**
   * Defines relationship of the resource to the events
   * @return value or {@code null} for none
   */
  public java.lang.String getRelation() {
    return relation;
  }

  /**
   * Defines relationship of the resource to the events
   * @param relation relation or {@code null} for none
   */
  public ResourceDetails setRelation(java.lang.String relation) {
    this.relation = relation;
    return this;
  }

  /**
   * Title of the resource. For instance, in case of a drive document, this would be the title of
   * the document. In case of an email, this would be the subject.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title of the resource. For instance, in case of a drive document, this would be the title of
   * the document. In case of an email, this would be the subject.
   * @param title title or {@code null} for none
   */
  public ResourceDetails setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Type of the resource - document, email, chat message
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the resource - document, email, chat message
   * @param type type or {@code null} for none
   */
  public ResourceDetails setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public ResourceDetails set(String fieldName, Object value) {
    return (ResourceDetails) super.set(fieldName, value);
  }

  @Override
  public ResourceDetails clone() {
    return (ResourceDetails) super.clone();
  }

}
