/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * BackupApplianceLockInfo contains metadata about the backupappliance that created the lock.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupApplianceLockInfo extends com.google.api.client.json.GenericJson {

  /**
   * Required. The ID of the backup/recovery appliance that created this lock.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long backupApplianceId;

  /**
   * Required. The name of the backup/recovery appliance that created this lock.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupApplianceName;

  /**
   * The image name that depends on this Backup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupImage;

  /**
   * The job name on the backup/recovery appliance that created this lock.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jobName;

  /**
   * Required. The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc. The value of this string is
   * only meaningful to the client and it is not interpreted by the BackupVault service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lockReason;

  /**
   * The SLA on the backup/recovery appliance that owns the lock.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long slaId;

  /**
   * Required. The ID of the backup/recovery appliance that created this lock.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBackupApplianceId() {
    return backupApplianceId;
  }

  /**
   * Required. The ID of the backup/recovery appliance that created this lock.
   * @param backupApplianceId backupApplianceId or {@code null} for none
   */
  public BackupApplianceLockInfo setBackupApplianceId(java.lang.Long backupApplianceId) {
    this.backupApplianceId = backupApplianceId;
    return this;
  }

  /**
   * Required. The name of the backup/recovery appliance that created this lock.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupApplianceName() {
    return backupApplianceName;
  }

  /**
   * Required. The name of the backup/recovery appliance that created this lock.
   * @param backupApplianceName backupApplianceName or {@code null} for none
   */
  public BackupApplianceLockInfo setBackupApplianceName(java.lang.String backupApplianceName) {
    this.backupApplianceName = backupApplianceName;
    return this;
  }

  /**
   * The image name that depends on this Backup.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupImage() {
    return backupImage;
  }

  /**
   * The image name that depends on this Backup.
   * @param backupImage backupImage or {@code null} for none
   */
  public BackupApplianceLockInfo setBackupImage(java.lang.String backupImage) {
    this.backupImage = backupImage;
    return this;
  }

  /**
   * The job name on the backup/recovery appliance that created this lock.
   * @return value or {@code null} for none
   */
  public java.lang.String getJobName() {
    return jobName;
  }

  /**
   * The job name on the backup/recovery appliance that created this lock.
   * @param jobName jobName or {@code null} for none
   */
  public BackupApplianceLockInfo setJobName(java.lang.String jobName) {
    this.jobName = jobName;
    return this;
  }

  /**
   * Required. The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc. The value of this string is
   * only meaningful to the client and it is not interpreted by the BackupVault service.
   * @return value or {@code null} for none
   */
  public java.lang.String getLockReason() {
    return lockReason;
  }

  /**
   * Required. The reason for the lock: e.g. MOUNT/RESTORE/BACKUP/etc. The value of this string is
   * only meaningful to the client and it is not interpreted by the BackupVault service.
   * @param lockReason lockReason or {@code null} for none
   */
  public BackupApplianceLockInfo setLockReason(java.lang.String lockReason) {
    this.lockReason = lockReason;
    return this;
  }

  /**
   * The SLA on the backup/recovery appliance that owns the lock.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSlaId() {
    return slaId;
  }

  /**
   * The SLA on the backup/recovery appliance that owns the lock.
   * @param slaId slaId or {@code null} for none
   */
  public BackupApplianceLockInfo setSlaId(java.lang.Long slaId) {
    this.slaId = slaId;
    return this;
  }

  @Override
  public BackupApplianceLockInfo set(String fieldName, Object value) {
    return (BackupApplianceLockInfo) super.set(fieldName, value);
  }

  @Override
  public BackupApplianceLockInfo clone() {
    return (BackupApplianceLockInfo) super.clone();
  }

}
