/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * A rubric grade set for the student submission. There is at most one entry per rubric criterion.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RubricGrade extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Criterion ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String criterionId;

  /**
   * Optional. Optional level ID of the selected level. If empty, no level was selected.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String levelId;

  /**
   * Optional. Optional points assigned for this criterion, typically based on the level. Levels
   * might or might not have points. If unset, no points were set for this criterion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double points;

  /**
   * Optional. Criterion ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getCriterionId() {
    return criterionId;
  }

  /**
   * Optional. Criterion ID.
   * @param criterionId criterionId or {@code null} for none
   */
  public RubricGrade setCriterionId(java.lang.String criterionId) {
    this.criterionId = criterionId;
    return this;
  }

  /**
   * Optional. Optional level ID of the selected level. If empty, no level was selected.
   * @return value or {@code null} for none
   */
  public java.lang.String getLevelId() {
    return levelId;
  }

  /**
   * Optional. Optional level ID of the selected level. If empty, no level was selected.
   * @param levelId levelId or {@code null} for none
   */
  public RubricGrade setLevelId(java.lang.String levelId) {
    this.levelId = levelId;
    return this;
  }

  /**
   * Optional. Optional points assigned for this criterion, typically based on the level. Levels
   * might or might not have points. If unset, no points were set for this criterion.
   * @return value or {@code null} for none
   */
  public java.lang.Double getPoints() {
    return points;
  }

  /**
   * Optional. Optional points assigned for this criterion, typically based on the level. Levels
   * might or might not have points. If unset, no points were set for this criterion.
   * @param points points or {@code null} for none
   */
  public RubricGrade setPoints(java.lang.Double points) {
    this.points = points;
    return this;
  }

  @Override
  public RubricGrade set(String fieldName, Object value) {
    return (RubricGrade) super.set(fieldName, value);
  }

  @Override
  public RubricGrade clone() {
    return (RubricGrade) super.clone();
  }

}
