/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1alpha.model;

/**
 * Observability Instance specific configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ObservabilityInstanceConfig extends com.google.api.client.json.GenericJson {

  /**
   * Observability feature status for an instance. This is a read-only flag and modifiable only by
   * producer API. This flag is turned "off" by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * Query string length. The default value is 10k.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxQueryStringLength;

  /**
   * Preserve comments in query string for an instance. This flag is turned "off" by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean preserveComments;

  /**
   * Number of query execution plans captured by Insights per minute for all queries combined. The
   * default value is 5. Any integer between 0 to 20 is considered valid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer queryPlansPerMinute;

  /**
   * Record application tags for an instance. This flag is turned "off" by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean recordApplicationTags;

  /**
   * Track actively running queries on the instance. If not set, this flag is "off" by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trackActiveQueries;

  /**
   * Output only. Track wait event types during query execution for an instance. This flag is turned
   * "on" by default but tracking is enabled only after observability enabled flag is also turned
   * on. This is read-only flag and only modifiable by producer API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trackWaitEventTypes;

  /**
   * Track wait events during query execution for an instance. This flag is turned "on" by default
   * but tracking is enabled only after observability enabled flag is also turned on.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trackWaitEvents;

  /**
   * Observability feature status for an instance. This is a read-only flag and modifiable only by
   * producer API. This flag is turned "off" by default.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Observability feature status for an instance. This is a read-only flag and modifiable only by
   * producer API. This flag is turned "off" by default.
   * @param enabled enabled or {@code null} for none
   */
  public ObservabilityInstanceConfig setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Query string length. The default value is 10k.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxQueryStringLength() {
    return maxQueryStringLength;
  }

  /**
   * Query string length. The default value is 10k.
   * @param maxQueryStringLength maxQueryStringLength or {@code null} for none
   */
  public ObservabilityInstanceConfig setMaxQueryStringLength(java.lang.Integer maxQueryStringLength) {
    this.maxQueryStringLength = maxQueryStringLength;
    return this;
  }

  /**
   * Preserve comments in query string for an instance. This flag is turned "off" by default.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPreserveComments() {
    return preserveComments;
  }

  /**
   * Preserve comments in query string for an instance. This flag is turned "off" by default.
   * @param preserveComments preserveComments or {@code null} for none
   */
  public ObservabilityInstanceConfig setPreserveComments(java.lang.Boolean preserveComments) {
    this.preserveComments = preserveComments;
    return this;
  }

  /**
   * Number of query execution plans captured by Insights per minute for all queries combined. The
   * default value is 5. Any integer between 0 to 20 is considered valid.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getQueryPlansPerMinute() {
    return queryPlansPerMinute;
  }

  /**
   * Number of query execution plans captured by Insights per minute for all queries combined. The
   * default value is 5. Any integer between 0 to 20 is considered valid.
   * @param queryPlansPerMinute queryPlansPerMinute or {@code null} for none
   */
  public ObservabilityInstanceConfig setQueryPlansPerMinute(java.lang.Integer queryPlansPerMinute) {
    this.queryPlansPerMinute = queryPlansPerMinute;
    return this;
  }

  /**
   * Record application tags for an instance. This flag is turned "off" by default.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRecordApplicationTags() {
    return recordApplicationTags;
  }

  /**
   * Record application tags for an instance. This flag is turned "off" by default.
   * @param recordApplicationTags recordApplicationTags or {@code null} for none
   */
  public ObservabilityInstanceConfig setRecordApplicationTags(java.lang.Boolean recordApplicationTags) {
    this.recordApplicationTags = recordApplicationTags;
    return this;
  }

  /**
   * Track actively running queries on the instance. If not set, this flag is "off" by default.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrackActiveQueries() {
    return trackActiveQueries;
  }

  /**
   * Track actively running queries on the instance. If not set, this flag is "off" by default.
   * @param trackActiveQueries trackActiveQueries or {@code null} for none
   */
  public ObservabilityInstanceConfig setTrackActiveQueries(java.lang.Boolean trackActiveQueries) {
    this.trackActiveQueries = trackActiveQueries;
    return this;
  }

  /**
   * Output only. Track wait event types during query execution for an instance. This flag is turned
   * "on" by default but tracking is enabled only after observability enabled flag is also turned
   * on. This is read-only flag and only modifiable by producer API.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrackWaitEventTypes() {
    return trackWaitEventTypes;
  }

  /**
   * Output only. Track wait event types during query execution for an instance. This flag is turned
   * "on" by default but tracking is enabled only after observability enabled flag is also turned
   * on. This is read-only flag and only modifiable by producer API.
   * @param trackWaitEventTypes trackWaitEventTypes or {@code null} for none
   */
  public ObservabilityInstanceConfig setTrackWaitEventTypes(java.lang.Boolean trackWaitEventTypes) {
    this.trackWaitEventTypes = trackWaitEventTypes;
    return this;
  }

  /**
   * Track wait events during query execution for an instance. This flag is turned "on" by default
   * but tracking is enabled only after observability enabled flag is also turned on.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrackWaitEvents() {
    return trackWaitEvents;
  }

  /**
   * Track wait events during query execution for an instance. This flag is turned "on" by default
   * but tracking is enabled only after observability enabled flag is also turned on.
   * @param trackWaitEvents trackWaitEvents or {@code null} for none
   */
  public ObservabilityInstanceConfig setTrackWaitEvents(java.lang.Boolean trackWaitEvents) {
    this.trackWaitEvents = trackWaitEvents;
    return this;
  }

  @Override
  public ObservabilityInstanceConfig set(String fieldName, Object value) {
    return (ObservabilityInstanceConfig) super.set(fieldName, value);
  }

  @Override
  public ObservabilityInstanceConfig clone() {
    return (ObservabilityInstanceConfig) super.clone();
  }

}
