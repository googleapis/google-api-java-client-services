{
  "mtlsRootUrl": "https://firebasedatabase.mtls.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch",
  "protocol": "rest",
  "canonicalName": "Firebase Realtime Database",
  "baseUrl": "https://firebasedatabase.googleapis.com/",
  "id": "firebasedatabase:v1beta",
  "ownerDomain": "google.com",
  "schemas": {
    "DisableDatabaseInstanceRequest": {
      "type": "object",
      "id": "DisableDatabaseInstanceRequest",
      "description": "The request sent to the DisableDatabaseInstance method.",
      "properties": {}
    },
    "ListDatabaseInstancesResponse": {
      "properties": {
        "instances": {
          "description": "List of each DatabaseInstance that is in the parent Firebase project.",
          "type": "array",
          "items": {
            "$ref": "DatabaseInstance"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted."
        }
      },
      "id": "ListDatabaseInstancesResponse",
      "type": "object",
      "description": "The response from the ListDatabaseInstances method."
    },
    "ReenableDatabaseInstanceRequest": {
      "properties": {},
      "description": "The request sent to the ReenableDatabaseInstance method.",
      "type": "object",
      "id": "ReenableDatabaseInstanceRequest"
    },
    "DatabaseInstance": {
      "id": "DatabaseInstance",
      "type": "object",
      "description": "Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`. Currently the only supported location is 'us-central1'."
        },
        "state": {
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DISABLED",
            "DELETED"
          ],
          "enumDescriptions": [
            "Unspecified state, likely the result of an error on the backend. This is only used for distinguishing unset values.",
            "The normal and active state.",
            "The database is in a disabled state. It can be re-enabled later.",
            "The database is in a deleted state."
          ],
          "description": "The database's lifecycle state. Read-only.",
          "type": "string"
        },
        "databaseUrl": {
          "type": "string",
          "description": "Immutable. The globally unique hostname of the database."
        },
        "type": {
          "enumDescriptions": [
            "Unknown state, likely the result of an error on the backend. This is only used for distinguishing unset values.",
            "The default database that is provisioned when a project is created.",
            "A database that the user created."
          ],
          "enum": [
            "DATABASE_INSTANCE_TYPE_UNSPECIFIED",
            "DEFAULT_DATABASE",
            "USER_DATABASE"
          ],
          "type": "string",
          "description": "The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted."
        },
        "project": {
          "type": "string",
          "description": "The resource name of the project this instance belongs to. For example: `projects/{project-number}`."
        }
      }
    }
  },
  "ownerName": "Google",
  "revision": "20210326",
  "documentationLink": "https://firebase.google.com/docs/reference/rest/database/database-management/rest/",
  "discoveryVersion": "v1",
  "rootUrl": "https://firebasedatabase.googleapis.com/",
  "title": "Firebase Realtime Database Management API",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "instances": {
              "methods": {
                "reenable": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "id": "firebasedatabase.projects.locations.instances.reenable",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`"
                    }
                  },
                  "request": {
                    "$ref": "ReenableDatabaseInstanceRequest"
                  },
                  "description": "Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reenable",
                  "path": "v1beta/{+name}:reenable",
                  "httpMethod": "POST"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "request": {
                    "$ref": "DatabaseInstance"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "The parent project for which to create a database instance, in the form: `projects/{project-number}/locations/{location-id}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "validateOnly": {
                      "description": "When set to true, the request will be validated but not submitted.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "databaseId": {
                      "location": "query",
                      "description": "The globally unique identifier of the database instance.",
                      "type": "string"
                    }
                  },
                  "id": "firebasedatabase.projects.locations.instances.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems.",
                  "path": "v1beta/{+parent}/instances"
                },
                "list": {
                  "response": {
                    "$ref": "ListDatabaseInstancesResponse"
                  },
                  "description": "Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "httpMethod": "GET",
                  "id": "firebasedatabase.projects.locations.instances.list",
                  "path": "v1beta/{+parent}/instances",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of database instances to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The parent project for which to list database instances, in the form: `projects/{project-number}/locations/{location-id}` To list across all locations, use a parent in the form: `projects/{project-number}/locations/-`",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Token returned from a previous call to `ListDatabaseInstances` indicating where in the set of database instances to resume listing.",
                      "type": "string"
                    }
                  }
                },
                "disable": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disable",
                  "description": "Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console.",
                  "id": "firebasedatabase.projects.locations.instances.disable",
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "path": "v1beta/{+name}:disable",
                  "request": {
                    "$ref": "DisableDatabaseInstanceRequest"
                  }
                },
                "delete": {
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "firebasedatabase.projects.locations.instances.delete",
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Marks a DatabaseInstance to be deleted. The DatabaseInstance will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "firebasedatabase.projects.locations.instances.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DatabaseInstance"
                  },
                  "description": "Gets the DatabaseInstance identified by the specified resource name.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`. `database-id` is a globally unique identifier across all parent collections. For convenience, this method allows you to supply `-` as a wildcard character in place of specific collections under `projects` and `locations`. The resulting wildcarding form of the method is: `projects/-/locations/-/instances/{database-id}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}"
                }
              }
            }
          }
        }
      }
    }
  },
  "version": "v1beta",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "description": "The Firebase Realtime Database Management API enables programmatic provisioning and management of Realtime Database instances.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/firebase.readonly": {
          "description": "View all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "name": "firebasedatabase",
  "basePath": "",
  "version_module": true
}
