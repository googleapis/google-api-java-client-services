/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * Keyed app state reported by the app.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KeyedAppState extends com.google.api.client.json.GenericJson {

  /**
   * The creation time of the app state on the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optionally, a machine-readable value to be read by the EMM. For example, setting values that
   * the admin can choose to query against in the EMM console (e.g. “notify me if the
   * battery_warning data < 10”).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String data;

  /**
   * The key for the app state. Acts as a point of reference for what the app is providing state
   * for. For example, when providing managed configuration feedback, this key could be the managed
   * configuration key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * The time the app state was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastUpdateTime;

  /**
   * Optionally, a free-form message string to explain the app state. If the state was triggered by
   * a particular value (e.g. a managed configuration value), it should be included in the message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String message;

  /**
   * The severity of the app state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String severity;

  /**
   * The creation time of the app state on the device.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * The creation time of the app state on the device.
   * @param createTime createTime or {@code null} for none
   */
  public KeyedAppState setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optionally, a machine-readable value to be read by the EMM. For example, setting values that
   * the admin can choose to query against in the EMM console (e.g. “notify me if the
   * battery_warning data < 10”).
   * @return value or {@code null} for none
   */
  public java.lang.String getData() {
    return data;
  }

  /**
   * Optionally, a machine-readable value to be read by the EMM. For example, setting values that
   * the admin can choose to query against in the EMM console (e.g. “notify me if the
   * battery_warning data < 10”).
   * @param data data or {@code null} for none
   */
  public KeyedAppState setData(java.lang.String data) {
    this.data = data;
    return this;
  }

  /**
   * The key for the app state. Acts as a point of reference for what the app is providing state
   * for. For example, when providing managed configuration feedback, this key could be the managed
   * configuration key.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * The key for the app state. Acts as a point of reference for what the app is providing state
   * for. For example, when providing managed configuration feedback, this key could be the managed
   * configuration key.
   * @param key key or {@code null} for none
   */
  public KeyedAppState setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * The time the app state was most recently updated.
   * @return value or {@code null} for none
   */
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }

  /**
   * The time the app state was most recently updated.
   * @param lastUpdateTime lastUpdateTime or {@code null} for none
   */
  public KeyedAppState setLastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * Optionally, a free-form message string to explain the app state. If the state was triggered by
   * a particular value (e.g. a managed configuration value), it should be included in the message.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Optionally, a free-form message string to explain the app state. If the state was triggered by
   * a particular value (e.g. a managed configuration value), it should be included in the message.
   * @param message message or {@code null} for none
   */
  public KeyedAppState setMessage(java.lang.String message) {
    this.message = message;
    return this;
  }

  /**
   * The severity of the app state.
   * @return value or {@code null} for none
   */
  public java.lang.String getSeverity() {
    return severity;
  }

  /**
   * The severity of the app state.
   * @param severity severity or {@code null} for none
   */
  public KeyedAppState setSeverity(java.lang.String severity) {
    this.severity = severity;
    return this;
  }

  @Override
  public KeyedAppState set(String fieldName, Object value) {
    return (KeyedAppState) super.set(fieldName, value);
  }

  @Override
  public KeyedAppState clone() {
    return (KeyedAppState) super.clone();
  }

}
