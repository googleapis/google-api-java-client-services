/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Represents the action triggered by Rule Engine when the rule is true.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1Action extends com.google.api.client.json.GenericJson {

  /**
   * Action triggering access control operations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1AccessControlAction accessControl;

  /**
   * ID of the action. Managed internally.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String actionId;

  /**
   * Action triggering create document link operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1AddToFolderAction addToFolder;

  /**
   * Action triggering data update operations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1DataUpdateAction dataUpdate;

  /**
   * Action triggering data validation operations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1DataValidationAction dataValidation;

  /**
   * Action deleting the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1DeleteDocumentAction deleteDocumentAction;

  /**
   * Action publish to Pub/Sub operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1PublishAction publishToPubSub;

  /**
   * Action removing a document from a folder.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1RemoveFromFolderAction removeFromFolderAction;

  /**
   * Action triggering access control operations.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1AccessControlAction getAccessControl() {
    return accessControl;
  }

  /**
   * Action triggering access control operations.
   * @param accessControl accessControl or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setAccessControl(GoogleCloudContentwarehouseV1AccessControlAction accessControl) {
    this.accessControl = accessControl;
    return this;
  }

  /**
   * ID of the action. Managed internally.
   * @return value or {@code null} for none
   */
  public java.lang.String getActionId() {
    return actionId;
  }

  /**
   * ID of the action. Managed internally.
   * @param actionId actionId or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setActionId(java.lang.String actionId) {
    this.actionId = actionId;
    return this;
  }

  /**
   * Action triggering create document link operation.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1AddToFolderAction getAddToFolder() {
    return addToFolder;
  }

  /**
   * Action triggering create document link operation.
   * @param addToFolder addToFolder or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setAddToFolder(GoogleCloudContentwarehouseV1AddToFolderAction addToFolder) {
    this.addToFolder = addToFolder;
    return this;
  }

  /**
   * Action triggering data update operations.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DataUpdateAction getDataUpdate() {
    return dataUpdate;
  }

  /**
   * Action triggering data update operations.
   * @param dataUpdate dataUpdate or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setDataUpdate(GoogleCloudContentwarehouseV1DataUpdateAction dataUpdate) {
    this.dataUpdate = dataUpdate;
    return this;
  }

  /**
   * Action triggering data validation operations.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DataValidationAction getDataValidation() {
    return dataValidation;
  }

  /**
   * Action triggering data validation operations.
   * @param dataValidation dataValidation or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setDataValidation(GoogleCloudContentwarehouseV1DataValidationAction dataValidation) {
    this.dataValidation = dataValidation;
    return this;
  }

  /**
   * Action deleting the document.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DeleteDocumentAction getDeleteDocumentAction() {
    return deleteDocumentAction;
  }

  /**
   * Action deleting the document.
   * @param deleteDocumentAction deleteDocumentAction or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setDeleteDocumentAction(GoogleCloudContentwarehouseV1DeleteDocumentAction deleteDocumentAction) {
    this.deleteDocumentAction = deleteDocumentAction;
    return this;
  }

  /**
   * Action publish to Pub/Sub operation.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1PublishAction getPublishToPubSub() {
    return publishToPubSub;
  }

  /**
   * Action publish to Pub/Sub operation.
   * @param publishToPubSub publishToPubSub or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setPublishToPubSub(GoogleCloudContentwarehouseV1PublishAction publishToPubSub) {
    this.publishToPubSub = publishToPubSub;
    return this;
  }

  /**
   * Action removing a document from a folder.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1RemoveFromFolderAction getRemoveFromFolderAction() {
    return removeFromFolderAction;
  }

  /**
   * Action removing a document from a folder.
   * @param removeFromFolderAction removeFromFolderAction or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1Action setRemoveFromFolderAction(GoogleCloudContentwarehouseV1RemoveFromFolderAction removeFromFolderAction) {
    this.removeFromFolderAction = removeFromFolderAction;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1Action set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1Action) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1Action clone() {
    return (GoogleCloudContentwarehouseV1Action) super.clone();
  }

}
