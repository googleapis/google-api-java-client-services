/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Dynamite-related extension data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData extends com.google.api.client.json.GenericJson {

  /**
   * Avatar image URL for a Google Group, based on the member count.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String avatarUrl;

  /**
   * Short description of this bot. Only set if EntityType == BOT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Display name of bot developer. Only set if EntityType == BOT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String developerName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dndState;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityType;

  /**
   * Whether caller has visibility into the direct members of the roster. NEXT TAG: 11
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isMembershipVisibleToCaller;

  /**
   * DEPRECATED: use segmented_membership_counts instead. Number of members (direct or indirect) in
   * a Google Group. Only an estimate for large groups (currently > 1K direct / indirect members).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long memberCount;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedOrganizationInfo organizationInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String presence;

  /**
   * Represents the direct membership counts of a Google Group. May contain counts based on member
   * type and membership state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsDynamiteSharedSegmentedMembershipCounts segmentedMembershipCounts;

  /**
   * Avatar image URL for a Google Group, based on the member count.
   * @return value or {@code null} for none
   */
  public java.lang.String getAvatarUrl() {
    return avatarUrl;
  }

  /**
   * Avatar image URL for a Google Group, based on the member count.
   * @param avatarUrl avatarUrl or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setAvatarUrl(java.lang.String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Short description of this bot. Only set if EntityType == BOT.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Short description of this bot. Only set if EntityType == BOT.
   * @param description description or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Display name of bot developer. Only set if EntityType == BOT.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeveloperName() {
    return developerName;
  }

  /**
   * Display name of bot developer. Only set if EntityType == BOT.
   * @param developerName developerName or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setDeveloperName(java.lang.String developerName) {
    this.developerName = developerName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDndState() {
    return dndState;
  }

  /**
   * @param dndState dndState or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setDndState(java.lang.String dndState) {
    this.dndState = dndState;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityType() {
    return entityType;
  }

  /**
   * @param entityType entityType or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setEntityType(java.lang.String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Whether caller has visibility into the direct members of the roster. NEXT TAG: 11
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsMembershipVisibleToCaller() {
    return isMembershipVisibleToCaller;
  }

  /**
   * Whether caller has visibility into the direct members of the roster. NEXT TAG: 11
   * @param isMembershipVisibleToCaller isMembershipVisibleToCaller or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setIsMembershipVisibleToCaller(java.lang.Boolean isMembershipVisibleToCaller) {
    this.isMembershipVisibleToCaller = isMembershipVisibleToCaller;
    return this;
  }

  /**
   * DEPRECATED: use segmented_membership_counts instead. Number of members (direct or indirect) in
   * a Google Group. Only an estimate for large groups (currently > 1K direct / indirect members).
   * @return value or {@code null} for none
   */
  public java.lang.Long getMemberCount() {
    return memberCount;
  }

  /**
   * DEPRECATED: use segmented_membership_counts instead. Number of members (direct or indirect) in
   * a Google Group. Only an estimate for large groups (currently > 1K direct / indirect members).
   * @param memberCount memberCount or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setMemberCount(java.lang.Long memberCount) {
    this.memberCount = memberCount;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedOrganizationInfo getOrganizationInfo() {
    return organizationInfo;
  }

  /**
   * @param organizationInfo organizationInfo or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setOrganizationInfo(AppsDynamiteSharedOrganizationInfo organizationInfo) {
    this.organizationInfo = organizationInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPresence() {
    return presence;
  }

  /**
   * @param presence presence or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setPresence(java.lang.String presence) {
    this.presence = presence;
    return this;
  }

  /**
   * Represents the direct membership counts of a Google Group. May contain counts based on member
   * type and membership state.
   * @return value or {@code null} for none
   */
  public AppsDynamiteSharedSegmentedMembershipCounts getSegmentedMembershipCounts() {
    return segmentedMembershipCounts;
  }

  /**
   * Represents the direct membership counts of a Google Group. May contain counts based on member
   * type and membership state.
   * @param segmentedMembershipCounts segmentedMembershipCounts or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData setSegmentedMembershipCounts(AppsDynamiteSharedSegmentedMembershipCounts segmentedMembershipCounts) {
    this.segmentedMembershipCounts = segmentedMembershipCounts;
    return this;
  }

  @Override
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData set(String fieldName, Object value) {
    return (SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData) super.set(fieldName, value);
  }

  @Override
  public SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData clone() {
    return (SocialGraphWireProtoPeopleapiExtensionDynamiteExtendedData) super.clone();
  }

}
