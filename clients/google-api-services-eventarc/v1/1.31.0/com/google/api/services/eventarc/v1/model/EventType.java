/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.eventarc.v1.model;

/**
 * A representation of the event type resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Eventarc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EventType extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Human friendly description of what the event type is about. For example "Bucket
   * created in Cloud Storage".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. URI for the event schema. For example "https://github.com/googleapis/google-
   * cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String eventSchemaUri;

  /**
   * Output only. Filtering attributes for the event type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<FilteringAttribute> filteringAttributes;

  /**
   * Output only. The full name of the event type (for example,
   * "google.cloud.storage.object.v1.finalized"). In the form of {provider-
   * id}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to
   * remain backward compatible within one version. Note that event type versions and API versions
   * do not need to match.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. Human friendly description of what the event type is about. For example "Bucket
   * created in Cloud Storage".
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Output only. Human friendly description of what the event type is about. For example "Bucket
   * created in Cloud Storage".
   * @param description description or {@code null} for none
   */
  public EventType setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. URI for the event schema. For example "https://github.com/googleapis/google-
   * cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto"
   * @return value or {@code null} for none
   */
  public java.lang.String getEventSchemaUri() {
    return eventSchemaUri;
  }

  /**
   * Output only. URI for the event schema. For example "https://github.com/googleapis/google-
   * cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto"
   * @param eventSchemaUri eventSchemaUri or {@code null} for none
   */
  public EventType setEventSchemaUri(java.lang.String eventSchemaUri) {
    this.eventSchemaUri = eventSchemaUri;
    return this;
  }

  /**
   * Output only. Filtering attributes for the event type.
   * @return value or {@code null} for none
   */
  public java.util.List<FilteringAttribute> getFilteringAttributes() {
    return filteringAttributes;
  }

  /**
   * Output only. Filtering attributes for the event type.
   * @param filteringAttributes filteringAttributes or {@code null} for none
   */
  public EventType setFilteringAttributes(java.util.List<FilteringAttribute> filteringAttributes) {
    this.filteringAttributes = filteringAttributes;
    return this;
  }

  /**
   * Output only. The full name of the event type (for example,
   * "google.cloud.storage.object.v1.finalized"). In the form of {provider-
   * id}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to
   * remain backward compatible within one version. Note that event type versions and API versions
   * do not need to match.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Output only. The full name of the event type (for example,
   * "google.cloud.storage.object.v1.finalized"). In the form of {provider-
   * id}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to
   * remain backward compatible within one version. Note that event type versions and API versions
   * do not need to match.
   * @param type type or {@code null} for none
   */
  public EventType setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public EventType set(String fieldName, Object value) {
    return (EventType) super.set(fieldName, value);
  }

  @Override
  public EventType clone() {
    return (EventType) super.clone();
  }

}
