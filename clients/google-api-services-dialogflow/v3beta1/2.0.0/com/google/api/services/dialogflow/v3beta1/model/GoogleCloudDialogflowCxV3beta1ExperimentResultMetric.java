/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Metric and corresponding confidence intervals.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1ExperimentResultMetric extends com.google.api.client.json.GenericJson {

  /**
   * The probability that the treatment is better than all other treatments in the experiment
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval confidenceInterval;

  /**
   * Count value of a metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double count;

  /**
   * Count-based metric type. Only one of type or count_type is specified in each Metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String countType;

  /**
   * Ratio value of a metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double ratio;

  /**
   * Ratio-based metric type. Only one of type or count_type is specified in each Metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The probability that the treatment is better than all other treatments in the experiment
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval getConfidenceInterval() {
    return confidenceInterval;
  }

  /**
   * The probability that the treatment is better than all other treatments in the experiment
   * @param confidenceInterval confidenceInterval or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric setConfidenceInterval(GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval confidenceInterval) {
    this.confidenceInterval = confidenceInterval;
    return this;
  }

  /**
   * Count value of a metric.
   * @return value or {@code null} for none
   */
  public java.lang.Double getCount() {
    return count;
  }

  /**
   * Count value of a metric.
   * @param count count or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric setCount(java.lang.Double count) {
    this.count = count;
    return this;
  }

  /**
   * Count-based metric type. Only one of type or count_type is specified in each Metric.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountType() {
    return countType;
  }

  /**
   * Count-based metric type. Only one of type or count_type is specified in each Metric.
   * @param countType countType or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric setCountType(java.lang.String countType) {
    this.countType = countType;
    return this;
  }

  /**
   * Ratio value of a metric.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRatio() {
    return ratio;
  }

  /**
   * Ratio value of a metric.
   * @param ratio ratio or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric setRatio(java.lang.Double ratio) {
    this.ratio = ratio;
    return this;
  }

  /**
   * Ratio-based metric type. Only one of type or count_type is specified in each Metric.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Ratio-based metric type. Only one of type or count_type is specified in each Metric.
   * @param type type or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1ExperimentResultMetric) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1ExperimentResultMetric clone() {
    return (GoogleCloudDialogflowCxV3beta1ExperimentResultMetric) super.clone();
  }

}
