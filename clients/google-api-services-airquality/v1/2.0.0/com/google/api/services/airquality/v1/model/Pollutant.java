/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.airquality.v1.model;

/**
 * Data regarding an air quality pollutant.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Air Quality API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Pollutant extends com.google.api.client.json.GenericJson {

  /**
   * Additional information about the pollutant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdditionalInfo additionalInfo;

  /**
   * The pollutant's code name (for example, "so2"). For a list of supported pollutant codes, see
   * [Reported pollutants](/maps/documentation/air-quality/pollutants#reported_pollutants).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String code;

  /**
   * The pollutant's concentration level measured by one of the standard air pollutation measure
   * units.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Concentration concentration;

  /**
   * The pollutant's display name. For example: "NOx".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The pollutant's full name. For chemical compounds, this is the IUPAC name. Example: "Sulfur
   * Dioxide". For more information about the IUPAC names table, see https://iupac.org/what-we-
   * do/periodic-table-of-elements/.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fullName;

  /**
   * Additional information about the pollutant.
   * @return value or {@code null} for none
   */
  public AdditionalInfo getAdditionalInfo() {
    return additionalInfo;
  }

  /**
   * Additional information about the pollutant.
   * @param additionalInfo additionalInfo or {@code null} for none
   */
  public Pollutant setAdditionalInfo(AdditionalInfo additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * The pollutant's code name (for example, "so2"). For a list of supported pollutant codes, see
   * [Reported pollutants](/maps/documentation/air-quality/pollutants#reported_pollutants).
   * @return value or {@code null} for none
   */
  public java.lang.String getCode() {
    return code;
  }

  /**
   * The pollutant's code name (for example, "so2"). For a list of supported pollutant codes, see
   * [Reported pollutants](/maps/documentation/air-quality/pollutants#reported_pollutants).
   * @param code code or {@code null} for none
   */
  public Pollutant setCode(java.lang.String code) {
    this.code = code;
    return this;
  }

  /**
   * The pollutant's concentration level measured by one of the standard air pollutation measure
   * units.
   * @return value or {@code null} for none
   */
  public Concentration getConcentration() {
    return concentration;
  }

  /**
   * The pollutant's concentration level measured by one of the standard air pollutation measure
   * units.
   * @param concentration concentration or {@code null} for none
   */
  public Pollutant setConcentration(Concentration concentration) {
    this.concentration = concentration;
    return this;
  }

  /**
   * The pollutant's display name. For example: "NOx".
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The pollutant's display name. For example: "NOx".
   * @param displayName displayName or {@code null} for none
   */
  public Pollutant setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The pollutant's full name. For chemical compounds, this is the IUPAC name. Example: "Sulfur
   * Dioxide". For more information about the IUPAC names table, see https://iupac.org/what-we-
   * do/periodic-table-of-elements/.
   * @return value or {@code null} for none
   */
  public java.lang.String getFullName() {
    return fullName;
  }

  /**
   * The pollutant's full name. For chemical compounds, this is the IUPAC name. Example: "Sulfur
   * Dioxide". For more information about the IUPAC names table, see https://iupac.org/what-we-
   * do/periodic-table-of-elements/.
   * @param fullName fullName or {@code null} for none
   */
  public Pollutant setFullName(java.lang.String fullName) {
    this.fullName = fullName;
    return this;
  }

  @Override
  public Pollutant set(String fieldName, Object value) {
    return (Pollutant) super.set(fieldName, value);
  }

  @Override
  public Pollutant clone() {
    return (Pollutant) super.clone();
  }

}
