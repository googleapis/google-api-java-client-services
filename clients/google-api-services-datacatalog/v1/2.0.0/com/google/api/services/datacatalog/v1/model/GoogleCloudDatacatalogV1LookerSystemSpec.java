/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1.model;

/**
 * Specification that applies to entries that are part `LOOKER` system (user_specified_type)
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Data Catalog API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatacatalogV1LookerSystemSpec extends com.google.api.client.json.GenericJson {

  /**
   * Name of the parent Looker Instance. Empty if it does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentInstanceDisplayName;

  /**
   * ID of the parent Looker Instance. Empty if it does not exist. Example value:
   * `someinstance.looker.com`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentInstanceId;

  /**
   * Name of the parent Model. Empty if it does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentModelDisplayName;

  /**
   * ID of the parent Model. Empty if it does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentModelId;

  /**
   * Name of the parent View. Empty if it does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentViewDisplayName;

  /**
   * ID of the parent View. Empty if it does not exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentViewId;

  /**
   * Name of the parent Looker Instance. Empty if it does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentInstanceDisplayName() {
    return parentInstanceDisplayName;
  }

  /**
   * Name of the parent Looker Instance. Empty if it does not exist.
   * @param parentInstanceDisplayName parentInstanceDisplayName or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentInstanceDisplayName(java.lang.String parentInstanceDisplayName) {
    this.parentInstanceDisplayName = parentInstanceDisplayName;
    return this;
  }

  /**
   * ID of the parent Looker Instance. Empty if it does not exist. Example value:
   * `someinstance.looker.com`
   * @return value or {@code null} for none
   */
  public java.lang.String getParentInstanceId() {
    return parentInstanceId;
  }

  /**
   * ID of the parent Looker Instance. Empty if it does not exist. Example value:
   * `someinstance.looker.com`
   * @param parentInstanceId parentInstanceId or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentInstanceId(java.lang.String parentInstanceId) {
    this.parentInstanceId = parentInstanceId;
    return this;
  }

  /**
   * Name of the parent Model. Empty if it does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentModelDisplayName() {
    return parentModelDisplayName;
  }

  /**
   * Name of the parent Model. Empty if it does not exist.
   * @param parentModelDisplayName parentModelDisplayName or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentModelDisplayName(java.lang.String parentModelDisplayName) {
    this.parentModelDisplayName = parentModelDisplayName;
    return this;
  }

  /**
   * ID of the parent Model. Empty if it does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentModelId() {
    return parentModelId;
  }

  /**
   * ID of the parent Model. Empty if it does not exist.
   * @param parentModelId parentModelId or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentModelId(java.lang.String parentModelId) {
    this.parentModelId = parentModelId;
    return this;
  }

  /**
   * Name of the parent View. Empty if it does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentViewDisplayName() {
    return parentViewDisplayName;
  }

  /**
   * Name of the parent View. Empty if it does not exist.
   * @param parentViewDisplayName parentViewDisplayName or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentViewDisplayName(java.lang.String parentViewDisplayName) {
    this.parentViewDisplayName = parentViewDisplayName;
    return this;
  }

  /**
   * ID of the parent View. Empty if it does not exist.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentViewId() {
    return parentViewId;
  }

  /**
   * ID of the parent View. Empty if it does not exist.
   * @param parentViewId parentViewId or {@code null} for none
   */
  public GoogleCloudDatacatalogV1LookerSystemSpec setParentViewId(java.lang.String parentViewId) {
    this.parentViewId = parentViewId;
    return this;
  }

  @Override
  public GoogleCloudDatacatalogV1LookerSystemSpec set(String fieldName, Object value) {
    return (GoogleCloudDatacatalogV1LookerSystemSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatacatalogV1LookerSystemSpec clone() {
    return (GoogleCloudDatacatalogV1LookerSystemSpec) super.clone();
  }

}
