/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A subset of an Alias that is stored on kansas max. It is used in Search for alias resolution and
 * in Maps to show icons quickly on basetiles.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PersonalizationMapsAliasIcon extends com.google.api.client.json.GenericJson {

  /**
   * The id of the alias associated with this point. This is used to query for details for the info
   * window and to display different icons depending on the AliasType contained in this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PersonalizationMapsAliasAliasId aliasId;

  /**
   * If this is a dropped pin alias, the leaf (level 30) S2 cell ID corresponding to the aliased
   * lat/lng. Calculated once and stored here so that it can safely be used as an identifier across
   * clients without risk of rounding differences leading to different values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger droppedPinS2cellId;

  /**
   * The featureid that was associated with the alias when it was saved. If this is not set the
   * lat/lng in 'point' is the aliased entity, i.e. this is a dropped pin alias.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostoreFeatureIdProto featureId;

  /**
   * For non-address feature aliases (e.g. businesses), the name of the feature (formatted from the
   * FeatureProto) when it was saved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String featureName;

  /**
   * The type of the feature associated with the alias.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String featureType;

  /**
   * One-line geocoded address that this lat/lng represents at the time this alias was created by
   * the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formattedAddress;

  /**
   * Free-text alias if alias type is NICKNAME. Otherwise unset. Limited to 40 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nickname;

  /**
   * lat/lng the icon is to be shown at.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePointProto point;

  /**
   * The id of the sticker asset chosen by the user to replace the default asset for the alias.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long stickerId;

  /**
   * If the feature associated with the alias has synthetic_geometry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean syntheticFeature;

  /**
   * [INTERNAL ONLY] Last update of bigtable by kansas, in microseconds. Volatile only and not saved
   * in kansas column. inmemory only because >= 16.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timestamp;

  /**
   * The id of the alias associated with this point. This is used to query for details for the info
   * window and to display different icons depending on the AliasType contained in this message.
   * @return value or {@code null} for none
   */
  public PersonalizationMapsAliasAliasId getAliasId() {
    return aliasId;
  }

  /**
   * The id of the alias associated with this point. This is used to query for details for the info
   * window and to display different icons depending on the AliasType contained in this message.
   * @param aliasId aliasId or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setAliasId(PersonalizationMapsAliasAliasId aliasId) {
    this.aliasId = aliasId;
    return this;
  }

  /**
   * If this is a dropped pin alias, the leaf (level 30) S2 cell ID corresponding to the aliased
   * lat/lng. Calculated once and stored here so that it can safely be used as an identifier across
   * clients without risk of rounding differences leading to different values.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDroppedPinS2cellId() {
    return droppedPinS2cellId;
  }

  /**
   * If this is a dropped pin alias, the leaf (level 30) S2 cell ID corresponding to the aliased
   * lat/lng. Calculated once and stored here so that it can safely be used as an identifier across
   * clients without risk of rounding differences leading to different values.
   * @param droppedPinS2cellId droppedPinS2cellId or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setDroppedPinS2cellId(java.math.BigInteger droppedPinS2cellId) {
    this.droppedPinS2cellId = droppedPinS2cellId;
    return this;
  }

  /**
   * The featureid that was associated with the alias when it was saved. If this is not set the
   * lat/lng in 'point' is the aliased entity, i.e. this is a dropped pin alias.
   * @return value or {@code null} for none
   */
  public GeostoreFeatureIdProto getFeatureId() {
    return featureId;
  }

  /**
   * The featureid that was associated with the alias when it was saved. If this is not set the
   * lat/lng in 'point' is the aliased entity, i.e. this is a dropped pin alias.
   * @param featureId featureId or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setFeatureId(GeostoreFeatureIdProto featureId) {
    this.featureId = featureId;
    return this;
  }

  /**
   * For non-address feature aliases (e.g. businesses), the name of the feature (formatted from the
   * FeatureProto) when it was saved.
   * @return value or {@code null} for none
   */
  public java.lang.String getFeatureName() {
    return featureName;
  }

  /**
   * For non-address feature aliases (e.g. businesses), the name of the feature (formatted from the
   * FeatureProto) when it was saved.
   * @param featureName featureName or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setFeatureName(java.lang.String featureName) {
    this.featureName = featureName;
    return this;
  }

  /**
   * The type of the feature associated with the alias.
   * @return value or {@code null} for none
   */
  public java.lang.String getFeatureType() {
    return featureType;
  }

  /**
   * The type of the feature associated with the alias.
   * @param featureType featureType or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setFeatureType(java.lang.String featureType) {
    this.featureType = featureType;
    return this;
  }

  /**
   * One-line geocoded address that this lat/lng represents at the time this alias was created by
   * the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormattedAddress() {
    return formattedAddress;
  }

  /**
   * One-line geocoded address that this lat/lng represents at the time this alias was created by
   * the user.
   * @param formattedAddress formattedAddress or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setFormattedAddress(java.lang.String formattedAddress) {
    this.formattedAddress = formattedAddress;
    return this;
  }

  /**
   * Free-text alias if alias type is NICKNAME. Otherwise unset. Limited to 40 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getNickname() {
    return nickname;
  }

  /**
   * Free-text alias if alias type is NICKNAME. Otherwise unset. Limited to 40 characters.
   * @param nickname nickname or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setNickname(java.lang.String nickname) {
    this.nickname = nickname;
    return this;
  }

  /**
   * lat/lng the icon is to be shown at.
   * @return value or {@code null} for none
   */
  public GeostorePointProto getPoint() {
    return point;
  }

  /**
   * lat/lng the icon is to be shown at.
   * @param point point or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setPoint(GeostorePointProto point) {
    this.point = point;
    return this;
  }

  /**
   * The id of the sticker asset chosen by the user to replace the default asset for the alias.
   * @return value or {@code null} for none
   */
  public java.lang.Long getStickerId() {
    return stickerId;
  }

  /**
   * The id of the sticker asset chosen by the user to replace the default asset for the alias.
   * @param stickerId stickerId or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setStickerId(java.lang.Long stickerId) {
    this.stickerId = stickerId;
    return this;
  }

  /**
   * If the feature associated with the alias has synthetic_geometry.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSyntheticFeature() {
    return syntheticFeature;
  }

  /**
   * If the feature associated with the alias has synthetic_geometry.
   * @param syntheticFeature syntheticFeature or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setSyntheticFeature(java.lang.Boolean syntheticFeature) {
    this.syntheticFeature = syntheticFeature;
    return this;
  }

  /**
   * [INTERNAL ONLY] Last update of bigtable by kansas, in microseconds. Volatile only and not saved
   * in kansas column. inmemory only because >= 16.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * [INTERNAL ONLY] Last update of bigtable by kansas, in microseconds. Volatile only and not saved
   * in kansas column. inmemory only because >= 16.
   * @param timestamp timestamp or {@code null} for none
   */
  public PersonalizationMapsAliasIcon setTimestamp(java.lang.Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public PersonalizationMapsAliasIcon set(String fieldName, Object value) {
    return (PersonalizationMapsAliasIcon) super.set(fieldName, value);
  }

  @Override
  public PersonalizationMapsAliasIcon clone() {
    return (PersonalizationMapsAliasIcon) super.clone();
  }

}
