/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workflowexecutions.v1beta;

/**
 * Service definition for WorkflowExecutions (v1beta).
 *
 * <p>
 * Execute workflows created with Workflows API.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/workflows" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link WorkflowExecutionsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class WorkflowExecutions extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Workflow Executions API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://workflowexecutions.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://workflowexecutions.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public WorkflowExecutions(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  WorkflowExecutions(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code WorkflowExecutions workflowexecutions = new WorkflowExecutions(...);}
   *   {@code WorkflowExecutions.Projects.List request = workflowexecutions.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code WorkflowExecutions workflowexecutions = new WorkflowExecutions(...);}
     *   {@code WorkflowExecutions.Locations.List request = workflowexecutions.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Workflows collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code WorkflowExecutions workflowexecutions = new WorkflowExecutions(...);}
       *   {@code WorkflowExecutions.Workflows.List request = workflowexecutions.workflows().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Workflows workflows() {
        return new Workflows();
      }

      /**
       * The "workflows" collection of methods.
       */
      public class Workflows {

        /**
         * An accessor for creating requests from the Executions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code WorkflowExecutions workflowexecutions = new WorkflowExecutions(...);}
         *   {@code WorkflowExecutions.Executions.List request = workflowexecutions.executions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Executions executions() {
          return new Executions();
        }

        /**
         * The "executions" collection of methods.
         */
        public class Executions {

          /**
           * Cancels an execution of the given name.
           *
           * Create a request for the method "executions.cancel".
           *
           * This request holds the parameters needed by the workflowexecutions server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the execution to be cancelled. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
           * @param content the {@link com.google.api.services.workflowexecutions.v1beta.model.CancelExecutionRequest}
           * @return the request
           */
          public Cancel cancel(java.lang.String name, com.google.api.services.workflowexecutions.v1beta.model.CancelExecutionRequest content) throws java.io.IOException {
            Cancel result = new Cancel(name, content);
            initialize(result);
            return result;
          }

          public class Cancel extends WorkflowExecutionsRequest<com.google.api.services.workflowexecutions.v1beta.model.Execution> {

            private static final String REST_PATH = "v1beta/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");

            /**
             * Cancels an execution of the given name.
             *
             * Create a request for the method "executions.cancel".
             *
             * This request holds the parameters needed by the the workflowexecutions server.  After setting
             * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
             * operation. <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the execution to be cancelled. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             * @param content the {@link com.google.api.services.workflowexecutions.v1beta.model.CancelExecutionRequest}
             * @since 1.13
             */
            protected Cancel(java.lang.String name, com.google.api.services.workflowexecutions.v1beta.model.CancelExecutionRequest content) {
              super(WorkflowExecutions.this, "POST", REST_PATH, content, com.google.api.services.workflowexecutions.v1beta.model.Execution.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the execution to be cancelled. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the execution to be cancelled. Format:
           projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the execution to be cancelled. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Creates a new execution using the latest revision of the given workflow.
           *
           * Create a request for the method "executions.create".
           *
           * This request holds the parameters needed by the workflowexecutions server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the workflow for which an execution should be created. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the
           *        workflow will be used.
           * @param content the {@link com.google.api.services.workflowexecutions.v1beta.model.Execution}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.workflowexecutions.v1beta.model.Execution content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends WorkflowExecutionsRequest<com.google.api.services.workflowexecutions.v1beta.model.Execution> {

            private static final String REST_PATH = "v1beta/{+parent}/executions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");

            /**
             * Creates a new execution using the latest revision of the given workflow.
             *
             * Create a request for the method "executions.create".
             *
             * This request holds the parameters needed by the the workflowexecutions server.  After setting
             * any optional parameters, call the {@link Create#execute()} method to invoke the remote
             * operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the workflow for which an execution should be created. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the
           *        workflow will be used.
             * @param content the {@link com.google.api.services.workflowexecutions.v1beta.model.Execution}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.workflowexecutions.v1beta.model.Execution content) {
              super(WorkflowExecutions.this, "POST", REST_PATH, content, com.google.api.services.workflowexecutions.v1beta.model.Execution.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the workflow for which an execution should be created. Format:
             * projects/{project}/locations/{location}/workflows/{workflow} The latest revision of
             * the workflow will be used.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the workflow for which an execution should be created. Format:
           projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the workflow
           will be used.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the workflow for which an execution should be created. Format:
             * projects/{project}/locations/{location}/workflows/{workflow} The latest revision of
             * the workflow will be used.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Returns an execution of the given name.
           *
           * Create a request for the method "executions.get".
           *
           * This request holds the parameters needed by the workflowexecutions server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the execution to be retrieved. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends WorkflowExecutionsRequest<com.google.api.services.workflowexecutions.v1beta.model.Execution> {

            private static final String REST_PATH = "v1beta/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");

            /**
             * Returns an execution of the given name.
             *
             * Create a request for the method "executions.get".
             *
             * This request holds the parameters needed by the the workflowexecutions server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the execution to be retrieved. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(WorkflowExecutions.this, "GET", REST_PATH, null, com.google.api.services.workflowexecutions.v1beta.model.Execution.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the execution to be retrieved. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the execution to be retrieved. Format:
           projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the execution to be retrieved. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A view defining which fields should be filled in the returned execution.
             * The API will default to the FULL view.
             */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. A view defining which fields should be filled in the returned execution. The API will
           default to the FULL view.
             */
            public java.lang.String getView() {
              return view;
            }

            /**
             * Optional. A view defining which fields should be filled in the returned execution.
             * The API will default to the FULL view.
             */
            public Get setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns a list of executions which belong to the workflow with the given name. The method returns
           * executions of all workflow revisions. Returned executions are ordered by their start time (newest
           * first).
           *
           * Create a request for the method "executions.list".
           *
           * This request holds the parameters needed by the workflowexecutions server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the workflow for which the executions should be listed. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends WorkflowExecutionsRequest<com.google.api.services.workflowexecutions.v1beta.model.ListExecutionsResponse> {

            private static final String REST_PATH = "v1beta/{+parent}/executions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");

            /**
             * Returns a list of executions which belong to the workflow with the given name. The method
             * returns executions of all workflow revisions. Returned executions are ordered by their start
             * time (newest first).
             *
             * Create a request for the method "executions.list".
             *
             * This request holds the parameters needed by the the workflowexecutions server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the workflow for which the executions should be listed. Format:
           *        projects/{project}/locations/{location}/workflows/{workflow}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(WorkflowExecutions.this, "GET", REST_PATH, null, com.google.api.services.workflowexecutions.v1beta.model.ListExecutionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the workflow for which the executions should be listed. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the workflow for which the executions should be listed. Format:
           projects/{project}/locations/{location}/workflows/{workflow}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the workflow for which the executions should be listed. Format:
             * projects/{project}/locations/{location}/workflows/{workflow}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Maximum number of executions to return per call. Max supported value depends on the
             * selected Execution view: it's 10000 for BASIC and 100 for FULL. The default value
             * used if the field is not specified is 100, regardless of the selected view. Values
             * greater than the max value will be coerced down to it.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of executions to return per call. Max supported value depends on the selected
           Execution view: it's 10000 for BASIC and 100 for FULL. The default value used if the field is not
           specified is 100, regardless of the selected view. Values greater than the max value will be
           coerced down to it.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Maximum number of executions to return per call. Max supported value depends on the
             * selected Execution view: it's 10000 for BASIC and 100 for FULL. The default value
             * used if the field is not specified is 100, regardless of the selected view. Values
             * greater than the max value will be coerced down to it.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListExecutions` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListExecutions` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListExecutions` call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to `ListExecutions` must match the
           call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListExecutions` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListExecutions` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * Optional. A view defining which fields should be filled in the returned executions.
             * The API will default to the BASIC view.
             */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. A view defining which fields should be filled in the returned executions. The API will
           default to the BASIC view.
             */
            public java.lang.String getView() {
              return view;
            }

            /**
             * Optional. A view defining which fields should be filled in the returned executions.
             * The API will default to the BASIC view.
             */
            public List setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link WorkflowExecutions}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link WorkflowExecutions}. */
    @Override
    public WorkflowExecutions build() {
      return new WorkflowExecutions(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link WorkflowExecutionsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setWorkflowExecutionsRequestInitializer(
        WorkflowExecutionsRequestInitializer workflowexecutionsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(workflowexecutionsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
