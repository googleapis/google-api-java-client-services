/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.trafficdirector.v2.model;

/**
 * Identifies location of where either Envoy runs or where upstream hosts run.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Traffic Director API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Locality extends com.google.api.client.json.GenericJson {

  /**
   * Region this :ref:`zone ` belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String region;

  /**
   * When used for locality of upstream hosts, this field further splits zone into smaller chunks of
   * sub-zones so they can be load balanced independently.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subZone;

  /**
   * Defines the local service zone where Envoy is running. Though optional, it should be set if
   * discovery service routing is used and the discovery service exposes :ref:`zone data `, either
   * in this message or via :option:`--service-zone`. The meaning of zone is context dependent, e.g.
   * `Availability Zone (AZ) `_ on AWS, `Zone `_ on GCP, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String zone;

  /**
   * Region this :ref:`zone ` belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegion() {
    return region;
  }

  /**
   * Region this :ref:`zone ` belongs to.
   * @param region region or {@code null} for none
   */
  public Locality setRegion(java.lang.String region) {
    this.region = region;
    return this;
  }

  /**
   * When used for locality of upstream hosts, this field further splits zone into smaller chunks of
   * sub-zones so they can be load balanced independently.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubZone() {
    return subZone;
  }

  /**
   * When used for locality of upstream hosts, this field further splits zone into smaller chunks of
   * sub-zones so they can be load balanced independently.
   * @param subZone subZone or {@code null} for none
   */
  public Locality setSubZone(java.lang.String subZone) {
    this.subZone = subZone;
    return this;
  }

  /**
   * Defines the local service zone where Envoy is running. Though optional, it should be set if
   * discovery service routing is used and the discovery service exposes :ref:`zone data `, either
   * in this message or via :option:`--service-zone`. The meaning of zone is context dependent, e.g.
   * `Availability Zone (AZ) `_ on AWS, `Zone `_ on GCP, etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getZone() {
    return zone;
  }

  /**
   * Defines the local service zone where Envoy is running. Though optional, it should be set if
   * discovery service routing is used and the discovery service exposes :ref:`zone data `, either
   * in this message or via :option:`--service-zone`. The meaning of zone is context dependent, e.g.
   * `Availability Zone (AZ) `_ on AWS, `Zone `_ on GCP, etc.
   * @param zone zone or {@code null} for none
   */
  public Locality setZone(java.lang.String zone) {
    this.zone = zone;
    return this;
  }

  @Override
  public Locality set(String fieldName, Object value) {
    return (Locality) super.set(fieldName, value);
  }

  @Override
  public Locality clone() {
    return (Locality) super.clone();
  }

}
